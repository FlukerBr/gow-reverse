#ifndef CAMERA_H
#define CAMERA_H

#include "structs.h"


uint camera_Armature_Armature(void);
uint camera_TweenValues_TweenValues(void);
uint camera_Server_CreateMasterContext(void);
uint camera_Server_ProcessServer(void);
uint camera_MasterContext_FreeClient(svrClient *);
uint camera_MasterContext_AllocateClient(svrClientParm const *);
uint camera_Client_SetUpdatePipeline(int);
uint camera_TweenOverride_TweenOverride(void);
uint camera_Server_Destructor_Server(void);
uint camera_MasterContext_Destructor_MasterContext(void);
uint camera_UpdateAllTargets(goScript *);
uint camera_TargetList_CalcAveragePosition(uint,camera_State *);
uint camera_TargetList_RemoveTarget(camera_Target *);
uint camera_TargetList_FindTarget_(goGameObject *,int);
uint camera_TargetList_FindTarget(goGameObject *,dc_tCameraTarget const *);
uint camera_TargetList_AddTarget(int);
uint camera_TargetList_RemoveWadContext(wadContext *);
uint camera_TargetList_TargetList(void);
uint camera_Target_GetGameObject(void);
uint camera_Target_Update(void);
uint camera_Target_CalcPosition(void);
uint camera_Target_GetPosition(camera_State *);
uint camera_Target_IsActive(void);
uint camera_Target_ShowTarget(float,float,float);
uint camera_Target_HideTarget(float,float,float);
uint camera_Target_StopTarget(float,float,float,bool);
uint camera_Target_StartTarget(float,float,float);
uint camera_Target_AttachTarget_(goGameObject *,dc_tCameraTarget const *);
uint camera_Target_AttachTarget(goGameObject *,int,VUVec4,float);
uint camera_Target_Destructor_Target(void);
uint camera_Target_Target(void);
uint camera_State_Initialise(camera_Client *,camera_TweenValues const *,nurbsCurve const *,float,bool);
uint camera_Prim_Prim(camera_State *,float,float,float);
uint camera_State_Update(void);
uint camera_State_CalcDynamicArmature(void);
uint camera_State_ApplyJumpCompensation(VUVec4,VUVec4,uint);
uint camera_State_Load(camera_SaveStateR const *);
uint camera_State_Save(camera_SaveStateR *);
uint camera_State_GetWadContext(void);
uint camera_State_TerminateState(void);
uint camera_State_Reset(void);
uint camera_TweenValues_Reset(void);
uint camera_TweenValues_Tween(camera_TweenValues const *,camera_TweenValues const *,camera_TweenValues *,float);
uint camera_AngleTween(float,float,float);
uint camera_GoodPointOnCurve(camera_Client *,nurbsCurve const *,camera_Armature const *,VUVec4,bool);
uint camera_TrackCurveBaseF_RecalcTarget(float,VUVec4,float,float);
uint camera_TrackCurvePerpendicularF___cl(float);
uint camera_TrackCurveAngleSphericalF___cl(float);
uint camera_TrackCurveSphericalF___cl(float);
uint camera_BossCamera_CalcFrameWeight(VUVec4,float *,float *);
uint camera_BossCamera_CalcBoomWeight(float);
uint camera_BossCamera_CalcDollyWeight(float);
uint camera_BossCamera_RecalcTarget(float,VUVec4,float,float);
uint camera_BossCamera_InitTargets(void);
uint camera_BossCamera_BossCamera(void);
uint camera_BuildArmatureFromCameraMatrix(VUMat4 const *,camera_Armature *);
uint camera_BuildCameraMatrixFromArmature(VUMat4 *,camera_Armature const *);
uint camera_Matrix2EulerZXY(VUMat4 const *,float *,float *,float *);
uint camera_EulerZXY2Matrix(float,float,float,VUMat4 *);
uint camera_LookUp2RotationElevation(VUVec4,VUVec4,float *,float *);
uint camera_RotationElevation2Look(VUVec4 *,float,float);
uint camera_Look2RotationElevation(VUVec4,float *,float *);
uint camera_Script_AddShake(VUMat4 const *);
uint camera_Script_ApplyCameraShake(void);
uint camera_Shaker_Process(VUMat4 *,float);
uint camera_Shaker_Stop(void);
uint camera_Shaker_Start(dc_tCameraShake const *);
uint camera_Shaker_Shaker(void);
uint camera_Script_InitCameraShake(dc_tCameraShake const *);
uint camera_Script_RestoreCameraMatrix(void);
uint camera_Script_BackupCameraMatrix(void);
uint camera_Script_Run(goScript *);
uint camera_Script_GetControls(void);
uint camera_Script_WarpTarget(VUMat4 const *,VUMat4 const *,char const *);
uint camera_Script_HandleUnderWaterMic(void);
uint camera_Script_SetOverride(camera_TweenValues const *,float);
uint camera_Script_CinemaCamera(void);
uint camera_Script_UpdateAllStates(void);
uint camera_Script_ChooseCamera(void);
uint camera_Script_IgnoreNextControlTween(int);
uint camera_Script_StartCamera(camera_State *,camera_Client *,float,float,float,bool *);
uint camera_Script_AllocateState(void);
uint camera_Script_SetPrimaryState(camera_State *);
uint camera_Script_QueryZones(VUVec4);
uint camera_Script_SetCameraThisFrame(char const *,int,float);
uint camera_SubmitCamera(camera_Client *,float);
uint camera_Script_PreviousCameraName(void);
uint camera_Script_CurrentCameraName(void);
uint camera_Script_EnableZones(int);
uint camera_Script_UnitTime(void);
uint camera_Script_GetPlayerStateMask(void);
uint camera_Script_SetStateData(void const *);
uint camera_Script_GetStateData(void *);
uint camera_Script_GetCurrentWadContext(void);
uint camera_Script_RemoveWadContext(wadContext *);
uint camera_Script_RemoveWadContextX(wadContext *);
uint camera_Script_Reset(camera_SaveState const *);
uint camera_Script_StopPrim(camera_Prim *);
uint camera_Script_Destructor_Script(void);
uint camera_Script_Script(goScript *);
uint camera_Script_PrimListSanity(void);
uint camera_Script_Initialise(void);
uint camera_Script_SetManagedCameraWeight(char const *,float);
uint camera_Script_StopManagedCamera(char const *);
uint camera_Script_StartManagedCamera(char const *);
uint camera_FindClient(char const *);
uint camera_CSCameraScript_Reset(void);
uint camera_CSCameraScript_StopCSCam(goScript *);
uint camera_CSCameraScript_Initialise(void);
uint camera_CSCameraScript_UpdateCameraObject(goScript *);
uint camera_CSCameraScript_StartCSCamera(goScript *);
uint camera_CSCameraScript_Run(goScript *);
uint camera_CSCameraScript_CalcOverrideState(void);
uint camera_CSCameraScript_GetWidth(void);
uint camera_CSCameraScript_GetCamUp(void);
uint camera_CSCameraScript_GetCamPos(void);
uint camera_CSCameraScript_CalculateAimTarget(void);
uint camera_CSCameraScript_Destructor_CSCameraScript(void);
uint camera_CSCameraScript_CSCameraScript(goScript *);
uint camera_CSCameraScript_CSTweens_Tween(camera_CSCameraScript_CSTweens const *,camera_CSCameraScript_CSTweens const *,camera_CSCameraScript_CSTweens *,float);
uint camera_MasterContext_ProcessServer(void);
uint camera_Context_FreeClient(svrClient *);
uint camera_Context_AllocateClient(svrClientParm const *);
uint camera_Context_LoadClient(IFF_Header const *,svrLoadParm const *);
uint camera_Context_Destructor_Context(void);
uint camera_Context_Context(svrParm const *);
uint camera_Client_LODFOVScale(void);
uint camera_Client_InitAnim(void);
uint camera_Client_GetAnimClient(void);
uint camera_Client_Destructor_Client(void);
uint camera_Client_Client(camera_ClientParm const *);
uint camera_Client___nw(uint);
uint camera_ClientParm_ClientParm_(IFF_Header const *,camera_LoadParm const *);
uint camera_ClientParm_AddFXScript(char const *);
uint camera_ClientParm_ClientParm(char const *);
uint camera_Script_gPresetCameras;
uint camera_gPriorityCameras;
uint camera_gSubmittedCameras;
uint camera_gTargetList;
uint camera_gBossCamera;
uint camera_ClientParm_gDefaultParm;
uint camera_Context_vtbl;
uint camera_MasterContext_vtbl;
uint camera_Server_vtbl;
uint camera_kAngleUnit;
uint camera_Script_gScript;
uint camera_gTargetPool;
uint camera_Prim_gCurrentBlendGroup;
uint camera_BossCamera_gMinimumDistanceFromTargetWeight;
uint camera_BossCamera_gTrackToFrameDollyWeight;
uint camera_BossCamera_gSeperatingAngleDollyWeight;
uint camera_BossCamera_gObscuredWeight;
uint camera_BossCamera_gFightLineWeight;
uint camera_gOverheadThreshold;
uint camera_gIgnoreControlTweenFor;
uint camera_Script_gPreviousFlags;
uint camera_Script_gCurrentFlags;
uint camera_Script_gCamera;
uint camera_gFollowDistanceSpeed;
uint camera_gDrawCurves;
uint camera_gLetterBox;
uint camera_gShowFrame;
uint camera_gShowSafeZone;
uint camera_gFollowElevationSpeed;
uint camera_gFollowRotationSpeed;
uint camera_gFilterBlendModes;
uint camera_gNumPriorityCameras;
uint camera_gNumSubmittedCameras;
uint camera_gNumManagedCameras;
uint camera_gCameraScript;
uint camera_gZonesEnabled;
uint camera_gFightTweenTime;
uint camera_gFightCamEnabled;
uint camera_gTiltTween;
uint camera_gTiltRotationMax;
uint camera_gTiltElevationMax;
uint camera_gPresetCameraStrings;
uint camera_gCSCameraScript;
uint camera_gCurrentCameraActionScript;
uint camera_fConvergenceDistance;
uint camera_fInterOccularDistance;
uint camera_bFlickerOn;


#endif