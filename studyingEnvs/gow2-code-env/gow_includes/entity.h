#ifndef ENTITY_H
#define ENTITY_H

#include "structs.h"


uint Entity_Info(int,char const *,...);
uint Entity_Activate(goGameObject *,MarkerListItem *);
uint Entity_HandleEvent(MarkerListItem *);
uint Entity_StateNotify(MarkerListItem *,Entity_StateID);
uint Entity_FreeCombat_Enable(int);
uint Entity_FreeCombat_WhichCreature(goGameObject *);
uint Entity_FreeCombat_MakeCreature(char const *,int);
uint Entity_FreeCombat_Create(void);
uint Entity_MarkerSphereTest(VUVec4,void (*)(goGameObject *,void *),void *);
uint Entity_LoadUpdateReset(void);
uint Entity_LoadUpdate(void);
uint Entity_SeenMPEGBefore(char const *,int);
uint Entity_InitSeenMPEGs(void);
uint Entity_UnloadMPEG(void);
uint Entity_LoadMpeg(char const *,int);
uint Entity_Mpeg(char const *,int,int);
uint Entity_PlayerWarped(void);
uint Entity_DoPlayerWarp(char const *);
uint Entity_DoLevelWarp(void);
uint Entity_LevelWarp(int);
uint Entity_WadLoadCallback(int,uint);
uint Entity_RestoreGOState(WadInfo *,goGameObject *);
uint Entity_RestoreEntityState(WadInfo *,Entity *);
uint Entity_SaveEntityState(Entity *,float,ushort,ushort);
uint Entity_GetAnimPlayerEndCallback(anmClient *);
uint Entity_GetAnimFileIdx(anmClient *);
uint Entity_SaveGOState(WadInfo *,goGameObject *);
uint Entity_SetGOSavable(goGameObject *,MarkerListItem *);
uint Entity_RestoreEntityEvents(WadInfo *,Entity *);
uint Entity_ResetSaveList(WadInfo *);
uint Entity_MakeSaveList(WadInfo *);
uint Entity_RemoveWadContext(wadContext const *);
uint Entity_SetStateData(void const *);
uint Entity_GetStateData(void *);
uint Entity_LoadData(void);
uint Entity_SaveData(void);
uint Entity_LoadForWarp(char const *);
uint Entity_SetGrobAlpha(goGameObject *,float);
uint Entity_GetGrobAlpha(goGameObject *);
uint Entity_ConnectClients(goGameObject *,int,int,int);
uint Entity_SetGlobalVariable(char const *,int,uint);
uint Entity_GetGlobalVariable(char const *,int *,uint *);
uint Entity_FindPlayerCreatorForWarp(char const *,char const *);
uint Entity_FindPlayerCreatorForStart(char const *);
uint Entity_FindPlayerCreator(char const *,char const *);
uint Entity_RemoveGO(goGameObject *);
uint Entity_RemoveBhvr(bhvrClient *);
uint Entity_RemoveMarker(goGameObject *);
uint Entity_TriggerDestructionSensors(goGameObject *);
uint Entity_UnregisterMarker(MarkerListItem *);
uint Entity_RegisterMarker(MarkerListItem *);
uint Entity_FreeBhvrClientParm(bhvrClient *);
uint Entity_FreeAllBhvrClientParms(goGameObject *);
uint Entity_EntityGOCtxtCallback(goServerContext *,goEvent const *,void *);
uint Entity_EntityGOCallback(goGameObject *,goEvent const *,void *);
uint Entity_EndPersistentWad(wadContext *);
uint Entity_CreateGO(VUMat4 const *,uint,int,int,int,AI_Data *,goServerContext *,int);
uint Entity_MakeSaveListItem(MarkerListItem *);
uint Entity_Recycle(MarkerListItem *);
uint Entity_FindAnmParm(char const *);
uint Entity_FindAnimIndex(anmParm const *,char const *,wadContext const *);
uint Entity_DestroyPlayer(void);
uint Entity_StartPlayer(char const *);
uint Entity_CreatePlayer(void);
uint Entity_EventNotify(MsgListItem *);
uint Entity_MarkerMatch(int);
uint Entity_MarkerID(void);
uint Entity_DebugString(void);
uint Entity_Execute(void);
uint Entity_DelayedEnable(void);
uint Entity_ResponseDelay(void);
uint Entity_RefractoryPeriod(void);
uint Entity_Enabled(void);
uint Entity_Destroy(void);
uint Entity_FindParmData(void *,ushort const *,ushort,SLI_Type);
uint Entity_DefaultParms(void);
uint Entity_WadUnloading(void);
uint Entity_FirstLoad(void);
uint Entity_GetWadName(void);
uint Entity_GetWorldMatrix(void);
uint Entity_TriggerTargets(MarkerListItem *);
uint Entity_ActivateObjects(MarkerListItem *);
uint Entity_DeliverEvent(MarkerListItem *);
uint Entity_QueueEvent(MarkerListItem *,float);
uint Entity_SendEvent_(MarkerListItem *);
uint Entity_Asleep(MarkerListItem *);
uint Entity_AddToCreationList(int);
uint Entity_Entity(void);
uint Entity_Destructor_Entity(void);
uint Entity_CreateEnemy(Entity *,Enemy_ParamData const *,VUMat4 const *);
uint Entity_FillOutParamData(Entity *,Enemy_ParamData *);
uint Entity_Sandbagging(Entity *);
uint Entity_CreatorCanCreate(Entity *);
uint Entity_FindCreatureData(char const *,wadContext *);
uint Entity_GetCreatureNameHash(char const *);
uint Entity_FindEnemyCreator(goGameObject *);
uint Entity_SetCamera(Entity *,char const *);
uint Entity_FastSwitchRequiredAfterMPEG(void);
uint Entity_SendEvent_Transmitter(int,uint,uint,uint);
uint Entity_SendEvent(uint,uint,uint,uint,goGameObject *);
uint Entity_GetDynExpr(sliCode *,int,void *,SLI_Type);
uint Entity_FindEntity(goGameObject *,short,int);
uint Entity_Reset(void);
uint Entity_LineTestCallback(void);
uint Entity_UpdateMarker(MarkerListItem *,goGameObject *,int);
uint Entity_Update(goScript *);
uint Entity_Find_(char const *,wadContext const *);
uint Entity_Find(ushort,wadContext const *);
uint Entity_Destructor(goScript *);
uint Entity_Connector(goScript *);
uint Entity_RestoreGOCallback(goGameObject *,goEvent const *,void *);
uint Entity_Constructor(goScript *);
uint Entity_GetMarkerID(goGameObject *);
uint Entity_AddEntityType(Entity *(*)(void));
uint Entity_ResetTimers(void);
uint Entity_Init(void);
uint Entity_InternalInit(void);
uint Entity_PreWadInit(void);
uint Entity_entityTypeInfo;
uint Entity_state;
uint Entity_globalMarkerCtxtList;
uint Entity_prevPlayerPos;
uint Entity_vtbl;
uint Entity_mpegDoneFrame;
uint Entity_stateMPEG;
uint Entity_doMPEG;
uint Entity_mpegOverrideSkippable;
uint Entity_mpegHeapZone;
uint Entity_oneTimeEventSensor;
uint Entity_creatingGO;
uint Entity_gameRestarting;
uint Entity_checkPointGroup;
uint Entity_doCheckPoint;
uint Entity_doWarp;
uint Entity_doChallengeMenu;
uint Entity_doFailure;
uint Entity_doGoToShell;
uint Entity_warpedFrame;
uint Entity_saveMenuID;
uint Entity_saveGameID;
uint Entity_nWadsToRestore;
uint Entity_restoringWads;
uint Entity_nEventsThisFrame;
uint Entity_forceMinResponseDelay;
uint Entity_forceZeroResponseDelay;
uint Entity_registeringMarker;
uint Entity_constructorData;
uint Entity_curMLI;
uint Entity_curEntity;
uint Entity_restoredTimeInSeconds;
uint Entity_timeInSeconds;
uint Entity_timeInFrames;
uint Entity_warpPlayerReady;
uint Entity_warpWadsReady;
uint Entity_warpWadSlot;
uint Entity_playerWarped;
uint Entity_playerMarker;
uint Entity_playerGO;
uint Entity_enemyCreatorTypeID;
uint Entity_objectCreatorTypeID;
uint Entity_markerTypeID;
uint Entity_nEntityTypes;


#endif