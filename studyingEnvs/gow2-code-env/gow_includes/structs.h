#ifndef STRUCTS_H
#define STRUCTS_H

#include "type.h"

typedef unsigned char   undefined;
typedef unsigned char    byte;
typedef unsigned int    dword;
typedef long long    int16;
typedef long long    longlong;
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned int    bool;
typedef unsigned long long    uint16;
typedef unsigned long    ulong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long    undefined6;
typedef unsigned long    undefined8;
typedef unsigned short    ushort;
typedef unsigned short    word;

typedef struct
{
    uint L2 : 1;
    uint R2 : 1;
    uint L1 : 1;
    uint R1 : 1;
    uint triangle : 1;
    uint circle : 1;
    uint X : 1;
    uint square : 1;
    uint select : 1;
    uint L3 : 1;
    uint R3 : 1;
    uint start : 1;
    uint UP : 1;
    uint RIGHT : 1;
    uint DOWN : 1;
    uint LEFT : 1;
    ushort dummy;
} Gpad;

// typedef union $_123__1_10240 $_123__1_10240, *P$_123__1_10240;
// 
// typedef struct $_124__1_10233 $_124__1_10233, *P$_124__1_10233;
// 
// typedef struct $_125__1_10226 $_125__1_10226, *P$_125__1_10226;
// 
// 
// typedef float FLOAT;

struct $_124__1_10233 {
    FLOAT r;
    FLOAT g;
    FLOAT b;
    FLOAT a;
};

struct $_125__1_10226 {
    float component[4];
};

union $_123__1_10240 {
    struct $_124__1_10233 field0;
    struct $_125__1_10226 field1;
};

// typedef union $_123__1_3264 $_123__1_3264, *P$_123__1_3264;
// 
// typedef struct $_124__1_3257 $_124__1_3257, *P$_124__1_3257;
// 
// typedef struct $_125__1_3249 $_125__1_3249, *P$_125__1_3249;
// 
// typedef unsigned char UINT8;
// 
// struct $_125__1_3249 {
//     unsigned char component[4];
// };
// 
// struct $_124__1_3257 {
//     UINT8 r;
//     UINT8 g;
//     UINT8 b;
//     UINT8 a;
// };
// 
// union $_123__1_3264 {
//     struct $_124__1_3257 field0;
//     struct $_125__1_3249 field1;
// };
// 
// typedef union __dmath __dmath, *P__dmath;
// 
// typedef unsigned int __uint32_t;
// 
// 
// /* WARNING! conflicting data type names: /double - /double */
// 
// union __dmath {
//     __uint32_t i[2];
//     double d;
// };
// 
// typedef struct __eh_info __eh_info, *P__eh_info;
// 
// typedef undefined1 *__eh_matcher;
// 
// typedef ushort short int;
// 
// struct __eh_info {
//     __eh_matcher match_function;
//     short int language;
//     short int version;
// };
// 
// typedef struct __exception __exception, *P__exception;
// 
// typedef int int;
// 
// typedef char char;
// 
// struct __exception {
//     int type;
//     char *name;
//     double arg1;
//     double arg2;
//     double retval;
//     int err;
//     undefined field6_0x24;
//     undefined field7_0x25;
//     undefined field8_0x26;
//     undefined field9_0x27;
// };
// 
// typedef enum __fdlibm_version__1_8157 {
//     __fdlibm_ieee=-1,
//     __fdlibm_svid=0,
//     __fdlibm_xopen=1,
//     __fdlibm_posix=2
// } __fdlibm_version__1_8157;
// 
// typedef enum __fdlibm_version__52_74 {
//     __fdlibm_ieee=-1,
//     __fdlibm_svid=0,
//     __fdlibm_xopen=1,
//     __fdlibm_posix=2
// } __fdlibm_version__52_74;
// 
// typedef char *__gnuc_va_list;
// 
// typedef int __gthread_mutex_t;
// 
// typedef int __int32_t;
// 
// typedef struct __sbuf __sbuf, *P__sbuf;
// 
// struct __sbuf {
//     unsigned char *_base;
//     int _size;
// };
// 
// typedef struct __sFILE __sFILE, *P__sFILE;
// 
// typedef struct _reent _reent, *P_reent;
// 
// typedef struct _Bigint__1_124 _Bigint__1_124, *P_Bigint__1_124;
// 
// typedef union _reent___new _reent___new, *P_reent___new;
// 
// typedef struct _atexit _atexit, *P_atexit;
// 
// typedef struct _glue _glue, *P_glue;
// 
// typedef struct _reent___new___reent _reent___new___reent, *P_reent___new___reent;
// 
// typedef struct _reent___new___unused _reent___new___unused, *P_reent___new___unused;
// 
// typedef struct tm tm, *Ptm;
// 
// struct tm {
//     int tm_sec;
//     int tm_min;
//     int tm_hour;
//     int tm_mday;
//     int tm_mon;
//     int tm_year;
//     int tm_wday;
//     int tm_yday;
//     int tm_isdst;
// };
// 
// struct _reent___new___reent {
//     unsigned int _rand_next;
//     char *_strtok_last;
//     char _asctime_buf[26];
//     undefined field3_0x22;
//     undefined field4_0x23;
//     struct tm _localtime_buf;
//     int _gamma_signgam;
// };
// 
// struct _reent___new___unused {
//     unsigned char *_nextf[30];
//     unsigned int _nmalloc[30];
// };
// 
// struct _Bigint__1_124 {
//     struct _Bigint__1_124 *_next;
//     int _k;
//     int _maxwds;
//     int _sign;
//     int _wds;
//     unsigned int _x[1];
// };
// 
// struct _atexit {
//     struct _atexit *_next;
//     int _ind;
//     undefined1 *_fns[32];
// };
// 
// struct _glue {
//     struct _glue *_next;
//     int _niobs;
//     struct __sFILE *_iobs;
// };
// 
// struct __sFILE {
//     unsigned char *_p;
//     int _r;
//     int _w;
//     short int _flags;
//     short int _file;
//     struct __sbuf _bf;
//     int _lbfsize;
//     void *_cookie;
//     undefined1 *_read;
//     undefined1 *_write;
//     undefined1 *_seek;
//     undefined1 *_close;
//     struct __sbuf _ub;
//     unsigned char *_up;
//     int _ur;
//     unsigned char _ubuf[3];
//     unsigned char _nbuf[1];
//     struct __sbuf _lb;
//     int _blksize;
//     int _offset;
//     struct _reent *_data;
// };
// 
// union _reent___new {
//     struct _reent___new___reent _reent;
//     struct _reent___new___unused _unused;
// };
// 
// struct _reent {
//     int _errno;
//     struct __sFILE *_stdin;
//     struct __sFILE *_stdout;
//     struct __sFILE *_stderr;
//     int _inc;
//     char _emergency[25];
//     undefined field6_0x2d;
//     undefined field7_0x2e;
//     undefined field8_0x2f;
//     int _current_category;
//     char *_current_locale;
//     int __sdidinit;
//     undefined1 *__cleanup;
//     struct _Bigint__1_124 *_result;
//     int _result_k;
//     struct _Bigint__1_124 *_p5s;
//     struct _Bigint__1_124 **_freelist;
//     int _cvtlen;
//     char *_cvtbuf;
//     union _reent___new _new;
//     struct _atexit *_atexit;
//     struct _atexit _atexit0;
//     undefined1 **_sig_func;
//     struct _glue __sglue;
//     struct __sFILE __sf[3];
// };
// 
typedef struct __vtbl_ptr_type __vtbl_ptr_type, *P__vtbl_ptr_type;

struct __vtbl_ptr_type {
    short int __delta;
    short int __index;
    void *__pfn;
};
// 
// typedef int __wchar_t;
// 
// typedef struct _Bigint__2_67 _Bigint__2_67, *P_Bigint__2_67;
// 
// typedef __uint32_t ULong;
// 
// struct _Bigint__2_67 {
//     struct _Bigint__2_67 *_next;
//     int _k;
//     int _maxwds;
//     int _sign;
//     int _wds;
//     ULong _x[1];
// };
// 
// typedef char _COMPILE_ASSERT_[1];
// 
// typedef long long int;
// 
// typedef long int _fpos_t;
// 
// typedef struct _HeapInfo _HeapInfo, *P_HeapInfo;
// 
// typedef struct Context__1_2308 Context__1_2308, *PContext__1_2308;
// 
// typedef struct stdDynaStringDB stdDynaStringDB, *PstdDynaStringDB;
// 
typedef char CHAR;

typedef CHAR *Ptr;
// 
// typedef struct HeapZone HeapZone, *PHeapZone;
// 
// typedef struct stdCList<dc::File *,stdAllocator<stdCListNodeBase> > stdCList<dc::File *,stdAllocator<stdCListNodeBase> >, *PstdCList<dc::File *,stdAllocator<stdCListNodeBase> >;
// 
// typedef unsigned int UINT32;
// 
// typedef struct stdRBTree stdRBTree, *PstdRBTree;
// 
// typedef struct stdListNode stdListNode, *PstdListNode;
// 
// typedef struct stdRBTreeNode stdRBTreeNode, *PstdRBTreeNode;
// 
// typedef short unsigned int UINT16;

struct stdRBTree {
    struct stdRBTreeNode *HeadPtr;
};

struct stdDynaStringDB {
    UINT32 _uErrorCode;
    struct stdRBTree _Container;
};

struct stdRBTreeNode {
    UINT32 SortKey;
    UINT32 ContentPtr;
    UINT16 ParentNode;
    UINT16 LeftNode;
    UINT16 RightNode;
    undefined field5_0xe;
    undefined field6_0xf;
};

struct stdListNode {
    struct stdListNode *_pNextItem;
    struct stdListNode *_pPrevItem;
};
// 
// struct stdCList<dc::File *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct Context__1_2308 {
    struct stdCList *m_pFileList;
};

// struct _HeapInfo {
//     struct Context__1_2308 *_pDCContext;
//     struct stdDynaStringDB *_pDynaStringDB;
//     Ptr _pRawHeap;
//     struct HeapZone *_pHeap;
// };
// 
typedef struct HeapZone {
    UINT32 uHZConstant;
    UINT32 *pFreeList;
    UINT32 *pEndFreeList;
    struct HeapZone *pNextZone;
    Ptr pStart;
    Ptr pStartUse;
    Ptr pEnd;
    char cName[16];
    UINT32 heapData;
} HeapZone;
// 
// typedef float _iconVu0FVECTOR[4];
// 
// typedef int _iconVu0IVECTOR[4];
// 
// typedef struct _LayerUVAnimMap _LayerUVAnimMap, *P_LayerUVAnimMap;
// 
// typedef unsigned int UINT;
// 
// struct _LayerUVAnimMap {
//     UINT _uStartIdx;
//     UINT _uNumBuffers;
// };
// 
// typedef union _op_data _op_data, *P_op_data;
// 
// typedef struct _opd1 _opd1, *P_opd1;
// 
// typedef unsigned int UInt32;
// 
// typedef unsigned char UInt8;
// 
// struct _opd1 {
//     char Arg[3];
//     UInt8 Type;
// };
// 
// union _op_data {
//     struct _opd1 MicroOp;
//     UInt32 Opcode;
// };
// 
// typedef struct _renVU1CodeSeg _renVU1CodeSeg, *P_renVU1CodeSeg;
// 
// typedef int INT32;
// 
// struct _renVU1CodeSeg {
//     UINT32 _uClipAddressOffset;
//     UINT32 _uNumInstructions;
//     UINT32 *_pSourceDMABuffer;
//     INT32 _sPageIndex;
//     INT32 _uMicroFlags;
// };
// 
// typedef struct _sceDmaTag _sceDmaTag, *P_sceDmaTag;
// 
// typedef short unsigned int u_short;
// 
typedef unsigned char u_char;
// 
// typedef unsigned int u_int;
// 
// struct _sceDmaTag {
//     u_short qwc;
//     u_char mark;
//     u_char id;
//     struct _sceDmaTag *next;
//     u_int p[2];
// };
// 
// typedef struct _sceGifPackAd _sceGifPackAd, *P_sceGifPackAd;
// 
// typedef long unsigned int u_long;
// 
// struct _sceGifPackAd {
//     u_long DATA;
//     u_long ADDR;
// };
// 
// typedef struct _sceGifPackFog _sceGifPackFog, *P_sceGifPackFog;
// 
// struct _sceGifPackFog {
//     u_int pad[3];
//     u_int F;
// };
// 
// typedef struct _sceGifPackNop _sceGifPackNop, *P_sceGifPackNop;
// 
// struct _sceGifPackNop {
//     u_long pad[2];
// };
// 
// typedef struct _sceGifPackRgbaq _sceGifPackRgbaq, *P_sceGifPackRgbaq;
// 
// struct _sceGifPackRgbaq {
//     u_int R;
//     u_int G;
//     u_int B;
//     u_int A;
// };
// 
// typedef struct _sceGifPackSt _sceGifPackSt, *P_sceGifPackSt;
// 
// struct _sceGifPackSt {
//     float S;
//     float T;
//     float Q;
//     u_int pad96;
// };
// 
// typedef struct _sceGifPackUv _sceGifPackUv, *P_sceGifPackUv;
// 
// struct _sceGifPackUv {
//     int U;
//     int V;
//     long int pad64;
// };
// 
// typedef struct _sceGifPackXyz _sceGifPackXyz, *P_sceGifPackXyz;
// 
// struct _sceGifPackXyz {
//     int X;
//     int Y;
//     u_int Z;
//     u_int pad96:15;
//     u_int ADC:1;
//     u_int pad112:16;
// };
// 
// typedef struct _sceGifPackXyzf _sceGifPackXyzf, *P_sceGifPackXyzf;
// 
// struct _sceGifPackXyzf {
//     int X;
//     int Y;
//     u_int Z;
//     u_int F:12;
//     u_int pad108:3;
//     u_int ADC:1;
//     u_int pad112:16;
// };
// 
// typedef struct _ShellDblBuff _ShellDblBuff, *P_ShellDblBuff;
// 
// typedef struct tGS_PMODE tGS_PMODE, *PtGS_PMODE;
// 
// typedef struct tGS_SMODE2 tGS_SMODE2, *PtGS_SMODE2;
// 
// typedef struct tGS_DISPLAY1 tGS_DISPLAY1, *PtGS_DISPLAY1;
// 
// typedef struct tGS_DISPFB1 tGS_DISPFB1, *PtGS_DISPFB1;
// 
// struct tGS_PMODE {
//     unsigned int EN1:1;
//     unsigned int EN2:1;
//     unsigned int CRTMD:3;
//     unsigned int MMOD:1;
//     unsigned int AMOD:1;
//     unsigned int SLBG:1;
//     unsigned int ALP:8;
//     unsigned int p0:16;
//     unsigned int p1;
// };
// 
// struct tGS_DISPLAY1 {
//     unsigned int DX:12;
//     unsigned int DY:11;
//     unsigned int MAGH:4;
//     unsigned int MAGV:2;
//     unsigned int p0:3;
//     unsigned int DW:12;
//     unsigned int DH:11;
//     unsigned int p1:9;
// };
// 
// struct tGS_DISPFB1 {
//     unsigned int FBP:9;
//     unsigned int FBW:6;
//     unsigned int PSM:5;
//     unsigned int p0:12;
//     unsigned int DBX:11;
//     unsigned int DBY:11;
//     unsigned int p1:10;
// };
// 
// struct tGS_SMODE2 {
//     unsigned int INT:1;
//     unsigned int FFMD:1;
//     unsigned int DPMS:2;
//     unsigned int p0:28;
//     unsigned int p1;
// };
// 
// struct _ShellDblBuff {
//     struct tGS_PMODE pmode;
//     struct tGS_SMODE2 smode2;
//     struct tGS_DISPLAY1 display1;
//     struct tGS_DISPLAY1 display2;
//     struct tGS_DISPFB1 dispfb1[2];
//     struct tGS_DISPFB1 dispfb2[2];
//     short int bufferPointer[2];
//     int currentBuffer;
//     int rebuild;
//     short int zPointer;
//     short int dispPSM;
//     short int dispWidth;
//     short int dispHeight;
//     short int dispDX;
//     short int dispDY;
//     short int drawPSM;
//     short int drawWidth;
//     short int drawHeight;
//     short int zPSM;
//     int fieldMode;
//     int interlaceMode;
//     int tvType;
//     int canFlip;
//     int offsetRender;
//     int clearType;
//     unsigned int clearColour;
//     int twoCircuit;
// };
// 
// typedef struct _ShellDispDrawEnv _ShellDispDrawEnv, *P_ShellDispDrawEnv;
// 
// typedef struct sceGifTag sceGifTag, *PsceGifTag;
// 
// typedef struct sceGsFrame sceGsFrame, *PsceGsFrame;
// 
// typedef struct sceGsZbuf sceGsZbuf, *PsceGsZbuf;
// 
// typedef struct sceGsXyoffset sceGsXyoffset, *PsceGsXyoffset;
// 
// typedef struct sceGsScissor sceGsScissor, *PsceGsScissor;
// 
// typedef struct sceGsPrmodecont sceGsPrmodecont, *PsceGsPrmodecont;
// 
// typedef struct sceGsColclamp sceGsColclamp, *PsceGsColclamp;
// 
// typedef struct sceGsDthe sceGsDthe, *PsceGsDthe;
// 
// typedef struct sceGsTest sceGsTest, *PsceGsTest;
// 
// typedef struct sceGsDimx sceGsDimx, *PsceGsDimx;
// 
// struct sceGsXyoffset {
//     long unsigned int OFX:16;
//     long unsigned int pad16:16;
//     long unsigned int OFY:16;
//     long unsigned int pad48:16;
// };
// 
// struct sceGsPrmodecont {
//     long unsigned int AC:1;
//     long unsigned int pad01:63;
// };
// 
// struct sceGsZbuf {
//     long unsigned int ZBP:9;
//     long unsigned int pad09:15;
//     long unsigned int PSM:4;
//     long unsigned int pad28:4;
//     long unsigned int ZMSK:1;
//     long unsigned int pad33:31;
// };
// 
// struct sceGsColclamp {
//     long unsigned int CLAMP:1;
//     long unsigned int pad01:63;
// };
// 
// struct sceGsDimx {
//     long unsigned int DIMX00:3;
//     long unsigned int pad00:1;
//     long unsigned int DIMX01:3;
//     long unsigned int pad01:1;
//     long unsigned int DIMX02:3;
//     long unsigned int pad02:1;
//     long unsigned int DIMX03:3;
//     long unsigned int pad03:1;
//     long unsigned int DIMX10:3;
//     long unsigned int pad10:1;
//     long unsigned int DIMX11:3;
//     long unsigned int pad11:1;
//     long unsigned int DIMX12:3;
//     long unsigned int pad12:1;
//     long unsigned int DIMX13:3;
//     long unsigned int pad13:1;
//     long unsigned int DIMX20:3;
//     long unsigned int pad20:1;
//     long unsigned int DIMX21:3;
//     long unsigned int pad21:1;
//     long unsigned int DIMX22:3;
//     long unsigned int pad22:1;
//     long unsigned int DIMX23:3;
//     long unsigned int pad23:1;
//     long unsigned int DIMX30:3;
//     long unsigned int pad30:1;
//     long unsigned int DIMX31:3;
//     long unsigned int pad31:1;
//     long unsigned int DIMX32:3;
//     long unsigned int pad32:1;
//     long unsigned int DIMX33:3;
//     long unsigned int pad33:1;
// };
// 
// struct sceGsScissor {
//     long unsigned int SCAX0:11;
//     long unsigned int pad11:5;
//     long unsigned int SCAX1:11;
//     long unsigned int pad27:5;
//     long unsigned int SCAY0:11;
//     long unsigned int pad43:5;
//     long unsigned int SCAY1:11;
//     long unsigned int pad59:5;
// };
// 
// struct sceGsTest {
//     long unsigned int ATE:1;
//     long unsigned int ATST:3;
//     long unsigned int AREF:8;
//     long unsigned int AFAIL:2;
//     long unsigned int DATE:1;
//     long unsigned int DATM:1;
//     long unsigned int ZTE:1;
//     long unsigned int ZTST:2;
//     long unsigned int pad19:45;
// };
// 
// struct sceGsFrame {
//     long unsigned int FBP:9;
//     long unsigned int pad09:7;
//     long unsigned int FBW:6;
//     long unsigned int pad22:2;
//     long unsigned int PSM:6;
//     long unsigned int pad30:2;
//     long unsigned int FBMSK:32;
// };
// 
// struct sceGsDthe {
//     long unsigned int DTHE:1;
//     long unsigned int pad01:63;
// };
// 
// struct sceGifTag {
//     long unsigned int NLOOP:15;
//     long unsigned int EOP:1;
//     long unsigned int pad16:16;
//     long unsigned int id:14;
//     long unsigned int PRE:1;
//     long unsigned int PRIM:11;
//     long unsigned int FLG:2;
//     long unsigned int NREG:4;
//     long unsigned int REGS0:4;
//     long unsigned int REGS1:4;
//     long unsigned int REGS2:4;
//     long unsigned int REGS3:4;
//     long unsigned int REGS4:4;
//     long unsigned int REGS5:4;
//     long unsigned int REGS6:4;
//     long unsigned int REGS7:4;
//     long unsigned int REGS8:4;
//     long unsigned int REGS9:4;
//     long unsigned int REGS10:4;
//     long unsigned int REGS11:4;
//     long unsigned int REGS12:4;
//     long unsigned int REGS13:4;
//     long unsigned int REGS14:4;
//     long unsigned int REGS15:4;
// };
// 
// struct _ShellDispDrawEnv {
//     struct sceGifTag gifTag;
//     struct sceGsFrame frame1;
//     u_long frame1addr;
//     struct sceGsZbuf zbuf1;
//     u_long zbuf1addr;
//     struct sceGsXyoffset xyoffset1;
//     u_long xyoffset1addr;
//     struct sceGsScissor scissor1;
//     u_long scissor1addr;
//     struct sceGsPrmodecont prmodecont;
//     u_long prmodecontaddr;
//     struct sceGsColclamp colclamp;
//     u_long colclampaddr;
//     struct sceGsDthe dthe;
//     u_long dtheaddr;
//     struct sceGsTest test1;
//     u_long test1addr;
//     struct sceGsDimx dimx;
//     u_long dimxaddr;
//     struct sceGsFrame frame2;
//     u_long frame2addr;
//     struct sceGsZbuf zbuf2;
//     u_long zbuf2addr;
//     struct sceGsXyoffset xyoffset2;
//     u_long xyoffset2addr;
//     struct sceGsScissor scissor2;
//     u_long scissor2addr;
//     struct sceGsTest test2;
//     u_long test2addr;
// };
// 
// typedef union _ShellDmaTag _ShellDmaTag, *P_ShellDmaTag;
// 
// typedef struct _ShellDmaTag__fields _ShellDmaTag__fields, *P_ShellDmaTag__fields;
// 
// typedef struct _ShellDmaTag__ulong _ShellDmaTag__ulong, *P_ShellDmaTag__ulong;
// 
// struct _ShellDmaTag__fields {
//     short unsigned int qwc;
//     unsigned char mark;
//     unsigned char id;
//     union _ShellDmaTag *next;
//     unsigned int p[2];
// };
// 
// struct _ShellDmaTag__ulong {
//     long unsigned int ul[2];
// };
// 
// union _ShellDmaTag {
//     struct _ShellDmaTag__fields fields;
//     struct _ShellDmaTag__ulong ulong;
// };
// 
// typedef struct _sif_client_data _sif_client_data, *P_sif_client_data;
// 
// typedef struct _sif_rpc_data _sif_rpc_data, *P_sif_rpc_data;
// 
// typedef undefined1 *sceSifEndFunc;
// 
// typedef struct _sif_serve_data _sif_serve_data, *P_sif_serve_data;
// 
// typedef undefined1 *sceSifRpcFunc;
// 
// typedef struct _sif_client_data sceSifClientData;
// 
// typedef struct _sif_queue_data _sif_queue_data, *P_sif_queue_data;
// 
// struct _sif_queue_data {
//     int key;
//     int active;
//     struct _sif_serve_data *link;
//     struct _sif_serve_data *start;
//     struct _sif_serve_data *end;
//     struct _sif_queue_data *next;
// };
// 
// struct _sif_rpc_data {
//     void *paddr;
//     unsigned int pid;
//     int tid;
//     unsigned int mode;
// };
// 
// struct _sif_client_data {
//     struct _sif_rpc_data rpcd;
//     unsigned int command;
//     void *buff;
//     void *gp;
//     sceSifEndFunc func;
//     void *para;
//     struct _sif_serve_data *serve;
// };
// 
// struct _sif_serve_data {
//     unsigned int command;
//     sceSifRpcFunc func;
//     void *buff;
//     int size;
//     sceSifRpcFunc cfunc;
//     void *cbuff;
//     int csize;
//     sceSifClientData *client;
//     void *paddr;
//     unsigned int fno;
//     void *receive;
//     int rsize;
//     int rmode;
//     unsigned int rid;
//     struct _sif_serve_data *link;
//     struct _sif_serve_data *next;
//     struct _sif_queue_data *base;
// };
// 
// typedef struct _sif_receive_data _sif_receive_data, *P_sif_receive_data;
// 
// struct _sif_receive_data {
//     struct _sif_rpc_data rpcd;
//     void *src;
//     void *dest;
//     int size;
// };
// 
// typedef struct _types_fd_set _types_fd_set, *P_types_fd_set;
// 
// typedef long int fd_mask;
// 
// struct _types_fd_set {
//     fd_mask fds_bits[1];
// };
// 
// typedef struct _UVPair _UVPair, *P_UVPair;
// 
// struct _UVPair {
//     INT32 _U;
//     INT32 _V;
// };
// 
// typedef struct _VUPointers__anonymousglobal _VUPointers__anonymousglobal, *P_VUPointers__anonymousglobal;
// 
// typedef struct _ShellDispDrawEnv ShellDispDrawEnv;
// 
// typedef union _ShellDmaTag ShellDmaTag;
// 
// struct _VUPointers__anonymousglobal {
//     ShellDispDrawEnv *DrawEnv;
//     ShellDmaTag *ShrinkAndClearStart;
//     ShellDmaTag *ShrinkAndClearEnd;
//     ShellDmaTag *ClearStart;
//     ShellDmaTag *ClearEnd;
//     ShellDmaTag *ShrinkStart;
//     ShellDmaTag *ShrinkEnd;
//     ShellDmaTag *EnvOnlyStart;
//     ShellDmaTag *EnvOnlyEnd;
//     void *ClearSprite0;
//     void *ClearSprite1;
//     void *ClearEnv;
//     void *ShrinkSprite0;
//     void *ShrinkSprite1;
//     void *ShrinkEnv;
// };
// 
// typedef struct AddToVFSPtr AddToVFSPtr, *PAddToVFSPtr;
// 
// typedef union AddToVFSPtr____pfn_or_delta2 AddToVFSPtr____pfn_or_delta2, *PAddToVFSPtr____pfn_or_delta2;
// 
// union AddToVFSPtr____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct AddToVFSPtr {
//     short int __delta;
//     short int __index;
//     union AddToVFSPtr____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct AddVar__14FlashInterfaceiPCciPvPM14FlashInterfaceFP14FlashInterfacePCQ214FlashInterface7fvEntry_v__anonymousparameter__sf AddVar__14FlashInterfaceiPCciPvPM14FlashInterfaceFP14FlashInterfacePCQ214FlashInterface7fvEntry_v__anonymousparameter__sf, *PAddVar__14FlashInterfaceiPCciPvPM14FlashInterfaceFP14FlashInterfacePCQ214FlashInterface7fvEntry_v__anonymousparameter__sf;
// 
// typedef union unnamed____pfn_or_delta2 unnamed____pfn_or_delta2, *Punnamed____pfn_or_delta2;
// 
// union unnamed____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct AddVar__14FlashInterfaceiPCciPvPM14FlashInterfaceFP14FlashInterfacePCQ214FlashInterface7fvEntry_v__anonymousparameter__sf {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ADSRSettings ADSRSettings, *PADSRSettings;
// 
// typedef short unsigned int UInt16;
// 
// struct ADSRSettings {
//     UInt16 adsr1;
//     UInt16 adsr2;
// };
// 
// typedef struct AI_Data AI_Data, *PAI_Data;
// 
// struct AI_Data {
//     char *name;
//     void *paramData;
// };
// 
// typedef struct Allocator Allocator, *PAllocator;
// 
// typedef struct VUVec4 VUVec4, *PVUVec4;
// 
// typedef struct renParticleFormat renParticleFormat, *PrenParticleFormat;
// 
// typedef struct renParticleChunk renParticleChunk, *PrenParticleChunk;
// 
// typedef struct renParticleSystem renParticleSystem, *PrenParticleSystem;
// 
// typedef struct Location Location, *PLocation;
// 
// typedef struct goGameObject goGameObject, *PgoGameObject;
// 
// typedef struct svrClientParm svrClientParm, *PsvrClientParm;
// 
// typedef short int INT16;
// 
// typedef long long unsigned int UINT64;
// 
// typedef struct stdSLListNode stdSLListNode, *PstdSLListNode;
// 
// typedef struct renGROBJFlags renGROBJFlags, *PrenGROBJFlags;
// 
// typedef struct stdArrayW<const renMaterial *> stdArrayW<const renMaterial *>, *PstdArrayW<const renMaterial *>;
// 
typedef struct stdArrayW renGROBMatList;
// 
// typedef struct VUMat4 VUMat4, *PVUMat4;
// 
// typedef struct renParticleContext renParticleContext, *PrenParticleContext;
// 
// typedef struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> svrClientTreeNode<svrCListContainer,goAttachmentLWClient>, *PsvrClientTreeNode<svrCListContainer,goAttachmentLWClient>;
// 
// typedef struct svrCListContainer svrCListContainer, *PsvrCListContainer;
// 
typedef struct svrCListContainer goServerContainerType;
// 
// typedef struct goResourceList goResourceList, *PgoResourceList;
// 
// typedef struct stdCList<unsigned int,stdAllocator<stdCListNodeBase> > stdCList<unsigned int,stdAllocator<stdCListNodeBase> >, *PstdCList<unsigned int,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct goSkeleton goSkeleton, *PgoSkeleton;
// 
// typedef struct renMaterial renMaterial, *PrenMaterial;
// 
// typedef struct stdArrayW<const renMaterial *>__vtable stdArrayW<const renMaterial *>__vtable, *PstdArrayW<const renMaterial *>__vtable;
// 
// typedef struct renParticleContext__vtable renParticleContext__vtable, *PrenParticleContext__vtable;
// 
// typedef struct svrListContainer svrListContainer, *PsvrListContainer;
// 
// typedef struct svrContextParm svrContextParm, *PsvrContextParm;
// 
// typedef struct wadContext wadContext, *PwadContext;
// 
// typedef struct Pool__1_336 Pool__1_336, *PPool__1_336;
// 
// typedef struct goPrototype goPrototype, *PgoPrototype;
// 
// typedef int BOOL;
// 
// typedef struct anmJoint anmJoint, *PanmJoint;
// 
// typedef struct anmJointMatrixBuffers anmJointMatrixBuffers, *PanmJointMatrixBuffers;
// 
// typedef struct anmClient anmClient, *PanmClient;
// 
// typedef struct Vector4<float> Vector4<float>, *PVector4<float>;
// 
// 
// typedef struct Color<float> Color<float>, *PColor<float>;
// 
typedef struct Color tColor;
// 
// typedef signed char INT8;
// 
// typedef struct anmParm anmParm, *PanmParm;
// 
// typedef struct renMaterialStage renMaterialStage, *PrenMaterialStage;
// 
// typedef struct svrClientParmList svrClientParmList, *PsvrClientParmList;
// 
// typedef struct svrClient svrClient, *PsvrClient;
// 
// typedef struct stdDynaString stdDynaString, *PstdDynaString;
// 
// typedef struct wadContext__vtable wadContext__vtable, *PwadContext__vtable;
// 
// typedef struct svrEmptyContainer svrEmptyContainer, *PsvrEmptyContainer;
// 
// typedef struct stdCList<svr *,stdAllocator<stdCListNodeBase> > stdCList<svr *,stdAllocator<stdCListNodeBase> >, *PstdCList<svr *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct stdCList<wadCleanupData *,stdAllocator<stdCListNodeBase> > stdCList<wadCleanupData *,stdAllocator<stdCListNodeBase> >, *PstdCList<wadCleanupData *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct stdCList<Pool *,stdAllocator<stdCListNodeBase> > stdCList<Pool *,stdAllocator<stdCListNodeBase> >, *PstdCList<Pool *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct svr svr, *Psvr;
// 
// typedef struct stdCList<svrClientParm *,stdAllocator<stdCListNodeBase> > stdCList<svrClientParm *,stdAllocator<stdCListNodeBase> >, *PstdCList<svrClientParm *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct goPool goPool, *PgoPool;
// 
// typedef struct collisionClient collisionClient, *PcollisionClient;
// 
// typedef struct TriggerVolumeParm TriggerVolumeParm, *PTriggerVolumeParm;
// 
// typedef struct goServerContextParm goServerContextParm, *PgoServerContextParm;
// 
// typedef struct stdTList<svrClientUnloadParm> stdTList<svrClientUnloadParm>, *PstdTList<svrClientUnloadParm>;
// 
// typedef struct stdArray<anmJoint> stdArray<anmJoint>, *PstdArray<anmJoint>;
// 
// typedef struct stdList stdList, *PstdList;
// 
// typedef struct anmClientProcessCallback anmClientProcessCallback, *PanmClientProcessCallback;
// 
// typedef struct renMaterialFlags renMaterialFlags, *PrenMaterialFlags;
// 
// typedef struct renMaterialContext renMaterialContext, *PrenMaterialContext;
// 
// typedef struct renTexture renTexture, *PrenTexture;
// 
// typedef struct svr__vtable svr__vtable, *Psvr__vtable;
// 
// typedef struct stdSkipList<unsigned int,goPool::Pool *,stdSkipListNodeAllocator<unsigned int> > stdSkipList<unsigned int,goPool::Pool *,stdSkipListNodeAllocator<unsigned int> >, *PstdSkipList<unsigned int,goPool::Pool *,stdSkipListNodeAllocator<unsigned int> >;
// 
// typedef struct collisionVirtual collisionVirtual, *PcollisionVirtual;
// 
// typedef struct TV TV, *PTV;
// 
// typedef struct stdArray<anmJoint>__vtable stdArray<anmJoint>__vtable, *PstdArray<anmJoint>__vtable;
// 
// typedef struct anmClientProcessCallback__vtable anmClientProcessCallback__vtable, *PanmClientProcessCallback__vtable;
// 
// typedef struct renGfxClut renGfxClut, *PrenGfxClut;
// 
// typedef struct renTextureFlags renTextureFlags, *PrenTextureFlags;
// 
// typedef struct stdSkipListNode<unsigned int> stdSkipListNode<unsigned int>, *PstdSkipListNode<unsigned int>;
// 
// typedef struct collisionVirtual__vtable collisionVirtual__vtable, *PcollisionVirtual__vtable;
// 
// typedef struct vrBlock vrBlock, *PvrBlock;
// 
// typedef struct renGfxClutPool renGfxClutPool, *PrenGfxClutPool;
// 
// typedef struct vrFlags vrFlags, *PvrFlags;
// 
struct stdDynaString {
    char s[24];
};
// 
struct goServerContextParm {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
    UINT32 m_uMaxClients; /* Inherited from svrParm */
    UINT32 m_uMaxConnections; /* Inherited from svrParm */
    UINT32 m_uPriority; /* Inherited from svrParm */
    BOOL m_bAllowDups; /* Inherited from svrContextParm */
    struct svrClient *m_pClient; /* Inherited from svrContextParm */
    struct stdDynaString m_cParentContext; /* Inherited from svrContextParm */
    struct stdDynaString m_cName; /* Inherited from svrContextParm */
    INT32 m_iVersion; /* Inherited from svrContextParm */
    UINT32 _uUniqueID;
};
// 
typedef struct VUVec4 {
    UINT64 v;
} VUVec4;
// 
struct TV {
    struct VUVec4 min;
    struct VUVec4 max;
    UINT64 ctxtBits;
    struct stdDynaString name;
};
struct stdCList {
    struct stdListNode _header; /* Inherited from stdList */
};
// struct stdCList<svr *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct stdTList {
    struct stdListNode _header; /* Inherited from stdList */
};

struct svrEmptyContainer {
    undefined field0_0x0;
};

struct stdSkipList {
    UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<unsigned int> */
    UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<unsigned int> */
    BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<unsigned int> */
    struct stdSkipListNode *_pHeader; /* Inherited from stdSkipListTemplate<unsigned int> */
    struct stdSkipListNode *_pUpdate; /* Inherited from stdSkipListTemplate<unsigned int> */
};

struct goPool {
    struct stdSkipList m_listPool;
};
// 
// struct stdCList<wadCleanupData *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct wadContext {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    UINT32 m_uMaxConnections; /* Inherited from svr */
    UINT32 m_uMaxClients; /* Inherited from svr */
    UINT32 m_uChildContextID; /* Inherited from svr */
    struct wadContext__vtable *__vtable; /* Inherited from svr */
    struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
    undefined field17_0x25;
    undefined field18_0x26;
    undefined field19_0x27;
    UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
    UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrEmptyContainer> > */
    UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrEmptyContainer> > */
    struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrEmptyContainer> > */
    struct stdCList m_listDependents; /* Inherited from svrContext<svrTemplate<svrEmptyContainer> > */
    struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrEmptyContainer> > */
    struct renParticleChunk *fDyingParticleChunkList;
    struct Context__1_2308 *_pDCContext;
    struct stdDynaStringDB *_pDynaStringDB;
    struct wadContext *_pParents[16];
    UINT _uHeapSize;
    UINT _uVRAMHeapSize;
    Ptr _pRawHeap;
    struct HeapZone *_pHeap;
    struct Pool__1_336 *_pCListPool;
    struct stdCList _listCleanupFuncs;
    struct stdCList *_serverPools[34];
    struct svr *_serverWadContexts[34];
    struct stdCList *_pExternalFileSets;
    struct wadContext *m_pSharedPoolContext;
    struct goPool _goPool;
    struct collisionClient *sheet;
    struct TriggerVolumeParm *tvp;
    struct goServerContextParm *topLvlGOCtxtParm;
    struct stdTList fUnloadParms;
};
// 
// struct Vector4<float> {
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     FLOAT w;
// };
// 
struct Color {
    union $_123__1_10240 field0_0x0;
};

typedef struct Vector4 {
    INT32 x;
    INT32 y;
    INT32 z;
    INT32 w;
} tVector;

struct renMaterial {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    tVector m_AmbientDiffuseSpecCoeff;
    tColor m_EmissiveColor;
    FLOAT m_fAlpha;
    FLOAT m_fDefaultAlpha;
    FLOAT m_fSpecularFocusCoeff;
    UINT16 m_uSortKey;
    UINT16 m_uTransparencySubLayer;
    INT8 m_iNumberOfStages;
    UINT8 m_uFlags;
    INT8 m_bApplyMaterial;
    undefined field21_0x43;
    struct anmClient *m_pAnimClient;
    struct anmParm *m_pAnimParm;
    struct renMaterialStage *m_pStages[1];
};

struct stdArray {
    UINT _uSize; /* Inherited from stdArrayPlacement<anmJoint> */
    struct anmJoint *_pBuffer; /* Inherited from stdArrayPlacement<anmJoint> */
    struct HeapZone *hz; /* Inherited from stdArrayPlacement<anmJoint> */
    struct stdArray__vtable *__vtable; /* Inherited from stdArrayPlacement<anmJoint> */
};

struct goPrototype {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
    char _cName[24]; /* Inherited from goParmBase */
    struct stdArray _joints;
    UINT32 *_pJointHashes;
    struct anmJointMatrixBuffers *_pJointMatrixBuffers;
    UINT _uJointRootID;
    UINT _uParmFlags;
};
// 
struct TriggerVolumeParm {
    struct TV tv[1];
};

struct anmJoint {
    UINT32 _uFlags;
    INT16 _sChildIdx;
    INT16 _sSiblingIdx;
    INT16 _sParentIdx;
    INT16 _sJOIndex;
    FLOAT _fMaxZ;
};

struct stdArray__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type stdArray;
};

struct renMaterialContext {
    struct VUVec4 _vMaterialVectors[3];
    UINT32 _uRenderFlags;
    undefined field2_0x34;
    undefined field3_0x35;
    undefined field4_0x36;
    undefined field5_0x37;
    undefined field6_0x38;
    undefined field7_0x39;
    undefined field8_0x3a;
    undefined field9_0x3b;
    undefined field10_0x3c;
    undefined field11_0x3d;
    undefined field12_0x3e;
    undefined field13_0x3f;
};

struct renParticleChunk {
    struct VUVec4 fRandomNumberSeed;
    struct VUVec4 fBounds;
    struct renParticleChunk *fNextChunk;
    float fTime;
    short int fParticlesBegin;
    short int fNewParticlesBegin;
    short int fParticlesEnd;
    short int fNumVUQuadWordsPerBuffer;
    struct VUVec4 fParticles[125];
};

struct anmClientProcessCallback {
    struct anmClientProcessCallback__vtable *__vtable;
};

struct svrClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags;
    UINT16 m_uContextID;
};

struct svr__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type svr;
    struct __vtbl_ptr_type StartServer;
    struct __vtbl_ptr_type ProcessServer;
    struct __vtbl_ptr_type EndServer;
    struct __vtbl_ptr_type CreateClient;
    struct __vtbl_ptr_type ConnectClient;
    struct __vtbl_ptr_type ProcessClient;
    struct __vtbl_ptr_type DisconnectClient;
    struct __vtbl_ptr_type DestroyClient;
    struct __vtbl_ptr_type LoadClient;
    struct __vtbl_ptr_type EndLoadClient;
    struct __vtbl_ptr_type PauseAllClients;
    struct __vtbl_ptr_type UnPauseAllClients;
    struct __vtbl_ptr_type CreateDefaultParm;
    struct __vtbl_ptr_type SignalWadLoadCompleted;
    struct __vtbl_ptr_type PushClientContext;
    struct __vtbl_ptr_type PopClientContext;
    struct __vtbl_ptr_type ReadContextStack;
};

struct renGROBJFlags {
    UINT64 _Flags; /* Inherited from renMaterialFlags */
    UINT64 _FlagsMask; /* Inherited from renMaterialFlags */
};

struct vrFlags {
    int _uFlags[8];
};

typedef struct VUMat4 {
    struct VUVec4 r0;
    struct VUVec4 r1;
    struct VUVec4 r2;
    struct VUVec4 r3;
} VUMat4;
// 
// struct anmClientProcessCallback__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessCallback;
// };
// 
struct svrContextParm {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
    UINT32 m_uMaxClients; /* Inherited from svrParm */
    UINT32 m_uMaxConnections; /* Inherited from svrParm */
    UINT32 m_uPriority; /* Inherited from svrParm */
    BOOL m_bAllowDups;
    struct svrClient *m_pClient;
    struct stdDynaString m_cParentContext;
    struct stdDynaString m_cName;
    INT32 m_iVersion;
};
// 
// struct stdCList<svrClientParm *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct goSkeleton {
    struct VUMat4 _GameObjectAnimTransform;
    UINT64 fWorldJointMatriciesTimeStamp;
    struct goGameObject *_pGO;
    struct goPrototype *_pHierarchyParm;
    struct VUMat4 *_pAnimMatrixBuffer;
    struct VUMat4 *_pWorldJointMatrix;
    BOOL *_pJointVisBuff;
    struct anmJoint *_pJoints;
    UINT16 _uNumJoints;
    UINT16 _uFlags;
    struct anmJointMatrixBuffers *_pJointMatrixBuffers;
    unsigned int _pJointEnabled[8];
    UINT16 _uNumJointEnabledWords;
    UINT16 _uJointRootID;
    struct anmClient *_pAnimClient;
    struct VUVec4 *_pLocalRot;
    struct VUVec4 *_pLocalOrg;
    struct VUVec4 *_pLocalScale;
    struct VUVec4 *_pNonBakeablePivotTrans;
};

struct svrCListContainer {
    struct stdListNode _header; /* Inherited from stdList */
};
// 
struct renTextureFlags {
    UINT64 _Flags;
};

struct renTexture {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    struct renGfxClut *_Gfx;
    struct renGfxClut *_Clut;
    struct renTexture *_MipMap;
    undefined field14_0x1c;
    undefined field15_0x1d;
    undefined field16_0x1e;
    undefined field17_0x1f;
    struct renTextureFlags _TextureFlags;
    struct renTextureFlags _DefaultTextureFlags;
    undefined field20_0x30;
    undefined field21_0x31;
    undefined field22_0x32;
    undefined field23_0x33;
    undefined field24_0x34;
    undefined field25_0x35;
    undefined field26_0x36;
    undefined field27_0x37;
    undefined field28_0x38;
    undefined field29_0x39;
    undefined field30_0x3a;
    undefined field31_0x3b;
    undefined field32_0x3c;
    undefined field33_0x3d;
    undefined field34_0x3e;
    undefined field35_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field38_0x48;
    undefined field39_0x49;
    undefined field40_0x4a;
    undefined field41_0x4b;
    undefined field42_0x4c;
    undefined field43_0x4d;
    undefined field44_0x4e;
    undefined field45_0x4f;
    undefined field46_0x50;
    undefined field47_0x51;
    undefined field48_0x52;
    undefined field49_0x53;
    undefined field50_0x54;
    undefined field51_0x55;
    undefined field52_0x56;
    undefined field53_0x57;
    INT32 _sMipMapK;
    FLOAT _fMipMapDist;
    UINT _uDMAVersion;
    UINT _uGfxDMAVersion;
    UINT _uClutDMAVersion;
    UINT _uTCVersion;
};
// 
// struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     undefined field132_0xa4;
//     undefined field133_0xa5;
//     undefined field134_0xa6;
//     undefined field135_0xa7;
//     undefined field136_0xa8;
//     undefined field137_0xa9;
//     undefined field138_0xaa;
//     undefined field139_0xab;
//     undefined field140_0xac;
//     undefined field141_0xad;
//     undefined field142_0xae;
//     undefined field143_0xaf;
//     struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *m_pParent;
//     goServerContainerType *m_pChildren;
//     undefined field146_0xb8;
//     undefined field147_0xb9;
//     undefined field148_0xba;
//     undefined field149_0xbb;
//     undefined field150_0xbc;
//     undefined field151_0xbd;
//     undefined field152_0xbe;
//     undefined field153_0xbf;
// };
// 
struct renParticleContext__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type renParticleContext;
    struct __vtbl_ptr_type StartServer;
    struct __vtbl_ptr_type ProcessServer;
    struct __vtbl_ptr_type EndServer;
    struct __vtbl_ptr_type CreateClient;
    struct __vtbl_ptr_type ConnectClient;
    struct __vtbl_ptr_type ProcessClient;
    struct __vtbl_ptr_type DisconnectClient;
    struct __vtbl_ptr_type DestroyClient;
    struct __vtbl_ptr_type LoadClient;
    struct __vtbl_ptr_type EndLoadClient;
    struct __vtbl_ptr_type PauseAllClients;
    struct __vtbl_ptr_type UnPauseAllClients;
    struct __vtbl_ptr_type CreateDefaultParm;
    struct __vtbl_ptr_type SignalWadLoadCompleted;
    struct __vtbl_ptr_type PushClientContext;
    struct __vtbl_ptr_type PopClientContext;
    struct __vtbl_ptr_type ReadContextStack;
    struct __vtbl_ptr_type AllocateClient;
    struct __vtbl_ptr_type AllocateClient_;
    struct __vtbl_ptr_type FreeClient;
    struct __vtbl_ptr_type StartClient;
    struct __vtbl_ptr_type EndClient;
    struct __vtbl_ptr_type NotifyClientDisconnect;
    struct __vtbl_ptr_type NotifyClientConnect;
    struct __vtbl_ptr_type NotifyClientCreate;
    struct __vtbl_ptr_type Prep;
    struct __vtbl_ptr_type CleanUp;
};

struct anmJointMatrixBuffers {
    UINT _uNumJoints;
    UINT _uLocalOrientMatrixBufferByteOffset;
    UINT _uNumJointOrientMatrices;
    UINT _uBindMatrixBufferByteOffset;
    UINT _uNumBindMatrices;
    UINT _uNumNonBakeablePivotTrans;
    UINT _sGameObjectAnimJoint;
    unsigned int _uPAD[1];
    UINT _uLocalOrgBufferByteOffset;
    UINT _uLocalRotBufferByteOffset;
    UINT _uLocalScaleBufferByteOffset;
    UINT _uNonBakeablePivotBufferByteOffset;
    struct VUMat4 _uLocalMatrix[1];
};

struct collisionClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct collisionVirtual *m_pCV;
    struct wadContext *m_pWC;
};

struct svrClientParm {
    UINT32 m_uID; /* Inherited from svrClientType */
};
// 
struct collisionVirtual__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type collisionVirtual;
    struct __vtbl_ptr_type GetClientType;
    struct __vtbl_ptr_type GetWorldBound;
    struct __vtbl_ptr_type ComputeBoundingVolume;
    struct __vtbl_ptr_type GetCollisionRootJoint;
    struct __vtbl_ptr_type LineTest;
    struct __vtbl_ptr_type SphereTest;
    struct __vtbl_ptr_type SweptSphereTest;
    struct __vtbl_ptr_type PointTest;
    struct __vtbl_ptr_type PairTest;
    struct __vtbl_ptr_type FindCollisionSpheres;
    struct __vtbl_ptr_type BeginTestVolume;
    struct __vtbl_ptr_type EndTestVolume;
    struct __vtbl_ptr_type Reset;
};

struct stdSLListNode {
    struct stdSLListNode *_pNextItem;
};

struct goResourceList {
    struct stdSLListNode _header; /* Inherited from stdSLList */
};

// struct stdCList<unsigned int,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };

struct Location {
    unsigned char fBuffer:2;
    unsigned char fOffset:6;
};

struct renParticleFormat {
    struct Location fOutputs[9];
    unsigned char fPerParticleSize[2];
    u_char fFlags;
};

struct renParticleSystem {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct VUVec4 _vTint; /* Inherited from renGROB */
    struct renGROBJFlags _GROBJFlags; /* Inherited from renGROB */
    renGROBMatList *_pMaterialBuffer; /* Inherited from renGROB */
    UINT32 _uLayerID; /* Inherited from renGROB */
    UINT32 _uViewID; /* Inherited from renGROB */
    undefined field149_0xdc;
    undefined field150_0xdd;
    undefined field151_0xde;
    undefined field152_0xdf;
    struct VUMat4 fInverseLW;
    struct VUVec4 fCullSphere;
    struct VUVec4 fRandomNumberSeed;
    UINT64 fInverseTimeStamp;
    struct renParticleFormat fParticleFormat;
    int fNumVUQuadWordsPerBuffer;
    int fLastBufferPrepped;
    INT32 fMaxParticles;
    INT32 fNumParticles;
    INT32 fIPBase;
    float fNewChunkTime;
    int fParticlesPerChunk;
    UINT32 fSubLayer;
    struct renParticleContext *fContext;
    struct renParticleChunk *fNew;
    struct renParticleChunk *fOld;
    undefined1 *fCallback;
    void *fCallbackData;
    INT16 fAutoFillNextFrame;
    INT16 fDefaultTimeZone;
    undefined field173_0x18c;
    undefined field174_0x18d;
    undefined field175_0x18e;
    undefined field176_0x18f;
};
// 
// struct stdArrayW<const renMaterial *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayW;
//     struct __vtbl_ptr_type Resize;
// };
// 
struct Pool__1_336 {
    UINT32 uPoolFlags;
    UINT32 *pFreeList;
    UINT32 *pChunkList;
    struct HeapZone *pParentHeap;
    UINT32 blockSize;
    UINT16 byteAlignment;
    UINT16 growByBlocks;
};

struct renMaterialFlags {
    UINT64 _Flags;
    UINT64 _FlagsMask;
};

// struct renGfxClutPool {
//     struct vrFlags _FreeBlocks;
//     struct vrFlags _History;
//     struct vrFlags _UnSoftLockedBlocks;
//     struct vrFlags _UnHardLockedBlocks;
//     UINT _uNumBlocks;
//     UINT _uNumOwners;
//     struct vrBlock *_pBlocks;
//     UINT16 _uWidth;
//     UINT16 _uHeight;
//     UINT16 _uTextureFormat;
//     UINT16 pad;
// };
// 
struct wadContext__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type wadContext;
    struct __vtbl_ptr_type StartServer;
    struct __vtbl_ptr_type ProcessServer;
    struct __vtbl_ptr_type EndServer;
    struct __vtbl_ptr_type CreateClient;
    struct __vtbl_ptr_type ConnectClient;
    struct __vtbl_ptr_type ProcessClient;
    struct __vtbl_ptr_type DisconnectClient;
    struct __vtbl_ptr_type DestroyClient;
    struct __vtbl_ptr_type LoadClient;
    struct __vtbl_ptr_type EndLoadClient;
    struct __vtbl_ptr_type PauseAllClients;
    struct __vtbl_ptr_type UnPauseAllClients;
    struct __vtbl_ptr_type CreateDefaultParm;
    struct __vtbl_ptr_type SignalWadLoadCompleted;
    struct __vtbl_ptr_type PushClientContext;
    struct __vtbl_ptr_type PopClientContext;
    struct __vtbl_ptr_type ReadContextStack;
    struct __vtbl_ptr_type AllocateClient;
    struct __vtbl_ptr_type AllocateClient_;
    struct __vtbl_ptr_type FreeClient;
    struct __vtbl_ptr_type StartClient;
    struct __vtbl_ptr_type EndClient;
    struct __vtbl_ptr_type NotifyClientDisconnect;
    struct __vtbl_ptr_type NotifyClientConnect;
    struct __vtbl_ptr_type NotifyClientCreate;
};
// 
// struct vrBlock {
//     INT16 m_sVRAMOffset;
//     UINT16 m_uID;
//     struct renGfxClut *m_pOwner;
//     struct renGfxClutPool *m_pPool;
// };
// 
typedef struct goGameObject {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct svrClientTreeNode *m_pParent; /* Inherited from svrClientTreeNode<svrCListContainer,goAttachmentLWClient> */
    goServerContainerType *m_pChildren; /* Inherited from svrClientTreeNode<svrCListContainer,goAttachmentLWClient> */
    undefined field146_0xb8;
    undefined field147_0xb9;
    undefined field148_0xba;
    undefined field149_0xbb;
    undefined field150_0xbc;
    undefined field151_0xbd;
    undefined field152_0xbe;
    undefined field153_0xbf;
    struct goResourceList _resources[13];
    UINT32 _uType;
    UINT16 _uFlags;
    INT16 _iTimeZone;
    struct stdCList *_pHandleList;
    unsigned int _uGroupVisFlags[1];
    struct goSkeleton *_pSkeleton;
    undefined1 *_cbFunc;
    void *_cbData;
    FLOAT _fTimeScale;
    undefined field164_0x114;
    undefined field165_0x115;
    undefined field166_0x116;
    undefined field167_0x117;
    undefined field168_0x118;
    undefined field169_0x119;
    undefined field170_0x11a;
    undefined field171_0x11b;
    undefined field172_0x11c;
    undefined field173_0x11d;
    undefined field174_0x11e;
    undefined field175_0x11f;
} goGameObject;

struct svrListContainer {
    struct stdListNode *fHead; /* Inherited from stdDLList */
    struct stdListNode *fTail; /* Inherited from stdDLList */
};

struct renParticleContext {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    UINT32 m_uMaxConnections; /* Inherited from svr */
    UINT32 m_uMaxClients; /* Inherited from svr */
    UINT32 m_uChildContextID; /* Inherited from svr */
    struct renParticleContext__vtable *__vtable; /* Inherited from svr */
    struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
    UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
    UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
    UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
    struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
    undefined field21_0x3c;
    undefined field22_0x3d;
    undefined field23_0x3e;
    undefined field24_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
    UINT32 _uViewID; /* Inherited from renGROBServerContext */
    UINT _uLayerID; /* Inherited from renGROBServerContext */
    struct wadContext *fParticleChunkPoolWadContext;
    struct Pool__1_336 *fParticleChunkPool;
};

struct renGfxClut {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT16 _uUploadWidth;
    UINT16 _uUploadHeight;
    UINT16 _uRenderWidth;
    UINT16 _uRenderHeight;
    UINT16 _uUploadUnitHeight;
    UINT16 _uRenderUnitHeight;
    UINT16 _uNumImages;
    UINT16 _uUploadTextureFormat;
    UINT16 _uRenderTextureFormat;
    UINT16 _uImageIdx;
    UINT16 _uLastImageIdx;
    UINT16 _uVRAMBlockIndex;
    UINT8 _uWidthPower;
    UINT8 _uHeightPower;
    UINT8 _uBitDepth;
    UINT8 _uUploadGSBufferWidth;
    UINT8 _uRenderGSBufferWidth;
    undefined field28_0x2d;
    UINT16 _uBytesPerLine;
    UINT8 m_uFlags;
    UINT8 m_uBank;
    undefined field32_0x32;
    undefined field33_0x33;
    UINT8 *m_pCompressedImage;
    UINT8 *m_pUncompressedImage;
    struct anmClient *_pAnimClient;
    INT16 _uSoftLocks;
    INT16 _uHardLocks;
    struct vrBlock *_pVRAMBlock;
    struct renGfxClut *_pNextCyclicEntry;
    struct renGfxClut *_pPreviousCyclicEntry;
    UINT _uDMAVersion;
    struct renGfxClut *_pSourceImage;
};
// 
// struct Allocator {
//     struct VUVec4 fNull;
//     struct VUVec4 *fIterators[3];
//     int fEEStride;
//     int fVUStride;
//     int fCount;
//     float fBirthday;
//     struct renParticleFormat *fFormat;
//     struct renParticleChunk *fChunk;
//     struct renParticleSystem *fSystem;
//     int fNumParticles;
//     void *fFrom;
//     void *fTo;
//     int fBlock;
//     undefined field13_0x48;
//     undefined field14_0x49;
//     undefined field15_0x4a;
//     undefined field16_0x4b;
//     undefined field17_0x4c;
//     undefined field18_0x4d;
//     undefined field19_0x4e;
//     undefined field20_0x4f;
// };
// 
struct stdList {
    struct stdListNode _header;
};

struct anmClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    struct stdList _AnimatorList;
    UINT16 _uFlags;
    INT16 _iDefaultTimeZone;
    FLOAT _fTimeScale;
    struct anmClientProcessCallback *_pProcessCallback;
    UINT _uCurrentFrameID;
    UINT _uLastFileIdx;
};

struct svrClientParmList {
    struct stdListNode _header; /* Inherited from stdList */
    struct Pool__1_336 *pool;
};

// struct stdSkipListNode<unsigned int> {
//     void *_value;
//     UINT32 _key;
//     UINT _uLevel;
//     struct stdSkipListNode<unsigned int> *_pNext[1];
// };
// 
// struct stdCList<Pool *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct svr {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    UINT32 m_uMaxConnections;
    UINT32 m_uMaxClients;
    UINT32 m_uChildContextID;
    struct svr__vtable *__vtable;
};

struct collisionVirtual {
    struct collisionClient *cc;
    struct collisionVirtual__vtable *__vtable;
};

struct renMaterialStage {
    struct renMaterialFlags m_MaterialFlags;
    struct renMaterialContext *m_pDefaultMC;
    tVector m_NormalisedColorOffset;
    FLOAT m_fAlpha;
    FLOAT m_fAnimRotateUV;
    FLOAT m_fAnimRepeatU;
    FLOAT m_fAnimRepeatV;
    UINT32 m_uAnimOffsetU;
    UINT32 m_uAnimOffsetV;
    UINT32 m_uAnimFlags;
    UINT32 m_uDefaultRenderFlags;
    struct renTexture *m_pTexture;
};

struct anmParm {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
    UINT32 _uFlags;
    UINT32 _uParmSize;
    UINT16 _uNumAnimators;
    UINT16 _uNumFileSets;
    UINT32 _uNumFiles;
    int _uFileSetOffsets[1];
};
// 
// struct stdArrayW<const renMaterial *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct renMaterial **_pBuffer; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct stdArrayW<const renMaterial *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     UINT _uMaxSize;
//     UINT _uGrowBySize;
// };
// 
// typedef struct AlphaTime AlphaTime, *PAlphaTime;
// 
// struct AlphaTime {
//     struct goGameObject *go;
//     FLOAT t;
//     FLOAT duration;
//     FLOAT startAlpha;
//     FLOAT endAlpha;
// };
// 
// typedef struct AMEHandler AMEHandler, *PAMEHandler;
// 
// typedef struct GenericSoundHandler GenericSoundHandler, *PGenericSoundHandler;
// 
// typedef struct GenericSoundHandler GSoundHandler;
// 
// typedef struct GroupDescription GroupDescription, *PGroupDescription;
// 
// typedef struct Sound__1_14423 Sound__1_14423, *PSound__1_14423;
// 
// typedef struct Sound__1_14423 *SoundPtr;
// 
// typedef struct EffectChain EffectChain, *PEffectChain;
// 
// typedef struct EffectChain *EffectChainPtr;
// 
// typedef short int SInt16;
// 
// typedef char SInt8;
// 
// typedef struct VoiceFlags VoiceFlags, *PVoiceFlags;
// 
// typedef int SInt32;
// 
// typedef struct SoundBank_tag SoundBank_tag, *PSoundBank_tag;
// 
// typedef undefined1 *EffectProcPtr;
// 
// typedef struct Prog Prog, *PProg;
// 
// typedef struct Prog *ProgPtr;
// 
// typedef struct Tone Tone, *PTone;
// 
// typedef struct Tone *TonePtr;
// 
// struct VoiceFlags {
//     unsigned int core[2];
// };
// 
// struct GenericSoundHandler {
//     UInt32 OwnerID;
//     SoundPtr Sound;
//     EffectChainPtr Effects;
//     SInt16 Original_Vol;
//     SInt16 Original_Pan;
//     SInt16 Current_Vol;
//     SInt16 Current_Pan;
//     SInt16 Current_PM;
//     UInt8 flags;
//     SInt8 VolGroup;
//     struct VoiceFlags Voices;
//     struct GenericSoundHandler *prev;
//     struct GenericSoundHandler *next;
//     struct GenericSoundHandler *parent;
//     struct GenericSoundHandler *first_child;
//     struct GenericSoundHandler *siblings;
// };
// 
// struct GroupDescription {
//     SInt8 num_channels;
//     SInt8 basis;
//     char pad[2];
//     char channel[16];
//     char excite_min[16];
//     char excite_max[16];
// };
// 
// struct AMEHandler {
//     GSoundHandler SH;
//     struct GroupDescription group[16];
//     char MIDIRegister[16];
//     UInt8 *MIDIMacro[16];
// };
// 
// struct Tone {
//     SInt8 Priority;
//     SInt8 Vol;
//     SInt8 CenterNote;
//     SInt8 CenterFine;
//     SInt16 Pan;
//     SInt8 MapLow;
//     SInt8 MapHigh;
//     SInt8 PBLow;
//     SInt8 PBHigh;
//     UInt16 ADSR1;
//     UInt16 ADSR2;
//     SInt16 Flags;
//     void *VAGInSR;
//     UInt32 reserved1;
// };
// 
// struct Sound__1_14423 {
//     SInt32 Type;
//     struct SoundBank_tag *Bank;
//     void *OrigBank;
//     SInt8 OrigType;
//     SInt8 Prog;
//     SInt8 Note;
//     SInt8 Fine;
//     SInt16 Vol;
//     SInt8 pad1;
//     SInt8 VolGroup;
//     SInt16 Pan;
//     SInt8 XREFSound;
//     SInt8 pad2;
//     UInt16 Flags;
//     UInt16 pad3;
// };
// 
// struct SoundBank_tag {
//     UInt32 DataID;
//     UInt32 Version;
//     UInt32 Flags;
//     UInt32 BankID;
//     SInt8 BankNum;
//     SInt8 pad1;
//     SInt16 pad2;
//     SInt16 NumSounds;
//     SInt16 NumProgs;
//     SInt16 NumTones;
//     SInt16 NumVAGs;
//     SoundPtr FirstSound;
//     ProgPtr FirstProg;
//     TonePtr FirstTone;
//     void *VagsInSR;
//     UInt32 VagDataSize;
//     struct SoundBank_tag *NextBank;
// };
// 
// struct EffectChain {
//     UInt32 Flags;
//     SInt32 delta_counter;
//     SInt32 delta_type;
//     struct EffectChain *next;
//     EffectProcPtr proc;
// };
// 
// struct Prog {
//     SInt8 NumTones;
//     SInt8 Vol;
//     SInt16 Pan;
//     TonePtr FirstTone;
// };
// 
// typedef struct AMEHandler *AMEHandlerPtr;
// 
// typedef struct AMEStreamHeader AMEStreamHeader, *PAMEStreamHeader;
// 
// typedef struct MIDIBlockHeader MIDIBlockHeader, *PMIDIBlockHeader;
// 
// typedef struct MIDIHandler MIDIHandler, *PMIDIHandler;
// 
// typedef struct SoundBank_tag *SoundBankPtr;
// 
// struct MIDIBlockHeader {
//     UInt32 DataID;
//     SInt16 Version;
//     SInt8 Flags;
//     SInt8 pad1;
//     UInt32 ID;
//     void *NextMIDIBlock;
//     UInt32 BankID;
//     SoundBankPtr BankPtr;
//     SInt8 *DataStart;
//     SInt8 *MultiMIDIParent;
//     UInt32 Tempo;
//     SInt32 PPQ;
// };
// 
// struct MIDIHandler {
//     GSoundHandler SH;
//     SoundBankPtr BankPtr;
//     SInt8 *DataStart;
//     SInt8 *PlayPos;
//     UInt32 TickCountdown;
//     SInt32 TickDelta;
//     UInt32 Tempo;
//     SInt32 PPT;
//     SInt32 TickError;
//     SInt16 PPQ;
//     SInt16 MuteState;
//     char Prog[16];
//     char Vol[16];
//     short int Pan[16];
//     short int PitchBend[16];
//     SInt16 DamperState;
//     SInt8 Flags;
//     UInt8 RunningStatus;
//     SInt8 Repeats;
//     SInt8 pad1;
//     SInt16 pad2;
// };
// 
// struct AMEStreamHeader {
//     struct MIDIBlockHeader MB;
//     struct MIDIHandler MH;
// };
// 
// typedef struct AMEStreamHeader *AMEStreamHeaderPtr;
// 
// typedef struct AnimatedEndCallbackType AnimatedEndCallbackType, *PAnimatedEndCallbackType;
// 
// typedef struct AnimatedEndCallbackType__vtable AnimatedEndCallbackType__vtable, *PAnimatedEndCallbackType__vtable;
// 
// struct AnimatedEndCallbackType {
//     struct AnimatedEndCallbackType__vtable *__vtable; /* Inherited from anmPlayerEndCallback */
//     struct goGameObject *m_pObj;
// };
// 
// struct AnimatedEndCallbackType__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Callback;
// };
// 
// typedef struct anmAnimatorParm anmAnimatorParm, *PanmAnimatorParm;
// 
// struct anmAnimatorParm {
//     UINT16 _uID;
//     UINT8 _uResultID;
//     UINT8 _uNumStreamSets;
//     UINT32 _userOffset;
// };
// 
// typedef struct anmBlendSet anmBlendSet, *PanmBlendSet;
// 
// typedef struct goScriptParm goScriptParm, *PgoScriptParm;
// 
// typedef struct anmBlendSet__vtable anmBlendSet__vtable, *PanmBlendSet__vtable;
// 
// typedef struct anmVertex anmVertex, *PanmVertex;
// 
// typedef struct goScriptFuncs goScriptFuncs, *PgoScriptFuncs;
// 
// typedef struct anmVertex__vtable anmVertex__vtable, *PanmVertex__vtable;
// 
// typedef struct renModel renModel, *PrenModel;
// 
// typedef undefined1 *tVertexBlendFunc;
// 
// typedef undefined1 *tVertexChannelBlendFunc;
// 
// typedef struct stdWorkBufferPool stdWorkBufferPool, *PstdWorkBufferPool;
// 
// typedef undefined1 *tGOScriptLoad;
// 
// typedef undefined1 *tGOScriptFunc;
// 
// typedef struct stdArrayW<const renModelGroup *> stdArrayW<const renModelGroup *>, *PstdArrayW<const renModelGroup *>;
// 
// typedef struct renGROBInstancedMaterials renGROBInstancedMaterials, *PrenGROBInstancedMaterials;
// 
// typedef struct CullSphere CullSphere, *PCullSphere;
// 
// typedef struct renModelGroup renModelGroup, *PrenModelGroup;
// 
// typedef struct stdArrayW<const renModelGroup *>__vtable stdArrayW<const renModelGroup *>__vtable, *PstdArrayW<const renModelGroup *>__vtable;
// 
// typedef struct stdCList<renGfxClut *,stdAllocator<stdCListNodeBase> > stdCList<renGfxClut *,stdAllocator<stdCListNodeBase> >, *PstdCList<renGfxClut *,stdAllocator<stdCListNodeBase> >;
// 
typedef int INT;

struct CullSphere {
    INT16 id;
    INT16 instance;
    FLOAT radius;
    FLOAT x;
    FLOAT y;
    FLOAT z;
};
// 
// struct stdArrayW<const renModelGroup *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct renModelGroup **_pBuffer; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct stdArrayW<const renModelGroup *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     UINT _uMaxSize;
//     UINT _uGrowBySize;
// };
// 

struct stdArrayW__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type stdArrayW;
    struct __vtbl_ptr_type Resize;
};

struct stdArrayW {
    UINT _uSize; /* Inherited from stdArrayPlacement<short unsigned int> */
    UINT16 *_pBuffer; /* Inherited from stdArrayPlacement<short unsigned int> */
    struct HeapZone *hz; /* Inherited from stdArrayPlacement<short unsigned int> */
    struct stdArrayW__vtable *__vtable; /* Inherited from stdArrayPlacement<short unsigned int> */
    UINT _uMaxSize;
    UINT _uGrowBySize;
};

struct renModel {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct VUVec4 _vTint; /* Inherited from renGROB */
    struct renGROBJFlags _GROBJFlags; /* Inherited from renGROB */
    renGROBMatList *_pMaterialBuffer; /* Inherited from renGROB */
    UINT32 _uLayerID; /* Inherited from renGROB */
    UINT32 _uViewID; /* Inherited from renGROB */
    undefined field149_0xdc;
    undefined field150_0xdd;
    undefined field151_0xde;
    undefined field152_0xdf;
    struct stdArrayW m_groups;
    undefined field154_0xf8;
    undefined field155_0xf9;
    undefined field156_0xfa;
    undefined field157_0xfb;
    undefined field158_0xfc;
    undefined field159_0xfd;
    undefined field160_0xfe;
    undefined field161_0xff;
    struct VUVec4 m_vShadowLightDir;
    struct renGROBInstancedMaterials *m_pInstancedMaterials;
    FLOAT m_fSkinLODZDist;
    FLOAT m_fLODDist;
    UINT32 m_uModelFlags;
    INT16 m_iForcedLODLevel;
    INT16 m_sCullSphereID;
    struct CullSphere m_cullspheres[2];
    undefined field170_0x14c;
    undefined field171_0x14d;
    undefined field172_0x14e;
    undefined field173_0x14f;
};
// 
// struct anmVertex {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmVertex__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT16 **_pResults; /* Inherited from anmSimple<short int,short int,ScalerInterpolator<short int> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<short int,short int,ScalerInterpolator<short int> > */
//     INT16 **_pSrcVerts;
//     INT16 **_pDestVerts[2];
//     UINT16 *_pChangeMasks;
//     UINT _uNumChangeMasks;
//     float _fBlendSetWeights[32];
//     BOOL _bBlendSetActive;
//     FLOAT _fZOffDist;
//     struct renModel *_pModel;
//     BOOL _bPaused;
//     tVertexBlendFunc _pBlendCallback;
//     void *_pBlendCallbackARG;
//     tVertexChannelBlendFunc _pBlendChannelCallback;
//     void *_pBlendChannelCallbackARG;
//     FLOAT _fSampleFreq;
//     UINT _uNoUpdateCount;
//     struct stdWorkBufferPool *_pResultPool;
//     unsigned int _uNormalMaskIdx[1088];
// };
// 
// struct goScriptFuncs {
//     tGOScriptLoad fLoad;
//     tGOScriptFunc fCreate;
//     tGOScriptFunc fConnect;
//     tGOScriptFunc fProcess;
//     tGOScriptFunc fReset;
//     tGOScriptFunc fDisconnect;
//     tGOScriptFunc fDestroy;
// };
// 
// struct goScriptParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     struct stdDynaString _name;
//     UINT16 _uPriority;
//     UINT16 _uSlice;
//     struct goScriptFuncs _funcs;
//     UINT16 _jointID;
//     UINT16 _uFlags;
//     void *_parmData;
//     UINT32 _parmDataSize;
//     UINT32 _parmMapSize;
// };
// 
struct renGROBInstancedMaterials {
    // renGROBMatList *_pNonPalAnimMaterialBuffer;
    struct stdCList *_pAnimClutList;
    // renGROBMatList _altMaterials;
    INT _sMaterialSetPoolID;
};

// struct stdWorkBufferPool {
//     UINT _uMinBlockSize;
//     UINT _uNumPools;
//     UINT _uMaxBytes;
//     UINT _uGrowBy;
//     UINT _uByteAlign;
//     struct Pool__1_336 **_pPools;
// };
// 
// struct anmBlendSet__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmBlendSet;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmBlendSet {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmBlendSet__vtable *__vtable; /* Inherited from anmDataAnimator */
//     FLOAT **_pResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     struct anmVertex *_pVertAnimator;
// };
// 
// struct stdArrayW<const renModelGroup *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayW;
//     struct __vtbl_ptr_type Resize;
// };
// 
// struct stdCList<renGfxClut *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct renModelGroup {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT32 _uFileSize;
//     UINT16 _uNumParts;
//     UINT16 _uNumCullSpheres;
//     UINT16 _uGroupFlags;
//     UINT16 _uFirstSkinJoint;
//     UINT16 _uNumSkinJoints;
//     UINT16 _uNumWeights;
//     UINT16 _uCullRootJoint;
//     undefined field9_0x16;
//     undefined field10_0x17;
//     unsigned int _uPartOffset[1];
// };
// 
// struct anmVertex__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmVertex;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
//     struct __vtbl_ptr_type Blend2DAnim;
// };
// 
// typedef struct anmBOOL anmBOOL, *PanmBOOL;
// 
// typedef struct anmBOOL__vtable anmBOOL__vtable, *PanmBOOL__vtable;
// 
// struct anmBOOL__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmBOOL;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmBOOL {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmBOOL__vtable *__vtable; /* Inherited from anmDataAnimator */
//     BOOL **_pResults; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
//     UINT *_uNumResults; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
//     UINT _uFirstResult; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
// };
// 
// typedef struct anmCheckSum anmCheckSum, *PanmCheckSum;
// 
// struct anmCheckSum {
//     UINT16 r;
//     UINT16 c1;
//     UINT16 c2;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     UINT sum;
//     unsigned int _values[100];
//     UINT _validx;
// };
// 
// typedef struct anmCloth anmCloth, *PanmCloth;
// 
// typedef struct anmPoint anmPoint, *PanmPoint;
// 
// typedef struct anmSpringConsts anmSpringConsts, *PanmSpringConsts;
// 
// typedef struct anmClothParms anmClothParms, *PanmClothParms;
// 
// typedef struct anmClothCullSphere anmClothCullSphere, *PanmClothCullSphere;
// 
// typedef struct anmClothSphere anmClothSphere, *PanmClothSphere;
// 
// typedef struct tCloth tCloth, *PtCloth;
// 
// struct anmClothSphere {
//     struct VUVec4 _vPos;
//     struct VUVec4 _vLastPos;
//     FLOAT _fRadius;
//     FLOAT _fScaledRadius;
//     FLOAT _fScaledRadiusSqr;
//     FLOAT _fScale;
//     UINT _uFlags;
//     undefined field7_0x34;
//     undefined field8_0x35;
//     undefined field9_0x36;
//     undefined field10_0x37;
//     undefined field11_0x38;
//     undefined field12_0x39;
//     undefined field13_0x3a;
//     undefined field14_0x3b;
//     undefined field15_0x3c;
//     undefined field16_0x3d;
//     undefined field17_0x3e;
//     undefined field18_0x3f;
//     struct VUVec4 _vLocalPos;
//     INT _sParentIdx;
//     undefined field21_0x54;
//     undefined field22_0x55;
//     undefined field23_0x56;
//     undefined field24_0x57;
//     undefined field25_0x58;
//     undefined field26_0x59;
//     undefined field27_0x5a;
//     undefined field28_0x5b;
//     undefined field29_0x5c;
//     undefined field30_0x5d;
//     undefined field31_0x5e;
//     undefined field32_0x5f;
// };
// 
// struct anmClothCullSphere {
//     struct VUVec4 _vWorldPos;
//     struct VUVec4 _pos;
//     FLOAT _fRadius;
//     FLOAT _fScaledRadius;
//     FLOAT _fScaledRadiusSqr;
//     INT _sParentIdx;
//     INT _sFirstIdx;
//     INT _sNumSpheres;
//     undefined field8_0x38;
//     undefined field9_0x39;
//     undefined field10_0x3a;
//     undefined field11_0x3b;
//     undefined field12_0x3c;
//     undefined field13_0x3d;
//     undefined field14_0x3e;
//     undefined field15_0x3f;
// };
// 
// struct anmCloth {
//     struct anmPoint *_pPoints;
//     struct anmSpringConsts *_pSprings;
//     UINT _uNumPoints;
//     UINT _uPointsPerStrand;
//     UINT _uNumStrands;
//     unsigned int _uPinPoints[16];
//     UINT _uNumPinPoints;
//     FLOAT _fDampGravity;
//     FLOAT _fCollisionResponce;
//     FLOAT _fMotionResponceGround;
//     FLOAT _fMotionResponceAir;
//     FLOAT _fMinMass;
//     FLOAT _fMaxMass;
//     struct goSkeleton *_pSkel;
//     UINT _uJointBaseID;
//     UINT _uNumJoints;
//     UINT _uParentIdx;
//     struct anmClothParms *_pParm;
//     UINT _uNumSpheres;
//     undefined field19_0x88;
//     undefined field20_0x89;
//     undefined field21_0x8a;
//     undefined field22_0x8b;
//     undefined field23_0x8c;
//     undefined field24_0x8d;
//     undefined field25_0x8e;
//     undefined field26_0x8f;
//     struct anmClothCullSphere _cullSpheres[24];
//     INT _sNumCullSpheres;
//     UINT _uFlags;
//     undefined field30_0x698;
//     undefined field31_0x699;
//     undefined field32_0x69a;
//     undefined field33_0x69b;
//     undefined field34_0x69c;
//     undefined field35_0x69d;
//     undefined field36_0x69e;
//     undefined field37_0x69f;
//     struct anmClothSphere _currSpherePos[24];
//     struct VUVec4 _currPinPointPos[16];
//     struct VUMat4 _mLastParent;
//     struct VUMat4 _mParentDelta;
//     UINT *_pFlags;
//     UINT _uMatrixStepRateX;
//     UINT _uMatrixStepRateY;
//     INT _sMatricesPerStrand;
//     INT _sNoPinsRowIdx;
//     FLOAT _fCollisionPlaneThreshold;
//     FLOAT _fCollisionResponceScale;
//     FLOAT _fAvgTriArea;
//     FLOAT _fAvgCollSphereSpeedScale;
//     float _fStrandMotionWeights[50];
//     undefined field52_0x120c;
//     undefined field53_0x120d;
//     undefined field54_0x120e;
//     undefined field55_0x120f;
//     struct VUVec4 _vConstraintMin;
//     struct VUVec4 _vConstraintMax;
//     struct tCloth *_pTweaks;
//     BOOL _bRenderGrid;
//     BOOL _bDrawCollSpheres;
//     BOOL _bDrawJointKey;
//     BOOL _bReset;
//     BOOL _bShowCollisions;
//     undefined field64_0x1248;
//     undefined field65_0x1249;
//     undefined field66_0x124a;
//     undefined field67_0x124b;
//     undefined field68_0x124c;
//     undefined field69_0x124d;
//     undefined field70_0x124e;
//     undefined field71_0x124f;
// };
// 
// struct anmPoint {
//     struct VUVec4 _pos;
//     struct VUVec4 _lastPos;
// };
// 
// struct tCloth {
//     FLOAT m_ClothMassMin;
//     FLOAT m_ClothMassMax;
//     FLOAT m_DampGravity;
//     FLOAT m_CollisionBounce;
//     FLOAT m_CollisionSphereScale;
//     FLOAT m_MotionResponseGround;
//     FLOAT m_MotionResponseAir;
//     FLOAT m_WindMaxX;
//     FLOAT m_WindMinX;
//     FLOAT m_WindMaxY;
//     FLOAT m_WindMinY;
//     FLOAT m_WindMaxZ;
//     FLOAT m_WindMinZ;
//     FLOAT *m_JointMotionList;
//     FLOAT *m_SphereList;
//     UINT8 m_Flags;
//     undefined field16_0x3d;
//     undefined field17_0x3e;
//     undefined field18_0x3f;
// };
// 
// struct anmSpringConsts {
//     FLOAT _fRight;
//     FLOAT _fDown;
//     FLOAT _fRightUp;
//     FLOAT _fRightDown;
// };
// 
// struct anmClothParms {
//     UINT32 _uVersion;
//     UINT32 _uJointID;
//     UINT32 _uNumStrands;
//     UINT32 _uPointsPerStrand;
//     UINT32 _uTweakID;
//     UINT32 _uNumPinPoints;
//     UINT32 _uNumSpheres;
//     UINT32 _uFlags;
//     unsigned int _uPinPoints[1];
// };
// 
// typedef struct anmClothCollDef anmClothCollDef, *PanmClothCollDef;
// 
// struct anmClothCollDef {
//     float _sphere[4];
//     UINT _uParentID;
//     UINT _uFlags;
// };
// 
// typedef struct anmContext anmContext, *PanmContext;
// 
// typedef struct anmContext__vtable anmContext__vtable, *PanmContext__vtable;
// 
// struct anmContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct anmContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *_pAnimatorPools[17];
//     struct Pool__1_336 *_pPlayerPools[17];
//     struct Pool__1_336 *_pPlayListPools[17];
//     struct Pool__1_336 *_pAnimClientPool;
//     struct stdWorkBufferPool _ResultPool;
// };
// 
// struct anmContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > svrContext<svrTemplate<svrListContainer> >, *PsvrContext<svrTemplate<svrListContainer> >;
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > anmContextBase;
// 
// typedef struct svrContext<svrTemplate<svrListContainer> >__vtable svrContext<svrTemplate<svrListContainer> >__vtable, *PsvrContext<svrTemplate<svrListContainer> >__vtable;
// 
// struct svrContext<svrTemplate<svrListContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrContext<svrTemplate<svrListContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount;
//     UINT32 m_uConnectionRefCount;
//     struct svrContextParm *m_pParm;
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext;
// };
// 
// struct svrContext<svrTemplate<svrListContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct anmDataAnimator anmDataAnimator, *PanmDataAnimator;
// 
// typedef struct anmDataAnimator__vtable anmDataAnimator__vtable, *PanmDataAnimator__vtable;
// 
// struct anmDataAnimator {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm;
//     UINT _uNumPlayLists;
//     struct anmClient *_pClient;
//     struct stdList _playlists;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uResultID;
//     UINT _uType;
//     struct goScriptParm *_pScriptParms[7];
//     UINT _uNumScripts;
//     FLOAT _fProgressPos;
//     FLOAT _fPreviousMS;
//     INT16 _iClimbPreviousDirX;
//     INT16 _iClimbPreviousDirY;
//     UINT _uWhatAnimated;
//     struct anmDataAnimator__vtable *__vtable;
// };
// 
// struct anmDataAnimator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmDataAnimator;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmEffectsAnimator anmEffectsAnimator, *PanmEffectsAnimator;
// 
// typedef struct anmEffectsAnimator__vtable anmEffectsAnimator__vtable, *PanmEffectsAnimator__vtable;
// 
// struct anmEffectsAnimator {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmEffectsAnimator__vtable *__vtable; /* Inherited from anmDataAnimator */
//     FLOAT **_pResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
// };
// 
// struct anmEffectsAnimator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmEffectsAnimator;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimplePlayer<float,float,ScalerInterpolator<float> > anmSimplePlayer<float,float,ScalerInterpolator<float> >, *PanmSimplePlayer<float,float,ScalerInterpolator<float> >;
// 
// typedef struct anmSimplePlayer<float,float,ScalerInterpolator<float> > anmEffectsPlayer;
// 
// typedef struct anmFileHeader anmFileHeader, *PanmFileHeader;
// 
// typedef struct anmPlayerEndCallback anmPlayerEndCallback, *PanmPlayerEndCallback;
// 
// typedef struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > stdCList<goScript *,stdAllocator<stdCListNodeBase> >, *PstdCList<goScript *,stdAllocator<stdCListNodeBase> >;
// 
typedef struct anmFileHeader anmFile;
// 
// typedef struct anmSimplePlayer<float,float,ScalerInterpolator<float> >__vtable anmSimplePlayer<float,float,ScalerInterpolator<float> >__vtable, *PanmSimplePlayer<float,float,ScalerInterpolator<float> >__vtable;
// 
// typedef struct anmStreamSet anmStreamSet, *PanmStreamSet;
// 
// typedef struct anmPlayerEndCallback__vtable anmPlayerEndCallback__vtable, *PanmPlayerEndCallback__vtable;
// 
// struct anmSimplePlayer<float,float,ScalerInterpolator<float> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
struct anmPlayerEndCallback {
    struct anmPlayerEndCallback__vtable *__vtable;
};
// 
// struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct anmStreamSet {
    UINT8 _uAnimatorID;
    UINT8 _uSetID;
    UINT16 _uNumStreamHeaders;
    UINT16 _uNumDeltaStreamHeaders;
    UINT16 _uDataSampleByteSize;
    INT32 _sStreamHeaderOffset;
    FLOAT _fSampleFreq;
};

struct anmFileHeader {
    UINT32 _uFlags;
    FLOAT _fTweenTime;
    UINT32 _uNumStreamSets;
    FLOAT _fTimeScale;
    FLOAT _fCycleDistance;
    FLOAT _fDT;
    INT16 _sBlendNum;
    UINT16 _uButton;
    INT16 _sActivateFile;
    UINT16 _uFileID;
    UINT32 _uNameHash;
    char _cName[24];
    UINT32 _uFileSize;
    UINT32 _uNumScripts;
    unsigned int _scripts[7];
    struct anmStreamSet _StreamSets[1];
};
// 
// struct anmSimplePlayer<float,float,ScalerInterpolator<float> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<float,float,ScalerInterpolator<float> >__vtable *__vtable; /* Inherited from anmPlayer */
//     FLOAT **_pResults; /* Inherited from anmSimplePlayerBase<float,float,ScalerInterpolator<float> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<float,float,ScalerInterpolator<float> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<float,float,ScalerInterpolator<float> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<float,float,ScalerInterpolator<float> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<float,float,ScalerInterpolator<float> > */
// };
// 
// struct anmPlayerEndCallback__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Callback;
// };
// 
// typedef struct anmSimplePlayList<float,float,ScalerInterpolator<float> > anmSimplePlayList<float,float,ScalerInterpolator<float> >, *PanmSimplePlayList<float,float,ScalerInterpolator<float> >;
// 
// typedef struct anmSimplePlayList<float,float,ScalerInterpolator<float> > anmEffectsPlayList;
// 
// typedef struct anmFileSet anmFileSet, *PanmFileSet;
// 
// typedef struct anmSimplePlayList<float,float,ScalerInterpolator<float> >__vtable anmSimplePlayList<float,float,ScalerInterpolator<float> >__vtable, *PanmSimplePlayList<float,float,ScalerInterpolator<float> >__vtable;
// 
// struct anmFileSet {
//     UINT32 _uID;
//     UINT32 _uBaseFileIndex;
//     UINT32 _uFlags;
//     UINT32 _uNumFiles;
//     UINT32 _uNumStreamSets;
//     char _cName[24];
//     UINT32 _uNameHash;
//     UINT32 _uLastOffset;
//     unsigned int _uFileOffsets[1];
// };
// 
// struct anmSimplePlayList<float,float,ScalerInterpolator<float> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmSimplePlayList<float,float,ScalerInterpolator<float> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<float,float,ScalerInterpolator<float> >__vtable *__vtable; /* Inherited from anmPlayList */
//     FLOAT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// typedef struct anmExternalFileset anmExternalFileset, *PanmExternalFileset;
// 
// struct anmExternalFileset {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 iExternedFromName;
// };
// 
// typedef struct anmFloat anmFloat, *PanmFloat;
// 
// typedef struct anmFloat__vtable anmFloat__vtable, *PanmFloat__vtable;
// 
// struct anmFloat {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmFloat__vtable *__vtable; /* Inherited from anmDataAnimator */
//     FLOAT **_pResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<float,float,ScalerInterpolator<float> > */
// };
// 
// struct anmFloat__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmFloat;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimplePlayer<float,float,ScalerInterpolator<float> > anmFloatPlayer;
// 
// typedef struct anmSimplePlayList<float,float,ScalerInterpolator<float> > anmFloatPlayList;
// 
// typedef struct anmIK anmIK, *PanmIK;
// 
// struct anmIK {
//     struct VUVec4 _vGoalPoint;
//     struct VUVec4 _vEffectorRot;
//     struct VUVec4 _vPole;
//     FLOAT _fTwist;
//     undefined field4_0x34;
//     undefined field5_0x35;
//     undefined field6_0x36;
//     undefined field7_0x37;
//     undefined field8_0x38;
//     undefined field9_0x39;
//     undefined field10_0x3a;
//     undefined field11_0x3b;
//     undefined field12_0x3c;
//     undefined field13_0x3d;
//     undefined field14_0x3e;
//     undefined field15_0x3f;
// };
// 
// typedef struct anmIKParm anmIKParm, *PanmIKParm;
// 
// typedef struct Vector3<float> Vector3<float>, *PVector3<float>;
// 
typedef struct Vector3 tVector3;

struct Vector3 {
    FLOAT x;
    FLOAT y;
    FLOAT z;
};

struct anmIKParm {
    INT _sRootID;
    tVector3 _vPoleVector;
    UINT _uFlags;
};
// 
// typedef struct anmInt anmInt, *PanmInt;
// 
// typedef struct anmInt__vtable anmInt__vtable, *PanmInt__vtable;
// 
// struct anmInt {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmInt__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT **_pResults; /* Inherited from anmSimple<int,int,ScalerInterpolator<int> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<int,int,ScalerInterpolator<int> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<int,int,ScalerInterpolator<int> > */
// };
// 
// struct anmInt__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmInt;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmInt2Int16 anmInt2Int16, *PanmInt2Int16;
// 
// typedef struct anmInt2Int16__vtable anmInt2Int16__vtable, *PanmInt2Int16__vtable;
// 
// struct anmInt2Int16 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmInt2Int16__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT16 **_pResults; /* Inherited from anmSimple<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<int,short int,NOINTERPOLATION<int,short int> > */
// };
// 
// struct anmInt2Int16__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmInt2Int16;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmMasterContext anmMasterContext, *PanmMasterContext;
// 
// typedef struct anmMasterContext__vtable anmMasterContext__vtable, *PanmMasterContext__vtable;
// 
// typedef struct svrRouter svrRouter, *PsvrRouter;
// 
// typedef struct svrRouter__vtable svrRouter__vtable, *PsvrRouter__vtable;
// 
// typedef struct svrArrayContainer svrArrayContainer, *PsvrArrayContainer;
// 
// typedef struct stdDynamicStack<unsigned int> stdDynamicStack<unsigned int>, *PstdDynamicStack<unsigned int>;
// 
// struct anmMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct anmMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// struct svrArrayContainer {
//     struct svrClient **m_pClients;
//     UINT32 m_uNextClient;
//     UINT32 m_uMaxClients;
// };
// 
// struct anmMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct stdDynamicStack<unsigned int> {
//     UINT *_pStack; /* Inherited from stdPlacementStack<unsigned int> */
//     UINT _uStackIdx; /* Inherited from stdPlacementStack<unsigned int> */
//     UINT _uStackDepth; /* Inherited from stdPlacementStack<unsigned int> */
// };
// 
// struct svrRouter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrRouter__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry;
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack;
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack;
//     UINT32 m_uMaxRoutingContexts;
//     UINT32 m_uRoutingContextID;
// };
// 
// struct svrRouter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrRouter;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > svrMasterContext<svrTemplate<svrListContainer> >, *PsvrMasterContext<svrTemplate<svrListContainer> >;
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > anmMasterContextBase;
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> >__vtable svrMasterContext<svrTemplate<svrListContainer> >__vtable, *PsvrMasterContext<svrTemplate<svrListContainer> >__vtable;
// 
// struct svrMasterContext<svrTemplate<svrListContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrMasterContext<svrTemplate<svrListContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMasterContext<svrTemplate<svrListContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter;
//     UINT32 m_uMaxConnectionsPerContext;
//     UINT32 m_uMaxClientsPerContext;
// };
// 
// typedef struct anmMatrixArray anmMatrixArray, *PanmMatrixArray;
// 
// typedef struct anmMatrixArray__vtable anmMatrixArray__vtable, *PanmMatrixArray__vtable;
// 
// typedef struct anmMatrixArrayPlayList anmMatrixArrayPlayList, *PanmMatrixArrayPlayList;
// 
// typedef struct anmMatrixArrayPlayer anmMatrixArrayPlayer, *PanmMatrixArrayPlayer;
// 
// typedef struct anmMatrixArrayPlayList__vtable anmMatrixArrayPlayList__vtable, *PanmMatrixArrayPlayList__vtable;
// 
// typedef struct anmMatrixArrayPlayer__vtable anmMatrixArrayPlayer__vtable, *PanmMatrixArrayPlayer__vtable;
// 
struct anmMatrixArray__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type anmMatrixArray;
    struct __vtbl_ptr_type Blend;
    struct __vtbl_ptr_type Reset;
    struct __vtbl_ptr_type AllocatePlayList;
    struct __vtbl_ptr_type Process;
    struct __vtbl_ptr_type SetFileIdx;
    struct __vtbl_ptr_type type;
    struct __vtbl_ptr_type CanPlayAdditiveSets;
    struct __vtbl_ptr_type CanTween;
    struct __vtbl_ptr_type RemoveAllPlayLists;
    struct __vtbl_ptr_type SetFile;
    struct __vtbl_ptr_type EnableBlending;
    struct __vtbl_ptr_type Init;
};

struct anmMatrixArrayPlayer__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type anmMatrixArrayPlayer;
    struct __vtbl_ptr_type Animate;
    struct __vtbl_ptr_type Reset;
    struct __vtbl_ptr_type GetNumStreamSets;
    struct __vtbl_ptr_type PlayerID;
    struct __vtbl_ptr_type NeedsProcessing;
    struct __vtbl_ptr_type Recycle;
};

struct anmMatrixArrayPlayList__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type anmMatrixArrayPlayList;
    struct __vtbl_ptr_type AllocatePlayer;
    struct __vtbl_ptr_type Process;
    struct __vtbl_ptr_type Process_;
};

struct anmMatrixArrayPlayer {
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    FLOAT _fTime; /* Inherited from anmPlayer */
    FLOAT _fTimeScale; /* Inherited from anmPlayer */
    FLOAT _fLastTime; /* Inherited from anmPlayer */
    INT _sKey; /* Inherited from anmPlayer */
    FLOAT _fWeight; /* Inherited from anmPlayer */
    FLOAT _fWeightScale; /* Inherited from anmPlayer */
    FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
    FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
    FLOAT _fLastWeight; /* Inherited from anmPlayer */
    UINT _uFlags; /* Inherited from anmPlayer */
    UINT _uLastFlags; /* Inherited from anmPlayer */
    FLOAT _fTerminateTime; /* Inherited from anmPlayer */
    struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
    struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
    struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
    struct stdCList _scripts; /* Inherited from anmPlayer */
    struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
    FLOAT _fStartTime; /* Inherited from anmPlayer */
    anmFile *_pStartFile; /* Inherited from anmPlayer */
    struct anmMatrixArrayPlayer__vtable *__vtable; /* Inherited from anmPlayer */
    struct VUVec4 *_pOperations[3];
    UINT _uNumJoints;
    struct anmJoint *_pJoints;
    short unsigned int _uChangeMasks[3][64];
    UINT _uNumChangeMasks;
    BOOL _bResetNonAnimatedMatrices;
};
// 
// struct anmMatrixArray {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmMatrixArray__vtable *__vtable; /* Inherited from anmDataAnimator */
//     struct VUMat4 *_pMatrixBuffer;
//     UINT _uNumJoints;
//     struct anmJoint *_pJoints;
//     UINT _uNumBlendPlayers;
//     struct anmJointMatrixBuffers *_pJointMatrixBuffers;
//     struct anmMatrixArrayPlayList *_pBlendPlayList;
//     struct anmMatrixArrayPlayer *_pBlendPlayer;
//     struct anmMatrixArrayPlayer *_pSinglePlayer;
//     struct goSkeleton *_pSkeleton;
//     short unsigned int _uChangeMasks[3][64];
//     UINT _uNumChangeMasks;
//     struct VUVec4 *_pLocalRot;
//     struct VUVec4 *_pLocalOrg;
//     struct VUVec4 *_pLocalScale;
//     struct VUVec4 *_pNonBakeablePivotTrans;
//     BOOL _bResetMatricesFlg;
//     FLOAT _fQuatWeightSum;
//     UINT _uNumOperations;
//     struct renModel *_pModel;
//     struct CullSphere *_pCullSpheres[2];
//     UINT _uLastCheckSum;
// };
// 
// struct anmMatrixArrayPlayList {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmMatrixArrayPlayList__vtable *__vtable; /* Inherited from anmPlayList */
//     UINT _uNumChangeMasks;
//     UINT _uNumPlayers;
//     struct anmMatrixArrayPlayer *_pSoloPlayer;
// };
// 
// typedef struct anmMultiStreamHeader anmMultiStreamHeader, *PanmMultiStreamHeader;
// 
// typedef struct anmStreamSubHeader anmStreamSubHeader, *PanmStreamSubHeader;
// 
// struct anmStreamSubHeader {
//     UINT16 _uNumSamples;
//     UINT16 _uSampleOffset;
//     UINT16 _uEndSampleOff;
//     UINT16 _uDataOff;
// };
// 
// struct anmMultiStreamHeader {
//     UINT8 _uNumDeltaSubStreams;
//     UINT8 _uNumSubStreams;
//     struct anmStreamSubHeader _subHeaders[1];
// };
// 
// typedef struct anmPlayer anmPlayer, *PanmPlayer;
// 
// typedef struct anmPlayer__vtable anmPlayer__vtable, *PanmPlayer__vtable;
// 
// struct anmPlayer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmPlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmPlayer {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime;
//     FLOAT _fTimeScale;
//     FLOAT _fLastTime;
//     INT _sKey;
//     FLOAT _fWeight;
//     FLOAT _fWeightScale;
//     FLOAT _fWeightScaleDeltaPerSecond;
//     FLOAT _fWeightNormalizeScale;
//     FLOAT _fLastWeight;
//     UINT _uFlags;
//     UINT _uLastFlags;
//     FLOAT _fTerminateTime;
//     struct anmFileHeader *_pFile;
//     struct anmFileHeader *_pLastFile;
//     struct anmPlayerEndCallback *m_pEndCallback;
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts;
//     struct anmDataAnimator *_pAnimator;
//     FLOAT _fStartTime;
//     anmFile *_pStartFile;
//     struct anmPlayer__vtable *__vtable;
// };
// 
// typedef struct anmPlayer anmPlayerIt;
// 
// typedef struct anmPlayList anmPlayList, *PanmPlayList;
// 
// typedef struct anmPlayList__vtable anmPlayList__vtable, *PanmPlayList__vtable;
// 
// struct anmPlayList__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmPlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmPlayList {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players;
//     UINT _uFlags;
//     UINT _uNumPlayers;
//     FLOAT _fTerminateTime;
//     struct anmFileSet *_pFileSet;
//     struct anmDataAnimator *_pAnimator;
//     struct anmPlayList__vtable *__vtable;
// };
// 
// typedef struct anmServer anmServer, *PanmServer;
// 
// typedef struct anmServer__vtable anmServer__vtable, *PanmServer__vtable;
// 
// typedef struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> stdStack<const svrContext<svrTemplate<svrListContainer> > *,32>, *PstdStack<const svrContext<svrTemplate<svrListContainer> > *,32>;
// 
// struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> {
//     struct svrContext<svrTemplate<svrListContainer> > *fStack[32];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct anmServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct anmServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct anmServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT _uNextVisibleIdx;
//     struct anmClient *_pVisibleClients[256];
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > svrMultiServer<svrTemplate<svrListContainer> >, *PsvrMultiServer<svrTemplate<svrListContainer> >;
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > anmServerBase;
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> >__vtable svrMultiServer<svrTemplate<svrListContainer> >__vtable, *PsvrMultiServer<svrTemplate<svrListContainer> >__vtable;
// 
// struct svrMultiServer<svrTemplate<svrListContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMultiServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct svrMultiServer<svrTemplate<svrListContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMultiServer<svrTemplate<svrListContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack;
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectedClientsPerServer;
//     UINT32 m_uMasterContextServerID;
// };
// 
// typedef struct svrTemplate<svrListContainer> svrTemplate<svrListContainer>, *PsvrTemplate<svrListContainer>;
// 
// typedef struct svrTemplate<svrListContainer> svrList;
// 
// typedef svrList anmServerContainer;
// 
// typedef struct svrTemplate<svrListContainer>__vtable svrTemplate<svrListContainer>__vtable, *PsvrTemplate<svrListContainer>__vtable;
// 
// struct svrTemplate<svrListContainer> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<svrListContainer>__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients;
//     UINT32 m_uNumConnected;
// };
// 
// struct svrTemplate<svrListContainer>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct anmSimple<float,float,ScalerInterpolator<float> > anmSimple<float,float,ScalerInterpolator<float> >, *PanmSimple<float,float,ScalerInterpolator<float> >;
// 
// typedef struct anmSimple<float,float,ScalerInterpolator<float> >__vtable anmSimple<float,float,ScalerInterpolator<float> >__vtable, *PanmSimple<float,float,ScalerInterpolator<float> >__vtable;
// 
// struct anmSimple<float,float,ScalerInterpolator<float> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmSimple<float,float,ScalerInterpolator<float> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<float,float,ScalerInterpolator<float> >__vtable *__vtable; /* Inherited from anmDataAnimator */
//     FLOAT **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// typedef struct anmSimple<float,int,UVInterpolator4_12> anmSimple<float,int,UVInterpolator4_12>, *PanmSimple<float,int,UVInterpolator4_12>;
// 
// typedef struct anmSimple<float,int,UVInterpolator4_12>__vtable anmSimple<float,int,UVInterpolator4_12>__vtable, *PanmSimple<float,int,UVInterpolator4_12>__vtable;
// 
// struct anmSimple<float,int,UVInterpolator4_12> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<float,int,UVInterpolator4_12>__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT32 **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// struct anmSimple<float,int,UVInterpolator4_12>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimple<int,int,NOINTERPOLATION<int,int> > anmSimple<int,int,NOINTERPOLATION<int,int> >, *PanmSimple<int,int,NOINTERPOLATION<int,int> >;
// 
// typedef struct anmSimple<int,int,NOINTERPOLATION<int,int> >__vtable anmSimple<int,int,NOINTERPOLATION<int,int> >__vtable, *PanmSimple<int,int,NOINTERPOLATION<int,int> >__vtable;
// 
// struct anmSimple<int,int,NOINTERPOLATION<int,int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<int,int,NOINTERPOLATION<int,int> >__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// struct anmSimple<int,int,NOINTERPOLATION<int,int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimple<int,int,ScalerInterpolator<int> > anmSimple<int,int,ScalerInterpolator<int> >, *PanmSimple<int,int,ScalerInterpolator<int> >;
// 
// typedef struct anmSimple<int,int,ScalerInterpolator<int> >__vtable anmSimple<int,int,ScalerInterpolator<int> >__vtable, *PanmSimple<int,int,ScalerInterpolator<int> >__vtable;
// 
// struct anmSimple<int,int,ScalerInterpolator<int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<int,int,ScalerInterpolator<int> >__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// struct anmSimple<int,int,ScalerInterpolator<int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimple<int,short int,NOINTERPOLATION<int,short int> > anmSimple<int,short int,NOINTERPOLATION<int,short int> >, *PanmSimple<int,short int,NOINTERPOLATION<int,short int> >;
// 
// typedef struct anmSimple<int,short int,NOINTERPOLATION<int,short int> >__vtable anmSimple<int,short int,NOINTERPOLATION<int,short int> >__vtable, *PanmSimple<int,short int,NOINTERPOLATION<int,short int> >__vtable;
// 
// struct anmSimple<int,short int,NOINTERPOLATION<int,short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<int,short int,NOINTERPOLATION<int,short int> >__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT16 **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// struct anmSimple<int,short int,NOINTERPOLATION<int,short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimple<short int,short int,ScalerInterpolator<short int> > anmSimple<short int,short int,ScalerInterpolator<short int> >, *PanmSimple<short int,short int,ScalerInterpolator<short int> >;
// 
// typedef struct anmSimple<short int,short int,ScalerInterpolator<short int> >__vtable anmSimple<short int,short int,ScalerInterpolator<short int> >__vtable, *PanmSimple<short int,short int,ScalerInterpolator<short int> >__vtable;
// 
// struct anmSimple<short int,short int,ScalerInterpolator<short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmSimple<short int,short int,ScalerInterpolator<short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<short int,short int,ScalerInterpolator<short int> >__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT16 **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// typedef struct anmSimple<unsigned char,int,BOOLInterpolator> anmSimple<unsigned char,int,BOOLInterpolator>, *PanmSimple<unsigned char,int,BOOLInterpolator>;
// 
// typedef struct anmSimple<unsigned char,int,BOOLInterpolator>__vtable anmSimple<unsigned char,int,BOOLInterpolator>__vtable, *PanmSimple<unsigned char,int,BOOLInterpolator>__vtable;
// 
// struct anmSimple<unsigned char,int,BOOLInterpolator>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimple;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmSimple<unsigned char,int,BOOLInterpolator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSimple<unsigned char,int,BOOLInterpolator>__vtable *__vtable; /* Inherited from anmDataAnimator */
//     BOOL **_pResults;
//     UINT *_uNumResults;
//     UINT _uFirstResult;
// };
// 
// typedef struct anmSimplePlayer<float,int,UVInterpolator4_12> anmSimplePlayer<float,int,UVInterpolator4_12>, *PanmSimplePlayer<float,int,UVInterpolator4_12>;
// 
// typedef struct anmSimplePlayer<float,int,UVInterpolator4_12>__vtable anmSimplePlayer<float,int,UVInterpolator4_12>__vtable, *PanmSimplePlayer<float,int,UVInterpolator4_12>__vtable;
// 
// struct anmSimplePlayer<float,int,UVInterpolator4_12> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<float,int,UVInterpolator4_12>__vtable *__vtable; /* Inherited from anmPlayer */
//     INT32 **_pResults; /* Inherited from anmSimplePlayerBase<float,int,UVInterpolator4_12> */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<float,int,UVInterpolator4_12> */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<float,int,UVInterpolator4_12> */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<float,int,UVInterpolator4_12> */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<float,int,UVInterpolator4_12> */
// };
// 
// struct anmSimplePlayer<float,int,UVInterpolator4_12>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> > anmSimplePlayer<int,int,NOINTERPOLATION<int,int> >, *PanmSimplePlayer<int,int,NOINTERPOLATION<int,int> >;
// 
// typedef struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> >__vtable anmSimplePlayer<int,int,NOINTERPOLATION<int,int> >__vtable, *PanmSimplePlayer<int,int,NOINTERPOLATION<int,int> >__vtable;
// 
// struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT **_pResults; /* Inherited from anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > */
// };
// 
// typedef struct anmSimplePlayer<int,int,ScalerInterpolator<int> > anmSimplePlayer<int,int,ScalerInterpolator<int> >, *PanmSimplePlayer<int,int,ScalerInterpolator<int> >;
// 
// typedef struct anmSimplePlayer<int,int,ScalerInterpolator<int> >__vtable anmSimplePlayer<int,int,ScalerInterpolator<int> >__vtable, *PanmSimplePlayer<int,int,ScalerInterpolator<int> >__vtable;
// 
// struct anmSimplePlayer<int,int,ScalerInterpolator<int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayer<int,int,ScalerInterpolator<int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<int,int,ScalerInterpolator<int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT **_pResults; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
// };
// 
// typedef struct anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> > anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >, *PanmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >;
// 
// typedef struct anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >__vtable anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >__vtable, *PanmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >__vtable;
// 
// struct anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT16 **_pResults; /* Inherited from anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > */
// };
// 
// struct anmSimplePlayer<int,short int,NOINTERPOLATION<int,short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayer<short int,short int,ScalerInterpolator<short int> > anmSimplePlayer<short int,short int,ScalerInterpolator<short int> >, *PanmSimplePlayer<short int,short int,ScalerInterpolator<short int> >;
// 
// typedef struct anmSimplePlayer<short int,short int,ScalerInterpolator<short int> >__vtable anmSimplePlayer<short int,short int,ScalerInterpolator<short int> >__vtable, *PanmSimplePlayer<short int,short int,ScalerInterpolator<short int> >__vtable;
// 
// struct anmSimplePlayer<short int,short int,ScalerInterpolator<short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayer<short int,short int,ScalerInterpolator<short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<short int,short int,ScalerInterpolator<short int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT16 **_pResults; /* Inherited from anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > */
// };
// 
// typedef struct anmSimplePlayer<unsigned char,int,BOOLInterpolator> anmSimplePlayer<unsigned char,int,BOOLInterpolator>, *PanmSimplePlayer<unsigned char,int,BOOLInterpolator>;
// 
// typedef struct anmSimplePlayer<unsigned char,int,BOOLInterpolator>__vtable anmSimplePlayer<unsigned char,int,BOOLInterpolator>__vtable, *PanmSimplePlayer<unsigned char,int,BOOLInterpolator>__vtable;
// 
// struct anmSimplePlayer<unsigned char,int,BOOLInterpolator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayer<unsigned char,int,BOOLInterpolator>__vtable *__vtable; /* Inherited from anmPlayer */
//     BOOL **_pResults; /* Inherited from anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> */
// };
// 
// struct anmSimplePlayer<unsigned char,int,BOOLInterpolator>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<float,float,ScalerInterpolator<float> > anmSimplePlayerBase<float,float,ScalerInterpolator<float> >, *PanmSimplePlayerBase<float,float,ScalerInterpolator<float> >;
// 
// typedef struct anmSimplePlayerBase<float,float,ScalerInterpolator<float> >__vtable anmSimplePlayerBase<float,float,ScalerInterpolator<float> >__vtable, *PanmSimplePlayerBase<float,float,ScalerInterpolator<float> >__vtable;
// 
// struct anmSimplePlayerBase<float,float,ScalerInterpolator<float> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<float,float,ScalerInterpolator<float> >__vtable *__vtable; /* Inherited from anmPlayer */
//     FLOAT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// struct anmSimplePlayerBase<float,float,ScalerInterpolator<float> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<float,int,UVInterpolator4_12> anmSimplePlayerBase<float,int,UVInterpolator4_12>, *PanmSimplePlayerBase<float,int,UVInterpolator4_12>;
// 
// typedef struct anmSimplePlayerBase<float,int,UVInterpolator4_12>__vtable anmSimplePlayerBase<float,int,UVInterpolator4_12>__vtable, *PanmSimplePlayerBase<float,int,UVInterpolator4_12>__vtable;
// 
// struct anmSimplePlayerBase<float,int,UVInterpolator4_12> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<float,int,UVInterpolator4_12>__vtable *__vtable; /* Inherited from anmPlayer */
//     INT32 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// struct anmSimplePlayerBase<float,int,UVInterpolator4_12>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >, *PanmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >;
// 
// typedef struct anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >__vtable anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >__vtable, *PanmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >__vtable;
// 
// struct anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// struct anmSimplePlayerBase<int,int,NOINTERPOLATION<int,int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> > anmSimplePlayerBase<int,int,ScalerInterpolator<int> >, *PanmSimplePlayerBase<int,int,ScalerInterpolator<int> >;
// 
// typedef struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> >__vtable anmSimplePlayerBase<int,int,ScalerInterpolator<int> >__vtable, *PanmSimplePlayerBase<int,int,ScalerInterpolator<int> >__vtable;
// 
// struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// typedef struct anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >, *PanmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >;
// 
// typedef struct anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >__vtable anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >__vtable, *PanmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >__vtable;
// 
// struct anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<int,short int,NOINTERPOLATION<int,short int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT16 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// typedef struct anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >, *PanmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >;
// 
// typedef struct anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >__vtable anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >__vtable, *PanmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >__vtable;
// 
// struct anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >__vtable *__vtable; /* Inherited from anmPlayer */
//     INT16 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// struct anmSimplePlayerBase<short int,short int,ScalerInterpolator<short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> anmSimplePlayerBase<unsigned char,int,BOOLInterpolator>, *PanmSimplePlayerBase<unsigned char,int,BOOLInterpolator>;
// 
// typedef struct anmSimplePlayerBase<unsigned char,int,BOOLInterpolator>__vtable anmSimplePlayerBase<unsigned char,int,BOOLInterpolator>__vtable, *PanmSimplePlayerBase<unsigned char,int,BOOLInterpolator>__vtable;
// 
// struct anmSimplePlayerBase<unsigned char,int,BOOLInterpolator>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayerBase;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// struct anmSimplePlayerBase<unsigned char,int,BOOLInterpolator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmSimplePlayerBase<unsigned char,int,BOOLInterpolator>__vtable *__vtable; /* Inherited from anmPlayer */
//     BOOL **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
//     UINT _uStartStreamIdx;
// };
// 
// typedef struct anmSimplePlayList<float,int,UVInterpolator4_12> anmSimplePlayList<float,int,UVInterpolator4_12>, *PanmSimplePlayList<float,int,UVInterpolator4_12>;
// 
// typedef struct anmSimplePlayList<float,int,UVInterpolator4_12>__vtable anmSimplePlayList<float,int,UVInterpolator4_12>__vtable, *PanmSimplePlayList<float,int,UVInterpolator4_12>__vtable;
// 
// struct anmSimplePlayList<float,int,UVInterpolator4_12>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmSimplePlayList<float,int,UVInterpolator4_12> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<float,int,UVInterpolator4_12>__vtable *__vtable; /* Inherited from anmPlayList */
//     INT32 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// typedef struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> > anmSimplePlayList<int,int,NOINTERPOLATION<int,int> >, *PanmSimplePlayList<int,int,NOINTERPOLATION<int,int> >;
// 
// typedef struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> >__vtable anmSimplePlayList<int,int,NOINTERPOLATION<int,int> >__vtable, *PanmSimplePlayList<int,int,NOINTERPOLATION<int,int> >__vtable;
// 
// struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> >__vtable *__vtable; /* Inherited from anmPlayList */
//     INT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// typedef struct anmSimplePlayList<int,int,ScalerInterpolator<int> > anmSimplePlayList<int,int,ScalerInterpolator<int> >, *PanmSimplePlayList<int,int,ScalerInterpolator<int> >;
// 
// typedef struct anmSimplePlayList<int,int,ScalerInterpolator<int> >__vtable anmSimplePlayList<int,int,ScalerInterpolator<int> >__vtable, *PanmSimplePlayList<int,int,ScalerInterpolator<int> >__vtable;
// 
// struct anmSimplePlayList<int,int,ScalerInterpolator<int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmSimplePlayList<int,int,ScalerInterpolator<int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<int,int,ScalerInterpolator<int> >__vtable *__vtable; /* Inherited from anmPlayList */
//     INT **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// typedef struct anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> > anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >, *PanmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >;
// 
// typedef struct anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >__vtable anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >__vtable, *PanmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >__vtable;
// 
// struct anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >__vtable *__vtable; /* Inherited from anmPlayList */
//     INT16 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// struct anmSimplePlayList<int,short int,NOINTERPOLATION<int,short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// typedef struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > anmSimplePlayList<short int,short int,ScalerInterpolator<short int> >, *PanmSimplePlayList<short int,short int,ScalerInterpolator<short int> >;
// 
// typedef struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> >__vtable anmSimplePlayList<short int,short int,ScalerInterpolator<short int> >__vtable, *PanmSimplePlayList<short int,short int,ScalerInterpolator<short int> >__vtable;
// 
// struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> >__vtable *__vtable; /* Inherited from anmPlayList */
//     INT16 **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// typedef struct anmSimplePlayList<unsigned char,int,BOOLInterpolator> anmSimplePlayList<unsigned char,int,BOOLInterpolator>, *PanmSimplePlayList<unsigned char,int,BOOLInterpolator>;
// 
// typedef struct anmSimplePlayList<unsigned char,int,BOOLInterpolator>__vtable anmSimplePlayList<unsigned char,int,BOOLInterpolator>__vtable, *PanmSimplePlayList<unsigned char,int,BOOLInterpolator>__vtable;
// 
// struct anmSimplePlayList<unsigned char,int,BOOLInterpolator>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSimplePlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmSimplePlayList<unsigned char,int,BOOLInterpolator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmSimplePlayList<unsigned char,int,BOOLInterpolator>__vtable *__vtable; /* Inherited from anmPlayList */
//     BOOL **_pResults;
//     UINT *_pNumResults;
//     UINT _uStreamSetID;
//     UINT _uNumStreamSets;
// };
// 
// typedef struct anmSoundEmitterAnimator anmSoundEmitterAnimator, *PanmSoundEmitterAnimator;
// 
// typedef struct anmSoundEmitterAnimator__vtable anmSoundEmitterAnimator__vtable, *PanmSoundEmitterAnimator__vtable;
// 
// struct anmSoundEmitterAnimator {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmSoundEmitterAnimator__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT **_pResults; /* Inherited from anmSimple<int,int,NOINTERPOLATION<int,int> > */
//     UINT *_uNumResults; /* Inherited from anmSimple<int,int,NOINTERPOLATION<int,int> > */
//     UINT _uFirstResult; /* Inherited from anmSimple<int,int,NOINTERPOLATION<int,int> > */
// };
// 
// struct anmSoundEmitterAnimator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmSoundEmitterAnimator;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimplePlayer<int,int,NOINTERPOLATION<int,int> > anmSoundEmitterPlayer;
// 
// typedef struct anmSimplePlayList<int,int,NOINTERPOLATION<int,int> > anmSoundEmitterPlayList;
// 
// typedef struct anmStreamDeltaCompressedHeader<float,short int,float,ScalerInterpolator<float> > anmStreamDeltaCompressedHeader<float,short int,float,ScalerInterpolator<float> >, *PanmStreamDeltaCompressedHeader<float,short int,float,ScalerInterpolator<float> >;
// 
// struct anmStreamDeltaCompressedHeader<float,short int,float,ScalerInterpolator<float> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamDeltaCompressedHeader<short int,signed char,int,NOINTERPOLATION<short int,int> > anmStreamDeltaCompressedHeader<short int,signed char,int,NOINTERPOLATION<short int,int> >, *PanmStreamDeltaCompressedHeader<short int,signed char,int,NOINTERPOLATION<short int,int> >;
// 
// struct anmStreamDeltaCompressedHeader<short int,signed char,int,NOINTERPOLATION<short int,int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<float,float,ScalerInterpolator<float> > anmStreamHeader<float,float,ScalerInterpolator<float> >, *PanmStreamHeader<float,float,ScalerInterpolator<float> >;
// 
// struct anmStreamHeader<float,float,ScalerInterpolator<float> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<float,float,SplineInterpolator> anmStreamHeader<float,float,SplineInterpolator>, *PanmStreamHeader<float,float,SplineInterpolator>;
// 
// struct anmStreamHeader<float,float,SplineInterpolator> {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<float,int,UVInterpolator4_12> anmStreamHeader<float,int,UVInterpolator4_12>, *PanmStreamHeader<float,int,UVInterpolator4_12>;
// 
// struct anmStreamHeader<float,int,UVInterpolator4_12> {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<int,int,NOINTERPOLATION<int,int> > anmStreamHeader<int,int,NOINTERPOLATION<int,int> >, *PanmStreamHeader<int,int,NOINTERPOLATION<int,int> >;
// 
// struct anmStreamHeader<int,int,NOINTERPOLATION<int,int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<int,int,ScalerInterpolator<int> > anmStreamHeader<int,int,ScalerInterpolator<int> >, *PanmStreamHeader<int,int,ScalerInterpolator<int> >;
// 
// struct anmStreamHeader<int,int,ScalerInterpolator<int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<int,short int,NOINTERPOLATION<int,short int> > anmStreamHeader<int,short int,NOINTERPOLATION<int,short int> >, *PanmStreamHeader<int,short int,NOINTERPOLATION<int,short int> >;
// 
// struct anmStreamHeader<int,short int,NOINTERPOLATION<int,short int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<short int,float,ScalerInterpolator<float> > anmStreamHeader<short int,float,ScalerInterpolator<float> >, *PanmStreamHeader<short int,float,ScalerInterpolator<float> >;
// 
// struct anmStreamHeader<short int,float,ScalerInterpolator<float> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<short int,int,NOINTERPOLATION<short int,int> > anmStreamHeader<short int,int,NOINTERPOLATION<short int,int> >, *PanmStreamHeader<short int,int,NOINTERPOLATION<short int,int> >;
// 
// struct anmStreamHeader<short int,int,NOINTERPOLATION<short int,int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<short int,short int,NOINTERPOLATION<short int,short int> > anmStreamHeader<short int,short int,NOINTERPOLATION<short int,short int> >, *PanmStreamHeader<short int,short int,NOINTERPOLATION<short int,short int> >;
// 
// struct anmStreamHeader<short int,short int,NOINTERPOLATION<short int,short int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<short int,short int,ScalerInterpolator<short int> > anmStreamHeader<short int,short int,ScalerInterpolator<short int> >, *PanmStreamHeader<short int,short int,ScalerInterpolator<short int> >;
// 
// struct anmStreamHeader<short int,short int,ScalerInterpolator<short int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<short unsigned int,float,InterpFixU16> anmStreamHeader<short unsigned int,float,InterpFixU16>, *PanmStreamHeader<short unsigned int,float,InterpFixU16>;
// 
// struct anmStreamHeader<short unsigned int,float,InterpFixU16> {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<signed char,int,NOINTERPOLATION<short int,int> > anmStreamHeader<signed char,int,NOINTERPOLATION<short int,int> >, *PanmStreamHeader<signed char,int,NOINTERPOLATION<short int,int> >;
// 
// struct anmStreamHeader<signed char,int,NOINTERPOLATION<short int,int> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<signed char,signed char,NOINTERPOLATION<signed char,signed char> > anmStreamHeader<signed char,signed char,NOINTERPOLATION<signed char,signed char> >, *PanmStreamHeader<signed char,signed char,NOINTERPOLATION<signed char,signed char> >;
// 
// struct anmStreamHeader<signed char,signed char,NOINTERPOLATION<signed char,signed char> > {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeader<unsigned char,int,BOOLInterpolator> anmStreamHeader<unsigned char,int,BOOLInterpolator>, *PanmStreamHeader<unsigned char,int,BOOLInterpolator>;
// 
// struct anmStreamHeader<unsigned char,int,BOOLInterpolator> {
//     UINT16 _uChannelOffset; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uFlags; /* Inherited from anmStreamHeaderBase */
//     UINT8 _uDataSegment; /* Inherited from anmStreamHeaderBase */
//     struct anmStreamSubHeader _subHeader; /* Inherited from anmStreamHeaderBase */
// };
// 
// typedef struct anmStreamHeaderBase anmStreamHeaderBase, *PanmStreamHeaderBase;
// 
// struct anmStreamHeaderBase {
//     UINT16 _uChannelOffset;
//     UINT8 _uFlags;
//     UINT8 _uDataSegment;
//     struct anmStreamSubHeader _subHeader;
// };
// 
// typedef struct anmStreamInterleaveHeader anmStreamInterleaveHeader, *PanmStreamInterleaveHeader;
// 
// struct anmStreamInterleaveHeader {
//     UINT8 _uNumMasks;
//     UINT8 _uNumChannels;
//     UINT16 _uDataOffset;
//     short unsigned int _uChannelMask[1];
// };
// 
// typedef enum anmSystemFlags {
//     kForceAnimPos=1,
//     kHoldAllMovement=4,
//     kSetPreviousMSToMaxSpeed=8,
//     kAnimDrivenMotion=16,
//     kCanBreakIn=32,
//     kResetAnimTime=64
// } anmSystemFlags;
// 
// typedef struct anmUVAnimator anmUVAnimator, *PanmUVAnimator;
// 
// typedef struct anmUVAnimator__vtable anmUVAnimator__vtable, *PanmUVAnimator__vtable;
// 
// struct anmUVAnimator {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmUVAnimator__vtable *__vtable; /* Inherited from anmDataAnimator */
//     INT32 **_pResults; /* Inherited from anmSimple<float,int,UVInterpolator4_12> */
//     UINT *_uNumResults; /* Inherited from anmSimple<float,int,UVInterpolator4_12> */
//     UINT _uFirstResult; /* Inherited from anmSimple<float,int,UVInterpolator4_12> */
// };
// 
// struct anmUVAnimator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmUVAnimator;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// typedef struct anmSimplePlayerBase<float,int,UVInterpolator4_12> anmUVPlayer;
// 
// typedef struct anmSimplePlayList<float,int,UVInterpolator4_12> anmUVPlayList;
// 
// typedef struct anmSimple<short int,short int,ScalerInterpolator<short int> > anmVertexBase;
// 
// typedef struct anmVertexPlayer anmVertexPlayer, *PanmVertexPlayer;
// 
// typedef struct anmVertexPlayer__vtable anmVertexPlayer__vtable, *PanmVertexPlayer__vtable;
// 
// struct anmVertexPlayer {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     FLOAT _fTime; /* Inherited from anmPlayer */
//     FLOAT _fTimeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastTime; /* Inherited from anmPlayer */
//     INT _sKey; /* Inherited from anmPlayer */
//     FLOAT _fWeight; /* Inherited from anmPlayer */
//     FLOAT _fWeightScale; /* Inherited from anmPlayer */
//     FLOAT _fWeightScaleDeltaPerSecond; /* Inherited from anmPlayer */
//     FLOAT _fWeightNormalizeScale; /* Inherited from anmPlayer */
//     FLOAT _fLastWeight; /* Inherited from anmPlayer */
//     UINT _uFlags; /* Inherited from anmPlayer */
//     UINT _uLastFlags; /* Inherited from anmPlayer */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pFile; /* Inherited from anmPlayer */
//     struct anmFileHeader *_pLastFile; /* Inherited from anmPlayer */
//     struct anmPlayerEndCallback *m_pEndCallback; /* Inherited from anmPlayer */
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > _scripts; /* Inherited from anmPlayer */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayer */
//     FLOAT _fStartTime; /* Inherited from anmPlayer */
//     anmFile *_pStartFile; /* Inherited from anmPlayer */
//     struct anmVertexPlayer__vtable *__vtable; /* Inherited from anmPlayer */
//     INT **_pResults; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     UINT _uStartStreamIdx; /* Inherited from anmSimplePlayerBase<int,int,ScalerInterpolator<int> > */
//     INT16 **_pSrcVerts;
//     UINT16 *_pChangeMasks;
//     UINT _uNumChangeMasks;
// };
// 
// struct anmVertexPlayer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmVertexPlayer;
//     struct __vtbl_ptr_type Animate;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetNumStreamSets;
//     struct __vtbl_ptr_type PlayerID;
//     struct __vtbl_ptr_type NeedsProcessing;
//     struct __vtbl_ptr_type Recycle;
// };
// 
// typedef struct anmSimplePlayerBase<int,int,ScalerInterpolator<int> > anmVertexPlayerBase;
// 
// typedef struct anmVertexPlayList anmVertexPlayList, *PanmVertexPlayList;
// 
// typedef struct anmVertexPlayList__vtable anmVertexPlayList__vtable, *PanmVertexPlayList__vtable;
// 
// struct anmVertexPlayList__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmVertexPlayList;
//     struct __vtbl_ptr_type AllocatePlayer;
//     struct __vtbl_ptr_type Process;
// };
// 
// struct anmVertexPlayList {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct stdList _players; /* Inherited from anmPlayList */
//     UINT _uFlags; /* Inherited from anmPlayList */
//     UINT _uNumPlayers; /* Inherited from anmPlayList */
//     FLOAT _fTerminateTime; /* Inherited from anmPlayList */
//     struct anmFileSet *_pFileSet; /* Inherited from anmPlayList */
//     struct anmDataAnimator *_pAnimator; /* Inherited from anmPlayList */
//     struct anmVertexPlayList__vtable *__vtable; /* Inherited from anmPlayList */
//     INT16 **_pResults; /* Inherited from anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > */
//     UINT *_pNumResults; /* Inherited from anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uStreamSetID; /* Inherited from anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > */
//     UINT _uNumStreamSets; /* Inherited from anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > */
//     INT16 **_pSrcVerts;
//     UINT _uNumChangeMasks;
//     UINT16 *_pChangeMasks;
// };
// 
// typedef struct anmSimplePlayList<short int,short int,ScalerInterpolator<short int> > anmVertexPlayListBase;
// 
// typedef struct anmVisible anmVisible, *PanmVisible;
// 
// typedef struct anmVisible__vtable anmVisible__vtable, *PanmVisible__vtable;
// 
// struct anmVisible__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type anmVisible;
//     struct __vtbl_ptr_type Blend;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type AllocatePlayList;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type SetFileIdx;
//     struct __vtbl_ptr_type type;
//     struct __vtbl_ptr_type CanPlayAdditiveSets;
//     struct __vtbl_ptr_type CanTween;
//     struct __vtbl_ptr_type RemoveAllPlayLists;
//     struct __vtbl_ptr_type SetFile;
//     struct __vtbl_ptr_type EnableBlending;
// };
// 
// struct anmVisible {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct anmParm *_pAnimParm; /* Inherited from anmDataAnimator */
//     UINT _uNumPlayLists; /* Inherited from anmDataAnimator */
//     struct anmClient *_pClient; /* Inherited from anmDataAnimator */
//     struct stdList _playlists; /* Inherited from anmDataAnimator */
//     UINT _uStreamSetID; /* Inherited from anmDataAnimator */
//     UINT _uNumStreamSets; /* Inherited from anmDataAnimator */
//     UINT _uResultID; /* Inherited from anmDataAnimator */
//     UINT _uType; /* Inherited from anmDataAnimator */
//     struct goScriptParm *_pScriptParms[7]; /* Inherited from anmDataAnimator */
//     UINT _uNumScripts; /* Inherited from anmDataAnimator */
//     FLOAT _fProgressPos; /* Inherited from anmDataAnimator */
//     FLOAT _fPreviousMS; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirX; /* Inherited from anmDataAnimator */
//     INT16 _iClimbPreviousDirY; /* Inherited from anmDataAnimator */
//     UINT _uWhatAnimated; /* Inherited from anmDataAnimator */
//     struct anmVisible__vtable *__vtable; /* Inherited from anmDataAnimator */
//     BOOL **_pResults; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
//     UINT *_uNumResults; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
//     UINT _uFirstResult; /* Inherited from anmSimple<unsigned char,int,BOOLInterpolator> */
// };
// 
// typedef struct Arena Arena, *PArena;
// 
// struct Arena {
//     UINT32 uArenaConstant;
//     struct HeapZone *pParentHeap;
//     Ptr pFreeBlock;
//     Ptr pLastByteInArena;
// };
// 
// typedef struct Args Args, *PArgs;
// 
// struct Args {
//     struct stdDynaString fTweakName;
// };
// 
// typedef struct Armature Armature, *PArmature;
// 
// struct Armature {
//     struct VUVec4 fObject;
//     float fBoomRotation;
//     float fBoomElevation;
//     float fLookRotationOffset;
//     float fLookElevationOffset;
//     float fBoomDistance;
//     float fBoomRoll;
//     float dummy[2];
// };
// 
// typedef struct AStarNode AStarNode, *PAStarNode;
// 
// struct AStarNode {
//     float m_Heuristic;
//     float m_Goal;
//     UINT16 m_iSite;
//     undefined field3_0xa;
//     undefined field4_0xb;
//     struct AStarNode *m_pParent;
// };
// 
// typedef struct AtrEntry AtrEntry, *PAtrEntry;
// 
// typedef enum AtrType {
//     ATR_Integer=0,
//     ATR_Float=1,
//     ATR_Boolean=2,
//     ATR_String=3,
//     ATR_StrHash=4
// } AtrType;
// 
// typedef union AtrEntry__unnamed_36 AtrEntry__unnamed_36, *PAtrEntry__unnamed_36;
// 
// typedef struct AtrEntry__unnamed__IntType AtrEntry__unnamed__IntType, *PAtrEntry__unnamed__IntType;
// 
// typedef struct AtrEntry__unnamed__FloatType AtrEntry__unnamed__FloatType, *PAtrEntry__unnamed__FloatType;
// 
// typedef struct AtrEntry__unnamed__BoolType AtrEntry__unnamed__BoolType, *PAtrEntry__unnamed__BoolType;
// 
// typedef struct AtrEntry__unnamed__StringType AtrEntry__unnamed__StringType, *PAtrEntry__unnamed__StringType;
// 
// typedef union AtrEntry__unnamed__StringType__unnamed_36 AtrEntry__unnamed__StringType__unnamed_36, *PAtrEntry__unnamed__StringType__unnamed_36;
// 
// union AtrEntry__unnamed__StringType__unnamed_36 {
//     char name[24];
//     void *val;
// };
// 
// struct AtrEntry__unnamed__StringType {
//     union AtrEntry__unnamed__StringType__unnamed_36 field0_0x0;
// };
// 
// struct AtrEntry__unnamed__BoolType {
//     INT32 defval;
// };
// 
// struct AtrEntry__unnamed__FloatType {
//     FLOAT min;
//     FLOAT max;
//     FLOAT defval;
// };
// 
// struct AtrEntry__unnamed__IntType {
//     INT32 min;
//     INT32 max;
//     INT32 defval;
// };
// 
// union AtrEntry__unnamed_36 {
//     struct AtrEntry__unnamed__IntType IntType;
//     struct AtrEntry__unnamed__FloatType FloatType;
//     struct AtrEntry__unnamed__BoolType BoolType;
//     struct AtrEntry__unnamed__StringType StringType;
// };
// 
// struct AtrEntry {
//     char name[32];
//     enum AtrType type;
//     union AtrEntry__unnamed_36 field2_0x24;
//     INT32 offset;
//     INT32 isBitField;
//     INT32 bitPos;
//     INT32 numBits;
// };
// 
// typedef struct AtrValue AtrValue, *PAtrValue;
// 
struct AtrValue {
    undefined field0_0x0;
};

// typedef enum AttachmentFlags {
//     kIgnoreParentOrientation=1,
//     kIgnoreParentPosition=2
// } AttachmentFlags;
// 
// typedef struct Attributes__1_8864 Attributes__1_8864, *PAttributes__1_8864;
// 
// struct Attributes__1_8864 {
//     int fPlay;
//     int fVolume;
//     int fPan;
//     int fPitch;
//     int fRegisters[4];
//     int fReverb;
// };
// 
// typedef struct Attributes__1_9945 Attributes__1_9945, *PAttributes__1_9945;
// 
// struct Attributes__1_9945 {
//     float fFieldOfView;
//     float fWideScreenRatio;
//     INT32 fFlags;
//     INT16 fElevationMode;
//     INT16 fRotationMode;
//     FLOAT fBoomRatio;
//     FLOAT fMaxDistanceToDolly;
//     FLOAT fMinDistanceToDolly;
//     FLOAT fMaxDistanceToTarget;
//     FLOAT fMinDistanceToTarget;
//     FLOAT fElevationConstraint;
//     FLOAT fRotationConstraint;
//     FLOAT fSZTop;
//     FLOAT fSZBottom;
//     FLOAT fSZLeft;
//     FLOAT fSZRight;
//     FLOAT fDollyDamping;
//     FLOAT fMicBoomRatio;
//     FLOAT fTweenDefault;
//     FLOAT fEaseInDefault;
//     FLOAT fEaseOutDefault;
//     INT32 fPriority;
//     float fStaticTarget[3];
//     FLOAT fFightLine;
// };
// 
// typedef UINT16 b16;
// 
// typedef UINT32 b32;
// 
// typedef UINT8 b8;
// 
// typedef struct Bank Bank, *PBank;
// 
// typedef void *SoundBankPtr;
// 
// typedef struct StreamTable StreamTable, *PStreamTable;
// 
// struct Bank {
//     SoundBankPtr fBankPtr;
//     struct StreamTable *fStreamTable;
//     unsigned int fBlockSize;
//     unsigned int fSRAM;
//     char fName[16];
//     unsigned int fSequence:12;
//     unsigned int fOverride:1;
//     unsigned int fLoaded:1;
//     undefined field8_0x22;
//     undefined field9_0x23;
// };
// 
// struct StreamTable {
//     int fStreamCount;
//     int fTableSize;
// };
// 
// typedef union bank_tag bank_tag, *Pbank_tag;
// 
// union bank_tag {
//     u_long name_long;
//     char name[8];
//     SoundBankPtr ptr;
// };
// 
// typedef struct BankLoadArgs BankLoadArgs, *PBankLoadArgs;
// 
// struct BankLoadArgs {
//     char fName[20];
//     unsigned int fEEAddress;
//     unsigned int fBlockSize;
// };
// 
// typedef struct BankLoadParm BankLoadParm, *PBankLoadParm;
// 
// typedef struct Sound__1_14237 Sound__1_14237, *PSound__1_14237;
// 
// struct Sound__1_14237 {
//     struct stdDynaString fName;
//     int fID;
// };
// 
// struct BankLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     int fNumSounds;
//     struct Sound__1_14237 fSounds[1];
// };
// 
// typedef struct BankParm BankParm, *PBankParm;
// 
// typedef struct BankParm__vtable BankParm__vtable, *PBankParm__vtable;
// 
// typedef struct ClientParm__1_9257 ClientParm__1_9257, *PClientParm__1_9257;
// 
// typedef struct WadContext WadContext, *PWadContext;
// 
// typedef enum LoadState {
//     kNotLoaded=0,
//     kWaiting4LoadCallback=1,
//     kWaiting4LoadedFlag=2,
//     kLoadCallback=3,
//     kLoaded=4,
//     kLoadFailed=5
// } LoadState;
// 
// typedef struct Tag Tag, *PTag;
// 
// typedef struct WadContext__vtable WadContext__vtable, *PWadContext__vtable;
// 
// typedef union Tag__unnamed_0 Tag__unnamed_0, *PTag__unnamed_0;
// 
// typedef struct SoundTag SoundTag, *PSoundTag;
// 
// typedef bool bool;
// 
struct SoundTag {
    unsigned int fBankID:4;
    unsigned int fSequence:12;
    unsigned int fSoundID:11;
    BOOL fLoop:1;
    unsigned int fVolGroup:4;
};

struct BankParm__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type BankParm;
};
// 
// struct WadContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct WadContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *fEmitterPool; /* Inherited from Context */
//     struct Pool__1_336 *fHandlePool; /* Inherited from Context */
//     struct goResourceList fStaticEmitters;
// };
// 
// struct BankParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     struct BankParm__vtable *__vtable; /* Inherited from svrClientUnloadParm */
//     undefined field10_0x10;
//     undefined field11_0x11;
//     undefined field12_0x12;
//     undefined field13_0x13;
//     undefined field14_0x14;
//     undefined field15_0x15;
//     undefined field16_0x16;
//     undefined field17_0x17;
//     undefined field18_0x18;
//     undefined field19_0x19;
//     undefined field20_0x1a;
//     undefined field21_0x1b;
//     undefined field22_0x1c;
//     undefined field23_0x1d;
//     undefined field24_0x1e;
//     undefined field25_0x1f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     unsigned int fBankID;
//     int fNumSounds;
//     struct ClientParm__1_9257 *fClientParms;
//     struct WadContext *fWadContext;
//     enum LoadState fLoadState;
// };
// 
struct WadContext__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type WadContext;
    struct __vtbl_ptr_type StartServer;
    struct __vtbl_ptr_type ProcessServer;
    struct __vtbl_ptr_type EndServer;
    struct __vtbl_ptr_type CreateClient;
    struct __vtbl_ptr_type ConnectClient;
    struct __vtbl_ptr_type ProcessClient;
    struct __vtbl_ptr_type DisconnectClient;
    struct __vtbl_ptr_type DestroyClient;
    struct __vtbl_ptr_type LoadClient;
    struct __vtbl_ptr_type EndLoadClient;
    struct __vtbl_ptr_type PauseAllClients;
    struct __vtbl_ptr_type UnPauseAllClients;
    struct __vtbl_ptr_type CreateDefaultParm;
    struct __vtbl_ptr_type SignalWadLoadCompleted;
    struct __vtbl_ptr_type PushClientContext;
    struct __vtbl_ptr_type PopClientContext;
    struct __vtbl_ptr_type ReadContextStack;
    struct __vtbl_ptr_type AllocateClient;
    struct __vtbl_ptr_type AllocateClient_;
    struct __vtbl_ptr_type FreeClient;
    struct __vtbl_ptr_type StartClient;
    struct __vtbl_ptr_type EndClient;
    struct __vtbl_ptr_type NotifyClientDisconnect;
    struct __vtbl_ptr_type NotifyClientConnect;
    struct __vtbl_ptr_type NotifyClientCreate;
};

union Tag__unnamed_0 {
    struct SoundTag fTag;
    unsigned int fRawData;
};

struct Tag {
    union Tag__unnamed_0 field0_0x0;
};

struct ClientParm__1_9257 {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct Tag fSound;
};
// 
// typedef struct basic_data basic_data, *Pbasic_data;
// 
// struct basic_data {
//     UInt32 pad1;
// };
// 
// typedef struct BasicEffect BasicEffect, *PBasicEffect;
// 
// struct BasicEffect {
//     struct EffectChain ec;
//     SInt32 value;
//     SInt32 delta_value;
//     SInt32 delta_time;
//     SInt32 destination;
// };
// 
// typedef struct BasicEffect *BasicEffectPtr;
// 
// typedef struct bhvrClient bhvrClient, *PbhvrClient;
// 
// typedef struct bhvrClient__vtable bhvrClient__vtable, *PbhvrClient__vtable;
// 
// struct bhvrClient__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type bhvrClient;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type GetStateVar;
//     struct __vtbl_ptr_type SetStateVar;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type RunExitCodes;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type PrepareToDie;
// };
// 
// struct bhvrClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined1 *m_DefaultCallback;
//     BOOL preparedToDie;
//     struct bhvrClient__vtable *__vtable;
// };
// 
// typedef struct bhvrClientLoadParm bhvrClientLoadParm, *PbhvrClientLoadParm;
// 
// struct bhvrClientLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     char m_SMName[24];
//     UINT16 m_JointID;
//     UINT16 dummy;
// };
// 
// typedef struct bhvrClientParm bhvrClientParm, *PbhvrClientParm;
// 
// typedef enum SMType {
//     SM_SMI_TYPE=0,
//     SM_HFSM_TYPE=1
// } SMType;
// 
// struct bhvrClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     void *m_Data;
//     INT8 m_SMID;
//     INT8 m_Dynamic;
//     UINT16 m_JointID;
//     enum SMType m_SMType;
// };
// 
// typedef struct bhvrContext bhvrContext, *PbhvrContext;
// 
// typedef struct bhvrContext__vtable bhvrContext__vtable, *PbhvrContext__vtable;
// 
// struct bhvrContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct bhvrContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *m_pBhvrHFSMClientPool;
// };
// 
// struct bhvrContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type bhvrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type NotifyContextDisconnected;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > bhvrContextBase;
// 
// typedef struct bhvrHFSMClient bhvrHFSMClient, *PbhvrHFSMClient;
// 
// typedef struct bhvrHFSMClient__vtable bhvrHFSMClient__vtable, *PbhvrHFSMClient__vtable;
// 
// typedef struct hfsMachine hfsMachine, *PhfsMachine;
// 
// typedef struct hfsmState hfsmState, *PhfsmState;
// 
// typedef struct hfsMachine__vtable hfsMachine__vtable, *PhfsMachine__vtable;
// 
// typedef struct hfsmState__vtable hfsmState__vtable, *PhfsmState__vtable;
// 
// struct hfsmState {
//     struct hfsmState__vtable *__vtable;
// };
// 
// struct bhvrHFSMClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined1 *m_DefaultCallback; /* Inherited from bhvrClient */
//     BOOL preparedToDie; /* Inherited from bhvrClient */
//     struct bhvrHFSMClient__vtable *__vtable; /* Inherited from bhvrClient */
//     struct hfsMachine *m_HFSM;
//     struct hfsmState *m_pCurState;
// };
// 
// struct bhvrHFSMClient__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type bhvrHFSMClient;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type GetStateVar;
//     struct __vtbl_ptr_type SetStateVar;
//     struct __vtbl_ptr_type Process;
//     struct __vtbl_ptr_type RunExitCodes;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type PrepareToDie;
// };
// 
// struct hfsMachine__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsMachine;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct hfsmState__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsMachine {
//     struct hfsMachine__vtable *__vtable;
// };
// 
// typedef struct bhvrMasterContext bhvrMasterContext, *PbhvrMasterContext;
// 
// typedef struct bhvrMasterContext__vtable bhvrMasterContext__vtable, *PbhvrMasterContext__vtable;
// 
// struct bhvrMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct bhvrMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// struct bhvrMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type bhvrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > bhvrMasterContextBase;
// 
// typedef struct bhvrServer bhvrServer, *PbhvrServer;
// 
// typedef struct bhvrServer__vtable bhvrServer__vtable, *PbhvrServer__vtable;
// 
// struct bhvrServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type bhvrServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct bhvrServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct bhvrServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > bhvrServerBase;
// 
// typedef svrList bhvrServerContainer;
// 
// typedef struct block_data block_data, *Pblock_data;
// 
// struct block_data {
//     SInt8 g_vol;
//     SInt8 pad;
//     SInt16 g_pan;
// };
// 
// typedef enum block_move_type {
//     BLOCK_MOVE_NORMAL=0,
//     BLOCK_MOVE_NOT_LAST=1,
//     BLOCK_MOVE_LAST=2
// } block_move_type;
// 
// typedef struct BlockSoundHandler BlockSoundHandler, *PBlockSoundHandler;
// 
// typedef struct SFXBlock2 SFXBlock2, *PSFXBlock2;
// 
// typedef struct SFXBlock2 *SFXBlock2Ptr;
// 
// typedef struct LFOTracker LFOTracker, *PLFOTracker;
// 
// typedef struct SFX2 SFX2, *PSFX2;
// 
// typedef struct SFX2 *SFX2Ptr;
// 
// typedef struct SFXGrain2 SFXGrain2, *PSFXGrain2;
// 
// typedef struct SFXGrain2 *SFXGrain2Ptr;
// 
// typedef struct SFXBlockNames SFXBlockNames, *PSFXBlockNames;
// 
// typedef struct SFXUserData SFXUserData, *PSFXUserData;
// 
// struct SFXBlock2 {
//     UInt32 DataID;
//     UInt32 Version;
//     UInt32 Flags;
//     UInt32 BlockID;
//     SInt8 BlockNum;
//     SInt8 pad1;
//     SInt16 pad2;
//     SInt16 pad3;
//     SInt16 NumSounds;
//     SInt16 NumGrains;
//     SInt16 NumVAGs;
//     SFX2Ptr FirstSound;
//     SFXGrain2Ptr FirstGrain;
//     void *VagsInSR;
//     UInt32 VagDataSize;
//     UInt32 SRAMAllocSize;
//     struct SFXBlock2 *NextBlock;
//     void *GrainData;
//     struct SFXBlockNames *BlockNames;
//     struct SFXUserData *SFXUD;
// };
// 
// struct SFXUserData {
//     unsigned int data[4];
// };
// 
// struct SFXBlockNames {
//     unsigned int BlockName[2];
//     UInt32 SFXNameTableOffset;
//     UInt32 VAGNameTableOffset;
//     UInt32 VAGImportsTableOffset;
//     UInt32 VAGExportsTableOffset;
//     short int SFXHashOffsets[32];
//     short int VAGHashOffsets[32];
// };
// 
// struct SFX2 {
//     SInt8 Vol;
//     SInt8 VolGroup;
//     SInt16 Pan;
//     SInt8 NumGrains;
//     SInt8 InstanceLimit;
//     UInt16 Flags;
//     SFXGrain2Ptr FirstGrain;
// };
// 
// struct SFXGrain2 {
//     union _op_data OpcodeData;
//     SInt32 Delay;
// };
// 
// struct LFOTracker {
//     UInt16 type;
//     UInt8 target;
//     UInt8 target_extra;
//     UInt8 setup_flags;
//     UInt8 running_flags;
//     UInt16 depth;
//     UInt32 orig_depth;
//     SInt32 next_step;
//     UInt32 step_size;
//     UInt32 orig_step_size;
//     SInt32 state_hold1;
//     SInt32 state_hold2;
//     SInt32 range;
//     SInt32 last_lfo;
//     struct BlockSoundHandler *handler;
//     struct LFOTracker *next;
// };
// 
// struct BlockSoundHandler {
//     GSoundHandler SH;
//     SInt8 Current_Note;
//     SInt8 Current_Fine;
//     SInt16 Current_PB;
//     SInt16 LFO_Vol;
//     SInt16 App_Vol;
//     SInt16 LFO_Pan;
//     SInt16 App_Pan;
//     SInt16 LFO_PB;
//     SInt16 App_PB;
//     SInt16 LFO_PM;
//     SInt16 App_PM;
//     SInt16 CountDown;
//     SInt16 NextGrain;
//     char Registers[4];
//     SInt8 sk_doing_skipping_play;
//     SInt8 pad;
//     SInt16 sk_grains_to_play;
//     SInt16 sk_grains_to_skip;
//     UInt16 pad2;
//     SFXBlock2Ptr block;
//     struct LFOTracker lfo[4];
//     UInt32 start_tick;
//     struct SFX2 *orig_sound;
// };
// 
// typedef struct BlockSoundHandler *BlockSoundHandlerPtr;
// 
// typedef struct Bone Bone, *PBone;
// 
// struct Bone {
//     undefined field0_0x0;
// };
// 
// typedef struct BoneCallbackData BoneCallbackData, *PBoneCallbackData;
// 
// typedef struct tStage__1_6890 tStage__1_6890, *PtStage__1_6890;
// 
// typedef struct tImpulse tImpulse, *PtImpulse;
// 
// typedef struct tTint tTint, *PtTint;
// 
// typedef struct tConcussionBase tConcussionBase, *PtConcussionBase;
// 
// typedef struct FLOAT16 FLOAT16, *PFLOAT16;
// 
// typedef struct tColor__1_5567 tColor__1_5567, *PtColor__1_5567;
// 
// typedef struct tCollision tCollision, *PtCollision;
// 
// struct tColor__1_5567 {
//     FLOAT m_R;
//     FLOAT m_G;
//     FLOAT m_B;
//     FLOAT m_A;
// };
// 
// struct tTint {
//     struct tColor__1_5567 m_Color;
//     FLOAT m_Percent;
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
// };
// 
struct FLOAT16 {
    UINT16 _value;
};

struct tImpulse {
    struct FLOAT16 m_Away;
    struct FLOAT16 m_Up;
    struct FLOAT16 m_Right;
};

struct tCollision {
    struct FLOAT16 m_On;
    struct FLOAT16 m_Off;
    struct tImpulse m_GroundImpulse;
    struct tImpulse m_AirImpulse;
    struct tImpulse m_BlockImpulse;
    struct FLOAT16 m_Damage;
    UINT8 m_Part;
    UINT8 m_Flags;
    INT8 m_Partitions;
    undefined field9_0x1b;
};

// struct tConcussionBase {
//     UINT8 m_Type;
//     UINT8 m_Flags;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_GOName;
//     UINT32 m_JointName;
//     struct tCollision *m_Collision;
//     FLOAT m_FreezeAmount;
//     INT8 m_Context;
//     undefined field9_0x15;
//     undefined field10_0x16;
//     undefined field11_0x17;
//     UINT32 m_HitFlags;
//     FLOAT *m_DurationList;
//     UINT8 m_Heap;
//     undefined field15_0x21;
//     undefined field16_0x22;
//     undefined field17_0x23;
// };
// 
// struct BoneCallbackData {
//     struct VUVec4 m_vConeVertex;
//     struct VUVec4 m_vConeAxis;
//     FLOAT m_fConeCosAngle;
//     struct tStage__1_6890 *m_pTweaks;
//     undefined field4_0x28;
//     undefined field5_0x29;
//     undefined field6_0x2a;
//     undefined field7_0x2b;
//     undefined field8_0x2c;
//     undefined field9_0x2d;
//     undefined field10_0x2e;
//     undefined field11_0x2f;
// };
// 
// struct tStage__1_6890 {
//     FLOAT m_DamageMult;
//     FLOAT m_ShotgunConeTopRadius;
//     FLOAT m_ShotgunConeBaseRadius;
//     FLOAT m_ShotgunReach;
//     FLOAT m_ShotgunDamage;
//     INT8 m_ShotgunHitContext;
//     undefined field6_0x15;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     UINT32 m_ShotgunHitFlags;
//     struct tImpulse m_ShotgunImpulse;
//     undefined field11_0x22;
//     undefined field12_0x23;
//     struct tTint *m_PoisonTintList;
//     FLOAT m_PoisonDelay;
//     struct tConcussionBase *m_PoisonCnc;
//     INT16 m_PoisonHitContext;
//     undefined field17_0x32;
//     undefined field18_0x33;
//     UINT32 m_PoisonHitFlags;
// };
// 
// typedef struct BonePoison BonePoison, *PBonePoison;
// 
// typedef struct goHandle goHandle, *PgoHandle;
// 
typedef union goHandle__unnamed_0 goHandle__unnamed_0, *PgoHandle__unnamed_0;

typedef struct goHandle__unnamed__unnamed_0 goHandle__unnamed__unnamed_0, *PgoHandle__unnamed__unnamed_0;

typedef struct goHandle__unnamed__unnamed_0_ goHandle__unnamed__unnamed_0_, *PgoHandle__unnamed__unnamed_0_;

struct goHandle__unnamed__unnamed_0 {
    UINT32 m_uType:3;
    INT32 m_iNextAvailableIdx:29;
};

struct goHandle__unnamed__unnamed_0_ {
    UINT32 m_uDummyType:3;
    UINT32 m_uTimeStamp:20;
    UINT32 m_uIndex:9;
};

union goHandle__unnamed_0 {
    UINT32 m_uAll;
    struct goHandle__unnamed__unnamed_0 field1;
    struct goHandle__unnamed__unnamed_0_ field2;
};

struct goHandle {
    union goHandle__unnamed_0 field0_0x0;
};

struct BonePoison {
    struct goHandle m_hCreature;
    FLOAT m_fTimeToExplotion;
};
// 
// typedef struct BOOLInterpolator BOOLInterpolator, *PBOOLInterpolator;
// 
// struct BOOLInterpolator {
//     undefined field0_0x0;
// };
// 
// typedef struct BoomMinimiser BoomMinimiser, *PBoomMinimiser;
// 
// struct BoomMinimiser {
//     struct VUVec4 fTarget;
//     struct VUVec4 fDolly;
// };
// 
// typedef struct BoostSlamData BoostSlamData, *PBoostSlamData;
// 
// typedef struct goPegasusAI goPegasusAI, *PgoPegasusAI;
// 
// typedef struct tActionPegasusRam tActionPegasusRam, *PtActionPegasusRam;
// 
// typedef struct goCreature goCreature, *PgoCreature;
// 
// typedef struct goPlayerControls goPlayerControls, *PgoPlayerControls;
// 
// typedef struct goPegasusAI__vtable goPegasusAI__vtable, *PgoPegasusAI__vtable;
// 
// typedef struct wypClient wypClient, *PwypClient;
// 
// typedef struct tDecisionTree tDecisionTree, *PtDecisionTree;
// 
// typedef struct goAIWorldRep goAIWorldRep, *PgoAIWorldRep;
// 
// typedef struct tCreature tCreature, *PtCreature;
// 
// typedef struct tPhysicalDamping tPhysicalDamping, *PtPhysicalDamping;
// 
// typedef struct Emitter Emitter, *PEmitter;
// 
// typedef struct renShadowClient renShadowClient, *PrenShadowClient;
// 
// typedef struct goCreatureController goCreatureController, *PgoCreatureController;
// 
// typedef struct tMoveSystem tMoveSystem, *PtMoveSystem;
// 
// typedef struct tFightSystem tFightSystem, *PtFightSystem;
// 
// typedef struct CShield CShield, *PCShield;
// 
// typedef struct tPiggyBank__1_16335 tPiggyBank__1_16335, *PtPiggyBank__1_16335;
// 
// typedef struct goPegasusAIVehicle goPegasusAIVehicle, *PgoPegasusAIVehicle;
// 
// typedef struct goPegasusAIDamage goPegasusAIDamage, *PgoPegasusAIDamage;
// 
// typedef struct tAnimSystem tAnimSystem, *PtAnimSystem;
// 
// typedef struct tEffectSystem tEffectSystem, *PtEffectSystem;
// 
// typedef struct tPegasusAI tPegasusAI, *PtPegasusAI;
// 
// typedef struct goCreature__vtable goCreature__vtable, *PgoCreature__vtable;
// 
// typedef struct tCollisionBox tCollisionBox, *PtCollisionBox;
// 
// typedef struct sysPad sysPad, *PsysPad;
// 
// typedef struct sysControlSystemParm sysControlSystemParm, *PsysControlSystemParm;
// 
// typedef struct goPlayerControls__vtable goPlayerControls__vtable, *PgoPlayerControls__vtable;
// 
// typedef struct wypClientLoadData wypClientLoadData, *PwypClientLoadData;
// 
// typedef struct Waypoint_t Waypoint_t, *PWaypoint_t;
// 
// typedef struct Link_t Link_t, *PLink_t;
// 
// typedef struct LinkRef_t LinkRef_t, *PLinkRef_t;
// 
// typedef struct WypGroup_t WypGroup_t, *PWypGroup_t;
// 
// typedef struct tDTree tDTree, *PtDTree;
// 
// typedef struct tSlotActionBase tSlotActionBase, *PtSlotActionBase;
// 
// typedef struct tDTreeSlotNode tDTreeSlotNode, *PtDTreeSlotNode;
// 
// typedef struct tSoldierBase tSoldierBase, *PtSoldierBase;
// 
// typedef struct tAIBase tAIBase, *PtAIBase;
// 
// typedef struct tCombat tCombat, *PtCombat;
// 
// typedef struct tShield tShield, *PtShield;
// 
// typedef struct tPiggyBank__1_7727 tPiggyBank__1_7727, *PtPiggyBank__1_7727;
// 
// typedef struct tMove__1_6354 tMove__1_6354, *PtMove__1_6354;
// 
// typedef struct tBranch tBranch, *PtBranch;
// 
// typedef struct tNavBankBase tNavBankBase, *PtNavBankBase;
// 
// typedef struct stdTList<sound::Handle> stdTList<sound::Handle>, *PstdTList<sound::Handle>;
// 
// typedef struct nurbsCurve nurbsCurve, *PnurbsCurve;
// 
// typedef struct EEPrimInfo EEPrimInfo, *PEEPrimInfo;
// 
// typedef struct goCreatureController__vtable goCreatureController__vtable, *PgoCreatureController__vtable;
// 
// typedef struct tSynchBranch tSynchBranch, *PtSynchBranch;
// 
// typedef struct stdCList<tMove *,stdAllocator<stdCListNodeBase> > stdCList<tMove *,stdAllocator<stdCListNodeBase> >, *PstdCList<tMove *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct tMove__1_16624 tMove__1_16624, *PtMove__1_16624;
// 
// typedef struct stdQue<tBranchQueEntry> stdQue<tBranchQueEntry>, *PstdQue<tBranchQueEntry>;
// 
typedef struct stdQue tBranchQue;
// 
// typedef struct tBranchQueEntry tBranchQueEntry, *PtBranchQueEntry;
// 
// typedef struct tValidityDisk tValidityDisk, *PtValidityDisk;
// 
// typedef struct Fight Fight, *PFight;
// 
// typedef struct tFightSystem__vtable tFightSystem__vtable, *PtFightSystem__vtable;
// 
// typedef struct CShield__vtable CShield__vtable, *PCShield__vtable;
// 
// typedef struct tPegasusLockOnData tPegasusLockOnData, *PtPegasusLockOnData;
// 
// typedef struct tPegasusFlightData tPegasusFlightData, *PtPegasusFlightData;
// 
// typedef struct tAnimSystem__vtable tAnimSystem__vtable, *PtAnimSystem__vtable;
// 
// typedef struct tStaticAnimDescEntry tStaticAnimDescEntry, *PtStaticAnimDescEntry;
// 
// typedef struct stdCList<anmClient *,stdAllocator<stdCListNodeBase> > stdCList<anmClient *,stdAllocator<stdCListNodeBase> >, *PstdCList<anmClient *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct stdStack<signed char,4> stdStack<signed char,4>, *PstdStack<signed char,4>;
// 
typedef struct stdStack tNavBankStack;
// 
// typedef struct tRipplesEffect tRipplesEffect, *PtRipplesEffect;
// 
// typedef struct tEffectSystem__vtable tEffectSystem__vtable, *PtEffectSystem__vtable;
// 
// typedef struct tPegasusSwarmData tPegasusSwarmData, *PtPegasusSwarmData;
// 
// typedef enum EPadType {
//     kNone=0,
//     kDigital=1,
//     kJoystick=2,
//     kMouse=3,
//     kNeGcon=4,
//     kAnalogue=5,
//     kDualShock=6,
//     kDualShock2=7,
//     kMaxPadType=8
// } EPadType;
// 
// typedef struct ControlStick ControlStick, *PControlStick;
// 
// typedef struct sysAnalogueControlMappingParm sysAnalogueControlMappingParm, *PsysAnalogueControlMappingParm;
// 
// typedef struct sysDigitalControlMappingParm sysDigitalControlMappingParm, *PsysDigitalControlMappingParm;
// 
// typedef struct sysControlParm sysControlParm, *PsysControlParm;
// 
// typedef INT16 WypIndex_t;
// 
// typedef struct tDTreeBaseNode tDTreeBaseNode, *PtDTreeBaseNode;
// 
// typedef struct tDecision tDecision, *PtDecision;
// 
// typedef struct tSlotBlock tSlotBlock, *PtSlotBlock;
// 
// typedef struct tAttachments tAttachments, *PtAttachments;
// 
// typedef struct tCameraTarget tCameraTarget, *PtCameraTarget;
// 
// typedef struct tCircle tCircle, *PtCircle;
// 
// typedef struct tCircleThreshold tCircleThreshold, *PtCircleThreshold;
// 
// typedef struct tShard tShard, *PtShard;
// 
// typedef struct tOrbEntry tOrbEntry, *PtOrbEntry;
// 
// typedef struct tActionBase tActionBase, *PtActionBase;
// 
// typedef struct tMaterialFX tMaterialFX, *PtMaterialFX;
// 
// typedef struct renEEPrim renEEPrim, *PrenEEPrim;
// 
// typedef struct renEEPrimParm renEEPrimParm, *PrenEEPrimParm;
// 
// typedef struct tActionHitPause tActionHitPause, *PtActionHitPause;
// 
// typedef struct tFlags<256> tFlags<256>, *PtFlags<256>;
// 
// typedef struct tFlags<128> tFlags<128>, *PtFlags<128>;
// 
// typedef struct tCollisionInfo tCollisionInfo, *PtCollisionInfo;
// 
// typedef struct tValidityDisk__vtable tValidityDisk__vtable, *PtValidityDisk__vtable;
// 
// typedef struct tOverrideAnim tOverrideAnim, *PtOverrideAnim;
// 
// typedef struct goCreatureCollision goCreatureCollision, *PgoCreatureCollision;
// 
// typedef enum sysDigitalControlType {
//     kDCTNormal=0,
//     kDCTToggle=1
// } sysDigitalControlType;
// 
// typedef struct tHand__1_7658 tHand__1_7658, *PtHand__1_7658;
// 
// typedef struct tVector3__1_5581 tVector3__1_5581, *PtVector3__1_5581;
// 
// typedef struct tTween tTween, *PtTween;
// 
// typedef struct tOrb tOrb, *PtOrb;
// 
// typedef struct tCameraShake tCameraShake, *PtCameraShake;
// 
// typedef struct renTriParm renTriParm, *PrenTriParm;
// 
// typedef struct tPrebuiltDMAInstr tPrebuiltDMAInstr, *PtPrebuiltDMAInstr;
// 
// typedef struct tEEChunkDescriptor tEEChunkDescriptor, *PtEEChunkDescriptor;
// 
// typedef struct goCreatureCollision__vtable goCreatureCollision__vtable, *PgoCreatureCollision__vtable;
// 
// typedef struct renTriPrimFlags renTriPrimFlags, *PrenTriPrimFlags;
// 
// typedef struct renChunkTags renChunkTags, *PrenChunkTags;
// 
// struct stdCList<anmClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct tDTreeBaseNode {
//     UINT8 m_Type;
// };
// 
struct tBranchQueEntry {
    struct tBranch *m_pBranch;
    FLOAT m_fMustComplete;
};

// struct tSlotBlock {
//     UINT8 m_Type; /* Inherited from tSlotBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Chance; /* Inherited from tSlotBase */
//     struct tDecision **m_PassDecisions; /* Inherited from tSlotBase */
//     struct tBranch *m_Move;
// };
// 
// struct stdCList<tMove *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct goAIWorldRep {
//     float m_fSphere[4];
//     struct wypClient *m_pWptClient;
//     INT32 m_iRadiusOffset;
// };
// 
struct goCreatureController__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type goCreatureController;
    struct __vtbl_ptr_type GetDamageMultiplier;
    struct __vtbl_ptr_type IsCreatureDead;
    struct __vtbl_ptr_type QuickBlock;
};

struct tSoldierBase {
    char *m_GOName;
    FLOAT m_PlaybackSpeedScale;
    FLOAT m_TweenTimeScale;
    UINT8 m_SoldierType;
    undefined field4_0xd;
    UINT16 m_Flags;
    struct tAttachments **m_AttachmentList;
    struct tCameraTarget *m_Targets;
    FLOAT m_Scale;
    FLOAT m_Mass;
    FLOAT m_Friction;
    FLOAT m_Radius;
    FLOAT m_Height;
    FLOAT m_Buoyancy;
    FLOAT m_StepHeight;
    FLOAT m_StepHeightDown;
    FLOAT m_TerminalVel;
    FLOAT m_HighFallVel;
    FLOAT m_InAirAcc;
    FLOAT m_DeathFadeToBlackTime;
    FLOAT m_DeathFadeBlackToGoneTime;
    char *m_DeathEffect;
    FLOAT m_FreezeResistance;
    struct tBranch *m_FreezeMove;
    char *m_FrozenGOName;
    char *m_FrozenFXName;
    char *m_HeadTrackJoint;
    FLOAT m_HeadTrackJointOrientX;
    FLOAT m_HeadTrackMaxAngle;
};

struct tValidityDisk__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tValidityDisk;
};
// 
// struct tShard {
//     UINT8 m_Flags;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_GOName;
//     UINT32 m_FXHide;
//     UINT32 m_FXShow;
//     INT32 m_ContextFilter;
//     INT32 m_Context;
//     FLOAT m_HitResistance;
//     FLOAT m_ReturnDelay;
//     FLOAT m_Size;
//     FLOAT m_Speed;
//     FLOAT m_Precision;
//     FLOAT m_Inertia;
//     FLOAT m_InertiaRetainHi;
//     FLOAT m_HoveringSpeed;
//     FLOAT m_HoveringSpeedRange;
//     FLOAT m_HoveringInertia;
//     FLOAT m_RoamingSpeed;
//     FLOAT m_RoamingHeight;
//     FLOAT m_RoamingHeightRange;
// };
// 
// struct tShield {
//     UINT16 m_Flags;
//     undefined field1_0x2;
//     undefined field2_0x3;
//     FLOAT m_Duration;
//     FLOAT m_Radius;
//     FLOAT m_HitResistance;
//     INT32 m_ContextFilter;
//     INT32 m_TargetFilter;
//     UINT32 m_FXReleaseShard;
//     UINT32 m_FXAbsorbShard;
//     UINT32 m_FXShieldHit;
//     UINT32 m_SoundFXReleaseShard;
//     UINT32 m_SoundFXAbsorbShard;
//     UINT32 m_SoundFXShieldHit;
//     INT8 m_NbShards;
//     INT8 m_NbMinShards;
//     INT8 m_NbFreedShardsOnHit;
//     undefined field17_0x33;
//     FLOAT m_ReleasedShardRadius;
//     FLOAT m_ShardTargetingRadius;
//     FLOAT m_ShardRoamingRadiusMin;
//     FLOAT m_ShardRoamingRadiusMax;
//     struct tShard m_ShardInfo;
// };
// 
// struct Link_t {
//     WypIndex_t nStartIndex;
//     WypIndex_t nEndIndex;
// };
// 
// struct tOrbEntry {
//     struct tOrb *m_Orb;
//     INT8 m_Cnt;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
// };
// 
// struct LinkRef_t {
//     INT16 nWypIndex;
//     INT16 nLinkIndex;
// };
// 
// struct goPegasusAIVehicle {
//     struct VUVec4 m_vTrackOffset;
//     struct VUVec4 m_vImpulseVel;
//     struct goPegasusAI *m_pPegAI;
//     struct tPegasusLockOnData *m_pLockOnTwk;
//     struct tPegasusFlightData *m_pFlightTwk;
//     FLOAT m_LeadTime;
//     FLOAT m_mass;
//     FLOAT m_radius;
//     FLOAT m_speed;
//     FLOAT m_maxForce;
//     FLOAT m_maxSpeed;
//     FLOAT m_requestedSpeed;
//     FLOAT m_fCollisionFactor;
//     FLOAT m_fAlignmentFactor;
//     FLOAT m_fSeparationFactor;
//     undefined field15_0x54;
//     undefined field16_0x55;
//     undefined field17_0x56;
//     undefined field18_0x57;
//     undefined field19_0x58;
//     undefined field20_0x59;
//     undefined field21_0x5a;
//     undefined field22_0x5b;
//     undefined field23_0x5c;
//     undefined field24_0x5d;
//     undefined field25_0x5e;
//     undefined field26_0x5f;
// };
// 
struct tPrebuiltDMAInstr {
    UINT32 m_uSTCYCL0;
    UINT32 m_uSTCYCL1;
    unsigned int m_uGifTag[4];
    unsigned int m_auUNPACKDataType[4];
};

struct renEEPrim {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct VUVec4 _vTint; /* Inherited from renGROB */
    struct renGROBJFlags _GROBJFlags; /* Inherited from renGROB */
    renGROBMatList *_pMaterialBuffer; /* Inherited from renGROB */
    UINT32 _uLayerID; /* Inherited from renGROB */
    UINT32 _uViewID; /* Inherited from renGROB */
    undefined field149_0xdc;
    undefined field150_0xdd;
    undefined field151_0xde;
    undefined field152_0xdf;
    struct VUVec4 _vBoundingSphere;
    struct renTriParm *_pTriParm[2];
    struct tPrebuiltDMAInstr _PrebuiltDMAInstr;
    UINT _NReg;
    UINT _VU1VertexAddr;
    UINT _VU1ColourAddr;
    UINT _VU1NormalAddr;
    UINT _VU1TexCoordAddr;
    UINT _uDMABase;
    UINT _uDMABufferByteSize;
    UINT *_pDMABuffer;
    struct tEEChunkDescriptor *_pChunkDescriptors;
    UINT8 _uFreeChunkDescriptor;
    INT8 _iMaterialStage;
    INT8 _iLastUpdatedBuffer;
    INT8 _iLastShownBuffer;
    undefined field169_0x148;
    undefined field170_0x149;
    undefined field171_0x14a;
    undefined field172_0x14b;
    undefined field173_0x14c;
    undefined field174_0x14d;
    undefined field175_0x14e;
    undefined field176_0x14f;
};
// 
// struct tDTreeSlotNode {
//     UINT8 m_Type; /* Inherited from tDTreeBaseNode */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tSlotActionBase **m_ActionList;
//     struct tSlotBlock **m_BlockList;
// };
// 
// struct goPegasusAIDamage {
//     struct VUVec4 m_vDamageDir;
//     FLOAT m_fDamagePoints;
//     FLOAT m_fNoDamageTimer;
//     UINT32 m_uDamageMaterialFX;
//     undefined field4_0x1c;
//     undefined field5_0x1d;
//     undefined field6_0x1e;
//     undefined field7_0x1f;
// };
// 
// struct sysDigitalControlMappingParm {
//     unsigned char fRawPadIn;
//     unsigned char fControlOut;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     enum sysDigitalControlType fType;
// };
// 
// struct tActionHitPause {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Duration;
// };
// 
// struct tSlotActionBase {
//     UINT8 m_Type; /* Inherited from tSlotBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Chance; /* Inherited from tSlotBase */
//     struct tDecision **m_PassDecisions; /* Inherited from tSlotBase */
//     struct FLOAT16 m_MinRange;
//     struct FLOAT16 m_MaxRange;
//     INT16 m_FightAggression;
//     INT16 m_ProjectileAggression;
//     struct FLOAT16 m_RecoveryTime;
//     struct FLOAT16 m_GlobalMoveRecoveryTime;
// };
// 
struct sysAnalogueControlMappingParm {
    unsigned char fRawPadIn;
    unsigned char fControlOut;
    unsigned char fInBase;
    unsigned char fInRange;
    float fOutBase;
    float fOutRange;
    float *fRemapper;
};

struct ControlStick {
    float fDampedX;
    float fDampedY;
    float fAngle;
    float fDistance;
    float fNormalisedX;
    float fNormalisedY;
    float fCorrectedX;
    float fCorrectedY;
};

struct tCircleThreshold {
    FLOAT m_Threshold;
    INT8 m_CircleID;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
};

struct goCreature__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type goCreature;
    struct __vtbl_ptr_type Update;
    struct __vtbl_ptr_type Reset;
    struct __vtbl_ptr_type GetControlNormal;
    struct __vtbl_ptr_type Warp;
    struct __vtbl_ptr_type ClearVelocity;
    struct __vtbl_ptr_type GetRope;
    struct __vtbl_ptr_type AddVarsToVFS;
    struct __vtbl_ptr_type RemoveWadContext;
    struct __vtbl_ptr_type SubtractHitPoints;
    struct __vtbl_ptr_type SetImpulse;
    struct __vtbl_ptr_type GetCreatureControls;
    struct __vtbl_ptr_type GetAnimSystem;
    struct __vtbl_ptr_type GetAttachmentSystem;
    struct __vtbl_ptr_type GetHandleSystem;
    struct __vtbl_ptr_type GetEffectSystem;
    struct __vtbl_ptr_type Disable;
    struct __vtbl_ptr_type Enable;
    struct __vtbl_ptr_type SetCircleSaveData;
    struct __vtbl_ptr_type CanDoCombatMove;
    struct __vtbl_ptr_type CanAutoAim;
    struct __vtbl_ptr_type SetDamageInfo;
    struct __vtbl_ptr_type GetMass;
    struct __vtbl_ptr_type GetHeight;
    struct __vtbl_ptr_type GetRadius;
    struct __vtbl_ptr_type GetFreezeTimeLeft;
    struct __vtbl_ptr_type GetFrozenRatio;
    struct __vtbl_ptr_type IsFrozen;
    struct __vtbl_ptr_type CreateFrozenIncarnation;
    struct __vtbl_ptr_type GetGOName;
    struct __vtbl_ptr_type PushableWeight;
    struct __vtbl_ptr_type GetTargetingPos;
    struct __vtbl_ptr_type DerivedTweaks;
    struct __vtbl_ptr_type GetNavBranch;
    struct __vtbl_ptr_type GetNavBranch_;
    struct __vtbl_ptr_type GetFirstNavBankMotionP;
    struct __vtbl_ptr_type FindSound;
};

struct tCameraShake {
    INT32 m_ID; /* Inherited from tGameEffect */
    INT32 m_Type; /* Inherited from tGameEffect */
    FLOAT m_Duration; /* Inherited from tGameEffect */
    FLOAT m_PitchAmplitude;
    FLOAT m_PitchFrequency;
    FLOAT m_YawAmplitude;
    FLOAT m_YawFrequency;
    FLOAT m_PosAmplitude;
    FLOAT m_PosFrequency;
};

struct tEffectSystem {
    struct tRipplesEffect *m_pRipples;
    UINT32 m_uLastFrameMotionStateFlags;
    UINT32 m_uLastFrameSoldierModeFlags;
    UINT32 m_uLastFrameSoldierInfoFlags;
    FLOAT m_fTimer;
    UINT32 m_uFlags;
    struct tEffectSystem__vtable *__vtable;
};
// 
struct tAttachments {
    struct tHand__1_7658 *m_Left;
    struct tHand__1_7658 *m_Right;
};
// 
// struct stdTList<sound::Handle> {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct Emitter {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    struct stdTList fHandles;
    float fZonedFalloff;
    float fZonedVolume;
    float fZonedModulate;
    struct ClientParm__1_9257 *fSounds[4];
    undefined field88_0x94;
    undefined field89_0x95;
    undefined field90_0x96;
    undefined field91_0x97;
    undefined field92_0x98;
    undefined field93_0x99;
    undefined field94_0x9a;
    undefined field95_0x9b;
    undefined field96_0x9c;
    undefined field97_0x9d;
    undefined field98_0x9e;
    undefined field99_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field101_0xa4;
    undefined field102_0xa5;
    undefined field103_0xa6;
    undefined field104_0xa7;
    undefined field105_0xa8;
    undefined field106_0xa9;
    undefined field107_0xaa;
    undefined field108_0xab;
    undefined field109_0xac;
    undefined field110_0xad;
    undefined field111_0xae;
    undefined field112_0xaf;
    undefined field113_0xb0;
    undefined field114_0xb1;
    undefined field115_0xb2;
    undefined field116_0xb3;
    undefined field117_0xb4;
    undefined field118_0xb5;
    undefined field119_0xb6;
    undefined field120_0xb7;
    unsigned char fType;
    unsigned char fReverbPreset;
    short unsigned int fFlags;
    float fInner;
    float fOuter;
    struct nurbsCurve *fCurve;
    float fCurveTime;
    short int fPlaying;
    char fHandlesPlaying;
    char fPaused;
    UINT32 fCheckSum;
    struct Pool__1_336 *fHandlePool;
    undefined field133_0xd8;
    undefined field134_0xd9;
    undefined field135_0xda;
    undefined field136_0xdb;
    undefined field137_0xdc;
    undefined field138_0xdd;
    undefined field139_0xde;
    undefined field140_0xdf;
};

struct CShield {
    UINT32 m_dwFlags;
    FLOAT m_fDamageR;
    INT32 m_iContext;
    struct CShield__vtable *__vtable;
};

struct EEPrimInfo {
    struct VUVec4 m_EEPrimBoundingSphere;
    struct VUVec4 m_vLightPos;
    struct renEEPrim *m_pEEPrim;
    struct renEEPrimParm *m_pEEPrimParm;
    INT32 m_nEEPrimVertsPerChunk;
    INT32 m_nEEPrimChunks;
    INT32 m_nEEPrimUsedVertsInChunk;
    INT32 m_nEEPrimUsedChunks;
    BOOL m_bEEPrimUpdated;
    FLOAT m_vShadowFactor;
    BOOL m_bHasLight;
    undefined field11_0x44;
    undefined field12_0x45;
    undefined field13_0x46;
    undefined field14_0x47;
    undefined field15_0x48;
    undefined field16_0x49;
    undefined field17_0x4a;
    undefined field18_0x4b;
    undefined field19_0x4c;
    undefined field20_0x4d;
    undefined field21_0x4e;
    undefined field22_0x4f;
};

struct goCreatureController {
    struct goCreature *m_pCreature;
    struct goPlayerControls *m_pControls;
    struct goCreatureController__vtable *__vtable;
};

struct tBranch {
    struct tMove__1_6354 *m_Move;
    struct tMaterialFX *m_MaterialFX;
    UINT32 m_Flags;
    UINT32 m_IgnoreFlags;
    struct FLOAT16 m_On;
    struct FLOAT16 m_Off;
    struct FLOAT16 m_StartPos;
    INT16 m_TargetHealthMin;
    INT16 m_TargetHealthMax;
    INT16 m_HealthMin;
    INT16 m_HealthMax;
    INT8 m_EnemyID;
    INT8 m_EnemyContext;
    UINT8 m_Event;
    UINT8 m_EventMod;
    UINT8 m_Joystick;
    UINT8 m_Item;
    INT8 m_WeaponLevelMin;
    undefined field18_0x25;
    undefined field19_0x26;
    undefined field20_0x27;
};

struct nurbsCurve {
    int fNumSpans;
    int fFlags;
    struct VUMat4 *fSpanMatrices;
    float *fSpanEndKnots;
};
// 
// struct wypClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     struct wypClientLoadData *_pWypClientLoadData;
//     struct Waypoint_t *_pWaypoints;
//     struct Link_t *_pLinks;
//     struct LinkRef_t *_pLinkRefs;
//     void *_pWypAttributes;
//     struct AtrEntry *_pWypAtrEntries;
//     void *_pLinkAttributes;
//     struct AtrEntry *_pLinkAtrEntries;
//     struct WypGroup_t *_pGroups;
//     UINT32 _dsCheckSum;
// };
// 
struct tFightSystem__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tFightSystem;
};

// struct tDecisionTree {
//     struct tDTree *m_pTweaks;
//     struct tSlotActionBase *m_pCurAction;
//     struct tDTreeSlotNode *m_pLatestSlot;
// };
// 
struct sysControlParm {
    float fMin;
    float fMax;
    float fThreshold;
};

struct tValidityDisk {
    struct VUMat4 m_mLWMatrix;
    unsigned int m_iDiskOccupiedBits[4];
    unsigned int m_iDiskInvalidBits[4];
    unsigned int m_iDiskPropInvalidBits[4];
    UINT32 m_iLastFullUpdateFrame;
    struct tValidityDisk__vtable *__vtable;
    undefined field6_0x78;
    undefined field7_0x79;
    undefined field8_0x7a;
    undefined field9_0x7b;
    undefined field10_0x7c;
    undefined field11_0x7d;
    undefined field12_0x7e;
    undefined field13_0x7f;
};
// 
// struct goPegasusAI__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goPegasusAI;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type Recycle;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
// };
// 
// struct renEEPrimParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT _uFlags;
//     UINT _uRegs;
//     UINT _uPrim;
//     struct stdArrayW<const renMaterial *> _materials;
//     UINT _uVertexByteSize;
//     UINT _uNumVertsPerChunk;
//     UINT _uNumChunks;
// };
// 
// struct tCollisionInfo {
//     struct goHandle m_hHandle;
//     struct tCollision *m_pColl;
//     INT32 m_iPartition;
// };
// 
struct tSynchBranch {
    struct tMove__1_6354 *m_Move; /* Inherited from tBranch */
    struct tMaterialFX *m_MaterialFX; /* Inherited from tBranch */
    UINT32 m_Flags; /* Inherited from tBranch */
    UINT32 m_IgnoreFlags; /* Inherited from tBranch */
    struct FLOAT16 m_On; /* Inherited from tBranch */
    struct FLOAT16 m_Off; /* Inherited from tBranch */
    struct FLOAT16 m_StartPos; /* Inherited from tBranch */
    INT16 m_TargetHealthMin; /* Inherited from tBranch */
    INT16 m_TargetHealthMax; /* Inherited from tBranch */
    INT16 m_HealthMin; /* Inherited from tBranch */
    INT16 m_HealthMax; /* Inherited from tBranch */
    INT8 m_EnemyID; /* Inherited from tBranch */
    INT8 m_EnemyContext; /* Inherited from tBranch */
    UINT8 m_Event; /* Inherited from tBranch */
    UINT8 m_EventMod; /* Inherited from tBranch */
    UINT8 m_Joystick; /* Inherited from tBranch */
    UINT8 m_Item; /* Inherited from tBranch */
    INT8 m_WeaponLevelMin; /* Inherited from tBranch */
    undefined field18_0x25;
    undefined field19_0x26;
    undefined field20_0x27;
};

struct renTriPrimFlags {
    UINT32 _Flags;
    UINT32 _FlagsMask;
};

struct renChunkTags {
    UINT32 _uCmd0;
    UINT32 _uCmd1;
    UINT32 _uCmd2;
    UINT32 _uCmd3;
};

struct renTriParm {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT32 _uNumDMAChunks; /* Inherited from renPrimParm */
    UINT16 _uMaterialID; /* Inherited from renPrimParm */
    UINT16 _uNumTransforms; /* Inherited from renPrimParm */
    UINT32 _uNumInstances; /* Inherited from renPrimParm */
    struct renTriPrimFlags _TriPrimFlags;
    UINT8 _uNumChunkSets;
    UINT8 _uChunksPerVU1Buff;
    UINT16 _uPAD;
    UINT16 _uNumStrips;
    UINT16 _uNumVertices;
    struct renChunkTags _ChunkTags[1];
};

struct tMove__1_6354 {
    struct FLOAT16 m_PlaybackSpeed;
    struct FLOAT16 m_TweenTime;
    UINT8 m_Flags;
    UINT8 m_PhysicsMode;
    undefined field4_0x6;
    undefined field5_0x7;
    UINT32 m_AnimName;
    UINT32 m_MoveName;
    struct tBranch **m_BranchList;
    struct tCollision **m_CollisionList;
    struct tActionBase **m_ActionList;
};

struct tActionBase {
    UINT8 m_Type;
    UINT8 m_Flags;
    UINT8 m_Condition;
    INT8 m_WeaponLevelMin;
    struct FLOAT16 m_On;
    struct FLOAT16 m_Off;
};

struct stdQue {
    struct tBranchQueEntry *m_pQue;
    UINT8 m_uSize;
    UINT8 m_uReadIdx;
    UINT8 m_uWriteIdx;
    UINT8 m_bMemAllocated;
};

typedef struct tMoveSystem {
    struct VUVec4 m_vCSMMovement;
    struct VUVec4 m_vCollisionResponse;
    struct VUVec4 m_vTargetPos;
    struct goCreature *m_pCreature;
    FLOAT m_fVelocityScale;
    FLOAT m_fVelocityScaleTarget;
    FLOAT m_fVelocityScaleTimeLeft;
    struct tCreature *m_pTweaks;
    struct tCombat *m_pMoveTweaks;
    struct goHandle m_hTarget;
    struct goHandle m_hSynch;
    FLOAT m_fDamageTaken;
    FLOAT m_fTimer;
    FLOAT m_fTargetingDelay;
    FLOAT m_fTargetingDelayDist;
    FLOAT m_fTargetingDelayTimer;
    FLOAT m_fSinToTarget;
    FLOAT m_fAutoAimDamping;
    FLOAT m_fAutoAimDampingTarget;
    FLOAT m_fSynchDamping;
    UINT32 m_uSynchStartFrame;
    struct tSynchBranch m_SynchBranch;
    struct stdCList m_RefCntScriptList;
    struct stdCList m_MoveList;
    struct tMove__1_16624 *m_pPrimaryMove;
    tBranchQue m_BranchQue;
    struct tBranchQueEntry m_aBranchQueMem[4];
    undefined field27_0xdc;
    undefined field28_0xdd;
    undefined field29_0xde;
    undefined field30_0xdf;
} tMoveSystem;

struct tCombat {
    FLOAT m_HitPoints;
    FLOAT m_MaxHitPoints;
    FLOAT m_DamageMultiplier;
    INT8 m_ID;
    INT8 m_Context;
    undefined field5_0xe;
    undefined field6_0xf;
    UINT32 m_BlockHitFlags;
    char *m_TargetJoint;
    FLOAT m_TargetWeight;
    char *m_ReticleJoint;
    FLOAT m_ReticleScale;
    FLOAT m_ReticleYOffset;
    struct tCircle **m_CircleList;
    struct tCircleThreshold **m_CircleThresholdList;
    FLOAT m_ImpulseAwayScale;
    FLOAT m_ImpulseUpScale;
    FLOAT m_ImpulseRightScale;
    FLOAT m_AutoAimDampingDefault;
    FLOAT m_AutoAimDampingFast;
    FLOAT m_AutoAimDampingMedium;
    FLOAT m_AutoAimDampingSlow;
    FLOAT m_SynchDampingDefault;
    FLOAT m_SynchDampingFast;
    FLOAT m_SynchDampingMedium;
    FLOAT m_SynchDampingSlow;
    UINT32 m_Flags;
};

struct tCollisionBox {
    struct VUVec4 m_vSize;
    struct VUVec4 m_vOffset;
    FLOAT m_fTopOffsetY;
    FLOAT m_fStepDown;
    undefined field4_0x28;
    undefined field5_0x29;
    undefined field6_0x2a;
    undefined field7_0x2b;
    undefined field8_0x2c;
    undefined field9_0x2d;
    undefined field10_0x2e;
    undefined field11_0x2f;
};

struct tPiggyBank__1_16335 {
    INT8 m_iNumOrbEntries;
    signed char m_aOrbsLeft[7];
    FLOAT m_fTimeSinceLastOrb;
};

struct tPhysicalDamping {
    FLOAT m_fPhysicalDirDamping;
    FLOAT m_fPhysicalDirDampingMult;
    FLOAT m_fPhysicalPosDamping;
    FLOAT m_fPhysicalPosDampingMult;
    INT32 m_iFlags;
};

struct goCreatureCollision {
    struct goGameObject *m_pGameObject; /* Inherited from goBase */
    struct goCreatureCollision__vtable *__vtable; /* Inherited from goBase */
    struct tCreature *m_pCTweaks; /* Inherited from goCreature */
    struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
    struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
    struct VUMat4 m_mMotion; /* Inherited from goCreature */
    struct VUMat4 m_mPhysical; /* Inherited from goCreature */
    struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
    struct VUVec4 m_vVelocity; /* Inherited from goCreature */
    struct VUVec4 m_vImpulse; /* Inherited from goCreature */
    struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
    struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
    struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
    struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
    FLOAT m_fMaxSpeed; /* Inherited from goCreature */
    FLOAT m_fScale; /* Inherited from goCreature */
    FLOAT m_fTimeScale; /* Inherited from goCreature */
    UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
    UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
    FLOAT m_fHitPoints; /* Inherited from goCreature */
    FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
    FLOAT m_fFreezeAmount; /* Inherited from goCreature */
    struct goHandle m_hFreezeSource; /* Inherited from goCreature */
    FLOAT m_fRampHitPoints; /* Inherited from goCreature */
    struct goCreature *m_pChildCreature; /* Inherited from goCreature */
    struct goCreature *m_pParentCreature; /* Inherited from goCreature */
    INT32 m_iAttachedToJointID; /* Inherited from goCreature */
    UINT32 m_uAttachmentType; /* Inherited from goCreature */
    FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
    FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
    UINT32 m_CameraTargets; /* Inherited from goCreature */
    struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
    struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
    struct renModel *m_pModel; /* Inherited from goCreature */
    struct renShadowClient *m_pShadow; /* Inherited from goCreature */
    struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
    struct goHandle m_hMountCreature; /* Inherited from goCreature */
    struct goHandle m_hRiderCreature; /* Inherited from goCreature */
    struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
    struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
    struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
    struct CShield *m_pShield; /* Inherited from goCreature */
    struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
    struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
    FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
    undefined field45_0x1e8;
    undefined field46_0x1e9;
    undefined field47_0x1ea;
    undefined field48_0x1eb;
    undefined field49_0x1ec;
    undefined field50_0x1ed;
    undefined field51_0x1ee;
    undefined field52_0x1ef;
    struct VUMat4 m_mMovingPlatform;
    struct VUVec4 m_vMovingPlatformOffset;
    struct VUVec4 m_vGroundNormal;
    struct VUVec4 m_vWallNormal;
    FLOAT m_fWaterLevel;
    struct AtrValue *m_pGroundATR;
    struct AtrValue *m_pWallATR;
    struct AtrValue *m_pWaterATR;
    struct wadContext *m_pGroundWC;
    struct wadContext *m_pWallWC;
    struct wadContext *m_pWaterWC;
    struct goGameObject *m_pGroundGO;
    UINT32 m_uGroundGOJointID;
    UINT32 m_uNoCollisionType;
    UINT32 m_uIgnoreSheetBits;
    INT16 m_iHeadTrackJointIdx;
    INT16 m_wDummy;
    FLOAT m_fHeadTrackJointOrientX;
    FLOAT m_fHeadTrackMaxAngle;
    FLOAT m_fHeadTrackAmount;
    FLOAT m_fHeadTrackTargetAmount;
};

struct tOverrideAnim {
    UINT8 m_uFrom;
    UINT8 m_uTo;
};

struct tVector3__1_5581 {
    struct FLOAT16 m_X;
    struct FLOAT16 m_Y;
    struct FLOAT16 m_Z;
};

struct tTween {
    FLOAT m_Time;
    FLOAT m_EaseIn;
    FLOAT m_EaseOut;
};

struct tCameraTarget {
    char *m_Joint;
    struct tVector3__1_5581 m_Offset;
    undefined field2_0xa;
    undefined field3_0xb;
    FLOAT m_VelocityScaleH;
    FLOAT m_VelocityScaleV;
    FLOAT m_VelocityMax;
    FLOAT m_CapsuleRatio;
    FLOAT m_BaseWeight;
    FLOAT m_Radius;
    FLOAT m_DampingRadius;
    INT16 m_Priority;
    UINT8 m_Flags;
    undefined field13_0x2b;
    struct tTween m_TweenIn;
    struct tTween m_TweenOut;
    FLOAT m_MinDistance;
    FLOAT m_MaxDistance;
};
// 
// struct tPegasusSwarmData {
//     FLOAT m_StdMaxSpeed; /* Inherited from tPegasusFlightData */
//     FLOAT m_StdAcc; /* Inherited from tPegasusFlightData */
//     FLOAT m_StdAlignmentFactor; /* Inherited from tPegasusFlightData */
//     FLOAT m_StdCollisionFactor; /* Inherited from tPegasusFlightData */
//     FLOAT m_StdSeparationFactor; /* Inherited from tPegasusFlightData */
//     FLOAT m_LeadTime; /* Inherited from tPegasusFlightData */
//     FLOAT m_SwarmRadius;
// };
// 
struct tCreature {
    struct tSoldierBase *m_Soldier;
    struct tAIBase *m_AI;
    struct tCombat *m_Combat;
    struct tShield *m_Shield;
    struct tPiggyBank__1_7727 *m_PiggyBank;
    struct tMove__1_6354 **m_MoveList;
    struct tBranch **m_BranchList;
    struct tNavBankBase **m_NavBankList;
};
// 
// struct sysControlSystemParm {
//     struct sysAnalogueControlMappingParm *m_pAnalogueMappings;
//     UINT32 m_uNumAnalogueMappings;
//     struct sysDigitalControlMappingParm *m_pDigitalMappings;
//     UINT32 m_uNumDigitalMappings;
//     struct sysControlParm *m_pControls;
//     UINT32 m_uNumControls;
// };
// 
struct tRipplesEffect {
    struct goGameObject *m_pRipplesGO;
    struct renParticleSystem *m_pRipplesPS;
    struct goCreatureCollision *m_pCreature;
    INT32 m_iEmitterJointIdx;
    FLOAT m_fNewRipples;
    FLOAT m_fPrevWaterY;
    FLOAT m_fTimeSinceOnSurface;
};
// 
// struct sysPad {
//     int fPort;
//     int fSlot;
//     enum EPadType fType;
//     float fActuatorGain;
//     unsigned char fAnalogue[22];
//     undefined field5_0x26;
//     undefined field6_0x27;
//     unsigned int fDigital;
//     unsigned int fPreviousDigital;
//     UINT32 fCurrentCheatCode;
//     UINT32 fCheatCodeFound;
//     struct ControlStick fSticks[2];
//     int fSocket;
//     int fState;
//     int fPrevRumble;
//     int fProfileSize;
//     unsigned char fProfile[4];
//     int fVibProfileSize;
//     unsigned char fVibProfile[1];
//     undefined field19_0x91;
//     undefined field20_0x92;
//     undefined field21_0x93;
//     undefined field22_0x94;
//     undefined field23_0x95;
//     undefined field24_0x96;
//     undefined field25_0x97;
//     undefined field26_0x98;
//     undefined field27_0x99;
//     undefined field28_0x9a;
//     undefined field29_0x9b;
//     undefined field30_0x9c;
//     undefined field31_0x9d;
//     undefined field32_0x9e;
//     undefined field33_0x9f;
//     undefined field34_0xa0;
//     undefined field35_0xa1;
//     undefined field36_0xa2;
//     undefined field37_0xa3;
//     undefined field38_0xa4;
//     undefined field39_0xa5;
//     undefined field40_0xa6;
//     undefined field41_0xa7;
//     undefined field42_0xa8;
//     undefined field43_0xa9;
//     undefined field44_0xaa;
//     undefined field45_0xab;
//     undefined field46_0xac;
//     undefined field47_0xad;
//     undefined field48_0xae;
//     undefined field49_0xaf;
//     undefined field50_0xb0;
//     undefined field51_0xb1;
//     undefined field52_0xb2;
//     undefined field53_0xb3;
//     undefined field54_0xb4;
//     undefined field55_0xb5;
//     undefined field56_0xb6;
//     undefined field57_0xb7;
//     undefined field58_0xb8;
//     undefined field59_0xb9;
//     undefined field60_0xba;
//     undefined field61_0xbb;
//     undefined field62_0xbc;
//     undefined field63_0xbd;
//     undefined field64_0xbe;
//     undefined field65_0xbf;
//     uint16 fDMABuffer[16];
// };
// 
struct tStaticAnimDescEntry {
    UINT16 m_uFlags;
    UINT16 m_ChainedAnim;
    struct tOverrideAnim *m_pAnimOverrideList;
};
// 
// struct tPiggyBank__1_7727 {
//     struct tOrbEntry **m_OrbList;
//     FLOAT m_OrbEmitRate;
// };
// 
struct WypGroup_t {
    char aName[16];
    int nNumWaypoints;
    int nOffsetWaypoints;
};

struct stdStack {
    signed char fStack[4];
    INT8 fIndex;
};

struct tAnimSystem {
    struct tAnimSystem__vtable *__vtable; /* Inherited from anmPlayerEndCallback */
    undefined field1_0x4;
    undefined field2_0x5;
    undefined field3_0x6;
    undefined field4_0x7;
    undefined field5_0x8;
    undefined field6_0x9;
    undefined field7_0xa;
    undefined field8_0xb;
    undefined field9_0xc;
    undefined field10_0xd;
    undefined field11_0xe;
    undefined field12_0xf;
    undefined field13_0x10;
    undefined field14_0x11;
    undefined field15_0x12;
    undefined field16_0x13;
    undefined field17_0x14;
    undefined field18_0x15;
    undefined field19_0x16;
    undefined field20_0x17;
    undefined field21_0x18;
    undefined field22_0x19;
    undefined field23_0x1a;
    undefined field24_0x1b;
    undefined field25_0x1c;
    undefined field26_0x1d;
    undefined field27_0x1e;
    undefined field28_0x1f;
    struct tAnimSystem__vtable *__vtable_; /* Inherited from anmClientProcessCallback */
    undefined field30_0x24;
    undefined field31_0x25;
    undefined field32_0x26;
    undefined field33_0x27;
    undefined field34_0x28;
    undefined field35_0x29;
    undefined field36_0x2a;
    undefined field37_0x2b;
    undefined field38_0x2c;
    undefined field39_0x2d;
    undefined field40_0x2e;
    undefined field41_0x2f;
    undefined field42_0x30;
    undefined field43_0x31;
    undefined field44_0x32;
    undefined field45_0x33;
    undefined field46_0x34;
    undefined field47_0x35;
    undefined field48_0x36;
    undefined field49_0x37;
    undefined field50_0x38;
    undefined field51_0x39;
    undefined field52_0x3a;
    undefined field53_0x3b;
    undefined field54_0x3c;
    undefined field55_0x3d;
    undefined field56_0x3e;
    undefined field57_0x3f;
    undefined field58_0x40;
    undefined field59_0x41;
    undefined field60_0x42;
    undefined field61_0x43;
    undefined field62_0x44;
    undefined field63_0x45;
    undefined field64_0x46;
    undefined field65_0x47;
    undefined field66_0x48;
    undefined field67_0x49;
    undefined field68_0x4a;
    undefined field69_0x4b;
    undefined field70_0x4c;
    undefined field71_0x4d;
    undefined field72_0x4e;
    undefined field73_0x4f;
    struct VUMat4 m_mMostRecentDelta;
    struct goCreature *m_pCreature;
    struct tStaticAnimDescEntry *m_pStaticAnimInfo;
    struct anmClient *m_pAnmClient;
    struct stdCList m_SlaveList;
    struct tStaticAnimDescEntry *m_pMostRecentStaticAnimEntry;
    INT32 m_uMostRecentFileIdx;
    FLOAT m_fMostRecentMustComplete;
    INT32 m_iMostRecentFramesPlayed;
    struct anmMatrixArrayPlayer *m_aMostRecentPlayers[8];
    INT16 m_iNumMostRecentPlayers;
    UINT16 m_uPreviousAnim;
    UINT16 m_uCurrentAnim;
    UINT16 m_uNextAnim;
    UINT16 m_uReTriggerAnim;
    undefined field89_0xde;
    undefined field90_0xdf;
    FLOAT m_fNextCOG;
    FLOAT m_fCurrentCOG;
    UINT16 m_uNumberOfAnims;
    tNavBankStack m_BankStack;
    undefined field95_0xef;
    INT16 m_iZeroJointIdx;
    INT16 m_iLinkJointIdx;
    INT16 m_iSynchJointIdx;
    undefined field99_0xf6;
    undefined field100_0xf7;
    FLOAT m_fAnmVertScale;
    FLOAT m_fBlendU;
    FLOAT m_fBlendV;
    UINT32 m_uBlendSetMask;
    UINT32 m_uFlags;
    undefined field106_0x10c;
    undefined field107_0x10d;
    undefined field108_0x10e;
    undefined field109_0x10f;
};
// 
// struct Waypoint_t {
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     WypIndex_t nNumForwardLinks;
//     WypIndex_t nNumBackwardLinks;
//     WypIndex_t nNumBackwardBiDirLinks;
//     WypIndex_t nForwardIndex;
//     WypIndex_t nBackwardIndex;
//     WypIndex_t nBackwardBiDirIndex;
// };
// 
struct tFightSystem {
    struct goCreature *_pCreature;
    struct tValidityDisk *m_pValidDisk;
    struct Fight *m_pFight;
    UINT16 m_iProximityPressure;
    UINT16 m_iFightPressure;
    UINT16 m_iProjectilePressure;
    UINT16 m_iFightWeightLimit;
    UINT16 m_iProjectileWeightLimit;
    UINT8 m_iFlag;
    undefined field9_0x17;
    struct tFightSystem__vtable *__vtable;
};

struct tEEChunkDescriptor {
    UINT32 *pChunk[2];
    INT32 m_iVertexCntOffset;
    int m_aiDataUnpackOffset[4];
};
// 
// struct tFlags<128> {
//     unsigned char m_uBits[16];
// };
// 
// struct tEffectSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tEffectSystem;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type UpdateSoldierEffects;
//     struct __vtbl_ptr_type UpdateS;
//     struct __vtbl_ptr_type InitDead;
//     struct __vtbl_ptr_type InitFadeOut;
// };
// 
// struct wypClientLoadData {
//     char magic[8];
//     UINT32 bAnimated;
//     UINT32 nOffsetWaypoints;
//     UINT32 nOffsetLinks;
//     UINT32 nOffsetLinkRefs;
//     UINT32 nOffsetGroups;
//     UINT32 nOffsetWypAttributes;
//     UINT32 nOffsetWypAtrEntries;
//     UINT32 nOffsetLinkAttributes;
//     UINT32 nOffsetLinkAtrEntries;
//     UINT32 nNumWaypoints;
//     UINT32 nNumLinks;
//     UINT32 nNumLinkRefs;
//     UINT32 nNumGroups;
//     UINT32 nNumWypAttributes;
//     UINT32 nNumWypAtrEntries;
//     UINT32 nNumLinkAttributes;
//     UINT32 nNumLinkAtrEntries;
//     UINT32 nWypAttributeSize;
//     UINT32 nLinkAttributeSize;
//     UINT32 nTotalClientSize;
// };
// 
// struct tPegasusLockOnData {
//     UINT8 m_LockOnFlags;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_LeftRightOffset;
//     FLOAT m_DownUpOffset;
//     FLOAT m_FrontBackOffset;
//     struct tBranch *m_OutSafeZoneLeft;
//     struct tBranch *m_OutSafeZoneRight;
//     FLOAT m_LockedOnCloseProx;
//     FLOAT m_LockedOnMaxSpeed;
//     FLOAT m_LockedOnAcc;
//     FLOAT m_LockedOnAlignmentFactor;
//     FLOAT m_LockedOnCollisionFactor;
//     FLOAT m_LockOnMaxVelocityDiff;
//     FLOAT m_LockOnRadius;
// };
// 
// struct tCircle {
//     FLOAT m_Scale;
//     FLOAT m_XOffset;
//     FLOAT m_YOffset;
//     FLOAT m_ZOffset;
//     FLOAT m_SoundDelay;
// };
// 
// struct tFlags<256> {
//     unsigned char m_uBits[32];
// };
// 
// struct tMove__1_16624 {
//     struct tMoveSystem *m_pMoveSystem;
//     struct anmPlayer *m_pAnmPlayer;
//     struct tActionHitPause *m_pHitPause;
//     INT32 m_iContext;
//     UINT32 m_uBlockMask;
//     UINT32 m_uNoBlockMask;
//     struct tFlags<256> m_ButtonHoldFlags;
//     struct tFlags<128> m_ActionFlags;
//     struct stdCList<goScript *,stdAllocator<stdCListNodeBase> > m_ActionScriptList;
//     UINT32 m_uLastUpdateActionsFrame;
//     INT8 m_iNumKills;
//     INT8 m_iNumHits;
//     INT8 m_iNumBlocks;
//     INT8 m_iNumCollisions;
//     UINT32 m_uLastKillFrame;
//     UINT32 m_uLastHitFrame;
//     UINT32 m_uLastBlockedFrame;
//     FLOAT m_fOverrideDamage;
//     struct tBranch *m_pBranch;
//     struct tMove__1_6354 *m_pMove;
//     struct tCollisionInfo m_aCollisions[48];
//     UINT32 m_uFlags;
//     UINT32 m_uInternalFlags;
//     tBranchQue m_BranchQue;
//     struct tBranchQueEntry m_aBranchQueMem[8];
// };
// 
// struct tPegasusAI {
//     UINT8 m_Type; /* Inherited from tAIBase */
//     undefined field1_0x1;
//     UINT16 m_Flags; /* Inherited from tAIBase */
//     FLOAT m_SpawnClearRadius; /* Inherited from tAIBase */
//     FLOAT m_MinSpeed;
//     struct tPegasusFlightData *m_FlightData;
//     struct tPegasusLockOnData *m_LockOnData;
//     struct tPegasusSwarmData *m_SwarmData;
//     FLOAT m_AutoBankMaxDirSpeed;
//     FLOAT m_AutoBankMaxAngle;
//     FLOAT m_FirstAttackTime;
//     FLOAT m_FirstAttackTimeRand;
//     FLOAT m_BoostReactionRadius;
//     struct tDTree *m_DTree;
// };
// 
// struct goPegasusAI {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goPegasusAI__vtable *__vtable; /* Inherited from goCreatureController */
//     struct wypClient *m_pPatrolClient; /* Inherited from goAIBase */
//     struct tDecisionTree m_DTree; /* Inherited from goAIBase */
//     float m_fSiteOffset[4]; /* Inherited from goAIBase */
//     struct goAIWorldRep *m_pWorldRep; /* Inherited from goAIBase */
//     INT16 m_iCurSite; /* Inherited from goAIBase */
//     UINT16 m_iStartSite; /* Inherited from goAIBase */
//     INT16 m_iPatrolSite; /* Inherited from goAIBase */
//     undefined field10_0x36;
//     undefined field11_0x37;
//     undefined field12_0x38;
//     undefined field13_0x39;
//     undefined field14_0x3a;
//     undefined field15_0x3b;
//     undefined field16_0x3c;
//     undefined field17_0x3d;
//     undefined field18_0x3e;
//     undefined field19_0x3f;
//     undefined field20_0x40;
//     undefined field21_0x41;
//     undefined field22_0x42;
//     undefined field23_0x43;
//     undefined field24_0x44;
//     undefined field25_0x45;
//     undefined field26_0x46;
//     undefined field27_0x47;
//     undefined field28_0x48;
//     undefined field29_0x49;
//     undefined field30_0x4a;
//     undefined field31_0x4b;
//     undefined field32_0x4c;
//     undefined field33_0x4d;
//     undefined field34_0x4e;
//     undefined field35_0x4f;
//     undefined field36_0x50;
//     undefined field37_0x51;
//     undefined field38_0x52;
//     undefined field39_0x53;
//     undefined field40_0x54;
//     undefined field41_0x55;
//     undefined field42_0x56;
//     undefined field43_0x57;
//     undefined field44_0x58;
//     undefined field45_0x59;
//     undefined field46_0x5a;
//     undefined field47_0x5b;
//     undefined field48_0x5c;
//     undefined field49_0x5d;
//     undefined field50_0x5e;
//     undefined field51_0x5f;
//     undefined field52_0x60;
//     undefined field53_0x61;
//     undefined field54_0x62;
//     undefined field55_0x63;
//     undefined field56_0x64;
//     undefined field57_0x65;
//     undefined field58_0x66;
//     undefined field59_0x67;
//     undefined field60_0x68;
//     undefined field61_0x69;
//     undefined field62_0x6a;
//     undefined field63_0x6b;
//     undefined field64_0x6c;
//     undefined field65_0x6d;
//     undefined field66_0x6e;
//     undefined field67_0x6f;
//     undefined field68_0x70;
//     undefined field69_0x71;
//     undefined field70_0x72;
//     undefined field71_0x73;
//     undefined field72_0x74;
//     undefined field73_0x75;
//     undefined field74_0x76;
//     undefined field75_0x77;
//     undefined field76_0x78;
//     undefined field77_0x79;
//     undefined field78_0x7a;
//     undefined field79_0x7b;
//     undefined field80_0x7c;
//     undefined field81_0x7d;
//     undefined field82_0x7e;
//     undefined field83_0x7f;
//     undefined field84_0x80;
//     undefined field85_0x81;
//     undefined field86_0x82;
//     undefined field87_0x83;
//     undefined field88_0x84;
//     undefined field89_0x85;
//     undefined field90_0x86;
//     undefined field91_0x87;
//     undefined field92_0x88;
//     undefined field93_0x89;
//     undefined field94_0x8a;
//     undefined field95_0x8b;
//     undefined field96_0x8c;
//     undefined field97_0x8d;
//     undefined field98_0x8e;
//     undefined field99_0x8f;
//     undefined field100_0x90;
//     undefined field101_0x91;
//     undefined field102_0x92;
//     undefined field103_0x93;
//     undefined field104_0x94;
//     undefined field105_0x95;
//     undefined field106_0x96;
//     undefined field107_0x97;
//     undefined field108_0x98;
//     undefined field109_0x99;
//     undefined field110_0x9a;
//     undefined field111_0x9b;
//     undefined field112_0x9c;
//     undefined field113_0x9d;
//     undefined field114_0x9e;
//     undefined field115_0x9f;
//     undefined field116_0xa0;
//     undefined field117_0xa1;
//     undefined field118_0xa2;
//     undefined field119_0xa3;
//     undefined field120_0xa4;
//     undefined field121_0xa5;
//     undefined field122_0xa6;
//     undefined field123_0xa7;
//     undefined field124_0xa8;
//     undefined field125_0xa9;
//     undefined field126_0xaa;
//     undefined field127_0xab;
//     undefined field128_0xac;
//     undefined field129_0xad;
//     undefined field130_0xae;
//     undefined field131_0xaf;
//     undefined field132_0xb0;
//     undefined field133_0xb1;
//     undefined field134_0xb2;
//     undefined field135_0xb3;
//     undefined field136_0xb4;
//     undefined field137_0xb5;
//     undefined field138_0xb6;
//     undefined field139_0xb7;
//     undefined field140_0xb8;
//     undefined field141_0xb9;
//     undefined field142_0xba;
//     undefined field143_0xbb;
//     undefined field144_0xbc;
//     undefined field145_0xbd;
//     undefined field146_0xbe;
//     undefined field147_0xbf;
//     undefined field148_0xc0;
//     undefined field149_0xc1;
//     undefined field150_0xc2;
//     undefined field151_0xc3;
//     undefined field152_0xc4;
//     undefined field153_0xc5;
//     undefined field154_0xc6;
//     undefined field155_0xc7;
//     undefined field156_0xc8;
//     undefined field157_0xc9;
//     undefined field158_0xca;
//     undefined field159_0xcb;
//     undefined field160_0xcc;
//     undefined field161_0xcd;
//     undefined field162_0xce;
//     undefined field163_0xcf;
//     undefined field164_0xd0;
//     undefined field165_0xd1;
//     undefined field166_0xd2;
//     undefined field167_0xd3;
//     undefined field168_0xd4;
//     undefined field169_0xd5;
//     undefined field170_0xd6;
//     undefined field171_0xd7;
//     undefined field172_0xd8;
//     undefined field173_0xd9;
//     undefined field174_0xda;
//     undefined field175_0xdb;
//     undefined field176_0xdc;
//     undefined field177_0xdd;
//     undefined field178_0xde;
//     undefined field179_0xdf;
//     undefined field180_0xe0;
//     undefined field181_0xe1;
//     undefined field182_0xe2;
//     undefined field183_0xe3;
//     undefined field184_0xe4;
//     undefined field185_0xe5;
//     undefined field186_0xe6;
//     undefined field187_0xe7;
//     undefined field188_0xe8;
//     undefined field189_0xe9;
//     undefined field190_0xea;
//     undefined field191_0xeb;
//     undefined field192_0xec;
//     undefined field193_0xed;
//     undefined field194_0xee;
//     undefined field195_0xef;
//     undefined field196_0xf0;
//     undefined field197_0xf1;
//     undefined field198_0xf2;
//     undefined field199_0xf3;
//     undefined field200_0xf4;
//     undefined field201_0xf5;
//     undefined field202_0xf6;
//     undefined field203_0xf7;
//     undefined field204_0xf8;
//     undefined field205_0xf9;
//     undefined field206_0xfa;
//     undefined field207_0xfb;
//     undefined field208_0xfc;
//     undefined field209_0xfd;
//     undefined field210_0xfe;
//     undefined field211_0xff;
//     undefined field212_0x100;
//     undefined field213_0x101;
//     undefined field214_0x102;
//     undefined field215_0x103;
//     undefined field216_0x104;
//     undefined field217_0x105;
//     undefined field218_0x106;
//     undefined field219_0x107;
//     undefined field220_0x108;
//     undefined field221_0x109;
//     undefined field222_0x10a;
//     undefined field223_0x10b;
//     undefined field224_0x10c;
//     undefined field225_0x10d;
//     undefined field226_0x10e;
//     undefined field227_0x10f;
//     undefined field228_0x110;
//     undefined field229_0x111;
//     undefined field230_0x112;
//     undefined field231_0x113;
//     undefined field232_0x114;
//     undefined field233_0x115;
//     undefined field234_0x116;
//     undefined field235_0x117;
//     undefined field236_0x118;
//     undefined field237_0x119;
//     undefined field238_0x11a;
//     undefined field239_0x11b;
//     undefined field240_0x11c;
//     undefined field241_0x11d;
//     undefined field242_0x11e;
//     undefined field243_0x11f;
//     undefined field244_0x120;
//     undefined field245_0x121;
//     undefined field246_0x122;
//     undefined field247_0x123;
//     undefined field248_0x124;
//     undefined field249_0x125;
//     undefined field250_0x126;
//     undefined field251_0x127;
//     undefined field252_0x128;
//     undefined field253_0x129;
//     undefined field254_0x12a;
//     undefined field255_0x12b;
//     undefined field256_0x12c;
//     undefined field257_0x12d;
//     undefined field258_0x12e;
//     undefined field259_0x12f;
//     undefined field260_0x130;
//     undefined field261_0x131;
//     undefined field262_0x132;
//     undefined field263_0x133;
//     undefined field264_0x134;
//     undefined field265_0x135;
//     undefined field266_0x136;
//     undefined field267_0x137;
//     undefined field268_0x138;
//     undefined field269_0x139;
//     undefined field270_0x13a;
//     undefined field271_0x13b;
//     undefined field272_0x13c;
//     undefined field273_0x13d;
//     undefined field274_0x13e;
//     undefined field275_0x13f;
//     undefined field276_0x140;
//     undefined field277_0x141;
//     undefined field278_0x142;
//     undefined field279_0x143;
//     undefined field280_0x144;
//     undefined field281_0x145;
//     undefined field282_0x146;
//     undefined field283_0x147;
//     undefined field284_0x148;
//     undefined field285_0x149;
//     undefined field286_0x14a;
//     undefined field287_0x14b;
//     undefined field288_0x14c;
//     undefined field289_0x14d;
//     undefined field290_0x14e;
//     undefined field291_0x14f;
//     undefined field292_0x150;
//     undefined field293_0x151;
//     undefined field294_0x152;
//     undefined field295_0x153;
//     undefined field296_0x154;
//     undefined field297_0x155;
//     undefined field298_0x156;
//     undefined field299_0x157;
//     undefined field300_0x158;
//     undefined field301_0x159;
//     undefined field302_0x15a;
//     undefined field303_0x15b;
//     undefined field304_0x15c;
//     undefined field305_0x15d;
//     undefined field306_0x15e;
//     undefined field307_0x15f;
//     undefined field308_0x160;
//     undefined field309_0x161;
//     undefined field310_0x162;
//     undefined field311_0x163;
//     undefined field312_0x164;
//     undefined field313_0x165;
//     undefined field314_0x166;
//     undefined field315_0x167;
//     undefined field316_0x168;
//     undefined field317_0x169;
//     undefined field318_0x16a;
//     undefined field319_0x16b;
//     undefined field320_0x16c;
//     undefined field321_0x16d;
//     undefined field322_0x16e;
//     undefined field323_0x16f;
//     undefined field324_0x170;
//     undefined field325_0x171;
//     undefined field326_0x172;
//     undefined field327_0x173;
//     undefined field328_0x174;
//     undefined field329_0x175;
//     undefined field330_0x176;
//     undefined field331_0x177;
//     undefined field332_0x178;
//     undefined field333_0x179;
//     undefined field334_0x17a;
//     undefined field335_0x17b;
//     undefined field336_0x17c;
//     undefined field337_0x17d;
//     undefined field338_0x17e;
//     undefined field339_0x17f;
//     undefined field340_0x180;
//     undefined field341_0x181;
//     undefined field342_0x182;
//     undefined field343_0x183;
//     undefined field344_0x184;
//     undefined field345_0x185;
//     undefined field346_0x186;
//     undefined field347_0x187;
//     undefined field348_0x188;
//     undefined field349_0x189;
//     undefined field350_0x18a;
//     undefined field351_0x18b;
//     undefined field352_0x18c;
//     undefined field353_0x18d;
//     undefined field354_0x18e;
//     undefined field355_0x18f;
//     undefined field356_0x190;
//     undefined field357_0x191;
//     undefined field358_0x192;
//     undefined field359_0x193;
//     undefined field360_0x194;
//     undefined field361_0x195;
//     undefined field362_0x196;
//     undefined field363_0x197;
//     undefined field364_0x198;
//     undefined field365_0x199;
//     undefined field366_0x19a;
//     undefined field367_0x19b;
//     undefined field368_0x19c;
//     undefined field369_0x19d;
//     undefined field370_0x19e;
//     undefined field371_0x19f;
//     undefined field372_0x1a0;
//     undefined field373_0x1a1;
//     undefined field374_0x1a2;
//     undefined field375_0x1a3;
//     undefined field376_0x1a4;
//     undefined field377_0x1a5;
//     undefined field378_0x1a6;
//     undefined field379_0x1a7;
//     undefined field380_0x1a8;
//     undefined field381_0x1a9;
//     undefined field382_0x1aa;
//     undefined field383_0x1ab;
//     undefined field384_0x1ac;
//     undefined field385_0x1ad;
//     undefined field386_0x1ae;
//     undefined field387_0x1af;
//     undefined field388_0x1b0;
//     undefined field389_0x1b1;
//     undefined field390_0x1b2;
//     undefined field391_0x1b3;
//     undefined field392_0x1b4;
//     undefined field393_0x1b5;
//     undefined field394_0x1b6;
//     undefined field395_0x1b7;
//     undefined field396_0x1b8;
//     undefined field397_0x1b9;
//     undefined field398_0x1ba;
//     undefined field399_0x1bb;
//     undefined field400_0x1bc;
//     undefined field401_0x1bd;
//     undefined field402_0x1be;
//     undefined field403_0x1bf;
//     undefined field404_0x1c0;
//     undefined field405_0x1c1;
//     undefined field406_0x1c2;
//     undefined field407_0x1c3;
//     undefined field408_0x1c4;
//     undefined field409_0x1c5;
//     undefined field410_0x1c6;
//     undefined field411_0x1c7;
//     undefined field412_0x1c8;
//     undefined field413_0x1c9;
//     undefined field414_0x1ca;
//     undefined field415_0x1cb;
//     undefined field416_0x1cc;
//     undefined field417_0x1cd;
//     undefined field418_0x1ce;
//     undefined field419_0x1cf;
//     undefined field420_0x1d0;
//     undefined field421_0x1d1;
//     undefined field422_0x1d2;
//     undefined field423_0x1d3;
//     undefined field424_0x1d4;
//     undefined field425_0x1d5;
//     undefined field426_0x1d6;
//     undefined field427_0x1d7;
//     undefined field428_0x1d8;
//     undefined field429_0x1d9;
//     undefined field430_0x1da;
//     undefined field431_0x1db;
//     undefined field432_0x1dc;
//     undefined field433_0x1dd;
//     undefined field434_0x1de;
//     undefined field435_0x1df;
//     undefined field436_0x1e0;
//     undefined field437_0x1e1;
//     undefined field438_0x1e2;
//     undefined field439_0x1e3;
//     undefined field440_0x1e4;
//     undefined field441_0x1e5;
//     undefined field442_0x1e6;
//     undefined field443_0x1e7;
//     undefined field444_0x1e8;
//     undefined field445_0x1e9;
//     undefined field446_0x1ea;
//     undefined field447_0x1eb;
//     undefined field448_0x1ec;
//     undefined field449_0x1ed;
//     undefined field450_0x1ee;
//     undefined field451_0x1ef;
//     undefined field452_0x1f0;
//     undefined field453_0x1f1;
//     undefined field454_0x1f2;
//     undefined field455_0x1f3;
//     undefined field456_0x1f4;
//     undefined field457_0x1f5;
//     undefined field458_0x1f6;
//     undefined field459_0x1f7;
//     undefined field460_0x1f8;
//     undefined field461_0x1f9;
//     undefined field462_0x1fa;
//     undefined field463_0x1fb;
//     undefined field464_0x1fc;
//     undefined field465_0x1fd;
//     undefined field466_0x1fe;
//     undefined field467_0x1ff;
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goPegasusAI__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vDirectedPoint;
//     struct VUVec4 m_vDirectedAlignment;
//     struct VUVec4 m_vPvTargetPos;
//     struct VUVec4 m_vMod;
//     FLOAT m_fMod;
//     undefined field481_0x324;
//     undefined field482_0x325;
//     undefined field483_0x326;
//     undefined field484_0x327;
//     undefined field485_0x328;
//     undefined field486_0x329;
//     undefined field487_0x32a;
//     undefined field488_0x32b;
//     undefined field489_0x32c;
//     undefined field490_0x32d;
//     undefined field491_0x32e;
//     undefined field492_0x32f;
//     undefined field493_0x330;
//     undefined field494_0x331;
//     undefined field495_0x332;
//     undefined field496_0x333;
//     undefined field497_0x334;
//     undefined field498_0x335;
//     undefined field499_0x336;
//     undefined field500_0x337;
//     undefined field501_0x338;
//     undefined field502_0x339;
//     undefined field503_0x33a;
//     undefined field504_0x33b;
//     undefined field505_0x33c;
//     undefined field506_0x33d;
//     undefined field507_0x33e;
//     undefined field508_0x33f;
//     undefined field509_0x340;
//     undefined field510_0x341;
//     undefined field511_0x342;
//     undefined field512_0x343;
//     undefined field513_0x344;
//     undefined field514_0x345;
//     undefined field515_0x346;
//     undefined field516_0x347;
//     undefined field517_0x348;
//     undefined field518_0x349;
//     undefined field519_0x34a;
//     undefined field520_0x34b;
//     undefined field521_0x34c;
//     undefined field522_0x34d;
//     undefined field523_0x34e;
//     undefined field524_0x34f;
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field557_0x3e8;
//     undefined field558_0x3e9;
//     undefined field559_0x3ea;
//     undefined field560_0x3eb;
//     undefined field561_0x3ec;
//     undefined field562_0x3ed;
//     undefined field563_0x3ee;
//     undefined field564_0x3ef;
//     struct VUMat4 m_mMovingPlatform; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vMovingPlatformOffset; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vGroundNormal; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vWallNormal; /* Inherited from goCreatureCollision */
//     FLOAT m_fWaterLevel; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pGroundATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWallATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWaterATR; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pGroundWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWallWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWaterWC; /* Inherited from goCreatureCollision */
//     struct goGameObject *m_pGroundGO; /* Inherited from goCreatureCollision */
//     UINT32 m_uGroundGOJointID; /* Inherited from goCreatureCollision */
//     UINT32 m_uNoCollisionType; /* Inherited from goCreatureCollision */
//     UINT32 m_uIgnoreSheetBits; /* Inherited from goCreatureCollision */
//     INT16 m_iHeadTrackJointIdx; /* Inherited from goCreatureCollision */
//     INT16 m_wDummy; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackJointOrientX; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackMaxAngle; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackAmount; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackTargetAmount; /* Inherited from goCreatureCollision */
//     undefined field586_0x4a0;
//     undefined field587_0x4a1;
//     undefined field588_0x4a2;
//     undefined field589_0x4a3;
//     undefined field590_0x4a4;
//     undefined field591_0x4a5;
//     undefined field592_0x4a6;
//     undefined field593_0x4a7;
//     undefined field594_0x4a8;
//     undefined field595_0x4a9;
//     undefined field596_0x4aa;
//     undefined field597_0x4ab;
//     undefined field598_0x4ac;
//     undefined field599_0x4ad;
//     undefined field600_0x4ae;
//     undefined field601_0x4af;
//     undefined field602_0x4b0;
//     undefined field603_0x4b1;
//     undefined field604_0x4b2;
//     undefined field605_0x4b3;
//     undefined field606_0x4b4;
//     undefined field607_0x4b5;
//     undefined field608_0x4b6;
//     undefined field609_0x4b7;
//     undefined field610_0x4b8;
//     undefined field611_0x4b9;
//     undefined field612_0x4ba;
//     undefined field613_0x4bb;
//     undefined field614_0x4bc;
//     undefined field615_0x4bd;
//     undefined field616_0x4be;
//     undefined field617_0x4bf;
//     undefined field618_0x4c0;
//     undefined field619_0x4c1;
//     undefined field620_0x4c2;
//     undefined field621_0x4c3;
//     undefined field622_0x4c4;
//     undefined field623_0x4c5;
//     undefined field624_0x4c6;
//     undefined field625_0x4c7;
//     undefined field626_0x4c8;
//     undefined field627_0x4c9;
//     undefined field628_0x4ca;
//     undefined field629_0x4cb;
//     undefined field630_0x4cc;
//     undefined field631_0x4cd;
//     undefined field632_0x4ce;
//     undefined field633_0x4cf;
//     undefined field634_0x4d0;
//     undefined field635_0x4d1;
//     undefined field636_0x4d2;
//     undefined field637_0x4d3;
//     undefined field638_0x4d4;
//     undefined field639_0x4d5;
//     undefined field640_0x4d6;
//     undefined field641_0x4d7;
//     undefined field642_0x4d8;
//     undefined field643_0x4d9;
//     undefined field644_0x4da;
//     undefined field645_0x4db;
//     undefined field646_0x4dc;
//     undefined field647_0x4dd;
//     undefined field648_0x4de;
//     undefined field649_0x4df;
//     undefined field650_0x4e0;
//     undefined field651_0x4e1;
//     undefined field652_0x4e2;
//     undefined field653_0x4e3;
//     undefined field654_0x4e4;
//     undefined field655_0x4e5;
//     undefined field656_0x4e6;
//     undefined field657_0x4e7;
//     undefined field658_0x4e8;
//     undefined field659_0x4e9;
//     undefined field660_0x4ea;
//     undefined field661_0x4eb;
//     undefined field662_0x4ec;
//     undefined field663_0x4ed;
//     undefined field664_0x4ee;
//     undefined field665_0x4ef;
//     undefined field666_0x4f0;
//     undefined field667_0x4f1;
//     undefined field668_0x4f2;
//     undefined field669_0x4f3;
//     undefined field670_0x4f4;
//     undefined field671_0x4f5;
//     undefined field672_0x4f6;
//     undefined field673_0x4f7;
//     undefined field674_0x4f8;
//     undefined field675_0x4f9;
//     undefined field676_0x4fa;
//     undefined field677_0x4fb;
//     undefined field678_0x4fc;
//     undefined field679_0x4fd;
//     undefined field680_0x4fe;
//     undefined field681_0x4ff;
//     undefined field682_0x500;
//     undefined field683_0x501;
//     undefined field684_0x502;
//     undefined field685_0x503;
//     undefined field686_0x504;
//     undefined field687_0x505;
//     undefined field688_0x506;
//     undefined field689_0x507;
//     undefined field690_0x508;
//     undefined field691_0x509;
//     undefined field692_0x50a;
//     undefined field693_0x50b;
//     undefined field694_0x50c;
//     undefined field695_0x50d;
//     undefined field696_0x50e;
//     undefined field697_0x50f;
//     undefined field698_0x510;
//     undefined field699_0x511;
//     undefined field700_0x512;
//     undefined field701_0x513;
//     undefined field702_0x514;
//     undefined field703_0x515;
//     undefined field704_0x516;
//     undefined field705_0x517;
//     undefined field706_0x518;
//     undefined field707_0x519;
//     undefined field708_0x51a;
//     undefined field709_0x51b;
//     undefined field710_0x51c;
//     undefined field711_0x51d;
//     undefined field712_0x51e;
//     undefined field713_0x51f;
//     undefined field714_0x520;
//     undefined field715_0x521;
//     undefined field716_0x522;
//     undefined field717_0x523;
//     undefined field718_0x524;
//     undefined field719_0x525;
//     undefined field720_0x526;
//     undefined field721_0x527;
//     undefined field722_0x528;
//     undefined field723_0x529;
//     undefined field724_0x52a;
//     undefined field725_0x52b;
//     undefined field726_0x52c;
//     undefined field727_0x52d;
//     undefined field728_0x52e;
//     undefined field729_0x52f;
//     undefined field730_0x530;
//     undefined field731_0x531;
//     undefined field732_0x532;
//     undefined field733_0x533;
//     undefined field734_0x534;
//     undefined field735_0x535;
//     undefined field736_0x536;
//     undefined field737_0x537;
//     undefined field738_0x538;
//     undefined field739_0x539;
//     undefined field740_0x53a;
//     undefined field741_0x53b;
//     undefined field742_0x53c;
//     undefined field743_0x53d;
//     undefined field744_0x53e;
//     undefined field745_0x53f;
//     undefined field746_0x540;
//     undefined field747_0x541;
//     undefined field748_0x542;
//     undefined field749_0x543;
//     undefined field750_0x544;
//     undefined field751_0x545;
//     undefined field752_0x546;
//     undefined field753_0x547;
//     undefined field754_0x548;
//     undefined field755_0x549;
//     undefined field756_0x54a;
//     undefined field757_0x54b;
//     undefined field758_0x54c;
//     undefined field759_0x54d;
//     undefined field760_0x54e;
//     undefined field761_0x54f;
//     undefined field762_0x550;
//     undefined field763_0x551;
//     undefined field764_0x552;
//     undefined field765_0x553;
//     undefined field766_0x554;
//     undefined field767_0x555;
//     undefined field768_0x556;
//     undefined field769_0x557;
//     undefined field770_0x558;
//     undefined field771_0x559;
//     undefined field772_0x55a;
//     undefined field773_0x55b;
//     undefined field774_0x55c;
//     undefined field775_0x55d;
//     undefined field776_0x55e;
//     undefined field777_0x55f;
//     undefined field778_0x560;
//     undefined field779_0x561;
//     undefined field780_0x562;
//     undefined field781_0x563;
//     undefined field782_0x564;
//     undefined field783_0x565;
//     undefined field784_0x566;
//     undefined field785_0x567;
//     undefined field786_0x568;
//     undefined field787_0x569;
//     undefined field788_0x56a;
//     undefined field789_0x56b;
//     undefined field790_0x56c;
//     undefined field791_0x56d;
//     undefined field792_0x56e;
//     undefined field793_0x56f;
//     undefined field794_0x570;
//     undefined field795_0x571;
//     undefined field796_0x572;
//     undefined field797_0x573;
//     undefined field798_0x574;
//     undefined field799_0x575;
//     undefined field800_0x576;
//     undefined field801_0x577;
//     undefined field802_0x578;
//     undefined field803_0x579;
//     undefined field804_0x57a;
//     undefined field805_0x57b;
//     undefined field806_0x57c;
//     undefined field807_0x57d;
//     undefined field808_0x57e;
//     undefined field809_0x57f;
//     undefined field810_0x580;
//     undefined field811_0x581;
//     undefined field812_0x582;
//     undefined field813_0x583;
//     undefined field814_0x584;
//     undefined field815_0x585;
//     undefined field816_0x586;
//     undefined field817_0x587;
//     undefined field818_0x588;
//     undefined field819_0x589;
//     undefined field820_0x58a;
//     undefined field821_0x58b;
//     undefined field822_0x58c;
//     undefined field823_0x58d;
//     undefined field824_0x58e;
//     undefined field825_0x58f;
//     undefined field826_0x590;
//     undefined field827_0x591;
//     undefined field828_0x592;
//     undefined field829_0x593;
//     undefined field830_0x594;
//     undefined field831_0x595;
//     undefined field832_0x596;
//     undefined field833_0x597;
//     undefined field834_0x598;
//     undefined field835_0x599;
//     undefined field836_0x59a;
//     undefined field837_0x59b;
//     undefined field838_0x59c;
//     undefined field839_0x59d;
//     undefined field840_0x59e;
//     undefined field841_0x59f;
//     undefined field842_0x5a0;
//     undefined field843_0x5a1;
//     undefined field844_0x5a2;
//     undefined field845_0x5a3;
//     undefined field846_0x5a4;
//     undefined field847_0x5a5;
//     undefined field848_0x5a6;
//     undefined field849_0x5a7;
//     undefined field850_0x5a8;
//     undefined field851_0x5a9;
//     undefined field852_0x5aa;
//     undefined field853_0x5ab;
//     undefined field854_0x5ac;
//     undefined field855_0x5ad;
//     undefined field856_0x5ae;
//     undefined field857_0x5af;
//     struct goPegasusAIVehicle m_PegVehicle;
//     struct goPegasusAIDamage m_PegDamage;
//     struct tAnimSystem *m_pAnimSystem;
//     struct tEffectSystem *m_pEffectSystem;
//     struct tPegasusAI *m_pTweaks;
//     UINT32 m_iFlags;
//     FLOAT m_fNonAttackPeriod;
//     UINT16 m_iDestSite;
//     UINT16 m_iState;
//     BOOL m_bAllowOffScreen;
//     undefined field868_0x64c;
//     undefined field869_0x64d;
//     undefined field870_0x64e;
//     undefined field871_0x64f;
// };
// 
struct tHand__1_7658 {
    char *m_GOName;
    char *m_InHandJoint;
    char *m_OutHandJoint;
    char *m_OnBackJoint;
    FLOAT m_SnapDistance;
    UINT8 m_Heap;
    UINT8 m_SlicePart;
    undefined field7_0x16;
    undefined field8_0x17;
    FLOAT m_SliceForwardDist;
    FLOAT m_SliceBackwardDist;
    UINT8 m_Type;
    UINT8 m_Flags;
    undefined field13_0x22;
    undefined field14_0x23;
};

struct tMaterialFX {
    struct tMaterialFX *m_UnderwaterAlt;
    struct tCameraShake *m_HitCameraShake;
    UINT32 m_HitEffect;
    UINT32 m_JumpLandEffect;
    UINT32 m_RunDustEffect;
    UINT32 m_SliceHitEffect;
    UINT32 m_SliceHitSound;
    UINT32 m_FootSound;
    UINT32 m_CliffSound;
    struct tVector3__1_5581 m_Movement;
    INT8 m_ArrowSoundIdx;
    UINT8 m_Flags;
};

struct CShield__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type IsTrueShield;
    struct __vtbl_ptr_type IsShardShield;
    struct __vtbl_ptr_type IsInfiniteShield;
    struct __vtbl_ptr_type ProcessDamage;
};

struct goPlayerControls__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type goPlayerControls;
    struct __vtbl_ptr_type Process;
};

struct tNavBankBase {
    UINT8 m_BankType;
};

typedef struct goCreature {
    struct goGameObject *m_pGameObject; /* Inherited from goBase */
    struct goCreature__vtable *__vtable; /* Inherited from goBase */
    struct tCreature *m_pCTweaks;
    struct wadContext *m_pCTweaksContext;
    struct VUMat4 m_mInitialPosition;
    struct VUMat4 m_mMotion;
    struct VUMat4 m_mPhysical;
    struct VUVec4 m_vPhysicalPosForCamera;
    struct VUVec4 m_vVelocity;
    struct VUVec4 m_vImpulse;
    struct VUVec4 m_vLastMovement;
    struct VUVec4 m_vLastPosition;
    struct tCollisionBox m_NavCollision;
    struct tPhysicalDamping m_PhysDamp;
    FLOAT m_fMaxSpeed;
    FLOAT m_fScale;
    FLOAT m_fTimeScale;
    UINT32 m_uMotionStateFlags;
    UINT32 m_uInfoStateFlags;
    FLOAT m_fHitPoints;
    FLOAT m_fMaxHitPoints;
    FLOAT m_fFreezeAmount;
    struct goHandle m_hFreezeSource;
    FLOAT m_fRampHitPoints;
    struct goCreature *m_pChildCreature;
    struct goCreature *m_pParentCreature;
    INT32 m_iAttachedToJointID;
    UINT32 m_uAttachmentType;
    FLOAT m_fTimeSinceLastVisible;
    FLOAT m_fTimeSinceLastAttacked;
    UINT32 m_CameraTargets;
    struct Emitter *m_pSndEmitter;
    struct Emitter *m_pLoopSndEmitter;
    struct renModel *m_pModel;
    struct renShadowClient *m_pShadow;
    struct goCreatureController *m_pCreatureController;
    struct goHandle m_hMountCreature;
    struct goHandle m_hRiderCreature;
    struct wadContext *m_pGOParmWadContext;
    struct tMoveSystem *m_pMoveSystem;
    struct tFightSystem *m_pFightSystem;
    struct CShield *m_pShield;
    struct tPiggyBank__1_16335 m_PiggyBank;
    struct goGameObject *m_pCircleGO;
    FLOAT m_fCircleSoundDelay;
    undefined field45_0x1e8;
    undefined field46_0x1e9;
    undefined field47_0x1ea;
    undefined field48_0x1eb;
    undefined field49_0x1ec;
    undefined field50_0x1ed;
    undefined field51_0x1ee;
    undefined field52_0x1ef;
} goCreature;
// 
// struct tActionPegasusRam {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_FarDistance;
//     FLOAT m_FarRadius;
//     FLOAT m_NearDistance;
//     FLOAT m_NearRadius;
// };
// 
// struct tDTree {
//     struct tDTreeBaseNode *m_Root;
// };
// 
// struct goCreatureCollision__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goCreatureCollision;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type GetRope;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
// };
// 
// struct tDecision {
//     UINT8 m_Operand1;
//     UINT8 m_Operator;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Operand2;
// };
// 
struct tAnimSystem__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type ProcessCallback;
    struct __vtbl_ptr_type tAnimSystem;
};
// 
// struct tPegasusFlightData {
//     FLOAT m_StdMaxSpeed;
//     FLOAT m_StdAcc;
//     FLOAT m_StdAlignmentFactor;
//     FLOAT m_StdCollisionFactor;
//     FLOAT m_StdSeparationFactor;
//     FLOAT m_LeadTime;
// };
// 
// struct goPlayerControls {
//     struct sysPad *fPad; /* Inherited from sysControlSystem */
//     struct sysControlSystemParm *fParm; /* Inherited from sysControlSystem */
//     FLOAT *fCurrentControlValues; /* Inherited from sysControlSystem */
//     FLOAT *fPreviousControlValues; /* Inherited from sysControlSystem */
//     UINT64 fCurrentDigitalState; /* Inherited from sysControlSystem */
//     UINT64 fPreviousDigitalState; /* Inherited from sysControlSystem */
//     struct goPlayerControls__vtable *__vtable; /* Inherited from sysControlSystem */
//     undefined field7_0x24;
//     undefined field8_0x25;
//     undefined field9_0x26;
//     undefined field10_0x27;
//     undefined field11_0x28;
//     undefined field12_0x29;
//     undefined field13_0x2a;
//     undefined field14_0x2b;
//     undefined field15_0x2c;
//     undefined field16_0x2d;
//     undefined field17_0x2e;
//     undefined field18_0x2f;
//     struct VUMat4 m_mCameraTransform;
//     struct VUMat4 m_mControlTransform;
//     struct VUVec4 m_vNormalisedControls;
//     struct VUVec4 m_vSurfaceNormal;
//     struct VUVec4 m_vSurfacePos;
//     struct VUVec4 m_vSurfaceRelativeControls[2];
//     struct VUVec4 m_vUpRelativeControls[2];
//     INT32 m_iControlTransformTween;
//     FLOAT m_fPreviousControlAngle;
//     undefined field28_0x128;
//     undefined field29_0x129;
//     undefined field30_0x12a;
//     undefined field31_0x12b;
//     undefined field32_0x12c;
//     undefined field33_0x12d;
//     undefined field34_0x12e;
//     undefined field35_0x12f;
//     struct VUVec4 m_vPreviousSurfaceNormal;
// };
// 
// struct tAIBase {
//     UINT8 m_Type;
//     undefined field1_0x1;
//     UINT16 m_Flags;
//     FLOAT m_SpawnClearRadius;
// };
// 
// struct BoostSlamData {
//     struct VUVec4 m_vTestPos;
//     struct VUVec4 m_vTestAxis;
//     FLOAT m_fCloseDist;
//     struct goPegasusAI *m_pSlamAI;
//     struct tActionPegasusRam *m_pRamTweaks;
//     undefined field5_0x2c;
//     undefined field6_0x2d;
//     undefined field7_0x2e;
//     undefined field8_0x2f;
// };
// 
struct renShadowClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct VUVec4 _vTint; /* Inherited from renGROB */
    struct renGROBJFlags _GROBJFlags; /* Inherited from renGROB */
    renGROBMatList *_pMaterialBuffer; /* Inherited from renGROB */
    UINT32 _uLayerID; /* Inherited from renGROB */
    UINT32 _uViewID; /* Inherited from renGROB */
    undefined field149_0xdc;
    undefined field150_0xdd;
    undefined field151_0xde;
    undefined field152_0xdf;
    struct VUVec4 m_vClipPlane;
    struct EEPrimInfo m_EEPrimInfo;
    FLOAT m_fMaxShadowLength;
    struct renModel *m_pModel;
    UINT32 m_uFlags;
    INT32 m_iType;
    FLOAT m_fClippedShadowUpperCapDist;
    FLOAT m_fClippedShadowLowerCapDist;
    undefined field161_0x158;
    undefined field162_0x159;
    undefined field163_0x15a;
    undefined field164_0x15b;
    undefined field165_0x15c;
    undefined field166_0x15d;
    undefined field167_0x15e;
    undefined field168_0x15f;
};

struct Fight {
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field2_0x8;
    undefined field3_0x9;
    undefined field4_0xa;
    undefined field5_0xb;
    undefined field6_0xc;
    undefined field7_0xd;
    undefined field8_0xe;
    undefined field9_0xf;
    struct VUVec4 m_vCenter;
    struct goHandle m_GoodGuys[50];
    struct goHandle m_BadGuys[50];
    UINT8 m_iBadNum;
    UINT8 m_iGoodNum;
    undefined field15_0x1b2;
    undefined field16_0x1b3;
    undefined field17_0x1b4;
    undefined field18_0x1b5;
    undefined field19_0x1b6;
    undefined field20_0x1b7;
    undefined field21_0x1b8;
    undefined field22_0x1b9;
    undefined field23_0x1ba;
    undefined field24_0x1bb;
    undefined field25_0x1bc;
    undefined field26_0x1bd;
    undefined field27_0x1be;
    undefined field28_0x1bf;
};
// 
// struct tOrb {
//     FLOAT m_OscillateFreq;
//     FLOAT m_OscillateAmpl;
//     FLOAT m_OscillateYOffset;
//     FLOAT m_LifeTime;
//     FLOAT m_LifeTimeVariance;
//     FLOAT m_SpawnTime;
//     FLOAT m_SpawnTimeVariance;
//     FLOAT m_AttractTime;
//     FLOAT m_AttractRadius;
//     FLOAT m_Points;
//     FLOAT m_Gravity;
//     char *m_PickupSnd;
//     char *m_GOName;
//     UINT8 m_Type;
//     undefined field14_0x35;
//     undefined field15_0x36;
//     undefined field16_0x37;
// };
// 
// typedef struct BootArgs BootArgs, *PBootArgs;
// 
// struct BootArgs {
//     unsigned int fMode;
//     unsigned int fStaticStatus;
//     unsigned int fStaticStatusSize;
//     unsigned int fDynamicStatus;
//     unsigned int fDynamicStatusSize;
//     unsigned int fDualLayer;
//     unsigned int fLayer1Start;
//     unsigned int fLanguage;
// };
// 
// typedef struct BossCamera BossCamera, *PBossCamera;
// 
// typedef struct State__1_17650 State__1_17650, *PState__1_17650;
// 
// typedef struct Target Target, *PTarget;
// 
// typedef struct Client__1_9324 Client__1_9324, *PClient__1_9324;
// 
// typedef enum State__fJumpCorrectionState__1_17650 {
//     kNotJumping=0,
//     kSingleJump=1,
//     kDoubleJump=2
// } State__fJumpCorrectionState__1_17650;
// 
// typedef struct TweenValues TweenValues, *PTweenValues;
// 
// typedef enum Target__m_State {
//     kOff=0,
//     kIn=1,
//     kOn=2,
//     kOut=3,
//     kHiding=4,
//     kHidden=5
// } Target__m_State;
// 
// typedef struct tEffectParm tEffectParm, *PtEffectParm;
// 
// struct tEffectParm {
//     INT32 m_ID;
//     INT32 m_Type;
//     INT32 m_Script;
//     INT32 m_WadContext;
// };
// 
// struct Client__1_9324 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     undefined field132_0xa4;
//     undefined field133_0xa5;
//     undefined field134_0xa6;
//     undefined field135_0xa7;
//     undefined field136_0xa8;
//     undefined field137_0xa9;
//     undefined field138_0xaa;
//     undefined field139_0xab;
//     undefined field140_0xac;
//     undefined field141_0xad;
//     undefined field142_0xae;
//     undefined field143_0xaf;
//     struct VUMat4 fInverseLW;
//     UINT64 fInverseTimeStamp;
//     float fFieldOfView;
//     float _DefFOV;
//     UINT32 flags;
//     float _vDepthOfFieldZArray[2];
//     INT32 _nDepthOfFieldAlpha;
//     INT32 _nDepthOfFieldFocusZone;
//     struct tEffectParm *fFXScripts[1];
//     undefined field153_0x118;
//     undefined field154_0x119;
//     undefined field155_0x11a;
//     undefined field156_0x11b;
//     undefined field157_0x11c;
//     undefined field158_0x11d;
//     undefined field159_0x11e;
//     undefined field160_0x11f;
// };
// 
// struct BossCamera {
//     struct VUVec4 fTargetPoint; /* Inherited from TrackCurveBaseF */
//     struct nurbsCurve *fCurve; /* Inherited from TrackCurveBaseF */
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
//     undefined field14_0x20;
//     undefined field15_0x21;
//     undefined field16_0x22;
//     undefined field17_0x23;
//     undefined field18_0x24;
//     undefined field19_0x25;
//     undefined field20_0x26;
//     undefined field21_0x27;
//     undefined field22_0x28;
//     undefined field23_0x29;
//     undefined field24_0x2a;
//     undefined field25_0x2b;
//     undefined field26_0x2c;
//     undefined field27_0x2d;
//     undefined field28_0x2e;
//     undefined field29_0x2f;
//     undefined field30_0x30;
//     undefined field31_0x31;
//     undefined field32_0x32;
//     undefined field33_0x33;
//     undefined field34_0x34;
//     undefined field35_0x35;
//     undefined field36_0x36;
//     undefined field37_0x37;
//     undefined field38_0x38;
//     undefined field39_0x39;
//     undefined field40_0x3a;
//     undefined field41_0x3b;
//     undefined field42_0x3c;
//     undefined field43_0x3d;
//     undefined field44_0x3e;
//     undefined field45_0x3f;
//     BOOL fPlayerCanObscureBoss;
//     BOOL fBossCanObscurePlayer;
//     float fFightLineAngle;
//     BOOL fTrackSafeZone;
//     int fCounter;
//     bool fDebug;
//     undefined field52_0x55;
//     undefined field53_0x56;
//     undefined field54_0x57;
//     float fMinimumDistanceFromTarget;
//     undefined field56_0x5c;
//     undefined field57_0x5d;
//     undefined field58_0x5e;
//     undefined field59_0x5f;
//     struct VUMat4 fWorldToCamera;
//     float fHorizontalSeperatingAngle;
//     float fVerticalSeperatingAngle;
//     float fSafeZoneTop;
//     float fSafeZoneBottom;
//     float fSafeZoneLeft;
//     float fSafeZoneRight;
//     undefined field67_0xb8;
//     undefined field68_0xb9;
//     undefined field69_0xba;
//     undefined field70_0xbb;
//     undefined field71_0xbc;
//     undefined field72_0xbd;
//     undefined field73_0xbe;
//     undefined field74_0xbf;
//     struct VUVec4 fBoomUnit;
//     float fBoomDistance;
//     undefined field77_0xd4;
//     undefined field78_0xd5;
//     undefined field79_0xd6;
//     undefined field80_0xd7;
//     undefined field81_0xd8;
//     undefined field82_0xd9;
//     undefined field83_0xda;
//     undefined field84_0xdb;
//     undefined field85_0xdc;
//     undefined field86_0xdd;
//     undefined field87_0xde;
//     undefined field88_0xdf;
//     struct VUVec4 fObjectPosition;
//     struct State__1_17650 *fCurrentState;
//     struct Target *fFightLineTargets[2];
//     struct Target *fFramingTargets[32];
//     int fNumFightLineTargets;
//     int fNumFramingTargets;
//     undefined field95_0x184;
//     undefined field96_0x185;
//     undefined field97_0x186;
//     undefined field98_0x187;
//     undefined field99_0x188;
//     undefined field100_0x189;
//     undefined field101_0x18a;
//     undefined field102_0x18b;
//     undefined field103_0x18c;
//     undefined field104_0x18d;
//     undefined field105_0x18e;
//     undefined field106_0x18f;
// };
// 
// struct Target {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 m_Offset;
//     struct goHandle m_Handle;
//     int m_Joint;
//     float m_Weight;
//     unsigned int m_Flags;
//     float m_VisualRadius;
//     float m_DampingRadius;
//     float m_VelocityScaleH;
//     float m_VelocityScaleV;
//     float m_VelocityMax;
//     float m_CapsuleRatio;
//     int m_Priority;
//     struct tCameraTarget *m_Parm;
//     enum Target__m_State m_State;
//     float m_Timer;
//     float m_Alarm;
//     float m_EaseIn;
//     float m_EaseOut;
//     float m_Tween;
//     float m_DistanceWeight;
//     undefined field30_0x6c;
//     undefined field31_0x6d;
//     undefined field32_0x6e;
//     undefined field33_0x6f;
//     struct VUVec4 m_Position;
// };
// 
// struct TweenValues {
//     struct Armature fArmature;
//     float fFieldOfViewAngle;
//     float fWideScreenRatio;
//     float fMicBoomDistance;
//     float dummy;
// };
// 
// struct State__1_17650 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUMat4 fCameraMatrix;
//     int fRefCount;
//     struct Client__1_9324 *fClient;
//     struct nurbsCurve *fCurve;
//     float fCurveTime;
//     bool fStartedAnimation;
//     undefined field16_0x61;
//     undefined field17_0x62;
//     undefined field18_0x63;
//     enum State__fJumpCorrectionState__1_17650 fJumpCorrectionState;
//     float fJumpOffset;
//     float fJumpFloor;
//     struct VUVec4 fPlayerTarget;
//     struct VUVec4 fPreviousPlayerTarget;
//     float fRailDelta;
//     int fFirstFrameOnRail;
//     undefined field26_0x98;
//     undefined field27_0x99;
//     undefined field28_0x9a;
//     undefined field29_0x9b;
//     undefined field30_0x9c;
//     undefined field31_0x9d;
//     undefined field32_0x9e;
//     undefined field33_0x9f;
//     struct TweenValues fTweenValues;
// };
// 
// typedef struct BossCameraBoom BossCameraBoom, *PBossCameraBoom;
// 
// struct BossCameraBoom {
//     undefined field0_0x0;
// };
// 
// typedef struct BossCameraDolly BossCameraDolly, *PBossCameraDolly;
// 
// struct BossCameraDolly {
//     undefined field0_0x0;
// };
// 
// typedef struct Breakable_ParamData Breakable_ParamData, *PBreakable_ParamData;
// 
// struct Breakable_ParamData {
//     UINT32 tweakNameHash;
// };
// 
// typedef struct Breakable_SaveListItem Breakable_SaveListItem, *PBreakable_SaveListItem;
// 
// typedef struct Breakable_SaveListItem__vtable Breakable_SaveListItem__vtable, *PBreakable_SaveListItem__vtable;
// 
// struct Breakable_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Breakable_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct Breakable_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Breakable_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     UINT16 id;
//     undefined field4_0xe;
//     undefined field5_0xf;
// };
// 
// typedef struct BreakablePieces BreakablePieces, *PBreakablePieces;
// 
// typedef struct Piece Piece, *PPiece;
// 
// struct Piece {
//     struct VUVec4 m_vLastPos;
//     struct VUVec4 m_vLastVel;
//     struct VUMat4 *m_pJointMat;
//     UINT32 m_iJointIdx;
//     FLOAT m_fGravity;
//     UINT32 m_uFlags;
// };
// 
// struct BreakablePieces {
//     struct Piece m_aPieces[64];
//     INT32 m_iNumPieces;
//     undefined field2_0xc04;
//     undefined field3_0xc05;
//     undefined field4_0xc06;
//     undefined field5_0xc07;
//     undefined field6_0xc08;
//     undefined field7_0xc09;
//     undefined field8_0xc0a;
//     undefined field9_0xc0b;
//     undefined field10_0xc0c;
//     undefined field11_0xc0d;
//     undefined field12_0xc0e;
//     undefined field13_0xc0f;
// };
// 
// typedef enum BufferCounts {
//     kNumAudioMemoryStreams=2,
//     kNumFileBuffers=6,
//     kNumAudioFileStreams=8,
//     kNumAudioStreams=10,
//     kNumBankBuffers=19,
//     kNumBankSlots=20
// } BufferCounts;
// 
// typedef enum Buffers {
//     kEE=0,
//     kVU=1,
//     kNone=2,
//     kNumBuffers=2
// } Buffers;
// 
// typedef undefined1 *BUILD_MATRICES_FUNC;
// 
// typedef char c8;
// 
// typedef struct CachedLeaf CachedLeaf, *PCachedLeaf;
// 
// typedef struct sheetCollisionVirtual sheetCollisionVirtual, *PsheetCollisionVirtual;
// 
// typedef struct KDNode KDNode, *PKDNode;
// 
// typedef struct CachedPrim CachedPrim, *PCachedPrim;
// 
// typedef struct sheetCollisionVirtual__vtable sheetCollisionVirtual__vtable, *PsheetCollisionVirtual__vtable;
// 
// typedef struct KDHeader KDHeader, *PKDHeader;
// 
// typedef CHAR KDPropertyMaterial;
// 
// typedef struct KDLeafPrim KDLeafPrim, *PKDLeafPrim;
// 
// typedef struct KDTriangle KDTriangle, *PKDTriangle;
// 
// typedef struct KDQuad KDQuad, *PKDQuad;
// 
// typedef struct KDVertex KDVertex, *PKDVertex;
// 
// typedef union KDNode__unnamed_0 KDNode__unnamed_0, *PKDNode__unnamed_0;
// 
// typedef struct PrimFlags PrimFlags, *PPrimFlags;
// 
// typedef struct tAABB tAABB, *PtAABB;
// 
// typedef struct KDNode__unnamed__Leaf KDNode__unnamed__Leaf, *PKDNode__unnamed__Leaf;
// 
// typedef struct KDNode__unnamed__Node KDNode__unnamed__Node, *PKDNode__unnamed__Node;
// 
// struct PrimFlags {
//     int primType:3;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
// };
// 
// struct CachedPrim {
//     struct VUVec4 plane;
//     struct VUVec4 p[4];
//     struct PrimFlags flags;
//     struct AtrValue *pAtrValue;
//     undefined field4_0x58;
//     undefined field5_0x59;
//     undefined field6_0x5a;
//     undefined field7_0x5b;
//     undefined field8_0x5c;
//     undefined field9_0x5d;
//     undefined field10_0x5e;
//     undefined field11_0x5f;
// };
// 
// struct CachedLeaf {
//     struct sheetCollisionVirtual *pSheet;
//     struct KDNode *pLeaf;
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 bboxMin;
//     struct VUVec4 bboxMax;
//     struct CachedPrim cachedPrim[16];
// };
// 
// struct KDNode__unnamed__Node {
//     UINT16 nodeType:1;
//     UINT16 splitType:2;
//     undefined field2_0x1;
//     UINT16 iFar;
//     float splitValue;
// };
// 
// struct KDNode__unnamed__Leaf {
//     UINT32 nodeType:1;
//     UINT32 leafPrimArrayIndex:24;
//     UINT16 numPrims;
//     undefined field3_0x6;
//     undefined field4_0x7;
// };
// 
// union KDNode__unnamed_0 {
//     struct KDNode__unnamed__Leaf Leaf;
//     struct KDNode__unnamed__Node Node;
// };
// 
// struct KDNode {
//     union KDNode__unnamed_0 field0_0x0;
// };
// 
// struct KDLeafPrim {
//     UINT16 primType:1;
//     UINT16 primArrayIndex:15;
// };
// 
// struct KDTriangle {
//     UINT16 primSpecs:4;
//     UINT16 propertyMaterialIndex:12;
//     UINT16 vIndex0;
//     UINT16 vIndex1;
//     UINT16 vIndex2;
// };
// 
// struct tAABB {
//     tVector min;
//     tVector max;
// };
// 
// struct sheetCollisionVirtual {
//     struct collisionClient *cc; /* Inherited from collisionVirtual */
//     struct sheetCollisionVirtual__vtable *__vtable; /* Inherited from collisionVirtual */
//     struct KDHeader *_rawRibData;
//     struct KDNode *_kdNodeArray;
//     KDPropertyMaterial *_propMatArray;
//     struct AtrEntry *_atrEntryArray;
//     struct KDLeafPrim *_leafPrimArray;
//     struct KDTriangle *_triangleArray;
//     struct KDQuad *_quadArray;
//     struct KDVertex *_vertexArray;
//     INT32 _sizeofPropMatEntry;
//     UINT16 _cachedNode;
//     undefined field12_0x2e;
//     undefined field13_0x2f;
//     struct VUVec4 *_triPlaneArray;
//     struct VUVec4 *_quadPlaneArray;
//     struct wadContext *wc;
// };
// 
// struct KDQuad {
//     UINT16 primSpecs:4;
//     UINT16 propertyMaterialIndex:12;
//     UINT16 vIndex0;
//     UINT16 vIndex1;
//     UINT16 vIndex2;
//     UINT16 vIndex3;
// };
// 
// struct sheetCollisionVirtual__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type sheetCollisionVirtual;
//     struct __vtbl_ptr_type GetClientType;
//     struct __vtbl_ptr_type GetWorldBound;
//     struct __vtbl_ptr_type ComputeBoundingVolume;
//     struct __vtbl_ptr_type GetCollisionRootJoint;
//     struct __vtbl_ptr_type LineTest;
//     struct __vtbl_ptr_type SphereTest;
//     struct __vtbl_ptr_type SweptSphereTest;
//     struct __vtbl_ptr_type PointTest;
//     struct __vtbl_ptr_type PairTest;
//     struct __vtbl_ptr_type FindCollisionSpheres;
//     struct __vtbl_ptr_type BeginTestVolume;
//     struct __vtbl_ptr_type EndTestVolume;
//     struct __vtbl_ptr_type Reset;
// };
// 
// struct KDVertex {
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
// };
// 
// struct KDHeader {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT32 totalSize;
//     UINT32 atrVersion;
//     UINT32 sheetVersion;
//     struct tAABB bbox;
//     UINT16 height;
//     UINT16 firstLeafDepth;
//     UINT16 numTotalNodes;
//     UINT16 numLeaves;
//     UINT32 numTotalLeafPrims;
//     UINT16 maxLeafPrims;
//     UINT16 numTotalTris;
//     UINT16 numTotalQuads;
//     UINT16 numTotalVerts;
//     UINT16 sizeofPropMat;
//     UINT16 sizeofPropMatEntry;
//     UINT16 numTotalPropMats;
//     UINT16 numTotalAtrEntries;
//     UINT16 numTotalOccluders;
//     UINT16 unused;
//     UINT32 offsetKDTree;
//     UINT32 offsetPropMatArray;
//     UINT32 offsetAtrEntryArray;
//     UINT32 offsetLeafPrimArray;
//     UINT32 offsetTriangleArray;
//     UINT32 offsetQuadArray;
//     UINT32 offsetVertexArray;
//     UINT32 offsetOccluders;
// };
// 
// typedef char *caddr_t;
// 
// typedef struct CallbackData CallbackData, *PCallbackData;
// 
// typedef struct goAI goAI, *PgoAI;
// 
// typedef struct stdStack<goHandle,5> stdStack<goHandle,5>, *PstdStack<goHandle,5>;
// 
// typedef struct goAI__vtable goAI__vtable, *PgoAI__vtable;
// 
// typedef struct tAI tAI, *PtAI;
// 
// typedef struct tActionSeekSite tActionSeekSite, *PtActionSeekSite;
// 
// typedef union goAI__unnamed_92 goAI__unnamed_92, *PgoAI__unnamed_92;
// 
// typedef enum CullingEnum {
//     CULLING_ON=0,
//     CULLING_OFF=1,
//     CULLING_START=2,
//     CULLING_PRESPAWN=3
// } CullingEnum;
// 
// typedef struct tBlockMove tBlockMove, *PtBlockMove;
// 
// typedef struct tBlockContext tBlockContext, *PtBlockContext;
// 
// typedef struct tBlockHitFlags tBlockHitFlags, *PtBlockHitFlags;
// 
// union goAI__unnamed_92 {
//     struct tMove__1_6354 *m_pForcedMove;
//     FLOAT m_fFrozenTimer;
// };
// 
// struct goAI {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goAI__vtable *__vtable; /* Inherited from goCreatureController */
//     struct wypClient *m_pPatrolClient; /* Inherited from goAIBase */
//     struct tDecisionTree m_DTree; /* Inherited from goAIBase */
//     float m_fSiteOffset[4]; /* Inherited from goAIBase */
//     struct goAIWorldRep *m_pWorldRep; /* Inherited from goAIBase */
//     INT16 m_iCurSite; /* Inherited from goAIBase */
//     UINT16 m_iStartSite; /* Inherited from goAIBase */
//     INT16 m_iPatrolSite; /* Inherited from goAIBase */
//     undefined field10_0x36;
//     undefined field11_0x37;
//     struct tAI *m_pTweaks;
//     struct tCreature *m_pCTweaks;
//     struct VUVec4 m_vStuckOffset;
//     struct tActionSeekSite *m_pSeekTarget;
//     struct goHandle m_TargetHandle;
//     UINT32 m_iEnemyMask;
//     union goAI__unnamed_92 field18_0x5c;
//     enum CullingEnum m_eCullingStatus;
//     UINT32 m_iFlags;
//     FLOAT m_fDistToTarget;
//     FLOAT m_fLastHealth;
//     FLOAT m_fFlightHeight;
//     UINT16 m_iDestSite;
//     UINT16 m_iNextSite;
//     UINT16 m_iState;
//     UINT16 m_iTargetLastSeenSite;
//     FLOAT m_fInsideHoleTimer;
//     FLOAT m_fNonAttackTimer;
//     FLOAT m_fForceActionTimer;
//     UINT16 m_iStartState;
//     UINT8 m_iObjectTimer;
//     UINT8 m_iForceMoveTimer;
//     FLOAT m_fJumpTimer;
//     UINT8 m_bLODOut;
//     UINT8 m_bHidden;
//     undefined field37_0x92;
//     undefined field38_0x93;
//     FLOAT m_fStuckTimer;
//     UINT8 m_iPBHole;
//     UINT8 m_iPath;
//     UINT8 m_iPathIdx;
//     undefined field43_0x9b;
//     undefined field44_0x9c;
//     undefined field45_0x9d;
//     undefined field46_0x9e;
//     undefined field47_0x9f;
// };
// 
// struct tBlockMove {
//     FLOAT m_BlockChance;
//     UINT32 m_MoveName;
//     INT8 m_MinCnt;
//     INT8 m_MaxCnt;
//     undefined field4_0xa;
//     undefined field5_0xb;
// };
// 
// struct tBlockHitFlags {
//     FLOAT m_BlockChance;
//     UINT32 m_HitFlags;
// };
// 
// struct tAI {
//     UINT8 m_Type; /* Inherited from tAIBase */
//     undefined field1_0x1;
//     UINT16 m_Flags; /* Inherited from tAIBase */
//     FLOAT m_SpawnClearRadius; /* Inherited from tAIBase */
//     FLOAT m_FightRadius;
//     FLOAT m_SecondFightRadius;
//     INT8 m_HealthMeterIdx;
//     undefined field7_0x11;
//     undefined field8_0x12;
//     undefined field9_0x13;
//     struct tBranch *m_FirstContactMove;
//     struct tBranch *m_SearchMove;
//     struct tBranch *m_WorldIdleMove;
//     struct tBlockMove *m_BlockMoveList;
//     struct tBlockContext *m_BlockContextList;
//     struct tBlockHitFlags *m_BlockHitFlagsList;
//     FLOAT m_CullRadius;
//     FLOAT m_AlertRadius;
//     FLOAT m_VisualRadius;
//     FLOAT m_VisualDegree;
//     FLOAT m_ProxRadius;
//     FLOAT m_SafeZoneRadius;
//     FLOAT m_WanderSpeed;
//     FLOAT m_ChaseSpeed;
//     FLOAT m_TowardMult;
//     FLOAT m_AwayMult;
//     FLOAT m_FlightHeight;
//     FLOAT m_PauseTime;
//     FLOAT m_AnticipateJumpTime;
//     FLOAT m_TimeTillLost;
//     FLOAT m_AutoSmashTime;
//     FLOAT m_InsideHoleTime;
//     FLOAT m_ForceActionTime;
//     FLOAT m_PassiveForceActionTime;
//     struct tDTree *m_DTree;
// };
// 
// struct goAI__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goAI;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type IsCulled;
//     struct __vtbl_ptr_type GetFlightHeight;
// };
// 
// struct stdStack<goHandle,5> {
//     struct goHandle fStack[5];
//     INT8 fIndex;
//     undefined field2_0x15;
//     undefined field3_0x16;
//     undefined field4_0x17;
// };
// 
// struct CallbackData {
//     struct VUVec4 m_vFlatForward;
//     struct goAI *m_pAI;
//     struct VUMat4 *m_pHeadMat;
//     struct stdStack<goHandle,5> m_EnemyStack;
//     bool m_bBlocked;
//     undefined field5_0x31;
//     undefined field6_0x32;
//     undefined field7_0x33;
//     undefined field8_0x34;
//     undefined field9_0x35;
//     undefined field10_0x36;
//     undefined field11_0x37;
//     undefined field12_0x38;
//     undefined field13_0x39;
//     undefined field14_0x3a;
//     undefined field15_0x3b;
//     undefined field16_0x3c;
//     undefined field17_0x3d;
//     undefined field18_0x3e;
//     undefined field19_0x3f;
// };
// 
// struct tActionSeekSite {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SeekFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_YRotation;
//     struct tBranch *m_Branch;
//     FLOAT m_Radius;
// };
// 
// struct tBlockContext {
//     FLOAT m_BlockChance;
//     INT8 m_Context;
//     INT8 m_MinCnt;
//     INT8 m_MaxCnt;
//     undefined field4_0x7;
// };
// 
// typedef struct CameraEntry CameraEntry, *PCameraEntry;
// 
// struct CameraEntry {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Client__1_9324 *m_pCamera;
//     UINT32 m_uKey;
// };
// 
// typedef struct CameraField CameraField, *PCameraField;
// 
// struct CameraField {
//     struct Client__1_9324 *fClient;
//     struct State__1_17650 *fState;
//     float fFieldStrength;
//     float fTweenTime;
//     float fEaseIn;
//     float fEaseOut;
//     int fPriority;
// };
// 
// typedef struct CameraGel CameraGel, *PCameraGel;
// 
// typedef struct tColorMod tColorMod, *PtColorMod;
// 
// struct tColorMod {
//     FLOAT m_R;
//     FLOAT m_G;
//     FLOAT m_B;
//     FLOAT m_A;
// };
// 
// struct CameraGel {
//     struct tColorMod m_TopRGBA; /* Inherited from tFS_CameraGel */
//     struct tColorMod m_MiddleRGBA; /* Inherited from tFS_CameraGel */
//     struct tColorMod m_BottomRGBA; /* Inherited from tFS_CameraGel */
//     FLOAT m_TopPoint; /* Inherited from tFS_CameraGel */
//     FLOAT m_MiddlePoint; /* Inherited from tFS_CameraGel */
//     FLOAT m_BottomPoint; /* Inherited from tFS_CameraGel */
//     undefined field6_0x3c;
//     undefined field7_0x3d;
//     undefined field8_0x3e;
//     undefined field9_0x3f;
// };
// 
// typedef enum CameraMode {
//     kFixed=0,
//     kZoned=1,
//     kModelViewer=2,
//     kNumTogglableCameraModes=2,
//     kFreeze=3,
//     kNumCameraModes=4
// } CameraMode;
// 
// typedef enum Category {
//     kTime=0,
//     kOrbs=1,
//     kDamage=2,
//     kKills=3,
//     kCombo=4,
//     kBonus=5,
//     kTotal=6,
//     kOverall=7
// } Category;
// 
// typedef struct Caustic Caustic, *PCaustic;
// 
// struct Caustic {
//     struct tColorMod m_MinRGBA; /* Inherited from tFS_Caustic */
//     struct tColorMod m_MaxRGBA; /* Inherited from tFS_Caustic */
// };
// 
// typedef enum CBCode {
//     RENDER=0,
//     DISCONNECT=1,
//     DESTROY=2
// } CBCode;
// 
// typedef struct CBlock CBlock, *PCBlock;
// 
// typedef struct CBlock__vtable CBlock__vtable, *PCBlock__vtable;
// 
// struct CBlock {
//     struct CBlock__vtable *__vtable; /* Inherited from CTweener */
//     FLOAT m_fWidth;
//     FLOAT m_fHeight;
//     FLOAT m_fDepth;
//     FLOAT m_fDirection;
//     FLOAT m_fPosition;
// };
// 
// struct CBlock__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetNbConcussions;
//     struct __vtbl_ptr_type CopyNth;
//     struct __vtbl_ptr_type Scale;
//     struct __vtbl_ptr_type Tween;
// };
// 
// typedef char cc8;
// 
// typedef struct CDecalSystem CDecalSystem, *PCDecalSystem;
// 
// struct CDecalSystem {
//     undefined field0_0x0;
// };
// 
// typedef undefined1 *CDFunc;
// 
// typedef undefined1 *CdlCB;
// 
// typedef struct CGlobalWorldRep CGlobalWorldRep, *PCGlobalWorldRep;
// 
// struct CGlobalWorldRep {
//     INT32 m_iRefCount;
//     struct goAIWorldRep *m_pWorldRep;
// };
// 
// typedef struct Challenge Challenge, *PChallenge;
// 
// struct Challenge {
//     undefined field0_0x0;
// };
// 
// typedef struct Channel Channel, *PChannel;
// 
// typedef enum Modes {
//     kManual=0,
//     kFightEnhanced=1,
//     kFightCrossfade=2,
//     kNumModes=3
// } Modes;
// 
// typedef enum State__1_19689 {
//     kStopped=0,
//     kPaused=1,
//     kSilent=2,
//     kFadeUp=3,
//     kFadeSet=4,
//     kFadeToStop=5,
//     kFadeToPause=6,
//     kFadeToSilence=7,
//     kStop=8,
//     kBuffering=9
// } State__1_19689;
// 
// typedef struct Control__1_19678 Control__1_19678, *PControl__1_19678;
// 
// typedef struct tMusic tMusic, *PtMusic;
// 
// struct Control__1_19678 {
//     float fTarget;
//     float fETA;
//     float fCurrent;
// };
// 
// struct tMusic {
//     char *m_FileName;
//     INT32 m_SampleRate;
//     INT8 m_Channels;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     FLOAT *m_BarMarker;
// };
// 
// struct Channel {
//     enum Modes fMode;
//     enum State__1_19689 fState;
//     struct Emitter *fEmitter;
//     struct Control__1_19678 fVolumes[4];
//     struct stdDynaString fName;
//     bool fMissing;
//     undefined field6_0x55;
//     undefined field7_0x56;
//     undefined field8_0x57;
//     bool fSave;
//     undefined field10_0x59;
//     undefined field11_0x5a;
//     undefined field12_0x5b;
//     struct tMusic *fData;
//     struct ClientParm__1_9257 *fParm;
//     struct wadContext *fWadContext;
//     int fBufferID;
//     float fTime;
// };
// 
// typedef struct ChargeGust ChargeGust, *PChargeGust;
// 
// struct ChargeGust {
//     struct goGameObject *m_pGO;
//     struct goHandle m_hTarget;
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 m_vVel;
//     FLOAT m_fMaxVelocity;
//     FLOAT m_fTimeLeft;
//     FLOAT m_fTimeSinceLastDamage;
//     BOOL m_bSwitchTarget;
//     INT32 m_iInstanceID;
//     undefined field16_0x34;
//     undefined field17_0x35;
//     undefined field18_0x36;
//     undefined field19_0x37;
//     undefined field20_0x38;
//     undefined field21_0x39;
//     undefined field22_0x3a;
//     undefined field23_0x3b;
//     undefined field24_0x3c;
//     undefined field25_0x3d;
//     undefined field26_0x3e;
//     undefined field27_0x3f;
// };
// 
// typedef struct ChestJoints__anonymousglobal ChestJoints__anonymousglobal, *PChestJoints__anonymousglobal;
// 
// struct ChestJoints__anonymousglobal {
//     char *pName;
//     INT iType;
// };
// 
// typedef struct cie_info cie_info, *Pcie_info;
// 
// struct cie_info {
//     char *augmentation;
//     void *eh_ptr;
//     int code_align;
//     int data_align;
//     unsigned int ra_regno;
// };
// 
// typedef struct ClearSpawnData ClearSpawnData, *PClearSpawnData;
// 
// struct ClearSpawnData {
//     struct VUVec4 vSphere;
//     struct goGameObject *pSelf;
//     BOOL bClear;
//     undefined field3_0x18;
//     undefined field4_0x19;
//     undefined field5_0x1a;
//     undefined field6_0x1b;
//     undefined field7_0x1c;
//     undefined field8_0x1d;
//     undefined field9_0x1e;
//     undefined field10_0x1f;
// };
// 
// typedef struct Client__1_11277 Client__1_11277, *PClient__1_11277;
// 
// typedef struct Client__1_11277__vtable Client__1_11277__vtable, *PClient__1_11277__vtable;
// 
// typedef struct dmaContext dmaContext, *PdmaContext;
// 
// typedef struct renContext renContext, *PrenContext;
// 
// typedef struct dmaContext__vtable dmaContext__vtable, *PdmaContext__vtable;
// 
// struct dmaContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type dmaContext;
//     struct __vtbl_ptr_type Swap;
// };
// 
// struct Client__1_11277 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct Client__1_11277__vtable *__vtable; /* Inherited from renFXScript */
//     BOOL m_bBlur128Done;
//     struct dmaContext *m_pLFCContext;
// };
// 
// struct renContext {
//     long unsigned int _uCurrentGSRegs[99];
//     long unsigned int _uNewGSRegs[99];
//     long unsigned int _uRegFlags[2];
// };
// 
// struct dmaContext {
//     UINT32 *m_pFirstLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pCurrentLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pEndLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pDMABuffer; /* Inherited from dmaStaticContext */
//     UINT32 m_uFlags; /* Inherited from dmaStaticContext */
//     undefined field5_0x14;
//     undefined field6_0x15;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     struct renContext m_GSContext; /* Inherited from dmaStaticContext */
//     struct dmaContext__vtable *__vtable; /* Inherited from dmaStaticContext */
//     undefined field11_0x65c;
//     undefined field12_0x65d;
//     undefined field13_0x65e;
//     undefined field14_0x65f;
//     UINT32 m_uBuffSize;
//     UINT32 m_uBuffID;
//     UINT32 m_uLastFrameUsage;
//     UINT32 m_uPeakFrameUsage;
// };
// 
// struct Client__1_11277__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Client;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct Client__1_11279 Client__1_11279, *PClient__1_11279;
// 
// typedef struct Client__1_11279__vtable Client__1_11279__vtable, *PClient__1_11279__vtable;
// 
// typedef struct stdEDLList<renFXScriptPrim> stdEDLList<renFXScriptPrim>, *PstdEDLList<renFXScriptPrim>;
// 
// typedef struct stdEDLList<renFXScriptBase::ManagedPrim> stdEDLList<renFXScriptBase::ManagedPrim>, *PstdEDLList<renFXScriptBase::ManagedPrim>;
// 
// typedef struct State__1_11818 State__1_11818, *PState__1_11818;
// 
// struct Client__1_11279__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Client;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct stdEDLList<renFXScriptPrim> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
// };
// 
// struct State__1_11818 {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColorMod m_Tint; /* Inherited from tBloom */
//     struct tColorMod m_TintM; /* Inherited from tBloom */
//     struct tColorMod m_TintB; /* Inherited from tBloom */
//     FLOAT m_TopPoint; /* Inherited from tBloom */
//     FLOAT m_MiddlePoint; /* Inherited from tBloom */
//     FLOAT m_BottomPoint; /* Inherited from tBloom */
//     UINT32 m_BlendMode; /* Inherited from tBloom */
//     FLOAT m_Alpha; /* Inherited from tBloom */
//     FLOAT m_SkyboxAlpha; /* Inherited from tBloom */
//     INT32 m_Layered; /* Inherited from tBloom */
//     undefined field14_0x5c;
//     undefined field15_0x5d;
//     undefined field16_0x5e;
//     undefined field17_0x5f;
// };
// 
// struct stdEDLList<renFXScriptBase::ManagedPrim> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
// };
// 
// struct Client__1_11279 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct Client__1_11279__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct State__1_11818 fAccumulator; /* Inherited from renFXScriptBlended<fxBloom::State> */
//     INT32 m_iBloomPasses;
//     BOOL m_b64Blur;
//     struct dmaContext *m_pContext;
//     struct dmaContext *m_pTileContext;
// };
// 
// typedef struct Client__1_11281 Client__1_11281, *PClient__1_11281;
// 
// typedef struct Client__1_11281__vtable Client__1_11281__vtable, *PClient__1_11281__vtable;
// 
// typedef struct State__1_11974 State__1_11974, *PState__1_11974;
// 
// typedef struct MeshPoint MeshPoint, *PMeshPoint;
// 
// typedef struct tFS_Control tFS_Control, *PtFS_Control;
// 
// typedef struct tFS_DampedMesh tFS_DampedMesh, *PtFS_DampedMesh;
// 
// typedef struct tFS_RandomXY tFS_RandomXY, *PtFS_RandomXY;
// 
// typedef struct tFS_Ripple tFS_Ripple, *PtFS_Ripple;
// 
// typedef struct tFS_Warp tFS_Warp, *PtFS_Warp;
// 
// typedef struct tFS_Caustic tFS_Caustic, *PtFS_Caustic;
// 
// typedef struct tFS_Hole tFS_Hole, *PtFS_Hole;
// 
// typedef struct tFS_CameraGel tFS_CameraGel, *PtFS_CameraGel;
// 
// typedef struct tFS_Zoom tFS_Zoom, *PtFS_Zoom;
// 
// typedef struct tFS_UVClamp tFS_UVClamp, *PtFS_UVClamp;
// 
// typedef union MeshPoint__unnamed_16 MeshPoint__unnamed_16, *PMeshPoint__unnamed_16;
// 
// typedef struct tOffset tOffset, *PtOffset;
// 
// typedef struct tRadii tRadii, *PtRadii;
// 
// typedef struct MeshPoint__unnamed__unnamed_16 MeshPoint__unnamed__unnamed_16, *PMeshPoint__unnamed__unnamed_16;
// 
// struct Client__1_11281__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Client;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct tFS_UVClamp {
//     FLOAT m_LMinUClamp;
//     FLOAT m_LMaxUClamp;
//     FLOAT m_RMinUClamp;
//     FLOAT m_RMaxUClamp;
//     FLOAT m_TMinVClamp;
//     FLOAT m_TMaxVClamp;
//     FLOAT m_BMinVClamp;
//     FLOAT m_BMaxVClamp;
// };
// 
// struct tFS_CameraGel {
//     struct tColorMod m_TopRGBA;
//     struct tColorMod m_MiddleRGBA;
//     struct tColorMod m_BottomRGBA;
//     FLOAT m_TopPoint;
//     FLOAT m_MiddlePoint;
//     FLOAT m_BottomPoint;
//     undefined field6_0x3c;
//     undefined field7_0x3d;
//     undefined field8_0x3e;
//     undefined field9_0x3f;
// };
// 
// struct tFS_Zoom {
//     INT16 m_U1;
//     INT16 m_U2;
//     INT16 m_V1;
//     INT16 m_V2;
// };
// 
// struct tFS_DampedMesh {
//     UINT8 m_PerturbMeshMode;
//     UINT8 m_ProcMeshMode;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_ViscosityU;
//     FLOAT m_ViscosityV;
//     FLOAT m_DampingU;
//     FLOAT m_DampingV;
//     FLOAT m_PointAmplU;
//     FLOAT m_PointAmplV;
// };
// 
// struct MeshPoint__unnamed__unnamed_16 {
//     UINT8 uA;
//     UINT8 uB;
//     UINT8 uG;
//     UINT8 uR;
// };
// 
// union MeshPoint__unnamed_16 {
//     struct MeshPoint__unnamed__unnamed_16 field0;
//     UINT32 uRGBA;
// };
// 
// struct tRadii {
//     FLOAT m_X;
//     FLOAT m_Y;
//     FLOAT m_Z;
// };
// 
// struct tFS_Ripple {
//     INT16 m_Freq;
//     INT16 m_Speed;
//     FLOAT m_AmplU_0;
//     FLOAT m_AmplV_0;
//     FLOAT m_AmplU_1;
//     FLOAT m_AmplV_1;
//     FLOAT m_XScale;
// };
// 
// struct tFS_Control {
//     UINT8 m_InitMeshMode;
//     UINT8 m_MeshMode;
//     UINT8 m_ColorizingMode;
//     UINT8 m_GSBlendMode;
//     UINT8 m_SourceBuffer;
//     UINT8 m_PosFlags;
//     UINT8 m_SizeFlags;
//     undefined field7_0x7;
//     INT16 m_FrameCount;
// };
// 
// struct tFS_RandomXY {
//     FLOAT m_AmplX;
//     FLOAT m_AmplY;
// };
// 
// struct MeshPoint {
//     FLOAT fVelU;
//     FLOAT fVelV;
//     FLOAT fPointU;
//     FLOAT fPointV;
//     union MeshPoint__unnamed_16 field4_0x10;
// };
// 
// struct tFS_Caustic {
//     struct tColorMod m_MinRGBA;
//     struct tColorMod m_MaxRGBA;
// };
// 
// struct tOffset {
//     FLOAT m_X;
//     FLOAT m_Y;
//     FLOAT m_Z;
// };
// 
// struct State__1_11974 {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tFS_Control *m_Control; /* Inherited from tFS_State */
//     struct tFS_DampedMesh *m_DampedMesh; /* Inherited from tFS_State */
//     struct tFS_RandomXY *m_RandomXY; /* Inherited from tFS_State */
//     struct tFS_Ripple *m_Ripple; /* Inherited from tFS_State */
//     struct tFS_Warp *m_Warp; /* Inherited from tFS_State */
//     struct tFS_Caustic *m_Caustic; /* Inherited from tFS_State */
//     struct tFS_Hole *m_Hole; /* Inherited from tFS_State */
//     struct tFS_CameraGel *m_CameraGel; /* Inherited from tFS_State */
//     struct tFS_Zoom *m_Zoom; /* Inherited from tFS_State */
//     struct tFS_UVClamp *m_UVClamp; /* Inherited from tFS_State */
//     UINT8 m_Alpha; /* Inherited from tFS_State */
//     undefined field15_0x39;
//     undefined field16_0x3a;
//     undefined field17_0x3b;
// };
// 
// struct Client__1_11281 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct Client__1_11281__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     struct State__1_11974 fAccumulator; /* Inherited from renFXScriptBlended<fxFSWarp::State> */
//     struct VUVec4 m_vHole;
//     struct VUVec4 m_vHoleRadii;
//     struct VUVec4 m_vInnerRGBA;
//     struct VUVec4 m_vMiddleRGBA;
//     struct VUVec4 m_vOuterRGBA;
//     FLOAT m_fHoleXScale;
//     FLOAT m_fCurrentRippleCount;
//     undefined field22_0xc8;
//     undefined field23_0xc9;
//     undefined field24_0xca;
//     undefined field25_0xcb;
//     undefined field26_0xcc;
//     undefined field27_0xcd;
//     undefined field28_0xce;
//     undefined field29_0xcf;
//     struct VUVec4 m_vWSPos;
//     INT16 m_iLastInitMeshMode;
//     INT16 m_iLastMeshMode;
//     INT16 m_iLastColorizingMode;
//     INT16 m_iCurrentFrameCount;
//     INT32 m_iMeshWidth;
//     INT32 m_iMeshHeight;
//     struct MeshPoint *m_pMesh;
//     UINT32 m_uZ;
//     UINT32 m_uZTst;
//     UINT32 m_uABGRMask;
//     UINT64 m_uGSAlphaReg;
//     BOOL m_bDontClearZBuffer;
//     struct dmaContext *m_pContext;
// };
// 
// struct tFS_Warp {
//     FLOAT m_AmplU_0;
//     FLOAT m_AmplV_0;
//     FLOAT m_AmplU_1;
//     FLOAT m_AmplV_1;
//     FLOAT m_RandomFactor;
//     FLOAT m_Spiral_0;
//     FLOAT m_Spiral_1;
//     FLOAT m_XScale;
// };
// 
// struct tFS_Hole {
//     struct tColorMod m_InnerRGBA;
//     struct tColorMod m_MiddleRGBA;
//     struct tColorMod m_OuterRGBA;
//     struct tOffset m_Offset;
//     FLOAT m_XScale;
//     struct tRadii m_Radii;
//     FLOAT m_pad;
// };
// 
// typedef struct ClientParm__1_9972 ClientParm__1_9972, *PClientParm__1_9972;
// 
// typedef struct TweenOverride TweenOverride, *PTweenOverride;
// 
// struct ClientParm__1_9972 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     struct Attributes__1_9945 fAttributes;
//     struct stdDynaString fName;
//     int fNumOverrides;
//     struct TweenOverride *fOverrides;
//     struct nurbsCurve *fCurve;
//     struct stdDynaString fFXScripts[1];
// };
// 
// struct TweenOverride {
//     struct stdDynaString fFrom;
//     float fTween;
//     float fEaseIn;
//     float fEaseOut;
//     int fIgnore;
// };
// 
// typedef enum ClientType {
//     COLLISION_HULL_CLIENT=0,
//     SOUND_HULL_CLIENT=1,
//     CAMERA_HULL_CLIENT=2,
//     ENTITY_HULL_CLIENT=3,
//     EFFECT_HULL_CLIENT=4,
//     VISIBILITY_HULL_CLIENT=5,
//     SHEET_CLIENT=6
// } ClientType;
// 
// typedef enum ClientTypes {
//     kBank=0,
//     kSound=1,
//     kStub=2,
//     kMidiBank=3,
//     kIOPBank=4,
//     kEmitter=5
// } ClientTypes;
// 
// typedef long unsigned int clock_t;
// 
// typedef enum cmp_type {
//     CMP_SI=0,
//     CMP_DI=1,
//     CMP_SF=2,
//     CMP_DF=3,
//     CMP_MAX=4
// } cmp_type;
// 
// typedef struct collisionClientParm collisionClientParm, *PcollisionClientParm;
// 
// struct collisionClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     int type;
// };
// 
// typedef enum CollisionClientType {
//     kCollisionSheet=0,
//     kCollisionHulls=1,
//     kCollisionDebug=2,
//     kNumCollisionClientTypes=3
// } CollisionClientType;
// 
// typedef struct collisionContext collisionContext, *PcollisionContext;
// 
// typedef struct collisionContext__vtable collisionContext__vtable, *PcollisionContext__vtable;
// 
// struct collisionContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type collisionContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct collisionContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct collisionContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > collisionContextBase;
// 
// typedef struct collisionInput collisionInput, *PcollisionInput;
// 
// struct collisionInput {
//     UINT32 uClientSetMask;
//     UINT32 uAttrBitfield0IgnoreMask;
//     undefined1 *pCallback;
//     UINT32 uFlags;
//     UINT32 uViewID;
//     struct goGameObject *pGO;
//     UINT32 *pBitArray;
//     void *user1;
//     void *user2;
// };
// 
// typedef struct collisionMasterContext collisionMasterContext, *PcollisionMasterContext;
// 
// typedef struct collisionMasterContext__vtable collisionMasterContext__vtable, *PcollisionMasterContext__vtable;
// 
// typedef struct SphereGrid SphereGrid, *PSphereGrid;
// 
// typedef struct SGObject SGObject, *PSGObject;
// 
// struct collisionMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct collisionMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field27_0x48;
//     undefined field28_0x49;
//     undefined field29_0x4a;
//     undefined field30_0x4b;
//     undefined field31_0x4c;
//     undefined field32_0x4d;
//     undefined field33_0x4e;
//     undefined field34_0x4f;
//     undefined field35_0x50;
//     undefined field36_0x51;
//     undefined field37_0x52;
//     undefined field38_0x53;
//     undefined field39_0x54;
//     undefined field40_0x55;
//     undefined field41_0x56;
//     undefined field42_0x57;
//     undefined field43_0x58;
//     undefined field44_0x59;
//     undefined field45_0x5a;
//     undefined field46_0x5b;
//     undefined field47_0x5c;
//     undefined field48_0x5d;
//     undefined field49_0x5e;
//     undefined field50_0x5f;
//     undefined field51_0x60;
//     undefined field52_0x61;
//     undefined field53_0x62;
//     undefined field54_0x63;
//     undefined field55_0x64;
//     undefined field56_0x65;
//     undefined field57_0x66;
//     undefined field58_0x67;
//     undefined field59_0x68;
//     undefined field60_0x69;
//     undefined field61_0x6a;
//     undefined field62_0x6b;
//     undefined field63_0x6c;
//     undefined field64_0x6d;
//     undefined field65_0x6e;
//     undefined field66_0x6f;
//     undefined field67_0x70;
//     undefined field68_0x71;
//     undefined field69_0x72;
//     undefined field70_0x73;
//     undefined field71_0x74;
//     undefined field72_0x75;
//     undefined field73_0x76;
//     undefined field74_0x77;
//     undefined field75_0x78;
//     undefined field76_0x79;
//     undefined field77_0x7a;
//     undefined field78_0x7b;
//     undefined field79_0x7c;
//     undefined field80_0x7d;
//     undefined field81_0x7e;
//     undefined field82_0x7f;
//     undefined field83_0x80;
//     undefined field84_0x81;
//     undefined field85_0x82;
//     undefined field86_0x83;
//     undefined field87_0x84;
//     undefined field88_0x85;
//     undefined field89_0x86;
//     undefined field90_0x87;
//     undefined field91_0x88;
//     undefined field92_0x89;
//     undefined field93_0x8a;
//     undefined field94_0x8b;
//     undefined field95_0x8c;
//     undefined field96_0x8d;
//     undefined field97_0x8e;
//     undefined field98_0x8f;
//     undefined field99_0x90;
//     undefined field100_0x91;
//     undefined field101_0x92;
//     undefined field102_0x93;
//     undefined field103_0x94;
//     undefined field104_0x95;
//     undefined field105_0x96;
//     undefined field106_0x97;
//     undefined field107_0x98;
//     undefined field108_0x99;
//     undefined field109_0x9a;
//     undefined field110_0x9b;
//     undefined field111_0x9c;
//     undefined field112_0x9d;
//     undefined field113_0x9e;
//     undefined field114_0x9f;
//     undefined field115_0xa0;
//     undefined field116_0xa1;
//     undefined field117_0xa2;
//     undefined field118_0xa3;
//     undefined field119_0xa4;
//     undefined field120_0xa5;
//     undefined field121_0xa6;
//     undefined field122_0xa7;
//     undefined field123_0xa8;
//     undefined field124_0xa9;
//     undefined field125_0xaa;
//     undefined field126_0xab;
//     undefined field127_0xac;
//     undefined field128_0xad;
//     undefined field129_0xae;
//     undefined field130_0xaf;
//     undefined field131_0xb0;
//     undefined field132_0xb1;
//     undefined field133_0xb2;
//     undefined field134_0xb3;
//     undefined field135_0xb4;
//     undefined field136_0xb5;
//     undefined field137_0xb6;
//     undefined field138_0xb7;
//     undefined field139_0xb8;
//     undefined field140_0xb9;
//     undefined field141_0xba;
//     undefined field142_0xbb;
//     undefined field143_0xbc;
//     undefined field144_0xbd;
//     undefined field145_0xbe;
//     undefined field146_0xbf;
//     undefined field147_0xc0;
//     undefined field148_0xc1;
//     undefined field149_0xc2;
//     undefined field150_0xc3;
//     undefined field151_0xc4;
//     undefined field152_0xc5;
//     undefined field153_0xc6;
//     undefined field154_0xc7;
//     undefined field155_0xc8;
//     undefined field156_0xc9;
//     undefined field157_0xca;
//     undefined field158_0xcb;
//     undefined field159_0xcc;
//     undefined field160_0xcd;
//     undefined field161_0xce;
//     undefined field162_0xcf;
//     undefined field163_0xd0;
//     undefined field164_0xd1;
//     undefined field165_0xd2;
//     undefined field166_0xd3;
//     undefined field167_0xd4;
//     undefined field168_0xd5;
//     undefined field169_0xd6;
//     undefined field170_0xd7;
//     undefined field171_0xd8;
//     undefined field172_0xd9;
//     undefined field173_0xda;
//     undefined field174_0xdb;
//     undefined field175_0xdc;
//     undefined field176_0xdd;
//     undefined field177_0xde;
//     undefined field178_0xdf;
//     undefined field179_0xe0;
//     undefined field180_0xe1;
//     undefined field181_0xe2;
//     undefined field182_0xe3;
//     undefined field183_0xe4;
//     undefined field184_0xe5;
//     undefined field185_0xe6;
//     undefined field186_0xe7;
//     undefined field187_0xe8;
//     undefined field188_0xe9;
//     undefined field189_0xea;
//     undefined field190_0xeb;
//     undefined field191_0xec;
//     undefined field192_0xed;
//     undefined field193_0xee;
//     undefined field194_0xef;
//     undefined field195_0xf0;
//     undefined field196_0xf1;
//     undefined field197_0xf2;
//     undefined field198_0xf3;
//     undefined field199_0xf4;
//     undefined field200_0xf5;
//     undefined field201_0xf6;
//     undefined field202_0xf7;
//     undefined field203_0xf8;
//     undefined field204_0xf9;
//     undefined field205_0xfa;
//     undefined field206_0xfb;
//     undefined field207_0xfc;
//     undefined field208_0xfd;
//     undefined field209_0xfe;
//     undefined field210_0xff;
//     undefined field211_0x100;
//     undefined field212_0x101;
//     undefined field213_0x102;
//     undefined field214_0x103;
//     undefined field215_0x104;
//     undefined field216_0x105;
//     undefined field217_0x106;
//     undefined field218_0x107;
//     undefined field219_0x108;
//     undefined field220_0x109;
//     undefined field221_0x10a;
//     undefined field222_0x10b;
//     undefined field223_0x10c;
//     undefined field224_0x10d;
//     undefined field225_0x10e;
//     undefined field226_0x10f;
//     undefined field227_0x110;
//     undefined field228_0x111;
//     undefined field229_0x112;
//     undefined field230_0x113;
//     undefined field231_0x114;
//     undefined field232_0x115;
//     undefined field233_0x116;
//     undefined field234_0x117;
//     undefined field235_0x118;
//     undefined field236_0x119;
//     undefined field237_0x11a;
//     undefined field238_0x11b;
//     undefined field239_0x11c;
//     undefined field240_0x11d;
//     undefined field241_0x11e;
//     undefined field242_0x11f;
//     undefined field243_0x120;
//     undefined field244_0x121;
//     undefined field245_0x122;
//     undefined field246_0x123;
//     undefined field247_0x124;
//     undefined field248_0x125;
//     undefined field249_0x126;
//     undefined field250_0x127;
//     undefined field251_0x128;
//     undefined field252_0x129;
//     undefined field253_0x12a;
//     undefined field254_0x12b;
//     undefined field255_0x12c;
//     undefined field256_0x12d;
//     undefined field257_0x12e;
//     undefined field258_0x12f;
//     undefined field259_0x130;
//     undefined field260_0x131;
//     undefined field261_0x132;
//     undefined field262_0x133;
//     undefined field263_0x134;
//     undefined field264_0x135;
//     undefined field265_0x136;
//     undefined field266_0x137;
//     undefined field267_0x138;
//     undefined field268_0x139;
//     undefined field269_0x13a;
//     undefined field270_0x13b;
//     undefined field271_0x13c;
//     undefined field272_0x13d;
//     undefined field273_0x13e;
//     undefined field274_0x13f;
//     undefined field275_0x140;
//     undefined field276_0x141;
//     undefined field277_0x142;
//     undefined field278_0x143;
//     undefined field279_0x144;
//     undefined field280_0x145;
//     undefined field281_0x146;
//     undefined field282_0x147;
//     undefined field283_0x148;
//     undefined field284_0x149;
//     undefined field285_0x14a;
//     undefined field286_0x14b;
//     undefined field287_0x14c;
//     undefined field288_0x14d;
//     undefined field289_0x14e;
//     undefined field290_0x14f;
//     undefined field291_0x150;
//     undefined field292_0x151;
//     undefined field293_0x152;
//     undefined field294_0x153;
//     undefined field295_0x154;
//     undefined field296_0x155;
//     undefined field297_0x156;
//     undefined field298_0x157;
//     undefined field299_0x158;
//     undefined field300_0x159;
//     undefined field301_0x15a;
//     undefined field302_0x15b;
//     undefined field303_0x15c;
//     undefined field304_0x15d;
//     undefined field305_0x15e;
//     undefined field306_0x15f;
//     undefined field307_0x160;
//     undefined field308_0x161;
//     undefined field309_0x162;
//     undefined field310_0x163;
//     undefined field311_0x164;
//     undefined field312_0x165;
//     undefined field313_0x166;
//     undefined field314_0x167;
//     undefined field315_0x168;
//     undefined field316_0x169;
//     undefined field317_0x16a;
//     undefined field318_0x16b;
//     undefined field319_0x16c;
//     undefined field320_0x16d;
//     undefined field321_0x16e;
//     undefined field322_0x16f;
//     undefined field323_0x170;
//     undefined field324_0x171;
//     undefined field325_0x172;
//     undefined field326_0x173;
//     undefined field327_0x174;
//     undefined field328_0x175;
//     undefined field329_0x176;
//     undefined field330_0x177;
//     undefined field331_0x178;
//     undefined field332_0x179;
//     undefined field333_0x17a;
//     undefined field334_0x17b;
//     undefined field335_0x17c;
//     undefined field336_0x17d;
//     undefined field337_0x17e;
//     undefined field338_0x17f;
//     undefined field339_0x180;
//     undefined field340_0x181;
//     undefined field341_0x182;
//     undefined field342_0x183;
//     undefined field343_0x184;
//     undefined field344_0x185;
//     undefined field345_0x186;
//     undefined field346_0x187;
//     undefined field347_0x188;
//     undefined field348_0x189;
//     undefined field349_0x18a;
//     undefined field350_0x18b;
//     undefined field351_0x18c;
//     undefined field352_0x18d;
//     undefined field353_0x18e;
//     undefined field354_0x18f;
//     undefined field355_0x190;
//     undefined field356_0x191;
//     undefined field357_0x192;
//     undefined field358_0x193;
//     undefined field359_0x194;
//     undefined field360_0x195;
//     undefined field361_0x196;
//     undefined field362_0x197;
//     undefined field363_0x198;
//     undefined field364_0x199;
//     undefined field365_0x19a;
//     undefined field366_0x19b;
//     undefined field367_0x19c;
//     undefined field368_0x19d;
//     undefined field369_0x19e;
//     undefined field370_0x19f;
//     undefined field371_0x1a0;
//     undefined field372_0x1a1;
//     undefined field373_0x1a2;
//     undefined field374_0x1a3;
//     undefined field375_0x1a4;
//     undefined field376_0x1a5;
//     undefined field377_0x1a6;
//     undefined field378_0x1a7;
//     undefined field379_0x1a8;
//     undefined field380_0x1a9;
//     undefined field381_0x1aa;
//     undefined field382_0x1ab;
//     undefined field383_0x1ac;
//     undefined field384_0x1ad;
//     undefined field385_0x1ae;
//     undefined field386_0x1af;
//     undefined field387_0x1b0;
//     undefined field388_0x1b1;
//     undefined field389_0x1b2;
//     undefined field390_0x1b3;
//     undefined field391_0x1b4;
//     undefined field392_0x1b5;
//     undefined field393_0x1b6;
//     undefined field394_0x1b7;
//     undefined field395_0x1b8;
//     undefined field396_0x1b9;
//     undefined field397_0x1ba;
//     undefined field398_0x1bb;
//     undefined field399_0x1bc;
//     undefined field400_0x1bd;
//     undefined field401_0x1be;
//     undefined field402_0x1bf;
//     undefined field403_0x1c0;
//     undefined field404_0x1c1;
//     undefined field405_0x1c2;
//     undefined field406_0x1c3;
//     undefined field407_0x1c4;
//     undefined field408_0x1c5;
//     undefined field409_0x1c6;
//     undefined field410_0x1c7;
//     undefined field411_0x1c8;
//     undefined field412_0x1c9;
//     undefined field413_0x1ca;
//     undefined field414_0x1cb;
//     undefined field415_0x1cc;
//     undefined field416_0x1cd;
//     undefined field417_0x1ce;
//     undefined field418_0x1cf;
//     undefined field419_0x1d0;
//     undefined field420_0x1d1;
//     undefined field421_0x1d2;
//     undefined field422_0x1d3;
//     undefined field423_0x1d4;
//     undefined field424_0x1d5;
//     undefined field425_0x1d6;
//     undefined field426_0x1d7;
//     undefined field427_0x1d8;
//     undefined field428_0x1d9;
//     undefined field429_0x1da;
//     undefined field430_0x1db;
//     undefined field431_0x1dc;
//     undefined field432_0x1dd;
//     undefined field433_0x1de;
//     undefined field434_0x1df;
//     undefined field435_0x1e0;
//     undefined field436_0x1e1;
//     undefined field437_0x1e2;
//     undefined field438_0x1e3;
//     undefined field439_0x1e4;
//     undefined field440_0x1e5;
//     undefined field441_0x1e6;
//     undefined field442_0x1e7;
//     undefined field443_0x1e8;
//     undefined field444_0x1e9;
//     undefined field445_0x1ea;
//     undefined field446_0x1eb;
//     undefined field447_0x1ec;
//     undefined field448_0x1ed;
//     undefined field449_0x1ee;
//     undefined field450_0x1ef;
//     undefined field451_0x1f0;
//     undefined field452_0x1f1;
//     undefined field453_0x1f2;
//     undefined field454_0x1f3;
//     undefined field455_0x1f4;
//     undefined field456_0x1f5;
//     undefined field457_0x1f6;
//     undefined field458_0x1f7;
//     undefined field459_0x1f8;
//     undefined field460_0x1f9;
//     undefined field461_0x1fa;
//     undefined field462_0x1fb;
//     undefined field463_0x1fc;
//     undefined field464_0x1fd;
//     undefined field465_0x1fe;
//     undefined field466_0x1ff;
//     undefined field467_0x200;
//     undefined field468_0x201;
//     undefined field469_0x202;
//     undefined field470_0x203;
//     undefined field471_0x204;
//     undefined field472_0x205;
//     undefined field473_0x206;
//     undefined field474_0x207;
//     undefined field475_0x208;
//     undefined field476_0x209;
//     undefined field477_0x20a;
//     undefined field478_0x20b;
//     undefined field479_0x20c;
//     undefined field480_0x20d;
//     undefined field481_0x20e;
//     undefined field482_0x20f;
//     undefined field483_0x210;
//     undefined field484_0x211;
//     undefined field485_0x212;
//     undefined field486_0x213;
//     undefined field487_0x214;
//     undefined field488_0x215;
//     undefined field489_0x216;
//     undefined field490_0x217;
//     undefined field491_0x218;
//     undefined field492_0x219;
//     undefined field493_0x21a;
//     undefined field494_0x21b;
//     undefined field495_0x21c;
//     undefined field496_0x21d;
//     undefined field497_0x21e;
//     undefined field498_0x21f;
//     undefined field499_0x220;
//     undefined field500_0x221;
//     undefined field501_0x222;
//     undefined field502_0x223;
//     undefined field503_0x224;
//     undefined field504_0x225;
//     undefined field505_0x226;
//     undefined field506_0x227;
//     undefined field507_0x228;
//     undefined field508_0x229;
//     undefined field509_0x22a;
//     undefined field510_0x22b;
//     undefined field511_0x22c;
//     undefined field512_0x22d;
//     undefined field513_0x22e;
//     undefined field514_0x22f;
//     undefined field515_0x230;
//     undefined field516_0x231;
//     undefined field517_0x232;
//     undefined field518_0x233;
//     undefined field519_0x234;
//     undefined field520_0x235;
//     undefined field521_0x236;
//     undefined field522_0x237;
//     undefined field523_0x238;
//     undefined field524_0x239;
//     undefined field525_0x23a;
//     undefined field526_0x23b;
//     undefined field527_0x23c;
//     undefined field528_0x23d;
//     undefined field529_0x23e;
//     undefined field530_0x23f;
//     undefined field531_0x240;
//     undefined field532_0x241;
//     undefined field533_0x242;
//     undefined field534_0x243;
//     undefined field535_0x244;
//     undefined field536_0x245;
//     undefined field537_0x246;
//     undefined field538_0x247;
//     undefined field539_0x248;
//     undefined field540_0x249;
//     undefined field541_0x24a;
//     undefined field542_0x24b;
//     undefined field543_0x24c;
//     undefined field544_0x24d;
//     undefined field545_0x24e;
//     undefined field546_0x24f;
//     undefined field547_0x250;
//     undefined field548_0x251;
//     undefined field549_0x252;
//     undefined field550_0x253;
//     undefined field551_0x254;
//     undefined field552_0x255;
//     undefined field553_0x256;
//     undefined field554_0x257;
//     undefined field555_0x258;
//     undefined field556_0x259;
//     undefined field557_0x25a;
//     undefined field558_0x25b;
//     undefined field559_0x25c;
//     undefined field560_0x25d;
//     undefined field561_0x25e;
//     undefined field562_0x25f;
//     undefined field563_0x260;
//     undefined field564_0x261;
//     undefined field565_0x262;
//     undefined field566_0x263;
//     undefined field567_0x264;
//     undefined field568_0x265;
//     undefined field569_0x266;
//     undefined field570_0x267;
//     undefined field571_0x268;
//     undefined field572_0x269;
//     undefined field573_0x26a;
//     undefined field574_0x26b;
//     undefined field575_0x26c;
//     undefined field576_0x26d;
//     undefined field577_0x26e;
//     undefined field578_0x26f;
//     undefined field579_0x270;
//     undefined field580_0x271;
//     undefined field581_0x272;
//     undefined field582_0x273;
//     undefined field583_0x274;
//     undefined field584_0x275;
//     undefined field585_0x276;
//     undefined field586_0x277;
//     undefined field587_0x278;
//     undefined field588_0x279;
//     undefined field589_0x27a;
//     undefined field590_0x27b;
//     undefined field591_0x27c;
//     undefined field592_0x27d;
//     undefined field593_0x27e;
//     undefined field594_0x27f;
//     undefined field595_0x280;
//     undefined field596_0x281;
//     undefined field597_0x282;
//     undefined field598_0x283;
//     undefined field599_0x284;
//     undefined field600_0x285;
//     undefined field601_0x286;
//     undefined field602_0x287;
//     undefined field603_0x288;
//     undefined field604_0x289;
//     undefined field605_0x28a;
//     undefined field606_0x28b;
//     undefined field607_0x28c;
//     undefined field608_0x28d;
//     undefined field609_0x28e;
//     undefined field610_0x28f;
//     undefined field611_0x290;
//     undefined field612_0x291;
//     undefined field613_0x292;
//     undefined field614_0x293;
//     undefined field615_0x294;
//     undefined field616_0x295;
//     undefined field617_0x296;
//     undefined field618_0x297;
//     undefined field619_0x298;
//     undefined field620_0x299;
//     undefined field621_0x29a;
//     undefined field622_0x29b;
//     undefined field623_0x29c;
//     undefined field624_0x29d;
//     undefined field625_0x29e;
//     undefined field626_0x29f;
//     undefined field627_0x2a0;
//     undefined field628_0x2a1;
//     undefined field629_0x2a2;
//     undefined field630_0x2a3;
//     undefined field631_0x2a4;
//     undefined field632_0x2a5;
//     undefined field633_0x2a6;
//     undefined field634_0x2a7;
//     undefined field635_0x2a8;
//     undefined field636_0x2a9;
//     undefined field637_0x2aa;
//     undefined field638_0x2ab;
//     undefined field639_0x2ac;
//     undefined field640_0x2ad;
//     undefined field641_0x2ae;
//     undefined field642_0x2af;
//     undefined field643_0x2b0;
//     undefined field644_0x2b1;
//     undefined field645_0x2b2;
//     undefined field646_0x2b3;
//     undefined field647_0x2b4;
//     undefined field648_0x2b5;
//     undefined field649_0x2b6;
//     undefined field650_0x2b7;
//     undefined field651_0x2b8;
//     undefined field652_0x2b9;
//     undefined field653_0x2ba;
//     undefined field654_0x2bb;
//     undefined field655_0x2bc;
//     undefined field656_0x2bd;
//     undefined field657_0x2be;
//     undefined field658_0x2bf;
//     undefined field659_0x2c0;
//     undefined field660_0x2c1;
//     undefined field661_0x2c2;
//     undefined field662_0x2c3;
//     undefined field663_0x2c4;
//     undefined field664_0x2c5;
//     undefined field665_0x2c6;
//     undefined field666_0x2c7;
//     undefined field667_0x2c8;
//     undefined field668_0x2c9;
//     undefined field669_0x2ca;
//     undefined field670_0x2cb;
//     undefined field671_0x2cc;
//     undefined field672_0x2cd;
//     undefined field673_0x2ce;
//     undefined field674_0x2cf;
//     undefined field675_0x2d0;
//     undefined field676_0x2d1;
//     undefined field677_0x2d2;
//     undefined field678_0x2d3;
//     undefined field679_0x2d4;
//     undefined field680_0x2d5;
//     undefined field681_0x2d6;
//     undefined field682_0x2d7;
//     undefined field683_0x2d8;
//     undefined field684_0x2d9;
//     undefined field685_0x2da;
//     undefined field686_0x2db;
//     undefined field687_0x2dc;
//     undefined field688_0x2dd;
//     undefined field689_0x2de;
//     undefined field690_0x2df;
//     undefined field691_0x2e0;
//     undefined field692_0x2e1;
//     undefined field693_0x2e2;
//     undefined field694_0x2e3;
//     undefined field695_0x2e4;
//     undefined field696_0x2e5;
//     undefined field697_0x2e6;
//     undefined field698_0x2e7;
//     undefined field699_0x2e8;
//     undefined field700_0x2e9;
//     undefined field701_0x2ea;
//     undefined field702_0x2eb;
//     undefined field703_0x2ec;
//     undefined field704_0x2ed;
//     undefined field705_0x2ee;
//     undefined field706_0x2ef;
//     undefined field707_0x2f0;
//     undefined field708_0x2f1;
//     undefined field709_0x2f2;
//     undefined field710_0x2f3;
//     undefined field711_0x2f4;
//     undefined field712_0x2f5;
//     undefined field713_0x2f6;
//     undefined field714_0x2f7;
//     undefined field715_0x2f8;
//     undefined field716_0x2f9;
//     undefined field717_0x2fa;
//     undefined field718_0x2fb;
//     undefined field719_0x2fc;
//     undefined field720_0x2fd;
//     undefined field721_0x2fe;
//     undefined field722_0x2ff;
//     undefined field723_0x300;
//     undefined field724_0x301;
//     undefined field725_0x302;
//     undefined field726_0x303;
//     undefined field727_0x304;
//     undefined field728_0x305;
//     undefined field729_0x306;
//     undefined field730_0x307;
//     undefined field731_0x308;
//     undefined field732_0x309;
//     undefined field733_0x30a;
//     undefined field734_0x30b;
//     undefined field735_0x30c;
//     undefined field736_0x30d;
//     undefined field737_0x30e;
//     undefined field738_0x30f;
//     undefined field739_0x310;
//     undefined field740_0x311;
//     undefined field741_0x312;
//     undefined field742_0x313;
//     undefined field743_0x314;
//     undefined field744_0x315;
//     undefined field745_0x316;
//     undefined field746_0x317;
//     undefined field747_0x318;
//     undefined field748_0x319;
//     undefined field749_0x31a;
//     undefined field750_0x31b;
//     undefined field751_0x31c;
//     undefined field752_0x31d;
//     undefined field753_0x31e;
//     undefined field754_0x31f;
//     undefined field755_0x320;
//     undefined field756_0x321;
//     undefined field757_0x322;
//     undefined field758_0x323;
//     undefined field759_0x324;
//     undefined field760_0x325;
//     undefined field761_0x326;
//     undefined field762_0x327;
//     undefined field763_0x328;
//     undefined field764_0x329;
//     undefined field765_0x32a;
//     undefined field766_0x32b;
//     undefined field767_0x32c;
//     undefined field768_0x32d;
//     undefined field769_0x32e;
//     undefined field770_0x32f;
//     undefined field771_0x330;
//     undefined field772_0x331;
//     undefined field773_0x332;
//     undefined field774_0x333;
//     undefined field775_0x334;
//     undefined field776_0x335;
//     undefined field777_0x336;
//     undefined field778_0x337;
//     undefined field779_0x338;
//     undefined field780_0x339;
//     undefined field781_0x33a;
//     undefined field782_0x33b;
//     undefined field783_0x33c;
//     undefined field784_0x33d;
//     undefined field785_0x33e;
//     undefined field786_0x33f;
//     undefined field787_0x340;
//     undefined field788_0x341;
//     undefined field789_0x342;
//     undefined field790_0x343;
//     undefined field791_0x344;
//     undefined field792_0x345;
//     undefined field793_0x346;
//     undefined field794_0x347;
//     undefined field795_0x348;
//     undefined field796_0x349;
//     undefined field797_0x34a;
//     undefined field798_0x34b;
//     undefined field799_0x34c;
//     undefined field800_0x34d;
//     undefined field801_0x34e;
//     undefined field802_0x34f;
//     undefined field803_0x350;
//     undefined field804_0x351;
//     undefined field805_0x352;
//     undefined field806_0x353;
//     undefined field807_0x354;
//     undefined field808_0x355;
//     undefined field809_0x356;
//     undefined field810_0x357;
//     undefined field811_0x358;
//     undefined field812_0x359;
//     undefined field813_0x35a;
//     undefined field814_0x35b;
//     undefined field815_0x35c;
//     undefined field816_0x35d;
//     undefined field817_0x35e;
//     undefined field818_0x35f;
//     undefined field819_0x360;
//     undefined field820_0x361;
//     undefined field821_0x362;
//     undefined field822_0x363;
//     undefined field823_0x364;
//     undefined field824_0x365;
//     undefined field825_0x366;
//     undefined field826_0x367;
//     undefined field827_0x368;
//     undefined field828_0x369;
//     undefined field829_0x36a;
//     undefined field830_0x36b;
//     undefined field831_0x36c;
//     undefined field832_0x36d;
//     undefined field833_0x36e;
//     undefined field834_0x36f;
//     undefined field835_0x370;
//     undefined field836_0x371;
//     undefined field837_0x372;
//     undefined field838_0x373;
//     undefined field839_0x374;
//     undefined field840_0x375;
//     undefined field841_0x376;
//     undefined field842_0x377;
//     undefined field843_0x378;
//     undefined field844_0x379;
//     undefined field845_0x37a;
//     undefined field846_0x37b;
//     undefined field847_0x37c;
//     undefined field848_0x37d;
//     undefined field849_0x37e;
//     undefined field850_0x37f;
//     undefined field851_0x380;
//     undefined field852_0x381;
//     undefined field853_0x382;
//     undefined field854_0x383;
//     undefined field855_0x384;
//     undefined field856_0x385;
//     undefined field857_0x386;
//     undefined field858_0x387;
//     undefined field859_0x388;
//     undefined field860_0x389;
//     undefined field861_0x38a;
//     undefined field862_0x38b;
//     undefined field863_0x38c;
//     undefined field864_0x38d;
//     undefined field865_0x38e;
//     undefined field866_0x38f;
//     undefined field867_0x390;
//     undefined field868_0x391;
//     undefined field869_0x392;
//     undefined field870_0x393;
//     undefined field871_0x394;
//     undefined field872_0x395;
//     undefined field873_0x396;
//     undefined field874_0x397;
//     undefined field875_0x398;
//     undefined field876_0x399;
//     undefined field877_0x39a;
//     undefined field878_0x39b;
//     undefined field879_0x39c;
//     undefined field880_0x39d;
//     undefined field881_0x39e;
//     undefined field882_0x39f;
//     undefined field883_0x3a0;
//     undefined field884_0x3a1;
//     undefined field885_0x3a2;
//     undefined field886_0x3a3;
//     undefined field887_0x3a4;
//     undefined field888_0x3a5;
//     undefined field889_0x3a6;
//     undefined field890_0x3a7;
//     undefined field891_0x3a8;
//     undefined field892_0x3a9;
//     undefined field893_0x3aa;
//     undefined field894_0x3ab;
//     undefined field895_0x3ac;
//     undefined field896_0x3ad;
//     undefined field897_0x3ae;
//     undefined field898_0x3af;
//     undefined field899_0x3b0;
//     undefined field900_0x3b1;
//     undefined field901_0x3b2;
//     undefined field902_0x3b3;
//     undefined field903_0x3b4;
//     undefined field904_0x3b5;
//     undefined field905_0x3b6;
//     undefined field906_0x3b7;
//     undefined field907_0x3b8;
//     undefined field908_0x3b9;
//     undefined field909_0x3ba;
//     undefined field910_0x3bb;
//     undefined field911_0x3bc;
//     undefined field912_0x3bd;
//     undefined field913_0x3be;
//     undefined field914_0x3bf;
//     undefined field915_0x3c0;
//     undefined field916_0x3c1;
//     undefined field917_0x3c2;
//     undefined field918_0x3c3;
//     undefined field919_0x3c4;
//     undefined field920_0x3c5;
//     undefined field921_0x3c6;
//     undefined field922_0x3c7;
//     undefined field923_0x3c8;
//     undefined field924_0x3c9;
//     undefined field925_0x3ca;
//     undefined field926_0x3cb;
//     undefined field927_0x3cc;
//     undefined field928_0x3cd;
//     undefined field929_0x3ce;
//     undefined field930_0x3cf;
//     undefined field931_0x3d0;
//     undefined field932_0x3d1;
//     undefined field933_0x3d2;
//     undefined field934_0x3d3;
//     undefined field935_0x3d4;
//     undefined field936_0x3d5;
//     undefined field937_0x3d6;
//     undefined field938_0x3d7;
//     undefined field939_0x3d8;
//     undefined field940_0x3d9;
//     undefined field941_0x3da;
//     undefined field942_0x3db;
//     undefined field943_0x3dc;
//     undefined field944_0x3dd;
//     undefined field945_0x3de;
//     undefined field946_0x3df;
//     undefined field947_0x3e0;
//     undefined field948_0x3e1;
//     undefined field949_0x3e2;
//     undefined field950_0x3e3;
//     undefined field951_0x3e4;
//     undefined field952_0x3e5;
//     undefined field953_0x3e6;
//     undefined field954_0x3e7;
//     undefined field955_0x3e8;
//     undefined field956_0x3e9;
//     undefined field957_0x3ea;
//     undefined field958_0x3eb;
//     undefined field959_0x3ec;
//     undefined field960_0x3ed;
//     undefined field961_0x3ee;
//     undefined field962_0x3ef;
//     undefined field963_0x3f0;
//     undefined field964_0x3f1;
//     undefined field965_0x3f2;
//     undefined field966_0x3f3;
//     undefined field967_0x3f4;
//     undefined field968_0x3f5;
//     undefined field969_0x3f6;
//     undefined field970_0x3f7;
//     undefined field971_0x3f8;
//     undefined field972_0x3f9;
//     undefined field973_0x3fa;
//     undefined field974_0x3fb;
//     undefined field975_0x3fc;
//     undefined field976_0x3fd;
//     undefined field977_0x3fe;
//     undefined field978_0x3ff;
//     undefined field979_0x400;
//     undefined field980_0x401;
//     undefined field981_0x402;
//     undefined field982_0x403;
//     undefined field983_0x404;
//     undefined field984_0x405;
//     undefined field985_0x406;
//     undefined field986_0x407;
//     undefined field987_0x408;
//     undefined field988_0x409;
//     undefined field989_0x40a;
//     undefined field990_0x40b;
//     undefined field991_0x40c;
//     undefined field992_0x40d;
//     undefined field993_0x40e;
//     undefined field994_0x40f;
//     undefined field995_0x410;
//     undefined field996_0x411;
//     undefined field997_0x412;
//     undefined field998_0x413;
//     undefined field999_0x414;
//     undefined field1000_0x415;
//     undefined field1001_0x416;
//     undefined field1002_0x417;
//     undefined field1003_0x418;
//     undefined field1004_0x419;
//     undefined field1005_0x41a;
//     undefined field1006_0x41b;
//     undefined field1007_0x41c;
//     undefined field1008_0x41d;
//     undefined field1009_0x41e;
//     undefined field1010_0x41f;
//     undefined field1011_0x420;
//     undefined field1012_0x421;
//     undefined field1013_0x422;
//     undefined field1014_0x423;
//     undefined field1015_0x424;
//     undefined field1016_0x425;
//     undefined field1017_0x426;
//     undefined field1018_0x427;
//     undefined field1019_0x428;
//     undefined field1020_0x429;
//     undefined field1021_0x42a;
//     undefined field1022_0x42b;
//     undefined field1023_0x42c;
//     undefined field1024_0x42d;
//     undefined field1025_0x42e;
//     undefined field1026_0x42f;
//     undefined field1027_0x430;
//     undefined field1028_0x431;
//     undefined field1029_0x432;
//     undefined field1030_0x433;
//     undefined field1031_0x434;
//     undefined field1032_0x435;
//     undefined field1033_0x436;
//     undefined field1034_0x437;
//     undefined field1035_0x438;
//     undefined field1036_0x439;
//     undefined field1037_0x43a;
//     undefined field1038_0x43b;
//     undefined field1039_0x43c;
//     undefined field1040_0x43d;
//     undefined field1041_0x43e;
//     undefined field1042_0x43f;
//     undefined field1043_0x440;
//     undefined field1044_0x441;
//     undefined field1045_0x442;
//     undefined field1046_0x443;
//     undefined field1047_0x444;
//     undefined field1048_0x445;
//     undefined field1049_0x446;
//     undefined field1050_0x447;
//     undefined field1051_0x448;
//     undefined field1052_0x449;
//     undefined field1053_0x44a;
//     undefined field1054_0x44b;
//     undefined field1055_0x44c;
//     undefined field1056_0x44d;
//     undefined field1057_0x44e;
//     undefined field1058_0x44f;
//     undefined field1059_0x450;
//     undefined field1060_0x451;
//     undefined field1061_0x452;
//     undefined field1062_0x453;
//     undefined field1063_0x454;
//     undefined field1064_0x455;
//     undefined field1065_0x456;
//     undefined field1066_0x457;
//     undefined field1067_0x458;
//     undefined field1068_0x459;
//     undefined field1069_0x45a;
//     undefined field1070_0x45b;
//     undefined field1071_0x45c;
//     undefined field1072_0x45d;
//     undefined field1073_0x45e;
//     undefined field1074_0x45f;
//     undefined field1075_0x460;
//     undefined field1076_0x461;
//     undefined field1077_0x462;
//     undefined field1078_0x463;
//     undefined field1079_0x464;
//     undefined field1080_0x465;
//     undefined field1081_0x466;
//     undefined field1082_0x467;
//     undefined field1083_0x468;
//     undefined field1084_0x469;
//     undefined field1085_0x46a;
//     undefined field1086_0x46b;
//     undefined field1087_0x46c;
//     undefined field1088_0x46d;
//     undefined field1089_0x46e;
//     undefined field1090_0x46f;
//     undefined field1091_0x470;
//     undefined field1092_0x471;
//     undefined field1093_0x472;
//     undefined field1094_0x473;
//     undefined field1095_0x474;
//     undefined field1096_0x475;
//     undefined field1097_0x476;
//     undefined field1098_0x477;
//     undefined field1099_0x478;
//     undefined field1100_0x479;
//     undefined field1101_0x47a;
//     undefined field1102_0x47b;
//     undefined field1103_0x47c;
//     undefined field1104_0x47d;
//     undefined field1105_0x47e;
//     undefined field1106_0x47f;
//     undefined field1107_0x480;
//     undefined field1108_0x481;
//     undefined field1109_0x482;
//     undefined field1110_0x483;
//     undefined field1111_0x484;
//     undefined field1112_0x485;
//     undefined field1113_0x486;
//     undefined field1114_0x487;
//     undefined field1115_0x488;
//     undefined field1116_0x489;
//     undefined field1117_0x48a;
//     undefined field1118_0x48b;
//     undefined field1119_0x48c;
//     undefined field1120_0x48d;
//     undefined field1121_0x48e;
//     undefined field1122_0x48f;
//     undefined field1123_0x490;
//     undefined field1124_0x491;
//     undefined field1125_0x492;
//     undefined field1126_0x493;
//     undefined field1127_0x494;
//     undefined field1128_0x495;
//     undefined field1129_0x496;
//     undefined field1130_0x497;
//     undefined field1131_0x498;
//     undefined field1132_0x499;
//     undefined field1133_0x49a;
//     undefined field1134_0x49b;
//     undefined field1135_0x49c;
//     undefined field1136_0x49d;
//     undefined field1137_0x49e;
//     undefined field1138_0x49f;
//     undefined field1139_0x4a0;
//     undefined field1140_0x4a1;
//     undefined field1141_0x4a2;
//     undefined field1142_0x4a3;
//     undefined field1143_0x4a4;
//     undefined field1144_0x4a5;
//     undefined field1145_0x4a6;
//     undefined field1146_0x4a7;
//     undefined field1147_0x4a8;
//     undefined field1148_0x4a9;
//     undefined field1149_0x4aa;
//     undefined field1150_0x4ab;
//     undefined field1151_0x4ac;
//     undefined field1152_0x4ad;
//     undefined field1153_0x4ae;
//     undefined field1154_0x4af;
//     undefined field1155_0x4b0;
//     undefined field1156_0x4b1;
//     undefined field1157_0x4b2;
//     undefined field1158_0x4b3;
//     undefined field1159_0x4b4;
//     undefined field1160_0x4b5;
//     undefined field1161_0x4b6;
//     undefined field1162_0x4b7;
//     undefined field1163_0x4b8;
//     undefined field1164_0x4b9;
//     undefined field1165_0x4ba;
//     undefined field1166_0x4bb;
//     undefined field1167_0x4bc;
//     undefined field1168_0x4bd;
//     undefined field1169_0x4be;
//     undefined field1170_0x4bf;
//     undefined field1171_0x4c0;
//     undefined field1172_0x4c1;
//     undefined field1173_0x4c2;
//     undefined field1174_0x4c3;
//     undefined field1175_0x4c4;
//     undefined field1176_0x4c5;
//     undefined field1177_0x4c6;
//     undefined field1178_0x4c7;
//     undefined field1179_0x4c8;
//     undefined field1180_0x4c9;
//     undefined field1181_0x4ca;
//     undefined field1182_0x4cb;
//     undefined field1183_0x4cc;
//     undefined field1184_0x4cd;
//     undefined field1185_0x4ce;
//     undefined field1186_0x4cf;
//     undefined field1187_0x4d0;
//     undefined field1188_0x4d1;
//     undefined field1189_0x4d2;
//     undefined field1190_0x4d3;
//     undefined field1191_0x4d4;
//     undefined field1192_0x4d5;
//     undefined field1193_0x4d6;
//     undefined field1194_0x4d7;
//     undefined field1195_0x4d8;
//     undefined field1196_0x4d9;
//     undefined field1197_0x4da;
//     undefined field1198_0x4db;
//     undefined field1199_0x4dc;
//     undefined field1200_0x4dd;
//     undefined field1201_0x4de;
//     undefined field1202_0x4df;
//     undefined field1203_0x4e0;
//     undefined field1204_0x4e1;
//     undefined field1205_0x4e2;
//     undefined field1206_0x4e3;
//     undefined field1207_0x4e4;
//     undefined field1208_0x4e5;
//     undefined field1209_0x4e6;
//     undefined field1210_0x4e7;
//     undefined field1211_0x4e8;
//     undefined field1212_0x4e9;
//     undefined field1213_0x4ea;
//     undefined field1214_0x4eb;
//     undefined field1215_0x4ec;
//     undefined field1216_0x4ed;
//     undefined field1217_0x4ee;
//     undefined field1218_0x4ef;
//     undefined field1219_0x4f0;
//     undefined field1220_0x4f1;
//     undefined field1221_0x4f2;
//     undefined field1222_0x4f3;
//     undefined field1223_0x4f4;
//     undefined field1224_0x4f5;
//     undefined field1225_0x4f6;
//     undefined field1226_0x4f7;
//     undefined field1227_0x4f8;
//     undefined field1228_0x4f9;
//     undefined field1229_0x4fa;
//     undefined field1230_0x4fb;
//     undefined field1231_0x4fc;
//     undefined field1232_0x4fd;
//     undefined field1233_0x4fe;
//     undefined field1234_0x4ff;
//     undefined field1235_0x500;
//     undefined field1236_0x501;
//     undefined field1237_0x502;
//     undefined field1238_0x503;
//     undefined field1239_0x504;
//     undefined field1240_0x505;
//     undefined field1241_0x506;
//     undefined field1242_0x507;
//     undefined field1243_0x508;
//     undefined field1244_0x509;
//     undefined field1245_0x50a;
//     undefined field1246_0x50b;
//     undefined field1247_0x50c;
//     undefined field1248_0x50d;
//     undefined field1249_0x50e;
//     undefined field1250_0x50f;
//     undefined field1251_0x510;
//     undefined field1252_0x511;
//     undefined field1253_0x512;
//     undefined field1254_0x513;
//     undefined field1255_0x514;
//     undefined field1256_0x515;
//     undefined field1257_0x516;
//     undefined field1258_0x517;
//     undefined field1259_0x518;
//     undefined field1260_0x519;
//     undefined field1261_0x51a;
//     undefined field1262_0x51b;
//     undefined field1263_0x51c;
//     undefined field1264_0x51d;
//     undefined field1265_0x51e;
//     undefined field1266_0x51f;
//     undefined field1267_0x520;
//     undefined field1268_0x521;
//     undefined field1269_0x522;
//     undefined field1270_0x523;
//     undefined field1271_0x524;
//     undefined field1272_0x525;
//     undefined field1273_0x526;
//     undefined field1274_0x527;
//     undefined field1275_0x528;
//     undefined field1276_0x529;
//     undefined field1277_0x52a;
//     undefined field1278_0x52b;
//     undefined field1279_0x52c;
//     undefined field1280_0x52d;
//     undefined field1281_0x52e;
//     undefined field1282_0x52f;
//     undefined field1283_0x530;
//     undefined field1284_0x531;
//     undefined field1285_0x532;
//     undefined field1286_0x533;
//     undefined field1287_0x534;
//     undefined field1288_0x535;
//     undefined field1289_0x536;
//     undefined field1290_0x537;
//     undefined field1291_0x538;
//     undefined field1292_0x539;
//     undefined field1293_0x53a;
//     undefined field1294_0x53b;
//     undefined field1295_0x53c;
//     undefined field1296_0x53d;
//     undefined field1297_0x53e;
//     undefined field1298_0x53f;
//     undefined field1299_0x540;
//     undefined field1300_0x541;
//     undefined field1301_0x542;
//     undefined field1302_0x543;
//     undefined field1303_0x544;
//     undefined field1304_0x545;
//     undefined field1305_0x546;
//     undefined field1306_0x547;
//     undefined field1307_0x548;
//     undefined field1308_0x549;
//     undefined field1309_0x54a;
//     undefined field1310_0x54b;
//     undefined field1311_0x54c;
//     undefined field1312_0x54d;
//     undefined field1313_0x54e;
//     undefined field1314_0x54f;
//     undefined field1315_0x550;
//     undefined field1316_0x551;
//     undefined field1317_0x552;
//     undefined field1318_0x553;
//     undefined field1319_0x554;
//     undefined field1320_0x555;
//     undefined field1321_0x556;
//     undefined field1322_0x557;
//     undefined field1323_0x558;
//     undefined field1324_0x559;
//     undefined field1325_0x55a;
//     undefined field1326_0x55b;
//     undefined field1327_0x55c;
//     undefined field1328_0x55d;
//     undefined field1329_0x55e;
//     undefined field1330_0x55f;
//     undefined field1331_0x560;
//     undefined field1332_0x561;
//     undefined field1333_0x562;
//     undefined field1334_0x563;
//     undefined field1335_0x564;
//     undefined field1336_0x565;
//     undefined field1337_0x566;
//     undefined field1338_0x567;
//     undefined field1339_0x568;
//     undefined field1340_0x569;
//     undefined field1341_0x56a;
//     undefined field1342_0x56b;
//     undefined field1343_0x56c;
//     undefined field1344_0x56d;
//     undefined field1345_0x56e;
//     undefined field1346_0x56f;
//     undefined field1347_0x570;
//     undefined field1348_0x571;
//     undefined field1349_0x572;
//     undefined field1350_0x573;
//     undefined field1351_0x574;
//     undefined field1352_0x575;
//     undefined field1353_0x576;
//     undefined field1354_0x577;
//     undefined field1355_0x578;
//     undefined field1356_0x579;
//     undefined field1357_0x57a;
//     undefined field1358_0x57b;
//     undefined field1359_0x57c;
//     undefined field1360_0x57d;
//     undefined field1361_0x57e;
//     undefined field1362_0x57f;
//     undefined field1363_0x580;
//     undefined field1364_0x581;
//     undefined field1365_0x582;
//     undefined field1366_0x583;
//     undefined field1367_0x584;
//     undefined field1368_0x585;
//     undefined field1369_0x586;
//     undefined field1370_0x587;
//     undefined field1371_0x588;
//     undefined field1372_0x589;
//     undefined field1373_0x58a;
//     undefined field1374_0x58b;
//     undefined field1375_0x58c;
//     undefined field1376_0x58d;
//     undefined field1377_0x58e;
//     undefined field1378_0x58f;
//     undefined field1379_0x590;
//     undefined field1380_0x591;
//     undefined field1381_0x592;
//     undefined field1382_0x593;
//     undefined field1383_0x594;
//     undefined field1384_0x595;
//     undefined field1385_0x596;
//     undefined field1386_0x597;
//     undefined field1387_0x598;
//     undefined field1388_0x599;
//     undefined field1389_0x59a;
//     undefined field1390_0x59b;
//     undefined field1391_0x59c;
//     undefined field1392_0x59d;
//     undefined field1393_0x59e;
//     undefined field1394_0x59f;
//     undefined field1395_0x5a0;
//     undefined field1396_0x5a1;
//     undefined field1397_0x5a2;
//     undefined field1398_0x5a3;
//     undefined field1399_0x5a4;
//     undefined field1400_0x5a5;
//     undefined field1401_0x5a6;
//     undefined field1402_0x5a7;
//     undefined field1403_0x5a8;
//     undefined field1404_0x5a9;
//     undefined field1405_0x5aa;
//     undefined field1406_0x5ab;
//     undefined field1407_0x5ac;
//     undefined field1408_0x5ad;
//     undefined field1409_0x5ae;
//     undefined field1410_0x5af;
//     undefined field1411_0x5b0;
//     undefined field1412_0x5b1;
//     undefined field1413_0x5b2;
//     undefined field1414_0x5b3;
//     undefined field1415_0x5b4;
//     undefined field1416_0x5b5;
//     undefined field1417_0x5b6;
//     undefined field1418_0x5b7;
//     undefined field1419_0x5b8;
//     undefined field1420_0x5b9;
//     undefined field1421_0x5ba;
//     undefined field1422_0x5bb;
//     undefined field1423_0x5bc;
//     undefined field1424_0x5bd;
//     undefined field1425_0x5be;
//     undefined field1426_0x5bf;
//     undefined field1427_0x5c0;
//     undefined field1428_0x5c1;
//     undefined field1429_0x5c2;
//     undefined field1430_0x5c3;
//     undefined field1431_0x5c4;
//     undefined field1432_0x5c5;
//     undefined field1433_0x5c6;
//     undefined field1434_0x5c7;
//     undefined field1435_0x5c8;
//     undefined field1436_0x5c9;
//     undefined field1437_0x5ca;
//     undefined field1438_0x5cb;
//     undefined field1439_0x5cc;
//     undefined field1440_0x5cd;
//     undefined field1441_0x5ce;
//     undefined field1442_0x5cf;
//     undefined field1443_0x5d0;
//     undefined field1444_0x5d1;
//     undefined field1445_0x5d2;
//     undefined field1446_0x5d3;
//     undefined field1447_0x5d4;
//     undefined field1448_0x5d5;
//     undefined field1449_0x5d6;
//     undefined field1450_0x5d7;
//     undefined field1451_0x5d8;
//     undefined field1452_0x5d9;
//     undefined field1453_0x5da;
//     undefined field1454_0x5db;
//     undefined field1455_0x5dc;
//     undefined field1456_0x5dd;
//     undefined field1457_0x5de;
//     undefined field1458_0x5df;
//     undefined field1459_0x5e0;
//     undefined field1460_0x5e1;
//     undefined field1461_0x5e2;
//     undefined field1462_0x5e3;
//     undefined field1463_0x5e4;
//     undefined field1464_0x5e5;
//     undefined field1465_0x5e6;
//     undefined field1466_0x5e7;
//     undefined field1467_0x5e8;
//     undefined field1468_0x5e9;
//     undefined field1469_0x5ea;
//     undefined field1470_0x5eb;
//     undefined field1471_0x5ec;
//     undefined field1472_0x5ed;
//     undefined field1473_0x5ee;
//     undefined field1474_0x5ef;
//     undefined field1475_0x5f0;
//     undefined field1476_0x5f1;
//     undefined field1477_0x5f2;
//     undefined field1478_0x5f3;
//     undefined field1479_0x5f4;
//     undefined field1480_0x5f5;
//     undefined field1481_0x5f6;
//     undefined field1482_0x5f7;
//     undefined field1483_0x5f8;
//     undefined field1484_0x5f9;
//     undefined field1485_0x5fa;
//     undefined field1486_0x5fb;
//     undefined field1487_0x5fc;
//     undefined field1488_0x5fd;
//     undefined field1489_0x5fe;
//     undefined field1490_0x5ff;
//     undefined field1491_0x600;
//     undefined field1492_0x601;
//     undefined field1493_0x602;
//     undefined field1494_0x603;
//     undefined field1495_0x604;
//     undefined field1496_0x605;
//     undefined field1497_0x606;
//     undefined field1498_0x607;
//     undefined field1499_0x608;
//     undefined field1500_0x609;
//     undefined field1501_0x60a;
//     undefined field1502_0x60b;
//     undefined field1503_0x60c;
//     undefined field1504_0x60d;
//     undefined field1505_0x60e;
//     undefined field1506_0x60f;
//     undefined field1507_0x610;
//     undefined field1508_0x611;
//     undefined field1509_0x612;
//     undefined field1510_0x613;
//     undefined field1511_0x614;
//     undefined field1512_0x615;
//     undefined field1513_0x616;
//     undefined field1514_0x617;
//     undefined field1515_0x618;
//     undefined field1516_0x619;
//     undefined field1517_0x61a;
//     undefined field1518_0x61b;
//     undefined field1519_0x61c;
//     undefined field1520_0x61d;
//     undefined field1521_0x61e;
//     undefined field1522_0x61f;
//     undefined field1523_0x620;
//     undefined field1524_0x621;
//     undefined field1525_0x622;
//     undefined field1526_0x623;
//     undefined field1527_0x624;
//     undefined field1528_0x625;
//     undefined field1529_0x626;
//     undefined field1530_0x627;
//     undefined field1531_0x628;
//     undefined field1532_0x629;
//     undefined field1533_0x62a;
//     undefined field1534_0x62b;
//     undefined field1535_0x62c;
//     undefined field1536_0x62d;
//     undefined field1537_0x62e;
//     undefined field1538_0x62f;
//     undefined field1539_0x630;
//     undefined field1540_0x631;
//     undefined field1541_0x632;
//     undefined field1542_0x633;
//     undefined field1543_0x634;
//     undefined field1544_0x635;
//     undefined field1545_0x636;
//     undefined field1546_0x637;
//     undefined field1547_0x638;
//     undefined field1548_0x639;
//     undefined field1549_0x63a;
//     undefined field1550_0x63b;
//     undefined field1551_0x63c;
//     undefined field1552_0x63d;
//     undefined field1553_0x63e;
//     undefined field1554_0x63f;
//     undefined field1555_0x640;
//     undefined field1556_0x641;
//     undefined field1557_0x642;
//     undefined field1558_0x643;
//     undefined field1559_0x644;
//     undefined field1560_0x645;
//     undefined field1561_0x646;
//     undefined field1562_0x647;
//     undefined field1563_0x648;
//     undefined field1564_0x649;
//     undefined field1565_0x64a;
//     undefined field1566_0x64b;
//     undefined field1567_0x64c;
//     undefined field1568_0x64d;
//     undefined field1569_0x64e;
//     undefined field1570_0x64f;
//     undefined field1571_0x650;
//     undefined field1572_0x651;
//     undefined field1573_0x652;
//     undefined field1574_0x653;
//     undefined field1575_0x654;
//     undefined field1576_0x655;
//     undefined field1577_0x656;
//     undefined field1578_0x657;
//     undefined field1579_0x658;
//     undefined field1580_0x659;
//     undefined field1581_0x65a;
//     undefined field1582_0x65b;
//     undefined field1583_0x65c;
//     undefined field1584_0x65d;
//     undefined field1585_0x65e;
//     undefined field1586_0x65f;
//     undefined field1587_0x660;
//     undefined field1588_0x661;
//     undefined field1589_0x662;
//     undefined field1590_0x663;
//     undefined field1591_0x664;
//     undefined field1592_0x665;
//     undefined field1593_0x666;
//     undefined field1594_0x667;
//     undefined field1595_0x668;
//     undefined field1596_0x669;
//     undefined field1597_0x66a;
//     undefined field1598_0x66b;
//     undefined field1599_0x66c;
//     undefined field1600_0x66d;
//     undefined field1601_0x66e;
//     undefined field1602_0x66f;
//     undefined field1603_0x670;
//     undefined field1604_0x671;
//     undefined field1605_0x672;
//     undefined field1606_0x673;
//     undefined field1607_0x674;
//     undefined field1608_0x675;
//     undefined field1609_0x676;
//     undefined field1610_0x677;
//     undefined field1611_0x678;
//     undefined field1612_0x679;
//     undefined field1613_0x67a;
//     undefined field1614_0x67b;
//     undefined field1615_0x67c;
//     undefined field1616_0x67d;
//     undefined field1617_0x67e;
//     undefined field1618_0x67f;
//     undefined field1619_0x680;
//     undefined field1620_0x681;
//     undefined field1621_0x682;
//     undefined field1622_0x683;
//     undefined field1623_0x684;
//     undefined field1624_0x685;
//     undefined field1625_0x686;
//     undefined field1626_0x687;
//     undefined field1627_0x688;
//     undefined field1628_0x689;
//     undefined field1629_0x68a;
//     undefined field1630_0x68b;
//     undefined field1631_0x68c;
//     undefined field1632_0x68d;
//     undefined field1633_0x68e;
//     undefined field1634_0x68f;
//     undefined field1635_0x690;
//     undefined field1636_0x691;
//     undefined field1637_0x692;
//     undefined field1638_0x693;
//     undefined field1639_0x694;
//     undefined field1640_0x695;
//     undefined field1641_0x696;
//     undefined field1642_0x697;
//     undefined field1643_0x698;
//     undefined field1644_0x699;
//     undefined field1645_0x69a;
//     undefined field1646_0x69b;
//     undefined field1647_0x69c;
//     undefined field1648_0x69d;
//     undefined field1649_0x69e;
//     undefined field1650_0x69f;
//     undefined field1651_0x6a0;
//     undefined field1652_0x6a1;
//     undefined field1653_0x6a2;
//     undefined field1654_0x6a3;
//     undefined field1655_0x6a4;
//     undefined field1656_0x6a5;
//     undefined field1657_0x6a6;
//     undefined field1658_0x6a7;
//     undefined field1659_0x6a8;
//     undefined field1660_0x6a9;
//     undefined field1661_0x6aa;
//     undefined field1662_0x6ab;
//     undefined field1663_0x6ac;
//     undefined field1664_0x6ad;
//     undefined field1665_0x6ae;
//     undefined field1666_0x6af;
//     undefined field1667_0x6b0;
//     undefined field1668_0x6b1;
//     undefined field1669_0x6b2;
//     undefined field1670_0x6b3;
//     undefined field1671_0x6b4;
//     undefined field1672_0x6b5;
//     undefined field1673_0x6b6;
//     undefined field1674_0x6b7;
//     undefined field1675_0x6b8;
//     undefined field1676_0x6b9;
//     undefined field1677_0x6ba;
//     undefined field1678_0x6bb;
//     undefined field1679_0x6bc;
//     undefined field1680_0x6bd;
//     undefined field1681_0x6be;
//     undefined field1682_0x6bf;
//     undefined field1683_0x6c0;
//     undefined field1684_0x6c1;
//     undefined field1685_0x6c2;
//     undefined field1686_0x6c3;
//     undefined field1687_0x6c4;
//     undefined field1688_0x6c5;
//     undefined field1689_0x6c6;
//     undefined field1690_0x6c7;
//     undefined field1691_0x6c8;
//     undefined field1692_0x6c9;
//     undefined field1693_0x6ca;
//     undefined field1694_0x6cb;
//     undefined field1695_0x6cc;
//     undefined field1696_0x6cd;
//     undefined field1697_0x6ce;
//     undefined field1698_0x6cf;
//     undefined field1699_0x6d0;
//     undefined field1700_0x6d1;
//     undefined field1701_0x6d2;
//     undefined field1702_0x6d3;
//     undefined field1703_0x6d4;
//     undefined field1704_0x6d5;
//     undefined field1705_0x6d6;
//     undefined field1706_0x6d7;
//     undefined field1707_0x6d8;
//     undefined field1708_0x6d9;
//     undefined field1709_0x6da;
//     undefined field1710_0x6db;
//     undefined field1711_0x6dc;
//     undefined field1712_0x6dd;
//     undefined field1713_0x6de;
//     undefined field1714_0x6df;
//     undefined field1715_0x6e0;
//     undefined field1716_0x6e1;
//     undefined field1717_0x6e2;
//     undefined field1718_0x6e3;
//     undefined field1719_0x6e4;
//     undefined field1720_0x6e5;
//     undefined field1721_0x6e6;
//     undefined field1722_0x6e7;
//     undefined field1723_0x6e8;
//     undefined field1724_0x6e9;
//     undefined field1725_0x6ea;
//     undefined field1726_0x6eb;
//     undefined field1727_0x6ec;
//     undefined field1728_0x6ed;
//     undefined field1729_0x6ee;
//     undefined field1730_0x6ef;
//     undefined field1731_0x6f0;
//     undefined field1732_0x6f1;
//     undefined field1733_0x6f2;
//     undefined field1734_0x6f3;
//     undefined field1735_0x6f4;
//     undefined field1736_0x6f5;
//     undefined field1737_0x6f6;
//     undefined field1738_0x6f7;
//     undefined field1739_0x6f8;
//     undefined field1740_0x6f9;
//     undefined field1741_0x6fa;
//     undefined field1742_0x6fb;
//     undefined field1743_0x6fc;
//     undefined field1744_0x6fd;
//     undefined field1745_0x6fe;
//     undefined field1746_0x6ff;
//     undefined field1747_0x700;
//     undefined field1748_0x701;
//     undefined field1749_0x702;
//     undefined field1750_0x703;
//     undefined field1751_0x704;
//     undefined field1752_0x705;
//     undefined field1753_0x706;
//     undefined field1754_0x707;
//     undefined field1755_0x708;
//     undefined field1756_0x709;
//     undefined field1757_0x70a;
//     undefined field1758_0x70b;
//     undefined field1759_0x70c;
//     undefined field1760_0x70d;
//     undefined field1761_0x70e;
//     undefined field1762_0x70f;
//     undefined field1763_0x710;
//     undefined field1764_0x711;
//     undefined field1765_0x712;
//     undefined field1766_0x713;
//     undefined field1767_0x714;
//     undefined field1768_0x715;
//     undefined field1769_0x716;
//     undefined field1770_0x717;
//     undefined field1771_0x718;
//     undefined field1772_0x719;
//     undefined field1773_0x71a;
//     undefined field1774_0x71b;
//     undefined field1775_0x71c;
//     undefined field1776_0x71d;
//     undefined field1777_0x71e;
//     undefined field1778_0x71f;
//     undefined field1779_0x720;
//     undefined field1780_0x721;
//     undefined field1781_0x722;
//     undefined field1782_0x723;
//     undefined field1783_0x724;
//     undefined field1784_0x725;
//     undefined field1785_0x726;
//     undefined field1786_0x727;
//     undefined field1787_0x728;
//     undefined field1788_0x729;
//     undefined field1789_0x72a;
//     undefined field1790_0x72b;
//     undefined field1791_0x72c;
//     undefined field1792_0x72d;
//     undefined field1793_0x72e;
//     undefined field1794_0x72f;
//     undefined field1795_0x730;
//     undefined field1796_0x731;
//     undefined field1797_0x732;
//     undefined field1798_0x733;
//     undefined field1799_0x734;
//     undefined field1800_0x735;
//     undefined field1801_0x736;
//     undefined field1802_0x737;
//     undefined field1803_0x738;
//     undefined field1804_0x739;
//     undefined field1805_0x73a;
//     undefined field1806_0x73b;
//     undefined field1807_0x73c;
//     undefined field1808_0x73d;
//     undefined field1809_0x73e;
//     undefined field1810_0x73f;
//     undefined field1811_0x740;
//     undefined field1812_0x741;
//     undefined field1813_0x742;
//     undefined field1814_0x743;
//     undefined field1815_0x744;
//     undefined field1816_0x745;
//     undefined field1817_0x746;
//     undefined field1818_0x747;
//     undefined field1819_0x748;
//     undefined field1820_0x749;
//     undefined field1821_0x74a;
//     undefined field1822_0x74b;
//     undefined field1823_0x74c;
//     undefined field1824_0x74d;
//     undefined field1825_0x74e;
//     undefined field1826_0x74f;
//     undefined field1827_0x750;
//     undefined field1828_0x751;
//     undefined field1829_0x752;
//     undefined field1830_0x753;
//     undefined field1831_0x754;
//     undefined field1832_0x755;
//     undefined field1833_0x756;
//     undefined field1834_0x757;
//     undefined field1835_0x758;
//     undefined field1836_0x759;
//     undefined field1837_0x75a;
//     undefined field1838_0x75b;
//     undefined field1839_0x75c;
//     undefined field1840_0x75d;
//     undefined field1841_0x75e;
//     undefined field1842_0x75f;
//     undefined field1843_0x760;
//     undefined field1844_0x761;
//     undefined field1845_0x762;
//     undefined field1846_0x763;
//     undefined field1847_0x764;
//     undefined field1848_0x765;
//     undefined field1849_0x766;
//     undefined field1850_0x767;
//     undefined field1851_0x768;
//     undefined field1852_0x769;
//     undefined field1853_0x76a;
//     undefined field1854_0x76b;
//     undefined field1855_0x76c;
//     undefined field1856_0x76d;
//     undefined field1857_0x76e;
//     undefined field1858_0x76f;
//     undefined field1859_0x770;
//     undefined field1860_0x771;
//     undefined field1861_0x772;
//     undefined field1862_0x773;
//     undefined field1863_0x774;
//     undefined field1864_0x775;
//     undefined field1865_0x776;
//     undefined field1866_0x777;
//     undefined field1867_0x778;
//     undefined field1868_0x779;
//     undefined field1869_0x77a;
//     undefined field1870_0x77b;
//     undefined field1871_0x77c;
//     undefined field1872_0x77d;
//     undefined field1873_0x77e;
//     undefined field1874_0x77f;
//     undefined field1875_0x780;
//     undefined field1876_0x781;
//     undefined field1877_0x782;
//     undefined field1878_0x783;
//     undefined field1879_0x784;
//     undefined field1880_0x785;
//     undefined field1881_0x786;
//     undefined field1882_0x787;
//     undefined field1883_0x788;
//     undefined field1884_0x789;
//     undefined field1885_0x78a;
//     undefined field1886_0x78b;
//     undefined field1887_0x78c;
//     undefined field1888_0x78d;
//     undefined field1889_0x78e;
//     undefined field1890_0x78f;
//     undefined field1891_0x790;
//     undefined field1892_0x791;
//     undefined field1893_0x792;
//     undefined field1894_0x793;
//     undefined field1895_0x794;
//     undefined field1896_0x795;
//     undefined field1897_0x796;
//     undefined field1898_0x797;
//     undefined field1899_0x798;
//     undefined field1900_0x799;
//     undefined field1901_0x79a;
//     undefined field1902_0x79b;
//     undefined field1903_0x79c;
//     undefined field1904_0x79d;
//     undefined field1905_0x79e;
//     undefined field1906_0x79f;
//     undefined field1907_0x7a0;
//     undefined field1908_0x7a1;
//     undefined field1909_0x7a2;
//     undefined field1910_0x7a3;
//     undefined field1911_0x7a4;
//     undefined field1912_0x7a5;
//     undefined field1913_0x7a6;
//     undefined field1914_0x7a7;
//     undefined field1915_0x7a8;
//     undefined field1916_0x7a9;
//     undefined field1917_0x7aa;
//     undefined field1918_0x7ab;
//     undefined field1919_0x7ac;
//     undefined field1920_0x7ad;
//     undefined field1921_0x7ae;
//     undefined field1922_0x7af;
//     undefined field1923_0x7b0;
//     undefined field1924_0x7b1;
//     undefined field1925_0x7b2;
//     undefined field1926_0x7b3;
//     undefined field1927_0x7b4;
//     undefined field1928_0x7b5;
//     undefined field1929_0x7b6;
//     undefined field1930_0x7b7;
//     undefined field1931_0x7b8;
//     undefined field1932_0x7b9;
//     undefined field1933_0x7ba;
//     undefined field1934_0x7bb;
//     undefined field1935_0x7bc;
//     undefined field1936_0x7bd;
//     undefined field1937_0x7be;
//     undefined field1938_0x7bf;
//     undefined field1939_0x7c0;
//     undefined field1940_0x7c1;
//     undefined field1941_0x7c2;
//     undefined field1942_0x7c3;
//     undefined field1943_0x7c4;
//     undefined field1944_0x7c5;
//     undefined field1945_0x7c6;
//     undefined field1946_0x7c7;
//     undefined field1947_0x7c8;
//     undefined field1948_0x7c9;
//     undefined field1949_0x7ca;
//     undefined field1950_0x7cb;
//     undefined field1951_0x7cc;
//     undefined field1952_0x7cd;
//     undefined field1953_0x7ce;
//     undefined field1954_0x7cf;
//     undefined field1955_0x7d0;
//     undefined field1956_0x7d1;
//     undefined field1957_0x7d2;
//     undefined field1958_0x7d3;
//     undefined field1959_0x7d4;
//     undefined field1960_0x7d5;
//     undefined field1961_0x7d6;
//     undefined field1962_0x7d7;
//     undefined field1963_0x7d8;
//     undefined field1964_0x7d9;
//     undefined field1965_0x7da;
//     undefined field1966_0x7db;
//     undefined field1967_0x7dc;
//     undefined field1968_0x7dd;
//     undefined field1969_0x7de;
//     undefined field1970_0x7df;
//     undefined field1971_0x7e0;
//     undefined field1972_0x7e1;
//     undefined field1973_0x7e2;
//     undefined field1974_0x7e3;
//     undefined field1975_0x7e4;
//     undefined field1976_0x7e5;
//     undefined field1977_0x7e6;
//     undefined field1978_0x7e7;
//     undefined field1979_0x7e8;
//     undefined field1980_0x7e9;
//     undefined field1981_0x7ea;
//     undefined field1982_0x7eb;
//     undefined field1983_0x7ec;
//     undefined field1984_0x7ed;
//     undefined field1985_0x7ee;
//     undefined field1986_0x7ef;
//     undefined field1987_0x7f0;
//     undefined field1988_0x7f1;
//     undefined field1989_0x7f2;
//     undefined field1990_0x7f3;
//     undefined field1991_0x7f4;
//     undefined field1992_0x7f5;
//     undefined field1993_0x7f6;
//     undefined field1994_0x7f7;
//     undefined field1995_0x7f8;
//     undefined field1996_0x7f9;
//     undefined field1997_0x7fa;
//     undefined field1998_0x7fb;
//     undefined field1999_0x7fc;
//     undefined field2000_0x7fd;
//     undefined field2001_0x7fe;
//     undefined field2002_0x7ff;
//     undefined field2003_0x800;
//     undefined field2004_0x801;
//     undefined field2005_0x802;
//     undefined field2006_0x803;
//     undefined field2007_0x804;
//     undefined field2008_0x805;
//     undefined field2009_0x806;
//     undefined field2010_0x807;
//     undefined field2011_0x808;
//     undefined field2012_0x809;
//     undefined field2013_0x80a;
//     undefined field2014_0x80b;
//     undefined field2015_0x80c;
//     undefined field2016_0x80d;
//     undefined field2017_0x80e;
//     undefined field2018_0x80f;
//     undefined field2019_0x810;
//     undefined field2020_0x811;
//     undefined field2021_0x812;
//     undefined field2022_0x813;
//     undefined field2023_0x814;
//     undefined field2024_0x815;
//     undefined field2025_0x816;
//     undefined field2026_0x817;
//     undefined field2027_0x818;
//     undefined field2028_0x819;
//     undefined field2029_0x81a;
//     undefined field2030_0x81b;
//     undefined field2031_0x81c;
//     undefined field2032_0x81d;
//     undefined field2033_0x81e;
//     undefined field2034_0x81f;
//     undefined field2035_0x820;
//     undefined field2036_0x821;
//     undefined field2037_0x822;
//     undefined field2038_0x823;
//     undefined field2039_0x824;
//     undefined field2040_0x825;
//     undefined field2041_0x826;
//     undefined field2042_0x827;
//     undefined field2043_0x828;
//     undefined field2044_0x829;
//     undefined field2045_0x82a;
//     undefined field2046_0x82b;
//     undefined field2047_0x82c;
//     undefined field2048_0x82d;
//     undefined field2049_0x82e;
//     undefined field2050_0x82f;
//     undefined field2051_0x830;
//     undefined field2052_0x831;
//     undefined field2053_0x832;
//     undefined field2054_0x833;
//     undefined field2055_0x834;
//     undefined field2056_0x835;
//     undefined field2057_0x836;
//     undefined field2058_0x837;
//     undefined field2059_0x838;
//     undefined field2060_0x839;
//     undefined field2061_0x83a;
//     undefined field2062_0x83b;
//     struct collisionClient *sheetEtcArray[512];
//     struct SphereGrid *sphereGridArray[6];
//     int nVolumes;
//     int nSheets;
//     struct SphereGrid *currentSphereGrid;
//     BOOL m_bMustBuildGridAndArrays;
//     BOOL m_bTestVolume;
//     INT32 m_iATRVersion;
//     INT32 m_iNumATREntries;
//     struct AtrEntry *m_pATREntryArray;
// };
// 
// struct SphereGrid {
//     struct SGObject *m_pSGOArray;
//     INT32 m_iAvailSGOs;
//     INT32 m_iUsedSGOs;
// };
// 
// struct SGObject {
//     struct VUVec4 vSphere;
//     void *pData;
//     UINT32 uType;
//     UINT32 uMask;
//     undefined field4_0x1c;
//     undefined field5_0x1d;
//     undefined field6_0x1e;
//     undefined field7_0x1f;
// };
// 
// struct collisionMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type collisionMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > collisionMasterContextBase;
// 
// typedef struct collisionOutput collisionOutput, *PcollisionOutput;
// 
// struct collisionOutput {
//     struct VUVec4 vPos;
//     struct VUVec4 vNormal;
//     FLOAT fT;
//     struct collisionClient *pCC;
//     struct AtrValue *pATR;
//     struct AtrValue *pMyATR;
//     UINT16 uJointID;
//     UINT16 uMyJointID;
//     undefined field8_0x34;
//     undefined field9_0x35;
//     undefined field10_0x36;
//     undefined field11_0x37;
//     undefined field12_0x38;
//     undefined field13_0x39;
//     undefined field14_0x3a;
//     undefined field15_0x3b;
//     undefined field16_0x3c;
//     undefined field17_0x3d;
//     undefined field18_0x3e;
//     undefined field19_0x3f;
// };
// 
// typedef struct collisionServer collisionServer, *PcollisionServer;
// 
// typedef struct collisionServer__vtable collisionServer__vtable, *PcollisionServer__vtable;
// 
// struct collisionServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct collisionServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct collisionServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type collisionServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > collisionServerBase;
// 
// typedef svrList collisionServerContainer;
// 
// typedef enum CollisionSet {
//     kCollisionSet=0,
//     kSoundSet=1,
//     kCameraSet=2,
//     kEntitySet=3,
//     kEffectSet=4,
//     kVisibilitySet=5,
//     kNumCollisionSets=6,
//     kClothSet=7
// } CollisionSet;
// 
// typedef struct Color<unsigned char> Color<unsigned char>, *PColor<unsigned char>;
// 
// struct Color<unsigned char> {
//     union $_123__1_3264 field0_0x0;
// };
// 
// typedef long complex double;
// 
// typedef float complex float;
// 
// typedef struct complex int complex int, *Pcomplex int;
// 
// struct complex int {
//     int real;
//     int imag;
// };
// 
// typedef long complex long double;
// 
// typedef struct CompoundSound CompoundSound, *PCompoundSound;
// 
// struct CompoundSound {
//     SInt32 Type;
//     struct SoundBank_tag *Bank;
//     char IDs[20];
// };
// 
// typedef struct CompoundSound *CompoundSoundPtr;
// 
// typedef struct ConcussionInstanceData ConcussionInstanceData, *PConcussionInstanceData;
// 
// typedef struct STweener STweener, *PSTweener;
// 
// typedef struct CRadius CRadius, *PCRadius;
// 
// typedef struct CPlane CPlane, *PCPlane;
// 
// typedef struct CRadius__vtable CRadius__vtable, *PCRadius__vtable;
// 
// typedef struct CPlane__vtable CPlane__vtable, *PCPlane__vtable;
// 
// struct CRadius {
//     struct CRadius__vtable *__vtable; /* Inherited from CTweener */
//     FLOAT m_fRadius;
// };
// 
// struct CRadius__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetNbConcussions;
//     struct __vtbl_ptr_type CopyNth;
//     struct __vtbl_ptr_type Scale;
//     struct __vtbl_ptr_type Tween;
// };
// 
// struct CPlane {
//     struct CPlane__vtable *__vtable; /* Inherited from CTweener */
//     FLOAT m_fWidth;
//     FLOAT m_fHeight;
//     FLOAT m_fDirection;
//     FLOAT m_fPosition;
// };
// 
// struct STweener {
//     struct CRadius m_Radius;
//     struct CPlane m_Plane;
//     struct CBlock m_Block;
// };
// 
// struct ConcussionInstanceData {
//     struct VUVec4 m_vAxis;
//     struct VUVec4 m_vOrigin;
//     FLOAT m_fRunTime;
//     FLOAT m_fDuration;
//     INT32 m_iLastTimeSegment;
//     FLOAT m_fDamage;
//     UINT32 m_uCreatorGOType;
//     struct goGameObject *m_pHit[10];
//     UINT16 m_iNumHits;
//     UINT8 m_ucCurrentFrameTweener;
//     INT8 m_cFirstTween;
//     struct STweener m_Tweeners[2];
//     undefined field12_0xc8;
//     undefined field13_0xc9;
//     undefined field14_0xca;
//     undefined field15_0xcb;
//     undefined field16_0xcc;
//     undefined field17_0xcd;
//     undefined field18_0xce;
//     undefined field19_0xcf;
// };
// 
// struct CPlane__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetNbConcussions;
//     struct __vtbl_ptr_type CopyNth;
//     struct __vtbl_ptr_type Scale;
//     struct __vtbl_ptr_type Tween;
// };
// 
// typedef struct ConstIterator ConstIterator, *PConstIterator;
// 
// struct ConstIterator {
//     struct stdListNode *_pHeader;
//     struct stdListNode *_pCurrNode;
// };
// 
// typedef struct Contact Contact, *PContact;
// 
// struct Contact {
//     FLOAT fT;
// };
// 
// typedef struct Context__1_13162 Context__1_13162, *PContext__1_13162;
// 
// typedef struct Context__1_13162__vtable Context__1_13162__vtable, *PContext__1_13162__vtable;
// 
// struct Context__1_13162 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct Context__1_13162__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *_pCameraPool;
// };
// 
// struct Context__1_13162__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Context;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct Context__1_14300 Context__1_14300, *PContext__1_14300;
// 
// typedef struct Context__1_14300__vtable Context__1_14300__vtable, *PContext__1_14300__vtable;
// 
// struct Context__1_14300 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct Context__1_14300__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *fEmitterPool;
//     struct Pool__1_336 *fHandlePool;
// };
// 
// struct Context__1_14300__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Context;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > ContextBase;
// 
// typedef struct Control__1_11964 Control__1_11964, *PControl__1_11964;
// 
// struct Control__1_11964 {
//     UINT8 m_InitMeshMode; /* Inherited from tFS_Control */
//     UINT8 m_MeshMode; /* Inherited from tFS_Control */
//     UINT8 m_ColorizingMode; /* Inherited from tFS_Control */
//     UINT8 m_GSBlendMode; /* Inherited from tFS_Control */
//     UINT8 m_SourceBuffer; /* Inherited from tFS_Control */
//     UINT8 m_PosFlags; /* Inherited from tFS_Control */
//     UINT8 m_SizeFlags; /* Inherited from tFS_Control */
//     undefined field7_0x7;
//     INT16 m_FrameCount; /* Inherited from tFS_Control */
// };
// 
// typedef struct ControlParams ControlParams, *PControlParams;
// 
// struct ControlParams {
//     short int param[4];
// };
// 
// typedef enum Controls {
//     kMasterVolume=0,
//     kVolumeA=1,
//     kVolumeB=2,
//     kMissing=3,
//     kNumControls=4
// } Controls;
// 
// typedef enum ControlState {
//     kInactive=0,
//     kOpenFile=1,
//     kAllocateBuffer=2,
//     kFillBuffer=3
// } ControlState;
// 
// typedef struct CReactivePtr CReactivePtr, *PCReactivePtr;
// 
// typedef struct goReactiveController goReactiveController, *PgoReactiveController;
// 
// typedef struct goReactiveController__vtable goReactiveController__vtable, *PgoReactiveController__vtable;
// 
// typedef enum eState__1_19513 {
//     kSTATE_NULL=0,
//     kSTATE_Constructed=1,
//     kSTATE_Initialized=2,
//     kSTATE_Idle=3,
//     kSTATE_Frozen=4,
//     kSTATE_Dying=5,
//     kSTATE_Destroy=6,
//     kSTATE_NB=7
// } eState__1_19513;
// 
// struct CReactivePtr {
//     struct goReactiveController *m_pReactive;
// };
// 
// struct goReactiveController__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goReactiveController;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Destroy;
//     struct __vtbl_ptr_type GetStartBranch;
//     struct __vtbl_ptr_type SetSaveData;
//     struct __vtbl_ptr_type GetSaveData;
//     struct __vtbl_ptr_type GetControlSystem;
//     struct __vtbl_ptr_type IsDead;
//     struct __vtbl_ptr_type IsFreezable;
//     struct __vtbl_ptr_type IsBreakable;
//     struct __vtbl_ptr_type ResetTweaks;
//     struct __vtbl_ptr_type UpdateI;
//     struct __vtbl_ptr_type EnterStateI;
//     struct __vtbl_ptr_type IsStateTerminatingI;
//     struct __vtbl_ptr_type ExitStateI;
// };
// 
// struct goReactiveController {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goReactiveController__vtable *__vtable; /* Inherited from goCreatureController */
//     struct tCreature *m_pTweaks;
//     struct tSoldierBase *m_pBodyTweaks;
//     struct tAIBase *m_pAITweaks;
//     UINT32 m_dwFlags;
//     enum eState__1_19513 m_eState;
//     FLOAT m_fTimer;
//     struct goHandle m_hTarget;
//     struct goHandle m_hKillTarget;
//     struct tBranch *m_pStartBranch;
// };
// 
// typedef struct CreationListItem CreationListItem, *PCreationListItem;
// 
// typedef struct Entity Entity, *PEntity;
// 
// typedef struct sliCode sliCode, *PsliCode;
// 
// typedef struct DynExpr DynExpr, *PDynExpr;
// 
// typedef struct Entity__vtable Entity__vtable, *PEntity__vtable;
// 
// typedef union DynExpr__u DynExpr__u, *PDynExpr__u;
// 
struct sliCode {
    UINT8 *codeStart;
};

union DynExpr__u {
    FLOAT f;
    INT32 i;
    BOOL b;
    char *s;
    void *v;
};

struct DynExpr {
    int sliOffset;
    union DynExpr__u u;
};

typedef struct Entity {
    struct VUMat4 matrix;
    UINT16 jointID;
    UINT16 id;
    UINT16 type;
    INT16 volumeID;
    UINT16 policy;
    INT16 wiID;
    UINT16 nTargets;
    undefined field8_0x4e;
    undefined field9_0x4f;
    UINT16 *targetArray;
    char *name;
    struct goGameObject *go;
    struct sliCode sli;
    FLOAT lastTriggerTime;
    struct DynExpr m_Enabled;
    struct DynExpr m_RefractoryPeriod;
    struct DynExpr m_ResponseDelay;
    struct DynExpr m_DelayedEnable;
    struct DynExpr m_Execute;
    struct DynExpr m_DebugString;
    struct DynExpr m_MarkerID;
    struct Entity__vtable *__vtable;
} Entity;

struct Entity__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type Enabled;
    struct __vtbl_ptr_type Entity;
    struct __vtbl_ptr_type InitParms;
    struct __vtbl_ptr_type StateNotify;
    struct __vtbl_ptr_type HandleEvent;
    struct __vtbl_ptr_type Activate;
};
// 
// struct CreationListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Entity *entity;
//     int order;
// };
// 
// typedef enum CreationOrder {
//     CO_GlobalData=0,
//     CO_LevelData=1000,
//     CO_CreationSensor=10000,
//     CO_Max=2147483647
// } CreationOrder;
// 
// typedef struct CreatureCallbackData CreatureCallbackData, *PCreatureCallbackData;
// 
// struct CreatureCallbackData {
//     struct VUVec4 vOurPos;
//     FLOAT fRadiusXZ;
//     FLOAT fHeightY;
//     struct goCreature *pCurrent;
//     struct goCreature *pCurrChildOrParent;
// };
// 
// typedef struct CRShield CRShield, *PCRShield;
// 
// typedef struct CRShield__vtable CRShield__vtable, *PCRShield__vtable;
// 
// struct CRShield {
//     UINT32 m_dwFlags; /* Inherited from CShield */
//     FLOAT m_fDamageR; /* Inherited from CShield */
//     INT32 m_iContext; /* Inherited from CShield */
//     struct CRShield__vtable *__vtable; /* Inherited from CShield */
//     struct CShield *m_pRefShield;
// };
// 
// struct CRShield__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IsTrueShield;
//     struct __vtbl_ptr_type IsShardShield;
//     struct __vtbl_ptr_type IsInfiniteShield;
//     struct __vtbl_ptr_type ProcessDamage;
// };
// 
// typedef struct CSaveState CSaveState, *PCSaveState;
// 
// struct CSaveState {
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     UINT32 dwFlags;
//     INT16 angle;
//     INT16 hitPoints;
// };
// 
// typedef struct CSCameraScript CSCameraScript, *PCSCameraScript;
// 
// typedef struct tActionCameraObject tActionCameraObject, *PtActionCameraObject;
// 
// typedef struct CSTweens CSTweens, *PCSTweens;
// 
// typedef enum State__1_17822 {
//     kOff=0,
//     kTweenIn=1,
//     kInbetween=2,
//     kOn=3,
//     kTweenOut=4
// } State__1_17822;
// 
// struct CSTweens {
//     float fAmount;
//     float fWidth;
//     float fWideScreenRatio;
//     float fMicBoomRatio;
// };
// 
// struct CSCameraScript {
//     struct VUVec4 m_vCamera;
//     FLOAT m_fTween;
//     float m_fInbetween;
//     INT16 m_iTargetJoint;
//     INT16 m_iCamJoint;
//     INT16 m_iWidthJoint;
//     UINT16 m_iFlags;
//     struct goGameObject *fCamGO;
//     struct tActionCameraObject *fAction;
//     struct goCreature *fCreature;
//     struct tMove__1_16624 *fMove;
//     unsigned int fLastFrameProcessed;
//     float fTweenTimer;
//     undefined field13_0x38;
//     undefined field14_0x39;
//     undefined field15_0x3a;
//     undefined field16_0x3b;
//     undefined field17_0x3c;
//     undefined field18_0x3d;
//     undefined field19_0x3e;
//     undefined field20_0x3f;
//     struct TweenValues fOverride;
//     struct CSTweens fCurrent;
//     struct CSTweens fPrevious;
//     struct CSTweens fTarget;
//     enum State__1_17822 fState;
//     undefined field26_0xb4;
//     undefined field27_0xb5;
//     undefined field28_0xb6;
//     undefined field29_0xb7;
//     undefined field30_0xb8;
//     undefined field31_0xb9;
//     undefined field32_0xba;
//     undefined field33_0xbb;
//     undefined field34_0xbc;
//     undefined field35_0xbd;
//     undefined field36_0xbe;
//     undefined field37_0xbf;
// };
// 
// struct tActionCameraObject {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_Name;
//     UINT8 m_CSFlags;
//     undefined field11_0x19;
//     struct FLOAT16 m_Amount;
//     struct FLOAT16 m_Width;
//     struct FLOAT16 m_WideScreenRatio;
//     struct FLOAT16 m_MicBoomRatio;
//     undefined field16_0x22;
//     undefined field17_0x23;
//     struct tTween m_TweenIn;
//     struct tTween m_TweenOut;
// };
// 
// typedef struct CShard CShard, *PCShard;
// 
// typedef struct CShard__vtable CShard__vtable, *PCShard__vtable;
// 
// typedef struct SFocus SFocus, *PSFocus;
// 
// typedef struct SC_Shield SC_Shield, *PSC_Shield;
// 
// typedef struct SC_Shield__vtable SC_Shield__vtable, *PSC_Shield__vtable;
// 
// typedef struct goScript goScript, *PgoScript;
// 
// typedef struct svrClientTreeNode<svrSortedListContainer,goClient> svrClientTreeNode<svrSortedListContainer,goClient>, *PsvrClientTreeNode<svrSortedListContainer,goClient>;
// 
// typedef struct svrSortedListContainer svrSortedListContainer, *PsvrSortedListContainer;
// 
typedef struct svrSortedListContainer goScriptContainerType;

struct svrSortedListContainer {
    struct stdListNode _header; /* Inherited from stdList */
    struct stdListNode *m_fMiddle;
};

// struct SFocus {
//     struct VUVec4 vTarget;
//     struct goHandle hTarget;
//     INT32 iJointID;
//     FLOAT fRadius;
//     FLOAT fSpeed;
//     FLOAT fHoverSpeed;
//     FLOAT fHoverSpeedRange;
//     undefined field7_0x28;
//     undefined field8_0x29;
//     undefined field9_0x2a;
//     undefined field10_0x2b;
//     undefined field11_0x2c;
//     undefined field12_0x2d;
//     undefined field13_0x2e;
//     undefined field14_0x2f;
// };
// 
// struct CShard {
//     UINT32 m_dwFlags; /* Inherited from CShield */
//     FLOAT m_fDamageR; /* Inherited from CShield */
//     INT32 m_iContext; /* Inherited from CShield */
//     struct CShard__vtable *__vtable; /* Inherited from CShield */
//     struct VUVec4 m_vPvTargetPos;
//     struct VUVec4 m_vMod;
//     struct VUVec4 m_vSpeed;
//     struct SFocus m_Focus;
//     struct CShard *m_pNext;
//     struct SC_Shield *m_pShield;
//     struct goGameObject *m_pGO;
//     FLOAT m_fInertia;
//     FLOAT m_fMod;
//     FLOAT m_fPrecision;
//     FLOAT m_fTimer;
//     INT32 m_iSavedContext;
//     char m_Dummy[8];
//     undefined field17_0x98;
//     undefined field18_0x99;
//     undefined field19_0x9a;
//     undefined field20_0x9b;
//     undefined field21_0x9c;
//     undefined field22_0x9d;
//     undefined field23_0x9e;
//     undefined field24_0x9f;
// };
// 
// struct SC_Shield {
//     UINT32 m_dwFlags; /* Inherited from CShield */
//     FLOAT m_fDamageR; /* Inherited from CShield */
//     INT32 m_iContext; /* Inherited from CShield */
//     struct SC_Shield__vtable *__vtable; /* Inherited from CShield */
//     struct CShard m_Shards[32];
//     struct SFocus m_CreatureFocus;
//     struct SFocus m_Focus;
//     UINT32 m_dwNbShards;
//     UINT32 m_dwShardCountThreshold;
//     UINT32 m_dwMaxShardIndex;
//     FLOAT m_fShardDelayTargetAcquisition;
//     struct CShard *m_pFirstShield;
//     struct CShard *m_pFirstReleased;
//     struct tShield *m_pTweak;
//     struct CRShield m_RiderShield;
//     FLOAT m_fLife;
//     INT32 m_iSavedContext;
//     struct wadContext *m_pCreatorWadContext;
//     struct goScript *m_pScript;
//     struct SFocus *m_pActiveFocus;
//     FLOAT m_fFXRadius;
//     UINT32 m_dwFXReleaseNbShard;
//     undefined field22_0x14bc;
//     undefined field23_0x14bd;
//     undefined field24_0x14be;
//     undefined field25_0x14bf;
// };
// 
struct goScript {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    struct svrClientTreeNode *m_pParent; /* Inherited from svrClientTreeNode<svrSortedListContainer,goClient> */
    goScriptContainerType *m_pChildren; /* Inherited from svrClientTreeNode<svrSortedListContainer,goClient> */
    UINT16 _uSlice;
    INT16 _sWait;
    UINT16 _uFlags;
    UINT16 _jointID;
    undefined field24_0x30;
    undefined field25_0x31;
    undefined field26_0x32;
    undefined field27_0x33;
    undefined field28_0x34;
    undefined field29_0x35;
    undefined field30_0x36;
    undefined field31_0x37;
    undefined field32_0x38;
    undefined field33_0x39;
    undefined field34_0x3a;
    undefined field35_0x3b;
    undefined field36_0x3c;
    undefined field37_0x3d;
    undefined field38_0x3e;
    undefined field39_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field42_0x48;
    undefined field43_0x49;
    undefined field44_0x4a;
    undefined field45_0x4b;
    BOOL _bEnabled;
    void *_pLocalMem;
    void *_parmData;
    UINT _parmDataSize;
    UINT _parmMapSize;
    struct anmClient *_pAnimClient;
    unsigned int _uUserParms[7];
};

struct svrClientTreeNode {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    struct svrClientTreeNode *m_pParent;
    goScriptContainerType *m_pChildren;
};

// struct svrClientTreeNode<svrSortedListContainer,goClient> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     struct svrClientTreeNode<svrSortedListContainer,goClient> *m_pParent;
//     goScriptContainerType *m_pChildren;
// };
// 
// struct SC_Shield__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IsTrueShield;
//     struct __vtbl_ptr_type IsShardShield;
//     struct __vtbl_ptr_type IsInfiniteShield;
//     struct __vtbl_ptr_type ProcessDamage;
//     struct __vtbl_ptr_type SC_Shield;
//     struct __vtbl_ptr_type Destroy;
// };
// 
// struct CShard__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IsTrueShield;
//     struct __vtbl_ptr_type IsShardShield;
//     struct __vtbl_ptr_type IsInfiniteShield;
//     struct __vtbl_ptr_type ProcessDamage;
// };
// 
// typedef struct CSM_ParamData CSM_ParamData, *PCSM_ParamData;
// 
// struct CSM_ParamData {
//     UINT32 tweakNameHash;
//     INT32 instance;
// };
// 
// typedef struct CSpacePartition CSpacePartition, *PCSpacePartition;
// 
// typedef struct tSpacePartition tSpacePartition, *PtSpacePartition;
// 
// typedef struct tSpacePartitionElement tSpacePartitionElement, *PtSpacePartitionElement;
// 
// typedef struct tSpacePartitionBase tSpacePartitionBase, *PtSpacePartitionBase;
// 
// typedef struct tMatch tMatch, *PtMatch;
// 
// typedef struct tMatchData tMatchData, *PtMatchData;
// 
// struct CSpacePartition {
//     struct tSpacePartition *m_pPartitionTwk;
//     struct tSpacePartitionElement *m_Matched[16];
//     UINT32 m_dwNbMatched;
// };
// 
// struct tSpacePartitionElement {
//     UINT8 m_Type;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     INT32 m_ID;
// };
// 
// struct tSpacePartitionBase {
//     UINT8 m_Type; /* Inherited from tSpacePartitionElement */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     INT32 m_ID; /* Inherited from tSpacePartitionElement */
//     UINT8 m_BaseType;
//     UINT8 m_BaseAxis;
//     struct tVector3__1_5581 m_Origin;
//     FLOAT m_Width;
//     FLOAT m_Depth;
//     struct tSpacePartitionElement **m_Part;
// };
// 
// struct tSpacePartition {
//     INT32 m_ID;
//     char *m_RootJoint;
//     struct tSpacePartitionBase m_Partition;
//     struct tMatch *m_Match;
// };
// 
// struct tMatchData {
//     UINT8 m_Type;
// };
// 
// struct tMatch {
//     INT32 *m_PartitionID;
//     struct tMatchData **m_Data;
// };
// 
// typedef struct CTweener CTweener, *PCTweener;
// 
// typedef struct CTweener__vtable CTweener__vtable, *PCTweener__vtable;
// 
// struct CTweener__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetNbConcussions;
//     struct __vtbl_ptr_type CopyNth;
//     struct __vtbl_ptr_type Scale;
//     struct __vtbl_ptr_type Tween;
// };
// 
// struct CTweener {
//     struct CTweener__vtable *__vtable;
// };
// 
// typedef struct mips_args mips_args, *Pmips_args;
// 
// typedef struct mips_args CUMULATIVE_ARGS;
// 
// typedef struct rtx_def rtx_def, *Prtx_def;
// 
// struct mips_args {
//     int gp_reg_found;
//     int arg_number;
//     int arg_words;
//     int fp_arg_words;
//     int last_arg_fp;
//     int fp_code;
//     int num_adjusts;
//     struct rtx_def *adjust[8];
// };
// 
// struct rtx_def { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef long int daddr_t;
// 
// typedef struct DampedMesh DampedMesh, *PDampedMesh;
// 
// struct DampedMesh {
//     UINT8 m_PerturbMeshMode; /* Inherited from tFS_DampedMesh */
//     UINT8 m_ProcMeshMode; /* Inherited from tFS_DampedMesh */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_ViscosityU; /* Inherited from tFS_DampedMesh */
//     FLOAT m_ViscosityV; /* Inherited from tFS_DampedMesh */
//     FLOAT m_DampingU; /* Inherited from tFS_DampedMesh */
//     FLOAT m_DampingV; /* Inherited from tFS_DampedMesh */
//     FLOAT m_PointAmplU; /* Inherited from tFS_DampedMesh */
//     FLOAT m_PointAmplV; /* Inherited from tFS_DampedMesh */
// };
// 
// typedef struct dbg dbg, *Pdbg;
// 
// struct dbg {
//     undefined field0_0x0;
// };
// 
// typedef struct dbgFont dbgFont, *PdbgFont;
// 
// struct dbgFont {
//     undefined field0_0x0;
// };
// 
// typedef struct DbgStringTableChunk DbgStringTableChunk, *PDbgStringTableChunk;
// 
// struct DbgStringTableChunk {
//     INT32 m_iNumEntries;
// };
// 
// typedef struct DbgSymbolTableChunk DbgSymbolTableChunk, *PDbgSymbolTableChunk;
// 
// struct DbgSymbolTableChunk {
//     INT32 m_iNumEntries;
// };
// 
// typedef enum delay_type {
//     DELAY_NONE=0,
//     DELAY_LOAD=1,
//     DELAY_HILO=2,
//     DELAY_HILO1=3,
//     DELAY_FCMP=4
// } delay_type;
// 
// typedef struct DemoSegmentInfo DemoSegmentInfo, *PDemoSegmentInfo;
// 
// typedef enum sceDemoEndReason {
//     SCE_DEMO_ENDREASON_ATTRACT_INTERRUPTED=0,
//     SCE_DEMO_ENDREASON_ATTRACT_COMPLETE=1,
//     SCE_DEMO_ENDREASON_PLAYABLE_INACTIVITY_TIMEOUT=2,
//     SCE_DEMO_ENDREASON_PLAYABLE_GAMEPLAY_TIMEOUT=3,
//     SCE_DEMO_ENDREASON_PLAYABLE_COMPLETE=4,
//     SCE_DEMO_ENDREASON_PLAYABLE_QUIT=5,
//     SCE_DEMO_ENDREASON_NETCONFIG_REQUEST=6,
//     SCE_DEMO_ENDREASON_NETCONFIG_COMPLETE=7
// } sceDemoEndReason;
// 
// struct DemoSegmentInfo {
//     short unsigned int language;
//     short unsigned int aspect;
//     short unsigned int playmode;
//     short unsigned int toInactive;
//     short unsigned int toTotal;
//     short unsigned int mediaType;
//     short unsigned int masterVolumeScale;
//     short unsigned int directorySectorNum;
//     enum sceDemoEndReason endReason;
// };
// 
// typedef short int dev_t;
// 
// typedef double DFtype;
// 
// typedef struct DirectionalDrag DirectionalDrag, *PDirectionalDrag;
// 
// struct DirectionalDrag {
//     undefined field0_0x0;
// };
// 
// typedef struct DirInfo DirInfo, *PDirInfo;
// 
// typedef struct TOCEntry TOCEntry, *PTOCEntry;
// 
// struct TOCEntry {
//     char fName[24];
//     int fStartSector;
//     int fLengthInBytes;
//     int fIsDirectory;
//     int fFirstFileInDirectory;
//     int fNumFilesInDirectory;
//     int fPad;
// };
// 
// struct DirInfo {
//     struct TOCEntry toc;
//     int dIndex;
//     int dEnd;
// };
// 
// typedef enum DiscStatus {
//     kDiscReady=0,
//     kErrors=1,
//     kTrayOpen=2,
//     kWrongDisc=3
// } DiscStatus;
// 
// typedef struct DIstruct DIstruct, *PDIstruct;
// 
// typedef int SItype;
// 
// struct DIstruct {
//     SItype low;
//     SItype high;
// };
// 
// typedef long int DItype;
// 
// typedef union DIunion DIunion, *PDIunion;
// 
// union DIunion {
//     struct DIstruct s;
//     DItype ll;
// };
// 
// typedef struct div_t div_t, *Pdiv_t;
// 
// struct div_t {
//     int quot;
//     int rem;
// };
// 
// typedef struct dma dma, *Pdma;
// 
// struct dma {
//     undefined field0_0x0;
// };
// 
// typedef undefined1 *DMACallback;
// 
// typedef struct dmaStaticContext dmaStaticContext, *PdmaStaticContext;
// 
// typedef struct dmaStaticContext__vtable dmaStaticContext__vtable, *PdmaStaticContext__vtable;
// 
// struct dmaStaticContext {
//     UINT32 *m_pFirstLoc;
//     UINT32 *m_pCurrentLoc;
//     UINT32 *m_pEndLoc;
//     UINT32 *m_pDMABuffer;
//     UINT32 m_uFlags;
//     undefined field5_0x14;
//     undefined field6_0x15;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     struct renContext m_GSContext;
//     struct dmaStaticContext__vtable *__vtable;
//     undefined field11_0x65c;
//     undefined field12_0x65d;
//     undefined field13_0x65e;
//     undefined field14_0x65f;
// };
// 
// struct dmaStaticContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type dmaStaticContext;
//     struct __vtbl_ptr_type Swap;
// };
// 
// typedef struct dmaVectorContext dmaVectorContext, *PdmaVectorContext;
// 
// typedef struct dmaVectorContext__vtable dmaVectorContext__vtable, *PdmaVectorContext__vtable;
// 
// struct dmaVectorContext {
//     UINT32 *m_pFirstLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pCurrentLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pEndLoc; /* Inherited from dmaStaticContext */
//     UINT32 *m_pDMABuffer; /* Inherited from dmaStaticContext */
//     UINT32 m_uFlags; /* Inherited from dmaStaticContext */
//     undefined field5_0x14;
//     undefined field6_0x15;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     struct renContext m_GSContext; /* Inherited from dmaStaticContext */
//     struct dmaVectorContext__vtable *__vtable; /* Inherited from dmaStaticContext */
//     undefined field11_0x65c;
//     undefined field12_0x65d;
//     undefined field13_0x65e;
//     undefined field14_0x65f;
//     UINT32 m_uBuffSize; /* Inherited from dmaContext */
//     UINT32 m_uBuffID; /* Inherited from dmaContext */
//     UINT32 m_uLastFrameUsage; /* Inherited from dmaContext */
//     UINT32 m_uPeakFrameUsage; /* Inherited from dmaContext */
//     INT32 m_iLastFrameNumVecsUsed;
//     INT32 m_iPeakNumVecsUsed;
// };
// 
// struct dmaVectorContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type dmaVectorContext;
//     struct __vtbl_ptr_type Swap;
// };
// 
// typedef double DOUBLE;
// 
// typedef struct DTData DTData, *PDTData;
// 
// typedef undefined1 *EvaluateDTData;
// 
// typedef struct DTDataEnumOption DTDataEnumOption, *PDTDataEnumOption;
// 
// struct DTDataEnumOption {
//     char *m_pName;
//     UINT16 m_iValue;
//     undefined field2_0x6;
//     undefined field3_0x7;
// };
// 
// struct DTData {
//     char *m_pName;
//     EvaluateDTData m_pEvalFunc;
//     struct DTDataEnumOption *m_pEnumOptions;
//     UINT16 m_iDataType;
//     undefined field4_0xe;
//     undefined field5_0xf;
// };
// 
// typedef struct DuckerDef DuckerDef, *PDuckerDef;
// 
// struct DuckerDef {
//     int source_group;
//     u_int target_groups;
//     int full_duck_mult;
//     int attack_time;
//     int release_time;
//     int current_duck_mult;
// };
// 
// typedef struct DuckerDef *DuckerDefPtr;
// 
// typedef union dummy dummy, *Pdummy;
// 
// union dummy {
//     float f;
//     UINT32 i;
// };
// 
// typedef struct dummyActor dummyActor, *PdummyActor;
// 
// struct dummyActor {
//     undefined field0_0x0;
// };
// 
// typedef enum dwarf_access_attribute {
//     DW_ACCESS_public=1,
//     DW_ACCESS_protected=2,
//     DW_ACCESS_private=3
// } dwarf_access_attribute;
// 
// typedef enum dwarf_array_dim_ordering {
//     DW_ORD_row_major=0,
//     DW_ORD_col_major=1
// } dwarf_array_dim_ordering;
// 
// typedef enum dwarf_attribute {
//     DW_AT_sibling=1,
//     DW_AT_location=2,
//     DW_AT_name=3,
//     DW_AT_ordering=9,
//     DW_AT_subscr_data=10,
//     DW_AT_byte_size=11,
//     DW_AT_bit_offset=12,
//     DW_AT_bit_size=13,
//     DW_AT_element_list=15,
//     DW_AT_stmt_list=16,
//     DW_AT_low_pc=17,
//     DW_AT_high_pc=18,
//     DW_AT_language=19,
//     DW_AT_member=20,
//     DW_AT_discr=21,
//     DW_AT_discr_value=22,
//     DW_AT_visibility=23,
//     DW_AT_import=24,
//     DW_AT_string_length=25,
//     DW_AT_common_reference=26,
//     DW_AT_comp_dir=27,
//     DW_AT_const_value=28,
//     DW_AT_containing_type=29,
//     DW_AT_default_value=30,
//     DW_AT_inline=32,
//     DW_AT_is_optional=33,
//     DW_AT_lower_bound=34,
//     DW_AT_producer=37,
//     DW_AT_prototyped=39,
//     DW_AT_return_addr=42,
//     DW_AT_start_scope=44,
//     DW_AT_stride_size=46,
//     DW_AT_upper_bound=47,
//     DW_AT_abstract_origin=49,
//     DW_AT_accessibility=50,
//     DW_AT_address_class=51,
//     DW_AT_artificial=52,
//     DW_AT_base_types=53,
//     DW_AT_calling_convention=54,
//     DW_AT_count=55,
//     DW_AT_data_member_location=56,
//     DW_AT_decl_column=57,
//     DW_AT_decl_file=58,
//     DW_AT_decl_line=59,
//     DW_AT_declaration=60,
//     DW_AT_discr_list=61,
//     DW_AT_encoding=62,
//     DW_AT_external=63,
//     DW_AT_frame_base=64,
//     DW_AT_friend=65,
//     DW_AT_identifier_case=66,
//     DW_AT_macro_info=67,
//     DW_AT_namelist_items=68,
//     DW_AT_priority=69,
//     DW_AT_segment=70,
//     DW_AT_specification=71,
//     DW_AT_static_link=72,
//     DW_AT_type=73,
//     DW_AT_use_location=74,
//     DW_AT_variable_parameter=75,
//     DW_AT_virtuality=76,
//     DW_AT_vtable_elem_location=77,
//     DW_AT_MIPS_fde=8193,
//     DW_AT_MIPS_loop_begin=8194,
//     DW_AT_MIPS_tail_loop_begin=8195,
//     DW_AT_MIPS_epilog_begin=8196,
//     DW_AT_MIPS_loop_unroll_factor=8197,
//     DW_AT_MIPS_software_pipeline_depth=8198,
//     DW_AT_MIPS_linkage_name=8199,
//     DW_AT_MIPS_stride=8200,
//     DW_AT_MIPS_abstract_name=8201,
//     DW_AT_MIPS_clone_origin=8202,
//     DW_AT_MIPS_has_inlines=8203,
//     DW_AT_sf_names=8449,
//     DW_AT_src_info=8450,
//     DW_AT_mac_info=8451,
//     DW_AT_src_coords=8452,
//     DW_AT_body_begin=8453,
//     DW_AT_body_end=8454
// } dwarf_attribute;
// 
// typedef enum dwarf_call_frame_info {
//     DW_CFA_nop=0,
//     DW_CFA_set_loc=1,
//     DW_CFA_advance_loc1=2,
//     DW_CFA_advance_loc2=3,
//     DW_CFA_advance_loc4=4,
//     DW_CFA_offset_extended=5,
//     DW_CFA_restore_extended=6,
//     DW_CFA_undefined=7,
//     DW_CFA_same_value=8,
//     DW_CFA_register=9,
//     DW_CFA_remember_state=10,
//     DW_CFA_restore_state=11,
//     DW_CFA_def_cfa=12,
//     DW_CFA_def_cfa_register=13,
//     DW_CFA_def_cfa_offset=14,
//     DW_CFA_MIPS_advance_loc8=29,
//     DW_CFA_GNU_window_save=45,
//     DW_CFA_GNU_args_size=46,
//     DW_CFA_advance_loc=64,
//     DW_CFA_offset=128,
//     DW_CFA_restore=192
// } dwarf_call_frame_info;
// 
// typedef enum dwarf_calling_convention {
//     DW_CC_normal=1,
//     DW_CC_program=2,
//     DW_CC_nocall=3
// } dwarf_calling_convention;
// 
// typedef struct dwarf_cie dwarf_cie, *Pdwarf_cie;
// 
// typedef unsigned int uword;
// 
// typedef int sword;
// 
// typedef unsigned char ubyte;
// 
// struct dwarf_cie {
//     uword length;
//     sword CIE_id;
//     ubyte version;
//     char augmentation[0];
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
// };
// 
// typedef enum dwarf_discrim_list {
//     DW_DSC_label=0,
//     DW_DSC_range=1
// } dwarf_discrim_list;
// 
// typedef struct dwarf_fde dwarf_fde, *Pdwarf_fde;
// 
// typedef unsigned int uaddr;
// 
// struct dwarf_fde {
//     uword length;
//     sword CIE_delta;
//     void *pc_begin;
//     uaddr pc_range;
// };
// 
// typedef enum dwarf_form {
//     DW_FORM_addr=1,
//     DW_FORM_block2=3,
//     DW_FORM_block4=4,
//     DW_FORM_data2=5,
//     DW_FORM_data4=6,
//     DW_FORM_data8=7,
//     DW_FORM_string=8,
//     DW_FORM_block=9,
//     DW_FORM_block1=10,
//     DW_FORM_data1=11,
//     DW_FORM_flag=12,
//     DW_FORM_sdata=13,
//     DW_FORM_strp=14,
//     DW_FORM_udata=15,
//     DW_FORM_ref_addr=16,
//     DW_FORM_ref1=17,
//     DW_FORM_ref2=18,
//     DW_FORM_ref4=19,
//     DW_FORM_ref8=20,
//     DW_FORM_ref_udata=21,
//     DW_FORM_indirect=22
// } dwarf_form;
// 
// typedef enum dwarf_id_case {
//     DW_ID_case_sensitive=0,
//     DW_ID_up_case=1,
//     DW_ID_down_case=2,
//     DW_ID_case_insensitive=3
// } dwarf_id_case;
// 
// typedef enum dwarf_inline_attribute {
//     DW_INL_not_inlined=0,
//     DW_INL_inlined=1,
//     DW_INL_declared_not_inlined=2,
//     DW_INL_declared_inlined=3
// } dwarf_inline_attribute;
// 
// typedef enum dwarf_line_number_ops {
//     DW_LNS_extended_op=0,
//     DW_LNS_copy=1,
//     DW_LNS_advance_pc=2,
//     DW_LNS_advance_line=3,
//     DW_LNS_set_file=4,
//     DW_LNS_set_column=5,
//     DW_LNS_negate_stmt=6,
//     DW_LNS_set_basic_block=7,
//     DW_LNS_const_add_pc=8,
//     DW_LNS_fixed_advance_pc=9
// } dwarf_line_number_ops;
// 
// typedef enum dwarf_line_number_x_ops {
//     DW_LNE_end_sequence=1,
//     DW_LNE_set_address=2,
//     DW_LNE_define_file=3
// } dwarf_line_number_x_ops;
// 
// typedef enum dwarf_location_atom {
//     DW_OP_addr=3,
//     DW_OP_deref=6,
//     DW_OP_const1u=8,
//     DW_OP_const1s=9,
//     DW_OP_const2u=10,
//     DW_OP_const2s=11,
//     DW_OP_const4u=12,
//     DW_OP_const4s=13,
//     DW_OP_const8u=14,
//     DW_OP_const8s=15,
//     DW_OP_constu=16,
//     DW_OP_consts=17,
//     DW_OP_dup=18,
//     DW_OP_drop=19,
//     DW_OP_over=20,
//     DW_OP_pick=21,
//     DW_OP_swap=22,
//     DW_OP_rot=23,
//     DW_OP_xderef=24,
//     DW_OP_abs=25,
//     DW_OP_and=26,
//     DW_OP_div=27,
//     DW_OP_minus=28,
//     DW_OP_mod=29,
//     DW_OP_mul=30,
//     DW_OP_neg=31,
//     DW_OP_not=32,
//     DW_OP_or=33,
//     DW_OP_plus=34,
//     DW_OP_plus_uconst=35,
//     DW_OP_shl=36,
//     DW_OP_shr=37,
//     DW_OP_shra=38,
//     DW_OP_xor=39,
//     DW_OP_bra=40,
//     DW_OP_eq=41,
//     DW_OP_ge=42,
//     DW_OP_gt=43,
//     DW_OP_le=44,
//     DW_OP_lt=45,
//     DW_OP_ne=46,
//     DW_OP_skip=47,
//     DW_OP_lit0=48,
//     DW_OP_lit1=49,
//     DW_OP_lit2=50,
//     DW_OP_lit3=51,
//     DW_OP_lit4=52,
//     DW_OP_lit5=53,
//     DW_OP_lit6=54,
//     DW_OP_lit7=55,
//     DW_OP_lit8=56,
//     DW_OP_lit9=57,
//     DW_OP_lit10=58,
//     DW_OP_lit11=59,
//     DW_OP_lit12=60,
//     DW_OP_lit13=61,
//     DW_OP_lit14=62,
//     DW_OP_lit15=63,
//     DW_OP_lit16=64,
//     DW_OP_lit17=65,
//     DW_OP_lit18=66,
//     DW_OP_lit19=67,
//     DW_OP_lit20=68,
//     DW_OP_lit21=69,
//     DW_OP_lit22=70,
//     DW_OP_lit23=71,
//     DW_OP_lit24=72,
//     DW_OP_lit25=73,
//     DW_OP_lit26=74,
//     DW_OP_lit27=75,
//     DW_OP_lit28=76,
//     DW_OP_lit29=77,
//     DW_OP_lit30=78,
//     DW_OP_lit31=79,
//     DW_OP_reg0=80,
//     DW_OP_reg1=81,
//     DW_OP_reg2=82,
//     DW_OP_reg3=83,
//     DW_OP_reg4=84,
//     DW_OP_reg5=85,
//     DW_OP_reg6=86,
//     DW_OP_reg7=87,
//     DW_OP_reg8=88,
//     DW_OP_reg9=89,
//     DW_OP_reg10=90,
//     DW_OP_reg11=91,
//     DW_OP_reg12=92,
//     DW_OP_reg13=93,
//     DW_OP_reg14=94,
//     DW_OP_reg15=95,
//     DW_OP_reg16=96,
//     DW_OP_reg17=97,
//     DW_OP_reg18=98,
//     DW_OP_reg19=99,
//     DW_OP_reg20=100,
//     DW_OP_reg21=101,
//     DW_OP_reg22=102,
//     DW_OP_reg23=103,
//     DW_OP_reg24=104,
//     DW_OP_reg25=105,
//     DW_OP_reg26=106,
//     DW_OP_reg27=107,
//     DW_OP_reg28=108,
//     DW_OP_reg29=109,
//     DW_OP_reg30=110,
//     DW_OP_reg31=111,
//     DW_OP_breg0=112,
//     DW_OP_breg1=113,
//     DW_OP_breg2=114,
//     DW_OP_breg3=115,
//     DW_OP_breg4=116,
//     DW_OP_breg5=117,
//     DW_OP_breg6=118,
//     DW_OP_breg7=119,
//     DW_OP_breg8=120,
//     DW_OP_breg9=121,
//     DW_OP_breg10=122,
//     DW_OP_breg11=123,
//     DW_OP_breg12=124,
//     DW_OP_breg13=125,
//     DW_OP_breg14=126,
//     DW_OP_breg15=127,
//     DW_OP_breg16=128,
//     DW_OP_breg17=129,
//     DW_OP_breg18=130,
//     DW_OP_breg19=131,
//     DW_OP_breg20=132,
//     DW_OP_breg21=133,
//     DW_OP_breg22=134,
//     DW_OP_breg23=135,
//     DW_OP_breg24=136,
//     DW_OP_breg25=137,
//     DW_OP_breg26=138,
//     DW_OP_breg27=139,
//     DW_OP_breg28=140,
//     DW_OP_breg29=141,
//     DW_OP_breg30=142,
//     DW_OP_breg31=143,
//     DW_OP_regx=144,
//     DW_OP_fbreg=145,
//     DW_OP_bregx=146,
//     DW_OP_piece=147,
//     DW_OP_deref_size=148,
//     DW_OP_xderef_size=149,
//     DW_OP_nop=150
// } dwarf_location_atom;
// 
// typedef enum dwarf_macinfo_record_type {
//     DW_MACINFO_define=1,
//     DW_MACINFO_undef=2,
//     DW_MACINFO_start_file=3,
//     DW_MACINFO_end_file=4,
//     DW_MACINFO_vendor_ext=255
// } dwarf_macinfo_record_type;
// 
// typedef enum dwarf_source_language {
//     DW_LANG_C89=1,
//     DW_LANG_C=2,
//     DW_LANG_Ada83=3,
//     DW_LANG_C_plus_plus=4,
//     DW_LANG_Cobol74=5,
//     DW_LANG_Cobol85=6,
//     DW_LANG_Fortran77=7,
//     DW_LANG_Fortran90=8,
//     DW_LANG_Pascal83=9,
//     DW_LANG_Modula2=10,
//     DW_LANG_Mips_Assembler=32769
// } dwarf_source_language;
// 
// typedef enum dwarf_tag {
//     DW_TAG_padding=0,
//     DW_TAG_array_type=1,
//     DW_TAG_class_type=2,
//     DW_TAG_entry_point=3,
//     DW_TAG_enumeration_type=4,
//     DW_TAG_formal_parameter=5,
//     DW_TAG_imported_declaration=8,
//     DW_TAG_label=10,
//     DW_TAG_lexical_block=11,
//     DW_TAG_member=13,
//     DW_TAG_pointer_type=15,
//     DW_TAG_reference_type=16,
//     DW_TAG_compile_unit=17,
//     DW_TAG_string_type=18,
//     DW_TAG_structure_type=19,
//     DW_TAG_subroutine_type=21,
//     DW_TAG_typedef=22,
//     DW_TAG_union_type=23,
//     DW_TAG_unspecified_parameters=24,
//     DW_TAG_variant=25,
//     DW_TAG_common_block=26,
//     DW_TAG_common_inclusion=27,
//     DW_TAG_inheritance=28,
//     DW_TAG_inlined_subroutine=29,
//     DW_TAG_module=30,
//     DW_TAG_ptr_to_member_type=31,
//     DW_TAG_set_type=32,
//     DW_TAG_subrange_type=33,
//     DW_TAG_with_stmt=34,
//     DW_TAG_access_declaration=35,
//     DW_TAG_base_type=36,
//     DW_TAG_catch_block=37,
//     DW_TAG_const_type=38,
//     DW_TAG_constant=39,
//     DW_TAG_enumerator=40,
//     DW_TAG_file_type=41,
//     DW_TAG_friend=42,
//     DW_TAG_namelist=43,
//     DW_TAG_namelist_item=44,
//     DW_TAG_packed_type=45,
//     DW_TAG_subprogram=46,
//     DW_TAG_template_type_param=47,
//     DW_TAG_template_value_param=48,
//     DW_TAG_thrown_type=49,
//     DW_TAG_try_block=50,
//     DW_TAG_variant_part=51,
//     DW_TAG_variable=52,
//     DW_TAG_volatile_type=53,
//     DW_TAG_MIPS_loop=16513,
//     DW_TAG_format_label=16641,
//     DW_TAG_function_template=16642,
//     DW_TAG_class_template=16643
// } dwarf_tag;
// 
// typedef enum dwarf_type {
//     DW_ATE_void=0,
//     DW_ATE_address=1,
//     DW_ATE_boolean=2,
//     DW_ATE_complex_float=3,
//     DW_ATE_float=4,
//     DW_ATE_signed=5,
//     DW_ATE_signed_char=6,
//     DW_ATE_unsigned=7,
//     DW_ATE_unsigned_char=8
// } dwarf_type;
// 
// typedef enum dwarf_virtuality_attribute {
//     DW_VIRTUALITY_none=0,
//     DW_VIRTUALITY_virtual=1,
//     DW_VIRTUALITY_pure_virtual=2
// } dwarf_virtuality_attribute;
// 
// typedef enum dwarf_visibility_attribute {
//     DW_VIS_local=1,
//     DW_VIS_exported=2,
//     DW_VIS_qualified=3
// } dwarf_visibility_attribute;
// 
// typedef enum DynamicMode {
//     kFollow=0,
//     kFixed=1,
//     kPoint=2,
//     kRail=3,
//     kStick=4
// } DynamicMode;
// 
// typedef struct DynamicStatusBlock DynamicStatusBlock, *PDynamicStatusBlock;
// 
// typedef struct VAGBankStatus VAGBankStatus, *PVAGBankStatus;
// 
// typedef struct StreamStatus StreamStatus, *PStreamStatus;
// 
// typedef struct GameEffectChannel GameEffectChannel, *PGameEffectChannel;
// 
// struct GameEffectChannel {
//     unsigned int fHandle;
//     char fName[24];
//     unsigned int fModulate;
// };
// 
// struct VAGBankStatus {
//     int fStatus;
//     unsigned int fAddress;
//     unsigned int fSize;
// };
// 
// struct StreamStatus {
//     unsigned int fFileLength;
//     int fDMARequestSize;
//     int fReadState;
//     int fFilePosition;
//     unsigned int fSoundHandle;
//     int fTotalFreshData;
//     int fVolume;
//     int fFadeFactor;
//     char fFileName[24];
// };
// 
// struct DynamicStatusBlock {
//     int fTick;
//     struct VAGBankStatus fVAGBanks[20];
//     struct Bank fBanks[20];
//     struct StreamStatus fFileBuffers[6];
//     struct GameEffectChannel fGameEffectChannels[4];
//     int fHeapFree[3][2];
//     int fDiscStatus;
//     char fPad[12];
//     int fTickCheck;
// };
// 
// typedef enum eAction {
//     kAOn=0,
//     kAOff=1,
//     kACosmeticShieldOn=2,
//     kACosmeticShieldOff=3,
//     kASetContext=4,
//     kAShardSetCountThreshold=5,
//     kAShardCreate=6,
//     kAShardCreateReleasedToTargets=7,
//     kAShardCreateRoamed=8,
//     kAShardDestroy=9,
//     kAShardDestroyRain=10,
//     kAShardRelease=11,
//     kAShardReleaseAndTarget=12,
//     kAShardAbsorb=13,
//     kAShardFocusAt=14,
//     kAShardFocusAtJoint=15,
//     kAShardFocusStop=16,
//     kAShardRain=17,
//     kAShardRainStop=18,
//     kAShardHideAtTarget=19,
//     kAShardShowAtTarget=20,
//     kAShardDestroyAtTarget=21,
//     kAShardDelayAcquireTarget=22,
//     kATransferToRider=23,
//     kATransferToMount=24,
//     kATransferToPlayer=25,
//     kAMakeStandalone=26,
//     kShardA_Return=27,
//     kShardA_Destroy=28
// } eAction;
// 
// typedef enum eAFFlags {
//     kAFFadeIn=1,
//     kAFSetAdditive=2
// } eAFFlags;
// 
// typedef enum eANI {
//     kANI_Idle=0,
//     kANI_Fall=1,
//     kANI_FallLoop=2,
//     kANI_HighFall=3,
//     kANI_HighFallLoop=4,
//     kANI_VFall=5,
//     kANI_VFallLoop=6,
//     kANI_Land=7,
//     kANI_HighLand=8,
//     kANI_VLand=9,
//     kANI_Number=10
// } eANI;
// 
// typedef enum eAPCEFlags {
//     kAPCEDontConfuseLockedOn=1
// } eAPCEFlags;
// 
// typedef struct Earth Earth, *PEarth;
// 
// struct Earth {
//     undefined field0_0x0;
// };
// 
// typedef struct EarthRock EarthRock, *PEarthRock;
// 
// struct EarthRock {
//     struct VUVec4 m_vDestPos;
//     struct VUVec4 m_vOrigPos;
//     struct VUVec4 m_vRot;
//     FLOAT m_fRotVel;
//     struct goGameObject *m_pGO;
//     FLOAT m_fInitScale;
//     FLOAT m_fFinalScale;
//     FLOAT m_fScaleTime;
//     FLOAT m_fSpawnTime;
//     FLOAT m_fTime;
//     undefined field10_0x4c;
//     undefined field11_0x4d;
//     undefined field12_0x4e;
//     undefined field13_0x4f;
// };
// 
// typedef enum eAttachment {
//     kHand=1,
//     kChained=2
// } eAttachment;
// 
// typedef enum eAudioMode {
//     kPCM=0,
//     kADPCM=1,
//     kLocalised=2
// } eAudioMode;
// 
// typedef enum EAxis {
//     kAxisX=0,
//     kAxisY=1,
//     kAxisDefault=2,
//     kAxisZ=2,
//     kAXIS_FORCE_32BITS=2147483647
// } EAxis;
// 
// typedef enum eAxis {
//     kA_None=0,
//     kA_X=1,
//     kA_Y=2,
//     kA_Default=3,
//     kA_Z=3
// } eAxis;
// 
// typedef enum eBaseFlags {
//     kFDefault=0,
//     kFKeepSubWeapon=1
// } eBaseFlags;
// 
// typedef enum eBaseType {
//     kBT_Axis=0,
//     kBT_Default=0,
//     kBT_Angle=1
// } eBaseType;
// 
// typedef enum eBlendMode {
//     kGSNormal=0,
//     kGSAdditive=1,
//     kGSSubtractive=2
// } eBlendMode;
// 
// typedef enum eBlendModes {
//     kNormal=0,
//     kAdditive=1,
//     kSubtractive=2,
//     k32bitEnumHack=65536
// } eBlendModes;
// 
// typedef enum eBodyParts {
//     kPartHead=0,
//     kPartBody=1,
//     kPartWeaponLeft=2,
//     kPartWeaponRight=3,
//     kPartArmLeft=4,
//     kPartArmRight=5,
//     kPartLegLeft=6,
//     kPartLegRight=7,
//     kPartDefault=8,
//     kPartNone=8,
//     kPartExtra1=9,
//     kPartExtra2=10,
//     kPartExtra3=11,
//     kPartExtra4=12,
//     kPartEitherWeapon=32,
//     kPartFirstLogical=32,
//     kPartEitherArm=33,
//     kPartEitherLeg=34,
//     kPartFirstRider=35,
//     kPartRiderEitherWeapon=35,
//     kPartRiderEitherArm=36,
//     kPartRiderEitherLeg=37,
//     kPartRiderBody=38
// } eBodyParts;
// 
// typedef enum eBSLockedState {
//     kBS_Init=0,
//     kBS_GetCardInfo1=1,
//     kBS_CheckSetup1=2,
//     kBS_GetCardInfo2=3,
//     kBS_CheckSetup2=4,
//     kBS_CheckSpace=5,
//     kBS_InsuffSpaceBothCards=6,
//     kBS_InsuffSpace=7,
//     kBS_WaitInsuffSpace=8,
//     kBS_NoCard=9,
//     kBS_WaitForCard=10
// } eBSLockedState;
// 
// typedef enum eButtons {
//     kAnyMin=0,
//     kFaceMin=0,
//     kTriangle=0,
//     kCircle=1,
//     kDefault=1,
//     kCross=2,
//     kFaceMax=3,
//     kSquare=3,
//     k180Min=4,
//     k180UpCW=4,
//     kSpinMin=4,
//     k180UpCCW=5,
//     k180DownCW=6,
//     k180DownCCW=7,
//     k180Max=7,
//     k360CW=8,
//     k360Min=8,
//     k360CCW=9,
//     k360Max=9,
//     kAnyMax=9,
//     kSpinMax=9,
//     kRandom=10,
//     kRandomSpin=11,
//     kRandom180=12,
//     kRandom360=13,
//     kRandomFace=14
// } eButtons;
// 
// typedef enum ECheckPosResult {
//     kDown=1,
//     kNorthEast=2,
//     kSouthEast=4,
//     kSouthWest=8,
//     kNorthWest=16,
//     kNorth=32,
//     kEast=64,
//     kSouth=128,
//     kWest=256,
//     kUp=512,
//     kHitCreature=1024
// } ECheckPosResult;
// 
// typedef enum eCheckState {
//     kCheck_Init=0,
//     kCheck_GetCardInfo=1,
//     kCheck_GetDir=2,
//     kCheck_ReadMasterFile=3,
//     kCheck_Done=4
// } eCheckState;
// 
// typedef enum eChestTypes {
//     kChestDefault=0,
//     kChestNone=0,
//     kChestPlain=1,
//     kChestHealth=2,
//     kChestMagic=3,
//     kChestWeapon=4,
//     kChestGodMode=5,
//     kChestRaiden=6,
//     kChestOlympus=7
// } eChestTypes;
// 
// typedef enum eCircleStatus {
//     kCircleOff=0,
//     kCircleOn=1
// } eCircleStatus;
// 
// typedef enum EClearFlag {
//     kCF_DoNotCancelCombat=1,
//     kCF_Collider=2,
//     kCF_NoYConstraint=4,
//     kCF_Default=8,
//     kCF_RampLinear=8,
//     kCF_RampSquared=16
// } EClearFlag;
// 
// typedef enum eCliffTypes {
//     kCliffHand=0,
//     kCliffFoot=1,
//     kCliffLand=2,
//     kCliffBlade=3
// } eCliffTypes;
// 
// typedef enum EClimbResult {
//     kClimb=1,
//     kClimbLeft=2,
//     kClimbRight=4,
//     kAutoFace=8,
//     kAdjustLeft=16,
//     kAdjustRight=32,
//     kHandHoldOnly=64
// } EClimbResult;
// 
// typedef enum EClipFlags {
//     kClipped=-2147483648,
//     kClipNone=0,
//     kClipRight=1,
//     kClipLeft=2,
//     kClipBottom=4,
//     kClipTop=8,
//     kClipFar=16,
//     kClipNear=32
// } EClipFlags;
// 
// typedef enum eCmbtFlags {
//     kCmbtTrailLeft=1,
//     kCmbtTrailBody=2,
//     kCmbtTrailRight=4,
//     kCmbtHideAttachmentLeft=8,
//     kCmbtHideAttachmentRight=16,
//     kCmbtHideChainLeft=32,
//     kCmbtHideChainRight=64,
//     kCmbtNoImpulse=128,
//     kCmbtNoDamage=256,
//     kCmbtNoAiming=512,
//     kCmbtNoBlock=1024,
//     kCmbtNoCollisionResponse=2048,
//     kCmbtNoHermesSlowdown=4096,
//     kCmbtNoCapsuleCollision=8192,
//     kCmbtDoVoidTest=16384,
//     kCmbtDoNotTarget=32768,
//     kCmbtDoNotManualTarget=65536,
//     kCmbtDoNotSwitchTarget=131072,
//     kCmbtManualTargeting=262144,
//     kCmbtFriendlyDamage=524288,
//     kCmbtFriendlyReactions=1048576,
//     kCmbtSynchMaster=2097152,
//     kCmbtSynchSlave=4194304,
//     kCmbtSynchNoAlign=8388608,
//     kCmbtInvulnerable=16777216,
//     kCmbtBlocking=33554432,
//     kCmbtBlockingThrow=67108864,
//     kCmbtStunned=134217728,
//     kCmbtProjectileMove=268435456,
//     kCmbtCanCancelMove=536870912
// } eCmbtFlags;
// 
// typedef enum eColorMode {
//     kCM_None=0,
//     kCM_Caustic=1,
//     kCM_Hole=2,
//     kCM_CameraGel=3
// } eColorMode;
// 
// typedef enum eConditions {
//     kCDefault=0,
//     kCNone=0,
//     kCHit=1,
//     kCHitOnce=2,
//     kCEnemyDied=3,
//     kCHitHero=4,
//     kCBlocked=5,
//     kCDead=6
// } eConditions;
// 
// typedef enum EControlIDs {
//     kL2=0,
//     kR2=1,
//     kL1=2,
//     kR1=3,
//     kTriangle=4,
//     kCircle=5,
//     kCross=6,
//     kSquare=7,
//     kSelect=8,
//     kL3=9,
//     kR3=10,
//     kStart=11,
//     kUp=12,
//     kRight=13,
//     kDown=14,
//     kLeft=15,
//     kLeftStickX=16,
//     kLeftStickY=17,
//     kRightStickX=18,
//     kRightStickY=19,
//     kSmallMotor=20,
//     kLargeMotor=21,
//     kMaxControls=22
// } EControlIDs;
// 
// typedef enum eCreateState {
//     kCreate_Init=0,
//     kCreate_GetCardInfo=1,
//     kCreate_GetDir=2,
//     kCreate_DeleteFile=3,
//     kCreate_MkDir=4,
//     kCreate_CreateFile=5,
//     kCreate_WriteFile=6,
//     kCreate_Done=7
// } eCreateState;
// 
// typedef enum eCSFlags {
//     kRotateCreature=1,
//     kLockCamera=2,
//     kIgnoreY=4,
//     kTweenOutOverAnimation=8,
//     kNormaliseSynchJoint=16
// } eCSFlags;
// 
// typedef enum eDampingIDs {
//     kAutoAim=0,
//     kSynch=1
// } eDampingIDs;
// 
// typedef enum eDampingLevel {
//     kDefault=0,
//     kFast=1,
//     kMedium=2,
//     kSlow=3
// } eDampingLevel;
// 
// typedef struct EdgeInfo EdgeInfo, *PEdgeInfo;
// 
// struct EdgeInfo {
//     UINT16 nRefCnt;
//     UINT16 bInverted;
// };
// 
// typedef enum eDir {
//     kDirStraight=0,
//     kDirClock=1,
//     kDirDefault=1,
//     kDirCounter=2
// } eDir;
// 
// typedef enum eEffectTypes {
//     kCameraFilter=0,
//     kFog=1,
//     kWarp=2,
//     kBloom=3,
//     kSway=4,
//     kNumEffectTypes=5
// } eEffectTypes;
// 
// typedef enum EEmissionRate {
//     kInstantaneous=0,
//     kPreCalced=1,
//     kFixedRate=2,
//     kVariableRate=3
// } EEmissionRate;
// 
// typedef struct EEVagStreamMonitor EEVagStreamMonitor, *PEEVagStreamMonitor;
// 
// struct EEVagStreamMonitor {
//     unsigned int BufferSize;
//     char *EEStartAddress;
//     char *NextIOPReadAddress;
//     int TotalBytesConsumed;
//     char pad[48];
// };
// 
// typedef enum eEvent {
//     kEDefault=0,
//     kENone=0,
//     kECross=1,
//     kEFirstButton=1,
//     kESquare=2,
//     kETriangle=3,
//     kECircle=4,
//     kEL1=5,
//     kEL2=6,
//     kEL3=7,
//     kER1=8,
//     kER2=9,
//     kELastButton=10,
//     kER3=10,
//     kEAuto=11,
//     kERiderDeath=12,
//     kEDeath=13,
//     kEHit=14,
//     kEBlocked=15,
//     kEReaction=16,
//     kERiderReaction=17,
//     kEBlockReaction=18,
//     kECircleReaction=19,
//     kEThrowReaction=20,
//     kEFreezeReaction=21,
//     kER1Reaction=22,
//     kENavigateAll=23,
//     kENavigateJoystick=24,
//     kENavigateButtons=25,
//     kENavigateJump=26,
//     kENavigateGrapple=27,
//     kECustom1=28,
//     kECustom2=29,
//     kECustom3=30,
//     kECustom4=31,
//     kECustom5=32,
//     kENumEvents=33
// } eEvent;
// 
// typedef enum eEventModifier {
//     kEMNone=0,
//     kEMDefault=1,
//     kEMJustDown=1,
//     kEMJustUp=2,
//     kEMHoldDown=3,
//     kEMDown=4,
//     kEMUp=5
// } eEventModifier;
// 
// typedef enum eExtendSearch {
//     kES_Levels=1
// } eExtendSearch;
// 
// typedef struct Effect Effect, *PEffect;
// 
// typedef struct tGameEffect tGameEffect, *PtGameEffect;
// 
// struct Effect {
//     unsigned int fHandle;
//     struct tGameEffect *fEffect;
// };
// 
// struct tGameEffect {
//     INT32 m_ID;
//     INT32 m_Type;
//     FLOAT m_Duration;
// };
// 
// typedef struct effectCore effectCore, *PeffectCore;
// 
// struct effectCore {
//     undefined field0_0x0;
// };
// 
// typedef enum eFlag__1_18819 {
//     kFlag_Dead=-2147483648,
//     kFlag_Immortal=1,
//     kFlag_Immoveable=2,
//     kFlag_PinToWorld=4,
//     kFlag_Underwater=16,
//     kFlag_HasHull=1073741824
// } eFlag__1_18819;
// 
// typedef enum EFlag__1_19093 {
//     kFlag_NULL=0,
//     kFlag_Invulnerable=1
// } EFlag__1_19093;
// 
// typedef enum EFlag__1_19109 {
//     kFlag_NULL=0,
//     kFlag_Orbit=1,
//     kFlag_Roam=2,
//     kFlag_Cycle=4,
//     kFlag_Demodulate=8,
//     kFlag_Return=512,
//     kFlag_Hidden=1024,
//     kFlag_ReachedTarget=2048,
//     kFlag_HoverClockwise=4096,
//     kFlag_ClearOnAbsorb=6670,
//     kFlag_Destroy=8192,
//     kFlag_DestroyOnReach=16384,
//     kFlag_Free=32768
// } EFlag__1_19109;
// 
// typedef enum eFlag__1_19379 {
//     kFlag_UsingAnimation=1
// } eFlag__1_19379;
// 
// typedef enum eFlag__1_19515 {
//     kF_IsPassiveAI=0,
//     kF_NULL=0,
//     kF_DynamicCreation=1,
//     kF_IsGridAI=2,
//     kF_ReactiveTypeM=2,
//     kF_FirstFrame=4,
//     kF_InitialMove=8,
//     kF_Paused=16,
//     kF_DelayAppearanceC=32,
//     kF_DelayAppearance=64,
//     kF_DelayAppearanceM=96,
//     kF_BASE_MASK=255,
//     kF_DERIVED_START=256,
//     kF_DERIVED_MASK=65280
// } eFlag__1_19515;
// 
// typedef enum eFlag__1_20315 {
//     kFlag_NULL=0,
//     kModifierFlag_Timer=1,
//     kModifierFlag_Counter=2,
//     kModifierFlag_Mask=3
// } eFlag__1_20315;
// 
// typedef enum eFlag__1_7820 {
//     kFTriggerInRange_EnumR1=0,
//     kFImmoveableObject=1,
//     kFDefault=2,
//     kFDramaticMusic=2,
//     kFPassiveDefault=2,
//     kFNoImpulse=4,
//     kFNoDying=8,
//     kFLightSoldier=16,
//     kFAllowToBeAttackedOffScreen=32,
//     kFRiderDisablesAutoCircle=64,
//     kFNotFreezeable=128,
//     kFDisableShadowCulling=256,
//     kFThickerShadow=512,
//     kFTriggerInRange=1024,
//     kFTriggerInRange_R1=1024,
//     kFTriggerInRangeDisplayUI=2048,
//     kFTriggerIsHermesCompliant=4096,
//     kFTriggerInRange_EnumL1=8192,
//     kFTriggerInRange_EnumMask=8192,
//     kFTriggerInRange_L1=9216,
//     kFPassive_Breakable=16384,
//     kFPassiveBrkDefault=16514,
//     kFPassive_PinToWorld=32768
// } eFlag__1_7820;
// 
// typedef enum EFlags {
//     kAir=0,
//     kVolumeNone=0,
//     kOmniDrag=1,
//     kDirectionalDrag=2,
//     kGravity=3,
//     kNewton=4,
//     kRadial=5,
//     kUniform=6,
//     kVortex=7,
//     kTurbulence=8,
//     kVolumeAxis=9,
//     kSpecial=15,
//     kTypeMask=15,
//     kVolumeCube=16,
//     kVolumeSphere=32,
//     kVolumeCylinder=48,
//     kVolumeCone=64,
//     kVolumeTorus=80,
//     kVolumeMask=240,
//     kUseMaxDistance=256,
//     kComponentOnly=512,
//     kEnableSpread=1024,
//     kInheritRotation=2048,
//     kInvertAttenuation=4096,
//     kQuadraticInterpolation=8192,
//     kVolumeExclusion=16384
// } EFlags;
// 
// typedef enum eFlags__1_18907 {
//     kFFirstInputSeen=1
// } eFlags__1_18907;
// 
// typedef enum eFlags__1_19473 {
//     kFVirtualWindZone=1,
//     kFAttachToJoint=2
// } eFlags__1_19473;
// 
// typedef enum eFlags__1_5597 {
//     kFDefault=0,
//     kFCheckBladeCollision=1
// } eFlags__1_5597;
// 
// typedef enum eFlags__1_5904 {
//     kFMirrorLeftRight=1,
//     kFMirrorFrontBack=2,
//     kFMirrorDownUp=4
// } eFlags__1_5904;
// 
// typedef enum eFlags__1_6041 {
//     kSTFDefault=0,
//     kSTFNoYMove=1,
//     kSTFRadiusHold=2
// } eFlags__1_6041;
// 
// typedef enum eFlags__1_6062 {
//     kNegX=1,
//     kPosX=2,
//     kNegY=4,
//     kPosY=8,
//     kNegZ=16,
//     kPosZ=32,
//     kFlattenConeDir=64,
//     kFlattenForceDir=128
// } eFlags__1_6062;
// 
// typedef enum eFlags__1_6073 {
//     kTrackTarget=1
// } eFlags__1_6073;
// 
// typedef enum eFlags__1_6094 {
//     kFindCloseWpt=1,
//     kTurnTowardTarget=2,
//     kInheritSite=4
// } eFlags__1_6094;
// 
// typedef enum eFlags__1_6168 {
//     kFDefault=0,
//     kFDontNav=1,
//     kFUseYRotation=2,
//     kFDontTween=4
// } eFlags__1_6168;
// 
// typedef enum eFlags__1_6347 {
//     kFDefault=0,
//     kFAvailableOnGround=1,
//     kFAvailableInAir=2,
//     kFAvailableOnBiPinnedRope=4,
//     kFAvailableOnWall=8,
//     kFAvailableInWater=16,
//     kFAvailableWhileDrifting=32,
//     kFAvailableOnPegasus=64,
//     kFAvailableOnCeiling=128,
//     kFAvailableInGrapple=256,
//     kFCustom=512,
//     kFImmediate=1024,
//     kFPriority=2048,
//     kFEnemyContextInvert=4096,
//     kFItemInvert=8192,
//     kFMustHaveTarget=16384,
//     kFBranchNavigation=32768,
//     kFBranchNothing=65536,
//     kFBranchDecision=131072,
//     kFBranchFork=262144
// } eFlags__1_6347;
// 
// typedef enum eFlags__1_6381 {
//     kFOnlyHitTarget=1,
//     kFApplyHitEffects=2,
//     kFDefault=2,
//     kFCowCatcherMode=4,
//     kFOnlyHitAI=8,
//     kFUnblockable=16,
//     kFInstantOverrideDamage=32,
//     kFIgnoreInvulnerable=64,
//     kFThrow=128
// } eFlags__1_6381;
// 
// typedef enum eFlags__1_6393 {
//     kFDefault=0,
//     kFHoldUntilCancelled=1,
//     kFBladeInherit=2,
//     kFNoOffscreenMoves=4,
//     kFNavigationMove=8,
//     kFNoDynamicCapsule=16,
//     kFNoGodMode=32
// } eFlags__1_6393;
// 
// typedef enum eFlags__1_6449 {
//     kFDefault=0,
//     kFNULL=0,
//     kFRadiusCheck=1
// } eFlags__1_6449;
// 
// typedef enum eFlags__1_6469 {
//     kFDefault=1,
//     kFHoldUseWorld=1,
//     kFBreakable=2,
//     kFShowPrompt=4
// } eFlags__1_6469;
// 
// typedef enum eFlags__1_6488 {
//     kFFloat=1,
//     kFCrank_NoLock=2,
//     kFCrank_BiDirectional=4,
//     kFCrank_RewindToReachedStop=8,
//     kFShowPrompt=16
// } eFlags__1_6488;
// 
// typedef enum eFlags__1_6525 {
//     kFDefault=0,
//     kFUseSyncJoint=1,
//     kFShowPrompt=2,
//     kFHACK_OldUnlock=4
// } eFlags__1_6525;
// 
// typedef enum eFlags__1_6539 {
//     kFApplyGravity=1,
//     kFDeflect=2,
//     kFDeflectDown=4,
//     kFDeflectStraightBack=8,
//     kFIgnoreInvulnerable=16,
//     kFAttachHitEffect=32,
//     kFDefault=33,
//     kFEndLifeSpanExplode=64,
//     kFUnblockable=256,
//     kFRailshot=512
// } eFlags__1_6539;
// 
// typedef enum eFlags__1_6563 {
//     kFDefault=0,
//     kFOriginatesFromRider=1,
//     kFDoNotTarget=2
// } eFlags__1_6563;
// 
// typedef enum eFlags__1_6599 {
//     kFShardPhysics=1,
//     kFForceFeedback=2,
//     kFDefault=3
// } eFlags__1_6599;
// 
// typedef enum eFlags__1_6612 {
//     kFScaleX=1,
//     kFScaleY=2,
//     kFScaleZ=4,
//     kFDefault=7,
//     kFLinkDuration=8,
//     kFNoOrient=32,
//     kFIgnoreWpnDmgMult=64
// } eFlags__1_6612;
// 
// typedef enum eFlags__1_6672 {
//     kFReset=1,
//     kFDrawGrid=2,
//     kFDrawCollisionSpheres=4,
//     kFDrawJointKey=8,
//     kFShowCollisions=16
// } eFlags__1_6672;
// 
// typedef enum eFlags__1_6696 {
//     kFCosmeticShield=1,
//     kFReleaseShard=2,
//     kFAbsorbShard=4,
//     kFBreaksOnDepletion=8,
//     kFEternal=16,
//     kFShardsAbsorbAll=32,
//     kFShardsTargetsGood=64,
//     kFShardsTargetsBad=128,
//     kFShardsTargetOrbit=256,
//     kFDefault=392,
//     kFShardsTargetHideInShield=512,
//     kFShardsTargetHideReleased=1024,
//     kFShardsStartRoaming=2048,
//     kFShardsRoamAndSeek=4096,
//     kFShardsHoverUpOnDelay=8192,
//     kFOriginatesFromRider=16384,
//     kFInfiniteRiderShield=32768
// } eFlags__1_6696;
// 
// typedef enum eFlags__1_6697 {
//     kFReturnOnDeath=1,
//     kFReturnOnHit=2,
//     kFReturnRoams=4,
//     kFDestroyOnHit=8,
//     kFOTypeGood=16,
//     kFDefault=24,
//     kFOTypeBad=32,
//     kFReachAndJolt=64
// } eFlags__1_6697;
// 
// typedef enum eFlags__1_6788 {
//     kFDefault=0,
//     kFComboFreeze=1
// } eFlags__1_6788;
// 
// typedef enum eFlags__1_6825 {
//     kFDefault=0,
//     kFNoGoldenFleeceGeometry=1,
//     kFUseCustomWeapons=2
// } eFlags__1_6825;
// 
// typedef enum eFlags__1_6917 {
//     kFDefault=0,
//     kFAllowTapSouls=1
// } eFlags__1_6917;
// 
// typedef enum eFlags__1_6978 {
//     kFDefault=0,
//     kFAllowRain=1,
//     kFAllowMashing=2
// } eFlags__1_6978;
// 
// typedef enum eFlags__1_7002 {
//     kFDefault=0,
//     kFExplode=1,
//     kFPulse=2
// } eFlags__1_7002;
// 
// typedef enum eFlags__1_7027 {
//     kFDefault=0,
//     kFAllowMashing=1
// } eFlags__1_7027;
// 
// typedef enum eFlags__1_7053 {
//     kFDefault=0,
//     kFAllowFlashFreeze=1,
//     kFAllowNuke=2,
//     kFAllowBomb=4
// } eFlags__1_7053;
// 
// typedef enum eFlags__1_7076 {
//     kFDefault=0,
//     kFAllowGustCharge=1,
//     kFAllowTornado=2,
//     kFAllowTempest=4
// } eFlags__1_7076;
// 
// typedef enum eFlags__1_7284 {
//     kFDeflectArrows=1,
//     kFDropBlood=2,
//     kFRunDustOrient=4,
//     kFRunDustAttach=8,
//     kFDefault=12,
//     kFIgnoreInvulnerable=16
// } eFlags__1_7284;
// 
// typedef enum eFlags__1_7327 {
//     kFDefault=0,
//     kFLooped=1,
//     kFLeave=2,
//     kFRemove=4,
//     kFDrivenAnim=8,
//     kFAttached=16,
//     kFLeftWeapon=32,
//     kFRightWeapon=64,
//     kFBloodDrop=128,
//     kFOriginatesFromRider=256
// } eFlags__1_7327;
// 
// typedef enum eFlags__1_7567 {
//     kFSwitchView=0,
//     kFGoodGuy=1,
//     kFIgnoreAIBlock=2,
//     kFDontReaquire=4,
//     kFInitialUnderwater=8,
//     kFShowHealthMeter=16,
//     kFGetStuck=32,
//     kFHasSecondRadius=64,
//     kFDefault=96,
//     kFIgnoreHits=128,
//     kFHasGrid=256,
//     kFXrayVision=512,
//     kFDontCancelTurnDamp=1024,
//     kFNoStrafe=2048,
//     kFHoldSpawnTillClear=4096,
//     kFReactive_NoTargeting=8192,
//     kFReactive_DelayStartBranch=16384,
//     kFReactive_RestoreDeadStatic=32768
// } eFlags__1_7567;
// 
// typedef enum eFlags__1_7657 {
//     kFDefault=0,
//     kFSynchWithCreature=1
// } eFlags__1_7657;
// 
// typedef enum eFlags__1_7698 {
//     kFNoImpulse=128,
//     kFNoDamage=256,
//     kFNoAiming=512,
//     kFNoBlock=1024,
//     kFNoHermesSlowdown=4096,
//     kFNoCapsuleCollision=8192,
//     kFDoNotTarget=32768,
//     kFDoNotManualTarget=65536,
//     kFDoNotSwitchTarget=131072,
//     kFFriendlyDamage=524288,
//     kFDefault=1048576,
//     kFFriendlyReactions=1048576,
//     kFInvulnerable=16777216
// } eFlags__1_7698;
// 
// typedef enum eFlags__1_7805 {
//     kBoomTarget=1,
//     kLookTarget=2,
//     kRadiusFromCapsule=4,
//     kAbsoluteOffset=8,
//     kFightLine=16
// } eFlags__1_7805;
// 
// typedef enum eFlyTypes {
//     kFlyType_Player=0,
//     kFlyType_Harpy=1
// } eFlyTypes;
// 
// typedef enum EFMVDisplayMode {
//     FMV_PAL=0,
//     FMV_NTSC=1,
//     FMV_PAL_FROM_NTSC=2,
//     FMV_480P=3
// } EFMVDisplayMode;
// 
// typedef enum EFMVDisplayWidescreen {
//     FMV_WS_NONE=0,
//     FMV_WS_H_CROP=1,
//     FMV_WS_H_LETTERBOX=2,
//     FMV_WS_V_CROP=3,
//     FMV_WS_V_LETTERBOX=4
// } EFMVDisplayWidescreen;
// 
// typedef enum eFootTypes {
//     kMask_Flags=-256,
//     kFootAuto=0,
//     kFootSize_Hero=0,
//     kFootStep=1,
//     kFootWalk=2,
//     kFootRun=3,
//     kFootLand=4,
//     kFootMask_Sound=15,
//     kFootSize_HumanoidS=16,
//     kFootSize_HumanoidR=32,
//     kFootSize_HumanoidL=48,
//     kFootMask_Size=240,
//     kMask_Enumerated=255,
//     kFootF_PrintR=256,
//     kFootF_PrintL=512,
//     kFootMask_Prints=768
// } eFootTypes;
// 
// typedef enum EForceFunctions {
//     kFFOmniDrag=0,
//     kFFDirectionalDrag=1,
//     kFFGravity=2,
//     kFFNewton=3,
//     kFFRadial=4,
//     kFFUniform=5,
//     kFFVortex=6,
//     kFFTurbulenceTest=7,
//     kNumForceFunctions=8
// } EForceFunctions;
// 
// typedef enum eGetLockedState {
//     kGet_GetCardInfo1=0,
//     kGet_CheckSetup1=1,
//     kGet_GetCardInfo2=2,
//     kGet_CheckSetup2=3,
//     kGet_CheckSpace=4
// } eGetLockedState;
// 
// typedef enum EGridAction {
//     kGA_NULL=0,
//     kGA_SwitchGrid=1,
//     kGA_AllowNewEval=2,
//     kGA_Abeyance=3
// } EGridAction;
// 
// typedef enum EGridFlags {
//     kGF_AllowNewEval=256,
//     kGF_Abeyance=512
// } EGridFlags;
// 
// typedef struct eh_context eh_context, *Peh_context;
// 
// struct eh_context {
//     void *handler_label;
//     void **dynamic_handler_chain;
//     void *info;
//     void *table_index;
// };
// 
// typedef struct eh_full_context eh_full_context, *Peh_full_context;
// 
// struct eh_full_context {
//     struct eh_context c;
//     void *top_elt[2];
// };
// 
// typedef enum eHeaps {
//     kHeapDefault=0,
//     kHeapPerm=1,
//     kHeapWeapon=2,
//     kHeapSubWeapon=3,
//     kHeapEarth=4,
//     kHeapElectric=5,
//     kHeapLightning=6,
//     kHeapMedusa=7,
//     kHeapWind=8
// } eHeaps;
// 
// typedef enum eHideAtTargetFlag {
//     kHTF_InShield=1,
//     kHTF_Released=2
// } eHideAtTargetFlag;
// 
// typedef enum eHitFlags {
//     kHitAll=-1,
//     kHitNone=0,
//     kHitDefault=1,
//     kHitThrow=2,
//     kHitProjectile=4
// } eHitFlags;
// 
// typedef enum eIgnoreFlags {
//     kIFCircleActive=1,
//     kIFCircleIgnore=2,
//     kIFMountedActive=4,
//     kIFMountedIgnore=8,
//     kIFGodModeActive=16,
//     kIFGodModeIgnore=32,
//     kIFHermesModeActive=64,
//     kIFHermesModeIgnore=128,
//     kIFBoneActive=256,
//     kIFBoneIgnore=512,
//     kIFHammerActive=1024,
//     kIFHammerIgnore=2048,
//     kIFOlympusActive=4096,
//     kIFOlympusIgnore=8192,
//     kIFPegMeleeActive=16384,
//     kIFPegMeleeIgnore=32768,
//     kIFPegProjActive=65536,
//     kIFPegProjIgnore=131072,
//     kIFDefault=174762
// } eIgnoreFlags;
// 
// typedef enum eInfoStateFlags {
//     kInhibitAirCombat=1,
//     kLookForWallCatch=2,
//     kHaveAttached=4,
//     kAttachedTo=8,
//     kOnPole=16,
//     kDoublePinned=32,
//     kZipLine=64,
//     kBalanceWalk=128,
//     kFrontPress=256,
//     kBackPress=512,
//     kLadder=1024,
//     kNoLanding=2048,
//     kInFreezeBeam=4096,
//     kInfoMask=6128,
//     kFreezeInvulnerable=8192,
//     kDead=32768,
//     kInstantDeath=65536,
//     kDisabled=131072,
//     kDisabledWorldUse=262144,
//     kPhysDirNew=524288,
//     kPhysPosNew=1048576,
//     kPlayer=2097152,
//     kInHermesMode=4194304,
//     kInDeathSink=8388608,
//     kDoneDoubleJump=16777216,
//     kNewImpulse=33554432,
//     kImpulseOverridesGravity=67108864,
//     kBalanceCatch=134217728,
//     kPegasusRiderQueued=268435456
// } eInfoStateFlags;
// 
// typedef enum eInitMeshMode {
//     kIM_None=0,
//     kIM_Clear=1,
//     kIM_Water=2
// } eInitMeshMode;
// 
// typedef enum eItem {
//     kIDefault=0,
//     kINone=0,
//     kILightning=1,
//     kIElectric=2,
//     kIWind=3,
//     kIGoldenFleece=5,
//     kIEarth=6,
//     kIIcarusWings=7,
//     kIHermesShoes=11,
//     kIBone=14,
//     kIHammer=15,
//     kIMedusa=16,
//     kIOlympus=17,
//     kIPegasusBoost=18
// } eItem;
// 
// typedef enum eJoystick {
//     kJDefault=0,
//     kJIgnore=0,
//     kJCenter=1,
//     kJExtreme=2,
//     kJLeft=3,
//     kJRight=4,
//     kJForward=5,
//     kJBackward=6,
//     kJCharLeft=7,
//     kJCharRight=8,
//     kJCharForward=9,
//     kJCharBackward=10,
//     kJRCenter=11,
//     kJRExtreme=12,
//     kJRLeft=13,
//     kJRRight=14,
//     kJRForward=15,
//     kJRBackward=16,
//     kJRCharLeft=17,
//     kJRCharRight=18,
//     kJRCharForward=19,
//     kJRCharBackward=20,
//     kJWiggleALittle=21,
//     kJWiggleALot=22,
//     kJWiggleAFuckLot=23
// } eJoystick;
// 
// typedef struct Electric Electric, *PElectric;
// 
// struct Electric {
//     undefined field0_0x0;
// };
// 
// typedef struct ElectricBolt ElectricBolt, *PElectricBolt;
// 
// struct ElectricBolt {
//     struct goGameObject *m_pGO;
//     struct goHandle m_hTarget;
//     FLOAT m_fTimeUntilDamage;
// };
// 
// typedef struct ElectricCore ElectricCore, *PElectricCore;
// 
// struct ElectricCore {
//     struct goGameObject *m_pGO;
//     FLOAT m_fTimeLeft;
//     FLOAT m_fReach;
//     FLOAT m_fDamageLeft;
//     INT32 m_iMaxBolts;
//     struct ElectricBolt m_aBolts[5];
//     struct ElectricBolt m_Pulse;
//     INT32 m_iPulseTarget;
// };
// 
// typedef enum Elf32_GPRMask_MIPS {
//     gpr_zero=1,
//     gpr_at=2,
//     gpr_v0=4,
//     gpr_v1=8,
//     gpr_a0=16,
//     gpr_a1=32,
//     gpr_a2=64,
//     gpr_a3=128,
//     gpr_t0=256,
//     gpr_t1=512,
//     gpr_t2=1024,
//     gpr_t3=2048,
//     gpr_t4=4096,
//     gpr_t5=8192,
//     gpr_t6=16384,
//     gpr_t7=32768,
//     gpr_s0=65536,
//     gpr_s1=131072,
//     gpr_s2=262144,
//     gpr_s3=524288,
//     gpr_s4=1048576,
//     gpr_s5=2097152,
//     gpr_s6=4194304,
//     gpr_s7=8388608,
//     gpr_t8=16777216,
//     gpr_t9=33554432,
//     gpr_k0=67108864,
//     gpr_k1=134217728,
//     gpr_gp=268435456,
//     gpr_sp=536870912,
//     gpr_fp=1073741824,
//     gpr_ra=2147483648
// } Elf32_GPRMask_MIPS;
// 
// typedef enum ELightType {
//     kAmbient=0,
//     kNone=0,
//     kLPosition=1,
//     kPoint=1,
//     kDirection=2,
//     kParallel=2,
//     kLightMask=3,
//     kSpot=3,
//     kCastShadows=4,
//     kAnimatedPosition=8,
//     kGroup1=16,
//     kPrimary=16,
//     kGroup2=32,
//     kSecondary=32,
//     kSpecialLight=64,
//     kSMLightProbe=128,
//     kGroup3=256,
//     kGroup4=512,
//     kMakesLight=1024,
//     kEmitDiffuse=65536,
//     kKeyLight=131072
// } ELightType;
// 
// typedef enum eLoadState {
//     kL_GetCardInfo1=0,
//     kL_GetCardInfo2=1,
//     kL_AskForCard=2,
//     kL_WaitForCard=3,
//     kL_SelectCard=4,
//     kL_WaitSelectCard=5,
//     kL_CheckSetup=6,
//     kL_SelectFile=7,
//     kL_WaitSelectFile=8,
//     kL_ReadFile=9,
//     kL_ReadDone=10,
//     kL_Complete=11,
//     kL_NoSavedGames=12,
//     kL_WaitNoSavedGames=13,
//     kL_NoDataFile=14,
//     kL_WaitNoDataFile=15,
//     kL_LoadFailure=16,
//     kL_WaitLoadFailure=17
// } eLoadState;
// 
// typedef enum eLocaliseMode {
//     kSingle=0,
//     kSeperated=1,
//     kSeperatedEnding=2
// } eLocaliseMode;
// 
// typedef enum eMainState {
//     kIdle=-1
// } eMainState;
// 
// typedef enum EMainVFSRoutines {
//     kNoMain=-1,
//     kModelViewer=1,
//     kTextureViewer=2
// } EMainVFSRoutines;
// 
// typedef enum eMashButtons {
//     kMashTriangle=0,
//     kMashCircle=1,
//     kMashDefault=1,
//     kMashCross=2,
//     kMashSquare=3,
//     kMashRotate=4,
//     kMashL1R1Alternate=5
// } eMashButtons;
// 
// typedef enum eMedusaFlags {
//     kMedusaF_Default=0,
//     kMedusaF_NULL=0,
//     kMedusaF_UseJointMatrix=1,
//     kMedusaF_FIgnoreInvulnerable=2
// } eMedusaFlags;
// 
// typedef enum eMeshMode {
//     kMM_None=0,
//     kMM_Damped=1,
//     kMM_Random_UV=2,
//     kMM_Ripple=3,
//     kMM_Warp=4
// } eMeshMode;
// 
// typedef enum eMeterFlags {
//     kDFDefault=0,
//     kDFAnimGradual=1,
//     kDFAbsolute=2
// } eMeterFlags;
// 
// typedef enum eMeterIDs {
//     kHealthMeter=0,
//     kMagicMeter=1,
//     kGodMeter=2,
//     kHermesMeter=3
// } eMeterIDs;
// 
// typedef enum eMissingWidescreenMode {
//     kCrop=0,
//     kLetterbox=1
// } eMissingWidescreenMode;
// 
// typedef enum EmitterFlags {
//     kExportName=1,
//     kModifyReverb=2,
//     kZoneActivated=4,
//     kAnimationDriven=8,
//     kVolumeTriggered=16,
//     kIsAnimated=32,
//     kIgnoreBackwardsAnimation=64,
//     kIgnoreForwardsAnimation=128,
//     kSendRegisters=256,
//     kIgnoreGroupScale=512,
//     kDriven=1024,
//     kPaused=2048,
//     kRetry=4096,
//     kLoop=8192,
//     kForcePlay=16384,
//     kSinglePlay=32768
// } EmitterFlags;
// 
// typedef struct EmitterLoadParm EmitterLoadParm, *PEmitterLoadParm;
// 
// struct EmitterLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     struct stdDynaString fSounds[4];
//     struct Attributes__1_8864 fAttributes;
//     unsigned char fType;
//     unsigned char fReverbPreset;
//     short unsigned int fFlags;
//     float fInner;
//     float fOuter;
//     struct stdDynaString fCurveName;
// };
// 
// typedef struct EmitterParm EmitterParm, *PEmitterParm;
// 
// struct EmitterParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     struct ClientParm__1_9257 *fSounds[4];
//     struct Attributes__1_8864 fAttributes;
//     unsigned char fType;
//     unsigned char fReverbPreset;
//     short unsigned int fFlags;
//     float fInner;
//     float fOuter;
//     struct nurbsCurve *fCurve;
//     unsigned int fName;
// };
// 
// typedef enum EmitterType {
//     kStatic=0,
//     kSurround=1,
//     kOmni=2,
//     kSemiOmni=3
// } EmitterType;
// 
// typedef enum EMode {
//     kMode_Oscillation=0,
//     kMode_Gust=1,
//     kMode_Nb=2
// } EMode;
// 
// typedef enum eModeFlag {
//     kModeDefault=0,
//     kModeCosmetic=1,
//     kModeRain=2,
//     kModeRainStop=4,
//     kModeHideShardsAtTarget_S=8,
//     kModeHideShardsAtTarget_R=16,
//     kModeStandalone=16
// } eModeFlag;
// 
// typedef enum eMotionStateFlags {
//     kOnGround=1,
//     kSliding=2,
//     kJumping=4,
//     kFalling=8,
//     kWallHang=16,
//     kClimbing=32,
//     kFlying=64,
//     kFloating=128,
//     kUnderwater=256,
//     kDiving=512,
//     kOnARope=1024,
//     kOnCeiling=2048,
//     kDrifting=4096,
//     kMountedRider=8192,
//     kPegasusRider=16384,
//     kGrapple=32768,
//     kMotionMask=65535
// } eMotionStateFlags;
// 
// typedef enum eNavFlags {
//     kNFDefault=0,
//     kNFClimbing=1,
//     kNFBalanceWalk=2,
//     kNFFly=4,
//     kNFSwim=8,
//     kNFDive=16,
//     kNFDiveDash=32,
//     kNFDiveIntoWater=64,
//     kNFJump=128,
//     kNFDoubleJump=256,
//     kNFUseRope=512,
//     kNFUsePole=1024,
//     kNFUseZipLine=2048,
//     kNFUseBiPinRope=4096,
//     kNFLadderSlide=8192,
//     kNFRopeSlide=16384,
//     kNFInteractiveObjects=32768,
//     kNFWallPullup=65536,
//     kNFLeanTurns=131072,
//     kNFDrift=262144,
//     kNFCeilingHang=524288,
//     kNFGrapple=2097152,
//     kNFDisplayFootdownFX=4194304,
//     kNFPlayer=7077883
// } eNavFlags;
// 
// typedef struct Enemy_ParamData Enemy_ParamData, *PEnemy_ParamData;
// 
// struct Enemy_ParamData {
//     UINT32 TweakNameHash;
//     INT16 SiteIndex;
//     INT16 AnimBank;
//     UINT32 InitialMoveNameHash;
//     INT16 StartState;
//     INT16 StateData;
//     UINT32 Targets;
//     INT16 HitPoints;
//     INT8 RiderMountType;
//     INT8 RiderMountID;
//     UINT8 SaveData;
//     undefined field11_0x19;
//     undefined field12_0x1a;
//     undefined field13_0x1b;
// };
// 
// typedef struct Enemy_SaveListItem Enemy_SaveListItem, *PEnemy_SaveListItem;
// 
// typedef struct Enemy_SaveListItem__vtable Enemy_SaveListItem__vtable, *PEnemy_SaveListItem__vtable;
// 
// struct Enemy_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enemy_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct Enemy_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Enemy_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     UINT16 creatorID;
//     UINT16 markerID;
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     INT8 qx;
//     INT8 qy;
//     INT8 qz;
//     INT8 qw;
//     UINT16 scale;
//     undefined field13_0x22;
//     undefined field14_0x23;
//     struct Enemy_ParamData paramData;
// };
// 
// typedef enum EngineEvents {
//     FRAME_END=100,
//     XXX_DUMMY=101,
//     BEHAVIOR_START=102,
//     BEHAVIOR_END=103,
//     TICK_JOY_PAD_UP=104,
//     TICK_JOY_PAD_DOWN=105,
//     TICK_JOY_PAD_LEFT=106,
//     TICK_JOY_PAD_RIGHT=107,
//     TICK_JOY_PAD_SQR=108,
//     TICK_JOY_PAD_CRO=109,
//     TICK_JOY_PAD_CIR=110,
//     TICK_JOY_PAD_TRI=111,
//     TICK_JOY_PAD_R1=112,
//     TICK_JOY_PAD_R2=113,
//     TICK_JOY_PAD_L1=114,
//     TICK_JOY_PAD_L2=115,
//     TIMER_EXPIRED=116,
//     ANIMATION_END=117,
//     ANIMATION_LOOP=118,
//     TRIGGER_ZONE=119,
//     EVT_CREATE=120,
//     EVT_CONNECT=121,
//     EVT_DISCONNECT=122,
//     EVT_DESTROY=123,
//     EVT_GAMEOBJECT_RECYCLE=124
// } EngineEvents;
// 
// typedef struct Ent_Animator Ent_Animator, *PEnt_Animator;
// 
// typedef struct Ent_Animator__vtable Ent_Animator__vtable, *PEnt_Animator__vtable;
// 
// struct Ent_Animator {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_Animator__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_AnimName;
//     struct DynExpr m_AnimStyle;
//     struct DynExpr m_AnimRate;
//     struct DynExpr m_StartTime;
// };
// 
// struct Ent_Animator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_Animator;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_CreationSensor Ent_CreationSensor, *PEnt_CreationSensor;
// 
// typedef struct Ent_CreationSensor__vtable Ent_CreationSensor__vtable, *PEnt_CreationSensor__vtable;
// 
// struct Ent_CreationSensor__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_CreationSensor;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_CreationSensor {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_CreationSensor__vtable *__vtable; /* Inherited from Entity */
// };
// 
// typedef struct Ent_DestructionSensor Ent_DestructionSensor, *PEnt_DestructionSensor;
// 
// typedef struct Ent_DestructionSensor__vtable Ent_DestructionSensor__vtable, *PEnt_DestructionSensor__vtable;
// 
// struct Ent_DestructionSensor__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_DestructionSensor;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_DestructionSensor {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_DestructionSensor__vtable *__vtable; /* Inherited from Entity */
// };
// 
// typedef struct Ent_EnemyCreator Ent_EnemyCreator, *PEnt_EnemyCreator;
// 
// typedef struct Ent_EnemyCreator__vtable Ent_EnemyCreator__vtable, *PEnt_EnemyCreator__vtable;
// 
// struct Ent_EnemyCreator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_EnemyCreator;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_EnemyCreator {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_EnemyCreator__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_MaximumCount;
//     struct DynExpr m_SandbaggingCount;
//     struct DynExpr m_CreateInitially;
//     struct DynExpr m_ReSpawn;
//     struct DynExpr m_TweakName;
//     struct DynExpr m_SiteIndex;
//     struct DynExpr m_AnimBank;
//     struct DynExpr m_InitialMove;
//     struct DynExpr m_StartState;
//     struct DynExpr m_ModeData;
//     int m_Count;
//     int m_KillCount;
//     undefined field35_0xf8;
//     undefined field36_0xf9;
//     undefined field37_0xfa;
//     undefined field38_0xfb;
//     undefined field39_0xfc;
//     undefined field40_0xfd;
//     undefined field41_0xfe;
//     undefined field42_0xff;
// };
// 
// typedef struct Ent_EntrySensor Ent_EntrySensor, *PEnt_EntrySensor;
// 
// typedef struct Ent_EntrySensor__vtable Ent_EntrySensor__vtable, *PEnt_EntrySensor__vtable;
// 
// struct Ent_EntrySensor {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_EntrySensor__vtable *__vtable; /* Inherited from Entity */
// };
// 
// struct Ent_EntrySensor__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_EntrySensor;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_EventSensor Ent_EventSensor, *PEnt_EventSensor;
// 
// typedef struct Ent_EventSensor__vtable Ent_EventSensor__vtable, *PEnt_EventSensor__vtable;
// 
// struct Ent_EventSensor__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_EventSensor;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_EventSensor {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_EventSensor__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_EventID;
//     struct DynExpr m_ButtonID;
//     struct DynExpr m_TransientMessageID;
//     undefined field26_0xb8;
//     undefined field27_0xb9;
//     undefined field28_0xba;
//     undefined field29_0xbb;
//     undefined field30_0xbc;
//     undefined field31_0xbd;
//     undefined field32_0xbe;
//     undefined field33_0xbf;
// };
// 
// typedef struct Ent_EventTransmitter Ent_EventTransmitter, *PEnt_EventTransmitter;
// 
// typedef struct Ent_EventTransmitter__vtable Ent_EventTransmitter__vtable, *PEnt_EventTransmitter__vtable;
// 
// struct Ent_EventTransmitter {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_EventTransmitter__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_EventID;
//     struct DynExpr m_EventParm1;
//     struct DynExpr m_EventParm2;
//     undefined field26_0xb8;
//     undefined field27_0xb9;
//     undefined field28_0xba;
//     undefined field29_0xbb;
//     undefined field30_0xbc;
//     undefined field31_0xbd;
//     undefined field32_0xbe;
//     undefined field33_0xbf;
// };
// 
// struct Ent_EventTransmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_EventTransmitter;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_ExitSensor Ent_ExitSensor, *PEnt_ExitSensor;
// 
// typedef struct Ent_ExitSensor__vtable Ent_ExitSensor__vtable, *PEnt_ExitSensor__vtable;
// 
// struct Ent_ExitSensor {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_ExitSensor__vtable *__vtable; /* Inherited from Entity */
// };
// 
// struct Ent_ExitSensor__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_ExitSensor;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_GlobalData Ent_GlobalData, *PEnt_GlobalData;
// 
// typedef struct Ent_GlobalData__vtable Ent_GlobalData__vtable, *PEnt_GlobalData__vtable;
// 
// struct Ent_GlobalData__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_GlobalData;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_GlobalData {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_GlobalData__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_Order;
//     struct DynExpr m_Var[16];
//     undefined field25_0x128;
//     undefined field26_0x129;
//     undefined field27_0x12a;
//     undefined field28_0x12b;
//     undefined field29_0x12c;
//     undefined field30_0x12d;
//     undefined field31_0x12e;
//     undefined field32_0x12f;
// };
// 
// typedef struct Ent_LevelData Ent_LevelData, *PEnt_LevelData;
// 
// typedef struct Ent_LevelData__vtable Ent_LevelData__vtable, *PEnt_LevelData__vtable;
// 
// struct Ent_LevelData__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_LevelData;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_LevelData {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_LevelData__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_Order;
//     struct DynExpr m_Var[16];
//     undefined field25_0x128;
//     undefined field26_0x129;
//     undefined field27_0x12a;
//     undefined field28_0x12b;
//     undefined field29_0x12c;
//     undefined field30_0x12d;
//     undefined field31_0x12e;
//     undefined field32_0x12f;
// };
// 
// typedef struct Ent_Marker Ent_Marker, *PEnt_Marker;
// 
// typedef struct Ent_Marker__vtable Ent_Marker__vtable, *PEnt_Marker__vtable;
// 
// struct Ent_Marker__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_Marker;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_Marker {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_Marker__vtable *__vtable; /* Inherited from Entity */
// };
// 
// typedef struct Ent_ObjectCreator Ent_ObjectCreator, *PEnt_ObjectCreator;
// 
// typedef struct Ent_ObjectCreator__vtable Ent_ObjectCreator__vtable, *PEnt_ObjectCreator__vtable;
// 
// struct Ent_ObjectCreator {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_ObjectCreator__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_GOName;
//     struct DynExpr m_AnimName;
//     struct DynExpr m_AnimRate;
//     struct DynExpr m_StartTime;
//     struct DynExpr m_Scale;
//     struct DynExpr m_TweakName;
//     struct DynExpr m_Instance;
//     struct DynExpr m_MaximumCount;
//     struct DynExpr m_CreateInitially;
//     struct DynExpr m_ReSpawn;
//     struct DynExpr m_DestroyAfterAnim;
//     int m_Count;
//     undefined field35_0xfc;
//     undefined field36_0xfd;
//     undefined field37_0xfe;
//     undefined field38_0xff;
// };
// 
// struct Ent_ObjectCreator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_ObjectCreator;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_PlayerCreator Ent_PlayerCreator, *PEnt_PlayerCreator;
// 
// typedef struct Ent_PlayerCreator__vtable Ent_PlayerCreator__vtable, *PEnt_PlayerCreator__vtable;
// 
// struct Ent_PlayerCreator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_PlayerCreator;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_PlayerCreator {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_PlayerCreator__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_GOName;
//     struct DynExpr m_CameraName;
// };
// 
// typedef struct Ent_SoundController Ent_SoundController, *PEnt_SoundController;
// 
// typedef struct Ent_SoundController__vtable Ent_SoundController__vtable, *PEnt_SoundController__vtable;
// 
// struct Ent_SoundController {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_SoundController__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_SoundIndex;
//     struct DynExpr m_Volume;
//     struct DynExpr m_Pan;
//     struct DynExpr m_InnerRadius;
//     struct DynExpr m_OuterRadius;
//     struct DynExpr m_PitchBend;
// };
// 
// struct Ent_SoundController__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_SoundController;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// typedef struct Ent_VisController Ent_VisController, *PEnt_VisController;
// 
// typedef struct Ent_VisController__vtable Ent_VisController__vtable, *PEnt_VisController__vtable;
// 
// struct Ent_VisController__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Enabled;
//     struct __vtbl_ptr_type Ent_VisController;
//     struct __vtbl_ptr_type InitParms;
//     struct __vtbl_ptr_type StateNotify;
//     struct __vtbl_ptr_type HandleEvent;
//     struct __vtbl_ptr_type Activate;
// };
// 
// struct Ent_VisController {
//     struct VUMat4 matrix; /* Inherited from Entity */
//     UINT16 jointID; /* Inherited from Entity */
//     UINT16 id; /* Inherited from Entity */
//     UINT16 type; /* Inherited from Entity */
//     INT16 volumeID; /* Inherited from Entity */
//     UINT16 policy; /* Inherited from Entity */
//     INT16 wiID; /* Inherited from Entity */
//     UINT16 nTargets; /* Inherited from Entity */
//     undefined field8_0x4e;
//     undefined field9_0x4f;
//     UINT16 *targetArray; /* Inherited from Entity */
//     char *name; /* Inherited from Entity */
//     struct goGameObject *go; /* Inherited from Entity */
//     struct sliCode sli; /* Inherited from Entity */
//     FLOAT lastTriggerTime; /* Inherited from Entity */
//     struct DynExpr m_Enabled; /* Inherited from Entity */
//     struct DynExpr m_RefractoryPeriod; /* Inherited from Entity */
//     struct DynExpr m_ResponseDelay; /* Inherited from Entity */
//     struct DynExpr m_DelayedEnable; /* Inherited from Entity */
//     struct DynExpr m_Execute; /* Inherited from Entity */
//     struct DynExpr m_DebugString; /* Inherited from Entity */
//     struct DynExpr m_MarkerID; /* Inherited from Entity */
//     struct Ent_VisController__vtable *__vtable; /* Inherited from Entity */
//     struct DynExpr m_ModelVisible;
//     struct DynExpr m_ParticlesVisible;
//     struct DynExpr m_ShadowVisible;
//     struct DynExpr m_Collision;
//     struct DynExpr m_CameraVolume;
//     struct DynExpr m_SoundEmitterVolume;
//     struct DynExpr m_EntityVolume;
//     struct DynExpr m_Audible;
//     struct DynExpr m_Alpha;
//     struct DynExpr m_BhvrsAndScripts;
//     struct DynExpr m_ModelPartVisible;
//     struct DynExpr m_AlphaTime;
//     struct DynExpr m_TriggerVolume;
//     undefined field36_0x108;
//     undefined field37_0x109;
//     undefined field38_0x10a;
//     undefined field39_0x10b;
//     undefined field40_0x10c;
//     undefined field41_0x10d;
//     undefined field42_0x10e;
//     undefined field43_0x10f;
// };
// 
// typedef struct Entity_SaveListItem Entity_SaveListItem, *PEntity_SaveListItem;
// 
// typedef struct Entity_SaveListItem__vtable Entity_SaveListItem__vtable, *PEntity_SaveListItem__vtable;
// 
// struct Entity_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Entity_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     FLOAT lastTriggerTime;
//     UINT16 id;
//     UINT16 count;
//     UINT16 killCount;
//     undefined field7_0x16;
//     undefined field8_0x17;
// };
// 
// struct Entity_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Entity_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// typedef struct EntityHdr EntityHdr, *PEntityHdr;
// 
// struct EntityHdr {
//     float matrix[16];
//     UINT16 jointID;
//     UINT16 version;
//     UINT16 size;
//     UINT16 type;
//     UINT16 id;
//     INT16 volumeID;
//     UINT16 policy;
//     UINT16 nParms;
//     UINT16 nTargets;
//     UINT16 sliBytes;
// };
// 
// typedef struct EntityListItem EntityListItem, *PEntityListItem;
// 
// struct EntityListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Entity *entity;
// };
// 
// typedef struct EntityModule EntityModule, *PEntityModule;
// 
// typedef struct EntityModule__vtable EntityModule__vtable, *PEntityModule__vtable;
// 
// typedef enum FADE_DIR {
//     NO_FADE_DIR=0,
//     FADE_OUT_DIR=1,
//     FADE_IN_DIR=2
// } FADE_DIR;
// 
// struct EntityModule {
//     struct EntityModule__vtable *__vtable; /* Inherited from sliModule */
//     int varArg[8];
//     int nVarArgs;
//     FLOAT fadeR;
//     FLOAT fadeG;
//     FLOAT fadeB;
//     int fadeFrames;
//     int fadeFramesTotal;
//     enum FADE_DIR fadeDir;
// };
// 
// struct EntityModule__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Name;
//     struct __vtbl_ptr_type GetVariable;
//     struct __vtbl_ptr_type SetVariable;
//     struct __vtbl_ptr_type CallFunction;
// };
// 
// typedef struct EntityTypeInfo EntityTypeInfo, *PEntityTypeInfo;
// 
// struct EntityTypeInfo {
//     undefined1 *cons;
// };
// 
// typedef struct Entry__1_5456 Entry__1_5456, *PEntry__1_5456;
// 
// struct Entry__1_5456 {
//     INT32 m_iSymOffset;
//     INT32 m_iStrOffset;
// };
// 
// typedef struct Entry__1_5473 Entry__1_5473, *PEntry__1_5473;
// 
// struct Entry__1_5473 {
//     INT32 m_iPtrOffset;
//     INT32 m_iStrOffset;
// };
// 
// typedef struct Entry__1_5490 Entry__1_5490, *PEntry__1_5490;
// 
// struct Entry__1_5490 {
//     UINT32 m_uHash;
//     INT32 m_iStrOffset;
// };
// 
// typedef struct Entry__1_5507 Entry__1_5507, *PEntry__1_5507;
// 
// struct Entry__1_5507 {
//     INT32 m_iSymOffset;
//     INT32 m_iStrOffset;
//     INT32 m_iTypeID;
// };
// 
// typedef enum eOperand1 {
//     kOp1ElevationToTarget=0,
//     kOp1AzmuthToTarget=1,
//     kOp1DistanceToTarget=2,
//     kOp1Attacking=3,
//     kOp1NavMode=4,
//     kOp1TargetNavMode=5,
//     kOp1TargetObscured=6,
//     kOp1TargetInFront=7,
//     kOp1TargetToLeft=8,
//     kOp1HealthPercent=9,
//     kOp1TargetHealthPercent=10,
//     kOp1TargetBlocking=11,
//     kOp1TargetAbove=12,
//     kOp1LeftDistToTarget=13,
//     kOp1ForwardDistToTarget=14,
//     kOp1UpDistToTarget=15,
//     kOp1TargetDirectlyAbove=16,
//     kOp1TargetFrozen=17,
//     kOp1TargetDoingCombatMove=18,
//     kOp1GroundDistanceToTarget=19,
//     kOp1TargetRadarAngle=20,
//     kOp1InTheAir=21,
//     kOp1OnCamera=22,
//     kOp1TargetMoveName=23,
//     kOp1Aggressive=24,
//     kOp1CanSpawn=25,
//     kOp1PlayerZone=26,
//     kOp1PlayerHitCount=27,
//     kOp1HasRider=28,
//     kOp1InFrontOfTarget=29,
//     kOp1AboveTarget=30,
//     kOp1LeftOfTarget=31,
//     kOp1PegasusLockedOn=32,
//     kOp1InsidePegSafeZone=33,
//     kOp1PegasusSwarming=34
// } eOperand1;
// 
// typedef enum eOperand2 {
//     kOp2False=0,
//     kOp2Standing=0,
//     kOp2Climbing=1,
//     kOp2True=1,
//     kOp2Jumping=2,
//     kOp2OnARope=3,
//     kOp2OnCeiling=4,
//     kOp2Grapple=5
// } eOperand2;
// 
// typedef enum eOperators__1_6739 {
//     kOpAdd=0,
//     kOpModulate=1
// } eOperators__1_6739;
// 
// typedef enum eOperators__1_7443 {
//     kEqual=0,
//     kNotEqual=1,
//     kLess=2,
//     kLessEqual=3,
//     kGreater=4,
//     kGreaterEqual=5
// } eOperators__1_7443;
// 
// typedef enum eParameterMask {
//     kSMFrequency=1,
//     kSMAmplitude=2,
//     kSMBias=4,
//     kLMFrequency=8,
//     kLMAmplitude=16,
//     kLMBias=32
// } eParameterMask;
// 
// typedef enum EParticleFlags {
//     kBlendModeNormal=0,
//     kTextureModulate=0,
//     kBlendModeAdditive=1,
//     kBlendModeSubtractive=2,
//     kTextureFunctionShift=2,
//     kBlendModeMask=3,
//     kBlendModeNone=3,
//     kTextureDecal=4,
//     kTextureHilight=8,
//     kTextureFunctionMask=12,
//     kTextureHilight2=12,
//     kTrackOrientation=16,
//     kTrackPosition=32,
//     kScreenAsTexture=64,
//     kMaterialIsSprite=128,
//     kFixedPointViewport=256,
//     kAntiAliasLines=512,
//     kUseSpriteAlpha=1024,
//     kLiveForever=4096,
//     kForceIntoPreBlurLayer=8192,
//     kForceIntoBlurLayer=16384,
//     kShareBuffers=32768,
//     kEmitterInheritsVelocity=65536,
//     kWriteZ=131072,
//     kForceIntoSub2Layer=262144,
//     kForceIntoPostWorldLayer=524288,
//     kAutoFillOnConnect=1048576
// } EParticleFlags;
// 
// typedef enum ePerturbMM {
//     kPM_None=0,
//     kPM_Droplets=1,
//     kPM_HeatHazeWobble=2
// } ePerturbMM;
// 
// typedef enum ePhysicsFlags {
//     kPFSheetCollision=1,
//     kPFCreatureCollision=2,
//     kPFStayOnSurface=4,
//     kPFMoving=8,
//     kPFTurning=16
// } ePhysicsFlags;
// 
// typedef enum ePhysicsModes {
//     kPMNoCollision=0,
//     kPMCollideWithSheet=1,
//     kPMCollideWithAll=3,
//     kPMDefault=7,
//     kPMStayOnSurface=7,
//     kPMStrafe=15,
//     kPMIgnoreCreatures=29,
//     kPMFull=31
// } ePhysicsModes;
// 
// typedef enum ePickups {
//     kPickupNoSelected=0,
//     kPickupLightning=1,
//     kPickupMin=1,
//     kPickupElectric=2,
//     kPickupWind=3,
//     kPickupCyclopsEye=4,
//     kPickupGoldenFleece=5,
//     kPickupEarth=6,
//     kPickupIcarusWings=7,
//     kPickupHealthShard=8,
//     kPickupMagicShard=9,
//     kPickupGodMode=10,
//     kPickupHermesShoes=11,
//     kPickupHealth=12,
//     kPickupMagic=13,
//     kPickupBone=14,
//     kPickupHammer=15,
//     kPickupMedusa=16,
//     kPickupOlympus=17,
//     kPickupPegasusBoost=18,
//     kPickupUrn1=19,
//     kPickupUrn2=20,
//     kPickupUrn3=21,
//     kPickupUrn4=22,
//     kPickupUrn5=23,
//     kPickupMax=24,
//     kPickupUrn6=24
// } ePickups;
// 
// typedef enum EPlayerControls {
//     kPCJump=0,
//     kPCDrift=1,
//     kPCKickBox=2,
//     kPCGrapple=3,
//     kPCGrappleDrop=4,
//     kPCHermes=5,
//     kPCHermesGrappleShift=6,
//     kPCDivingDash=7,
//     kPCSwimDown=8,
//     kPCSwimUp1=9,
//     kPCSwimUp2=10,
//     kPCSwing=11,
//     kPCUseWorld=12,
//     kPCUseInventory=13,
//     kPCReleaseHold=14,
//     kPC_PressRight=15,
//     kPC_PressLeft=16,
//     kPC_PressUp=17,
//     kPC_PressDown=18,
//     kPCCNumPlayerControls=19
// } EPlayerControls;
// 
// typedef enum EPlayerControlSystems {
//     kPCSFollow=0,
//     kPCSNumControlSystems=1
// } EPlayerControlSystems;
// 
// typedef enum ePos {
//     kOnBack=0,
//     kInHand=1,
//     kOutHand=2
// } ePos;
// 
// typedef enum eProcessMM {
//     kMM_None=0,
//     kMM_HVU_HVV=1,
//     kMM_HVU_VV=2
// } eProcessMM;
// 
// typedef enum eRepeatPressFlags {
//     kRPF_Default=0,
//     kRPF_NULL=0,
//     kRPF_UnwindOnFail=1
// } eRepeatPressFlags;
// 
// typedef enum eRiderMountType {
//     kRMT_None=0,
//     kRMT_Rider=1,
//     kRMT_Mount=2
// } eRiderMountType;
// 
// typedef struct ERR ERR, *PERR;
// 
// struct ERR {
//     char *_pGOName;
//     char *_joint;
//     char *_name;
//     INT _sFrame;
//     char *_pFromName;
//     INT _sFromFrame;
//     INT16 _type;
//     undefined field7_0x1a;
//     undefined field8_0x1b;
// };
// 
// typedef enum Error {
//     kOutOfBuffers=-2,
//     kFileNotFound=-1
// } Error;
// 
// typedef enum eSaveState {
//     kS_GetCardInfo1=0,
//     kS_GetCardInfo2=1,
//     kS_AskForCard=2,
//     kS_WaitForCard=3,
//     kS_SelectCard=4,
//     kS_WaitSelectCard=5,
//     kS_CheckSelectedCard=6,
//     kS_AskFormat=7,
//     kS_WaitFormat=8,
//     kS_Format=9,
//     kS_FormatFailure=10,
//     kS_WaitFormatFailure=11,
//     kS_FormatComplete=12,
//     kS_WaitFormatComplete=13,
//     kS_CheckSetup=14,
//     kS_AskCreateSetup=15,
//     kS_WaitAskCreateSetup=16,
//     kS_CreateSetup=17,
//     kS_SelectFile=18,
//     kS_WaitSelectFile=19,
//     kS_OverwriteCheck=20,
//     kS_WaitOverwriteCheck=21,
//     kS_PrepWriteFile=22,
//     kS_WriteFile=23,
//     kS_PrepWriteMasterFile=24,
//     kS_WriteMasterFile=25,
//     kS_WriteDone=26,
//     kS_WaitWriteDone=27,
//     kS_SaveFailure=28,
//     kS_WaitSaveFailure=29,
//     kS_NoSpace=30,
//     kS_WaitNoSpace=31
// } eSaveState;
// 
// typedef enum eSetFlags {
//     kSFDefault=0,
//     kSFTrailLeft=1,
//     kSFTrailBody=2,
//     kSFTrailRight=4,
//     kSFHideAttachmentLeft=8,
//     kSFHideAttachmentRight=16,
//     kSFHideChainLeft=32,
//     kSFHideChainRight=64,
//     kSFNoImpulse=128,
//     kSFNoDamage=256,
//     kSFNoAiming=512,
//     kSFNoBlock=1024,
//     kSFNoHermesSlowdown=4096,
//     kSFNoCapsuleCollision=8192,
//     kSFDoVoidTest=16384,
//     kSFDoNotTarget=32768,
//     kSFDoNotManualTarget=65536,
//     kSFDoNotSwitchTarget=131072,
//     kSFManualTargeting=262144,
//     kSFFriendlyDamage=524288,
//     kSFFriendlyReactions=1048576,
//     kSFSynch=2097152,
//     kSFSynchIfPossible=2099200,
//     kSFSynchNoAlign=10485760,
//     kSFInvulnerable=16777216,
//     kSFBlocking=33554432,
//     kSFBlockingThrow=67108864,
//     kSFStunned=134217728,
//     kSFProjectileMove=268435456,
//     kSFCanCancelMove=536870912
// } eSetFlags;
// 
// typedef enum eShape {
//     kShape_NULL=0,
//     kShape_Default=1,
//     kShape_Foot=1
// } eShape;
// 
// typedef enum EShellDispClear {
//     SHELLDISP_NO_CLEAR=0,
//     SHELLDISP_CLEAR_Z=1,
//     SHELLDISP_CLEAR_FRAME=2,
//     SHELLDISP_CLEAR_Z_AND_FRAME=3
// } EShellDispClear;
// 
// typedef enum EShellDispInterlaceMode {
//     SHELLDISP_NO_INTERLACE=0,
//     SHELLDISP_INTERLACE_FRAME=1,
//     SHELLDISP_INTERLACE_FIELD=2,
//     SHELLDISP_INTERLACE_FIELD_AA=3
// } EShellDispInterlaceMode;
// 
// typedef enum EShellDispTVmode {
//     SHELLDISP_PAL=2,
//     SHELLDISP_NTSC=3,
//     SHELLDISP_DTV480P=4
// } EShellDispTVmode;
// 
// typedef enum EShellDmaChannel {
//     SHELLDMA_CHANNEL_VIF0=0,
//     SHELLDMA_CHANNEL_VIF1=1,
//     SHELLDMA_CHANNEL_GIF=2,
//     SHELLDMA_CHANNEL_FROMIPU=3,
//     SHELLDMA_CHANNEL_TOIPU=4,
//     SHELLDMA_CHANNEL_FROMSPR=8,
//     SHELLDMA_CHANNEL_TOSPR=9
// } EShellDmaChannel;
// 
// typedef enum EShellFileBlockingMode {
//     SHELLFILE_NON_BLOCKING=0,
//     SHELLFILE_BLOCKING=1
// } EShellFileBlockingMode;
// 
// typedef enum EShellFileError {
//     SHELLFILE_ER_FAIL=-1,
//     SHELLFILE_ER_NO=0,
//     SHELLFILE_ER_ABRT=1,
//     SHELLFILE_ER_NORDY=19,
//     SHELLFILE_ER_CUD=20,
//     SHELLFILE_ER_READ=48,
//     SHELLFILE_ER_TRMOPN=49,
//     SHELLFILE_ER_EOM=50
// } EShellFileError;
// 
// typedef enum EShellFileMedium {
//     SHELLFILE_MEDIUM_HOST0=0,
//     SHELLFILE_MEDIUM_CD=1,
//     SHELLFILE_MEDIUM_DVD=2,
//     SHELLFILE_MEDIUM_SCEEDEMO=3,
//     SHELLFILE_MEDIUM_ATMON=4
// } EShellFileMedium;
// 
// typedef enum EShellFileStat {
//     SHELLFILE_STAT_STOP=0,
//     SHELLFILE_STAT_SHELLOPEN=1,
//     SHELLFILE_STAT_SPIN=2,
//     SHELLFILE_STAT_READ=6,
//     SHELLFILE_STAT_PAUSE=10,
//     SHELLFILE_STAT_SEEK=18,
//     SHELLFILE_STAT_EMG=32
// } EShellFileStat;
// 
// typedef enum EShellMpegAudioType {
//     SHELLMPEG_AUDIO_NONE=0,
//     SHELLMPEG_AUDIO_PCM=1,
//     SHELLMPEG_AUDIO_ADPCM=2,
//     SHELLMPEG_AUDIO_SPDIF=3
// } EShellMpegAudioType;
// 
// typedef enum EShellMpegMultiplexType {
//     SHELLMPEG_MULTIPLEX_NONE=0,
//     SHELLMPEG_MULTIPLEX_PSS=1
// } EShellMpegMultiplexType;
// 
// typedef enum EShellMpegOutputType {
//     SHELLMPEG_OUTPUT_PATH3TAGS=256,
//     SHELLMPEG_OUTPUT_TEXTURE=257,
//     SHELLMPEG_OUTPUT_PATH3TAGS_16=258,
//     SHELLMPEG_OUTPUT_TEXTURE_16=259
// } EShellMpegOutputType;
// 
// typedef enum EShellMpegVideoType {
//     SHELLMPEG_VIDEO_IPU_STANDARD=0,
//     SHELLMPEG_VIDEO_IPU_COLUMNS=1,
//     SHELLMPEG_VIDEO_M2V_CSCIPU=2
// } EShellMpegVideoType;
// 
// typedef enum EShellResult__1_15338 {
//     SHELL_INDETERMINATE=-1,
//     SHELL_FAIL=0,
//     SHELL_SUCCESS=1
// } EShellResult__1_15338;
// 
// typedef enum EShellResult__2_589 {
//     SHELL_INDETERMINATE=-1,
//     SHELL_FAIL=0,
//     SHELL_SUCCESS=1
// } EShellResult__2_589;
// 
// typedef enum eSoldierInfoFlags {
//     kAfterFallJumpWindow=1,
//     kDontAllowDoubleJump=4,
//     kNoSpeedDamping=8,
//     kNotAllowedToClimb=16,
//     kForcedClimbTest=32,
//     kNoTurnDampingOnGround=128,
//     kNoRopeTurn=256,
//     kNoDiving=512,
//     kBPRopeForward=1024,
//     kNoWallHangTimerReset=2048,
//     kPullUpToTheRight=4096,
//     kWaterBisectsBody=16384,
//     kLightSoldierEvaluate=32768,
//     kLightSoldierEvenSeed=65536,
//     kGrappleCCW=131072,
//     kGrappleAttached=262144,
//     kDriftingStraight=524288,
//     kDoneDrifting=1048576
// } eSoldierInfoFlags;
// 
// typedef enum eSoldierModeFlags {
//     kStrafing=1,
//     kScraping=2,
//     kAnticipateLeft=8,
//     kAnticipateRight=16,
//     kAnticipateUp=32,
//     kAnticipateDown=64,
//     kIgnoreHODCollision=128,
//     kLadderRopeSlide=256,
//     kIcarusPlummet=512,
//     kKickBox=1024,
//     kDiveDashCharge=2048,
//     kDiveDash=4096,
//     kDiveIntoWater=8192,
//     kUsingAnimDrivenMotion=16384,
//     kJustGrabbedRope=32768,
//     kNoDying=65536,
//     kImmoveableObject=131072,
//     kRunningLightSoldier=262144
// } eSoldierModeFlags;
// 
// typedef enum eSoulFlags {
//     kFSoul_Default=0,
//     kFSoul_TapJoystick=1
// } eSoulFlags;
// 
// typedef enum eSourceBuffer {
//     kFS_BackBuffer=0,
//     kFS_FrontBuffer=1,
//     kFS_LastFrameBuffer=2
// } eSourceBuffer;
// 
// typedef enum eSpace {
//     kScreenSpace=0,
//     kWorldSpace=1
// } eSpace;
// 
// typedef enum eSpeedEffectFlags {
//     kSFDefault=0,
//     kSFSound=1,
//     kSFSoundRegSpeed=2
// } eSpeedEffectFlags;
// 
// typedef enum EState {
//     kState_NULL=0,
//     kState_ScriptConnected=1,
//     kState_Nb=2
// } EState;
// 
// typedef enum eState__1_20316 {
//     kState_NULL=0,
//     kState_Initialized_Context=1,
//     kState_Initialized_Script=2,
//     kState_Initialized_Modifiers=4,
//     kState_Run=7
// } eState__1_20316;
// 
// typedef enum EStats {
//     kCore0=0,
//     kCore1=1,
//     kTick=2,
//     kFreeMem=3,
//     kLargestBlock=4,
//     kNumStats=5
// } EStats;
// 
// typedef enum eStats {
//     kSNone=-1,
//     kSCSMoves=21,
//     kSCSKills=24,
//     kSMiniGameWins=25,
//     kSDeathDecaps=26
// } eStats;
// 
// typedef enum EStick {
//     kLeft=0,
//     kRight=1,
//     kNumSticks=2
// } EStick;
// 
// typedef enum eTargetModulate {
//     kTDefault=0,
//     kTScale=0
// } eTargetModulate;
// 
// typedef enum eTexture {
//     kTexture_NULL=0,
//     kTexture_Default=1,
//     kTexture_Dirt=1,
//     kTexture_Blood=2
// } eTexture;
// 
// typedef enum eTriggerMod {
//     kTriggerModRapid=0,
//     kTriggerModCharged=1
// } eTriggerMod;
// 
// typedef enum eTriggerType {
//     kTriggerTypeNone=0,
//     kTriggerTypeGust=1,
//     kTriggerTypeTornado=2,
//     kTriggerTypeTempest=3
// } eTriggerType;
// 
// typedef enum EType {
//     kType_NULL=0,
//     kType_UniformField=1,
//     kType_Nb=2,
//     kTypeF_Instant=32768,
//     kTypeF_Mask=61440
// } EType;
// 
// typedef enum eType__1_6723 {
//     kCameraShake=0,
//     kForceFeedback=1,
//     kNumGameEffectTypes=2
// } eType__1_6723;
// 
// typedef enum eType__1_7482 {
//     kT_Default=0,
//     kT_Element=0,
//     kT_Range=1,
//     kT_Base=2
// } eType__1_7482;
// 
// typedef enum eType__1_7516 {
//     kT_Default=0,
//     kT_Void=0,
//     kT_Branch=1,
//     kT_String=2
// } eType__1_7516;
// 
// typedef enum eType__1_7656 {
//     kTHand=0,
//     kTChained=1
// } eType__1_7656;
// 
// typedef enum eType__1_7767 {
//     kTStandardBank=0,
//     kTPegasusBank=1,
//     kTPassiveBank=2
// } eType__1_7767;
// 
// typedef enum eType__1_7819 {
//     kSoldierType_Base=0,
//     kSoldierType_Default=1,
//     kSoldierType_Normal=1,
//     kSoldierType_Passive=2,
//     kSoldierType_PegasusAI=3,
//     kSoldierType_Pegasus=4
// } eType__1_7819;
// 
// typedef enum eTypes__1_5595 {
//     kTDefault=0,
//     kTNone=0,
//     kTSetFlags=1,
//     kTMeterAdjust=2,
//     kTDampingAdjust=3,
//     kTArrowEmitter=4,
//     kTOrbEmitter=5,
//     kTDTree=6,
//     kTSound=7,
//     kTSoundOnEnemy=8,
//     kTSoundWindow=9,
//     kTCameraShake=10,
//     kTForceFeedback=11,
//     kTSlowdown=12,
//     kTScript=13,
//     kTOverrideDamage=14,
//     kTVelocityScale=15,
//     kTWindImpulse=16,
//     kTTimeWarp=17,
//     kTContext=18,
//     kTBlock=19,
//     kTNoBlock=20,
//     kTHitPause=21,
//     kTIncHitCounter=22,
//     kTHitCounterPause=23,
//     kTDeathMenuPause=24,
//     kTCircleIcon=25,
//     kTHeadTrack=26,
//     kTTimer=27,
//     kTBonus=28,
//     kTFootEffect=29,
//     kTCustomEffect=30,
//     kTCliffEffect=31,
//     kTCameraTarget=32
// } eTypes__1_5595;
// 
// typedef enum eTypes__1_6486 {
//     kTDefault=0,
//     kTPushable=0,
//     kTCrank=1,
//     kTBallista=2,
//     kTLever=3,
//     kTUWLever=4,
//     kTStatue=5
// } eTypes__1_6486;
// 
// typedef enum eTypes__1_6598 {
//     kTBreakable=0,
//     kTDefault=0,
//     kTFrozenStatue=1,
//     kTHeroStatue=2,
//     kTShield=3
// } eTypes__1_6598;
// 
// typedef enum eTypes__1_6611 {
//     kTDefault=0,
//     kTDonut=0,
//     kTPillar=1,
//     kTPie=2,
//     kTSphere=3,
//     kTPlane=4,
//     kTBlock=5
// } eTypes__1_6611;
// 
// typedef enum eTypes__1_7297 {
//     kTDefault=0,
//     kTHealth=0,
//     kTMagic=1,
//     kTPowerUp=2,
//     kTGodMode=3
// } eTypes__1_7297;
// 
// typedef enum eTypes__1_7351 {
//     kTDefault=0,
//     kTFourDir=0,
//     kTNorthSouth=1,
//     kTEastWest=2
// } eTypes__1_7351;
// 
// typedef enum eTypes__1_7418 {
//     kTDecisionNode=0,
//     kTSlotNode=1
// } eTypes__1_7418;
// 
// typedef enum eTypes__1_7566 {
//     kTBase=0,
//     kTDefault=1,
//     kTNormal=1,
//     kTNoMove=2,
//     kTProjectile=3,
//     kTCivilian=4,
//     kTPegasusAI=5,
//     kTPegasus=6,
//     kTPassiveAI=7,
//     kTGridAI=8
// } eTypes__1_7566;
// 
// typedef enum eUpdateCondition__1_18817 {
//     kUpdateCondition_NULL=0,
//     kUpdateCondition_Normal=1,
//     kUpdateCondition_Frozen=2,
//     kUpdateCondition_Dying=3
// } eUpdateCondition__1_18817;
// 
// typedef enum eUpdateCondition__1_19514 {
//     kUpdateCondition_Normal=0,
//     kUpdateCondition_Frozen=1,
//     kUpdateCondition_Dying=2
// } eUpdateCondition__1_19514;
// 
// typedef struct Event_SaveListItem Event_SaveListItem, *PEvent_SaveListItem;
// 
// typedef struct Event_SaveListItem__vtable Event_SaveListItem__vtable, *PEvent_SaveListItem__vtable;
// 
// struct Event_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Event_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct Event_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Event_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     FLOAT time;
//     UINT16 entityID;
//     UINT16 markerID;
//     UINT16 markerGOID;
//     undefined field7_0x16;
//     undefined field8_0x17;
// };
// 
// typedef struct EventDistributionData EventDistributionData, *PEventDistributionData;
// 
// typedef struct goEvent goEvent, *PgoEvent;
// 
// typedef union goEvent__unnamed_16 goEvent__unnamed_16, *PgoEvent__unnamed_16;
// 
// union goEvent__unnamed_16 {
//     struct goGameObject *m_Sender;
//     UINT32 m_SenderHandle;
// };
// 
// struct goEvent {
//     UINT16 m_EventID;
//     undefined field1_0x2;
//     undefined field2_0x3;
//     unsigned int m_Val[3];
//     union goEvent__unnamed_16 field4_0x10;
// };
// 
// struct EventDistributionData {
//     struct goGameObject *m_pGameObj;
//     struct goEvent m_Evt;
// };
// 
// typedef struct EventListItem EventListItem, *PEventListItem;
// 
// typedef struct MarkerListItem MarkerListItem, *PMarkerListItem;
// 
// typedef struct SaveListItem SaveListItem, *PSaveListItem;
// 
// typedef struct SaveListItem__vtable SaveListItem__vtable, *PSaveListItem__vtable;
// 
// struct EventListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Entity *entity;
//     struct MarkerListItem *markerListItem;
//     FLOAT time;
//     unsigned int extraField[3];
// };
// 
// struct SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct SaveListItem__vtable *__vtable;
// };
// 
// struct MarkerListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 pos;
//     struct goGameObject *go;
//     struct SaveListItem *slit;
//     UINT16 jointID;
//     UINT16 markerID;
//     struct Entity *creator;
//     UINT32 flags;
//     UINT32 nEventsQueued;
//     struct goGameObject *volumeGO[12];
//     short int volumeID[12];
//     unsigned int lastFrame[12];
// };
// 
// typedef enum EViewDescriptor {
//     kVDFullscreen=0,
//     kVDHorizontalSplit=1,
//     kVDVerticalSplit=2,
//     kVDRight=4,
//     kVDBottom=8,
//     kVDHorizontalMiddle=16,
//     kVDVerticalMiddle=32
// } EViewDescriptor;
// 
// typedef struct evtServer evtServer, *PevtServer;
// 
// typedef struct evtServer__vtable evtServer__vtable, *PevtServer__vtable;
// 
// struct evtServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct evtServer__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field21_0x2c;
//     undefined field22_0x2d;
//     undefined field23_0x2e;
//     undefined field24_0x2f;
//     undefined field25_0x30;
//     undefined field26_0x31;
//     undefined field27_0x32;
//     undefined field28_0x33;
//     undefined field29_0x34;
//     undefined field30_0x35;
//     undefined field31_0x36;
//     undefined field32_0x37;
//     undefined field33_0x38;
//     undefined field34_0x39;
//     undefined field35_0x3a;
//     undefined field36_0x3b;
//     undefined field37_0x3c;
//     undefined field38_0x3d;
//     undefined field39_0x3e;
//     undefined field40_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field43_0x48;
//     undefined field44_0x49;
//     undefined field45_0x4a;
//     undefined field46_0x4b;
//     undefined field47_0x4c;
//     undefined field48_0x4d;
//     undefined field49_0x4e;
//     undefined field50_0x4f;
//     undefined field51_0x50;
//     undefined field52_0x51;
//     undefined field53_0x52;
//     undefined field54_0x53;
//     undefined field55_0x54;
//     undefined field56_0x55;
//     undefined field57_0x56;
//     undefined field58_0x57;
//     undefined field59_0x58;
//     undefined field60_0x59;
//     undefined field61_0x5a;
//     undefined field62_0x5b;
//     undefined field63_0x5c;
//     undefined field64_0x5d;
//     undefined field65_0x5e;
//     undefined field66_0x5f;
//     undefined field67_0x60;
//     undefined field68_0x61;
//     undefined field69_0x62;
//     undefined field70_0x63;
//     undefined field71_0x64;
//     undefined field72_0x65;
//     undefined field73_0x66;
//     undefined field74_0x67;
//     undefined field75_0x68;
//     undefined field76_0x69;
//     undefined field77_0x6a;
//     undefined field78_0x6b;
//     undefined field79_0x6c;
//     undefined field80_0x6d;
//     undefined field81_0x6e;
//     undefined field82_0x6f;
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     undefined field131_0xa0;
//     undefined field132_0xa1;
//     undefined field133_0xa2;
//     undefined field134_0xa3;
//     undefined field135_0xa4;
//     undefined field136_0xa5;
//     undefined field137_0xa6;
//     undefined field138_0xa7;
//     undefined field139_0xa8;
//     undefined field140_0xa9;
//     undefined field141_0xaa;
//     undefined field142_0xab;
//     undefined field143_0xac;
//     undefined field144_0xad;
//     undefined field145_0xae;
//     undefined field146_0xaf;
//     undefined field147_0xb0;
//     undefined field148_0xb1;
//     undefined field149_0xb2;
//     undefined field150_0xb3;
//     undefined field151_0xb4;
//     undefined field152_0xb5;
//     undefined field153_0xb6;
//     undefined field154_0xb7;
//     undefined field155_0xb8;
//     undefined field156_0xb9;
//     undefined field157_0xba;
//     undefined field158_0xbb;
//     undefined field159_0xbc;
//     undefined field160_0xbd;
//     undefined field161_0xbe;
//     undefined field162_0xbf;
//     undefined field163_0xc0;
//     undefined field164_0xc1;
//     undefined field165_0xc2;
//     undefined field166_0xc3;
//     undefined field167_0xc4;
//     undefined field168_0xc5;
//     undefined field169_0xc6;
//     undefined field170_0xc7;
//     undefined field171_0xc8;
//     undefined field172_0xc9;
//     undefined field173_0xca;
//     undefined field174_0xcb;
//     undefined field175_0xcc;
//     undefined field176_0xcd;
//     undefined field177_0xce;
//     undefined field178_0xcf;
//     undefined field179_0xd0;
//     undefined field180_0xd1;
//     undefined field181_0xd2;
//     undefined field182_0xd3;
//     undefined field183_0xd4;
//     undefined field184_0xd5;
//     undefined field185_0xd6;
//     undefined field186_0xd7;
//     undefined field187_0xd8;
//     undefined field188_0xd9;
//     undefined field189_0xda;
//     undefined field190_0xdb;
//     undefined field191_0xdc;
//     undefined field192_0xdd;
//     undefined field193_0xde;
//     undefined field194_0xdf;
//     undefined field195_0xe0;
//     undefined field196_0xe1;
//     undefined field197_0xe2;
//     undefined field198_0xe3;
//     undefined field199_0xe4;
//     undefined field200_0xe5;
//     undefined field201_0xe6;
//     undefined field202_0xe7;
//     undefined field203_0xe8;
//     undefined field204_0xe9;
//     undefined field205_0xea;
//     undefined field206_0xeb;
//     undefined field207_0xec;
//     undefined field208_0xed;
//     undefined field209_0xee;
//     undefined field210_0xef;
//     undefined field211_0xf0;
//     undefined field212_0xf1;
//     undefined field213_0xf2;
//     undefined field214_0xf3;
//     undefined field215_0xf4;
//     undefined field216_0xf5;
//     undefined field217_0xf6;
//     undefined field218_0xf7;
//     undefined field219_0xf8;
//     undefined field220_0xf9;
//     undefined field221_0xfa;
//     undefined field222_0xfb;
//     undefined field223_0xfc;
//     undefined field224_0xfd;
//     undefined field225_0xfe;
//     undefined field226_0xff;
//     undefined field227_0x100;
//     undefined field228_0x101;
//     undefined field229_0x102;
//     undefined field230_0x103;
//     undefined field231_0x104;
//     undefined field232_0x105;
//     undefined field233_0x106;
//     undefined field234_0x107;
//     undefined field235_0x108;
//     undefined field236_0x109;
//     undefined field237_0x10a;
//     undefined field238_0x10b;
//     undefined field239_0x10c;
//     undefined field240_0x10d;
//     undefined field241_0x10e;
//     undefined field242_0x10f;
//     undefined field243_0x110;
//     undefined field244_0x111;
//     undefined field245_0x112;
//     undefined field246_0x113;
//     undefined field247_0x114;
//     undefined field248_0x115;
//     undefined field249_0x116;
//     undefined field250_0x117;
//     undefined field251_0x118;
//     undefined field252_0x119;
//     undefined field253_0x11a;
//     undefined field254_0x11b;
//     undefined field255_0x11c;
//     undefined field256_0x11d;
//     undefined field257_0x11e;
//     undefined field258_0x11f;
//     undefined field259_0x120;
//     undefined field260_0x121;
//     undefined field261_0x122;
//     undefined field262_0x123;
//     undefined field263_0x124;
//     undefined field264_0x125;
//     undefined field265_0x126;
//     undefined field266_0x127;
//     undefined field267_0x128;
//     undefined field268_0x129;
//     undefined field269_0x12a;
//     undefined field270_0x12b;
//     undefined field271_0x12c;
//     undefined field272_0x12d;
//     undefined field273_0x12e;
//     undefined field274_0x12f;
//     undefined field275_0x130;
//     undefined field276_0x131;
//     undefined field277_0x132;
//     undefined field278_0x133;
//     undefined field279_0x134;
//     undefined field280_0x135;
//     undefined field281_0x136;
//     undefined field282_0x137;
//     undefined field283_0x138;
//     undefined field284_0x139;
//     undefined field285_0x13a;
//     undefined field286_0x13b;
//     undefined field287_0x13c;
//     undefined field288_0x13d;
//     undefined field289_0x13e;
//     undefined field290_0x13f;
//     undefined field291_0x140;
//     undefined field292_0x141;
//     undefined field293_0x142;
//     undefined field294_0x143;
//     undefined field295_0x144;
//     undefined field296_0x145;
//     undefined field297_0x146;
//     undefined field298_0x147;
//     undefined field299_0x148;
//     undefined field300_0x149;
//     undefined field301_0x14a;
//     undefined field302_0x14b;
//     undefined field303_0x14c;
//     undefined field304_0x14d;
//     undefined field305_0x14e;
//     undefined field306_0x14f;
//     undefined field307_0x150;
//     undefined field308_0x151;
//     undefined field309_0x152;
//     undefined field310_0x153;
//     undefined field311_0x154;
//     undefined field312_0x155;
//     undefined field313_0x156;
//     undefined field314_0x157;
//     undefined field315_0x158;
//     undefined field316_0x159;
//     undefined field317_0x15a;
//     undefined field318_0x15b;
//     undefined field319_0x15c;
//     undefined field320_0x15d;
//     undefined field321_0x15e;
//     undefined field322_0x15f;
//     undefined field323_0x160;
//     undefined field324_0x161;
//     undefined field325_0x162;
//     undefined field326_0x163;
//     undefined field327_0x164;
//     undefined field328_0x165;
//     undefined field329_0x166;
//     undefined field330_0x167;
//     undefined field331_0x168;
//     undefined field332_0x169;
//     undefined field333_0x16a;
//     undefined field334_0x16b;
//     undefined field335_0x16c;
//     undefined field336_0x16d;
//     undefined field337_0x16e;
//     undefined field338_0x16f;
//     undefined field339_0x170;
//     undefined field340_0x171;
//     undefined field341_0x172;
//     undefined field342_0x173;
//     undefined field343_0x174;
//     undefined field344_0x175;
//     undefined field345_0x176;
//     undefined field346_0x177;
//     undefined field347_0x178;
//     undefined field348_0x179;
//     undefined field349_0x17a;
//     undefined field350_0x17b;
//     undefined field351_0x17c;
//     undefined field352_0x17d;
//     undefined field353_0x17e;
//     undefined field354_0x17f;
//     undefined field355_0x180;
//     undefined field356_0x181;
//     undefined field357_0x182;
//     undefined field358_0x183;
//     undefined field359_0x184;
//     undefined field360_0x185;
//     undefined field361_0x186;
//     undefined field362_0x187;
//     undefined field363_0x188;
//     undefined field364_0x189;
//     undefined field365_0x18a;
//     undefined field366_0x18b;
//     undefined field367_0x18c;
//     undefined field368_0x18d;
//     undefined field369_0x18e;
//     undefined field370_0x18f;
//     undefined field371_0x190;
//     undefined field372_0x191;
//     undefined field373_0x192;
//     undefined field374_0x193;
//     undefined field375_0x194;
//     undefined field376_0x195;
//     undefined field377_0x196;
//     undefined field378_0x197;
//     undefined field379_0x198;
//     undefined field380_0x199;
//     undefined field381_0x19a;
//     undefined field382_0x19b;
//     undefined field383_0x19c;
//     undefined field384_0x19d;
//     undefined field385_0x19e;
//     undefined field386_0x19f;
//     undefined field387_0x1a0;
//     undefined field388_0x1a1;
//     undefined field389_0x1a2;
//     undefined field390_0x1a3;
//     undefined field391_0x1a4;
//     undefined field392_0x1a5;
//     undefined field393_0x1a6;
//     undefined field394_0x1a7;
//     undefined field395_0x1a8;
//     undefined field396_0x1a9;
//     undefined field397_0x1aa;
//     undefined field398_0x1ab;
//     undefined field399_0x1ac;
//     undefined field400_0x1ad;
//     undefined field401_0x1ae;
//     undefined field402_0x1af;
//     undefined field403_0x1b0;
//     undefined field404_0x1b1;
//     undefined field405_0x1b2;
//     undefined field406_0x1b3;
//     undefined field407_0x1b4;
//     undefined field408_0x1b5;
//     undefined field409_0x1b6;
//     undefined field410_0x1b7;
//     undefined field411_0x1b8;
//     undefined field412_0x1b9;
//     undefined field413_0x1ba;
//     undefined field414_0x1bb;
//     undefined field415_0x1bc;
//     undefined field416_0x1bd;
//     undefined field417_0x1be;
//     undefined field418_0x1bf;
//     undefined field419_0x1c0;
//     undefined field420_0x1c1;
//     undefined field421_0x1c2;
//     undefined field422_0x1c3;
//     undefined field423_0x1c4;
//     undefined field424_0x1c5;
//     undefined field425_0x1c6;
//     undefined field426_0x1c7;
//     undefined field427_0x1c8;
//     undefined field428_0x1c9;
//     undefined field429_0x1ca;
//     undefined field430_0x1cb;
//     undefined field431_0x1cc;
//     undefined field432_0x1cd;
//     undefined field433_0x1ce;
//     undefined field434_0x1cf;
//     undefined field435_0x1d0;
//     undefined field436_0x1d1;
//     undefined field437_0x1d2;
//     undefined field438_0x1d3;
//     undefined field439_0x1d4;
//     undefined field440_0x1d5;
//     undefined field441_0x1d6;
//     undefined field442_0x1d7;
//     undefined field443_0x1d8;
//     undefined field444_0x1d9;
//     undefined field445_0x1da;
//     undefined field446_0x1db;
//     undefined field447_0x1dc;
//     undefined field448_0x1dd;
//     undefined field449_0x1de;
//     undefined field450_0x1df;
//     undefined field451_0x1e0;
//     undefined field452_0x1e1;
//     undefined field453_0x1e2;
//     undefined field454_0x1e3;
//     undefined field455_0x1e4;
//     undefined field456_0x1e5;
//     undefined field457_0x1e6;
//     undefined field458_0x1e7;
//     undefined field459_0x1e8;
//     undefined field460_0x1e9;
//     undefined field461_0x1ea;
//     undefined field462_0x1eb;
//     undefined field463_0x1ec;
//     undefined field464_0x1ed;
//     undefined field465_0x1ee;
//     undefined field466_0x1ef;
//     undefined field467_0x1f0;
//     undefined field468_0x1f1;
//     undefined field469_0x1f2;
//     undefined field470_0x1f3;
//     undefined field471_0x1f4;
//     undefined field472_0x1f5;
//     undefined field473_0x1f6;
//     undefined field474_0x1f7;
//     undefined field475_0x1f8;
//     undefined field476_0x1f9;
//     undefined field477_0x1fa;
//     undefined field478_0x1fb;
//     undefined field479_0x1fc;
//     undefined field480_0x1fd;
//     undefined field481_0x1fe;
//     undefined field482_0x1ff;
//     undefined field483_0x200;
//     undefined field484_0x201;
//     undefined field485_0x202;
//     undefined field486_0x203;
//     undefined field487_0x204;
//     undefined field488_0x205;
//     undefined field489_0x206;
//     undefined field490_0x207;
//     undefined field491_0x208;
//     undefined field492_0x209;
//     undefined field493_0x20a;
//     undefined field494_0x20b;
//     undefined field495_0x20c;
//     undefined field496_0x20d;
//     undefined field497_0x20e;
//     undefined field498_0x20f;
//     undefined field499_0x210;
//     undefined field500_0x211;
//     undefined field501_0x212;
//     undefined field502_0x213;
//     undefined field503_0x214;
//     undefined field504_0x215;
//     undefined field505_0x216;
//     undefined field506_0x217;
//     undefined field507_0x218;
//     undefined field508_0x219;
//     undefined field509_0x21a;
//     undefined field510_0x21b;
//     undefined field511_0x21c;
//     undefined field512_0x21d;
//     undefined field513_0x21e;
//     undefined field514_0x21f;
//     undefined field515_0x220;
//     undefined field516_0x221;
//     undefined field517_0x222;
//     undefined field518_0x223;
//     undefined field519_0x224;
//     undefined field520_0x225;
//     undefined field521_0x226;
//     undefined field522_0x227;
//     undefined field523_0x228;
//     undefined field524_0x229;
//     undefined field525_0x22a;
//     undefined field526_0x22b;
//     undefined field527_0x22c;
//     undefined field528_0x22d;
//     undefined field529_0x22e;
//     undefined field530_0x22f;
//     undefined field531_0x230;
//     undefined field532_0x231;
//     undefined field533_0x232;
//     undefined field534_0x233;
//     undefined field535_0x234;
//     undefined field536_0x235;
//     undefined field537_0x236;
//     undefined field538_0x237;
//     undefined field539_0x238;
//     undefined field540_0x239;
//     undefined field541_0x23a;
//     undefined field542_0x23b;
//     undefined field543_0x23c;
//     undefined field544_0x23d;
//     undefined field545_0x23e;
//     undefined field546_0x23f;
//     undefined field547_0x240;
//     undefined field548_0x241;
//     undefined field549_0x242;
//     undefined field550_0x243;
//     undefined field551_0x244;
//     undefined field552_0x245;
//     undefined field553_0x246;
//     undefined field554_0x247;
//     undefined field555_0x248;
//     undefined field556_0x249;
//     undefined field557_0x24a;
//     undefined field558_0x24b;
//     undefined field559_0x24c;
//     undefined field560_0x24d;
//     undefined field561_0x24e;
//     undefined field562_0x24f;
//     undefined field563_0x250;
//     undefined field564_0x251;
//     undefined field565_0x252;
//     undefined field566_0x253;
//     undefined field567_0x254;
//     undefined field568_0x255;
//     undefined field569_0x256;
//     undefined field570_0x257;
//     undefined field571_0x258;
//     undefined field572_0x259;
//     undefined field573_0x25a;
//     undefined field574_0x25b;
//     undefined field575_0x25c;
//     undefined field576_0x25d;
//     undefined field577_0x25e;
//     undefined field578_0x25f;
//     undefined field579_0x260;
//     undefined field580_0x261;
//     undefined field581_0x262;
//     undefined field582_0x263;
//     undefined field583_0x264;
//     undefined field584_0x265;
//     undefined field585_0x266;
//     undefined field586_0x267;
//     undefined field587_0x268;
//     undefined field588_0x269;
//     undefined field589_0x26a;
//     undefined field590_0x26b;
//     undefined field591_0x26c;
//     undefined field592_0x26d;
//     undefined field593_0x26e;
//     undefined field594_0x26f;
//     undefined field595_0x270;
//     undefined field596_0x271;
//     undefined field597_0x272;
//     undefined field598_0x273;
//     undefined field599_0x274;
//     undefined field600_0x275;
//     undefined field601_0x276;
//     undefined field602_0x277;
//     undefined field603_0x278;
//     undefined field604_0x279;
//     undefined field605_0x27a;
//     undefined field606_0x27b;
//     undefined field607_0x27c;
//     undefined field608_0x27d;
//     undefined field609_0x27e;
//     undefined field610_0x27f;
//     undefined field611_0x280;
//     undefined field612_0x281;
//     undefined field613_0x282;
//     undefined field614_0x283;
//     undefined field615_0x284;
//     undefined field616_0x285;
//     undefined field617_0x286;
//     undefined field618_0x287;
//     undefined field619_0x288;
//     undefined field620_0x289;
//     undefined field621_0x28a;
//     undefined field622_0x28b;
//     undefined field623_0x28c;
//     undefined field624_0x28d;
//     undefined field625_0x28e;
//     undefined field626_0x28f;
//     undefined field627_0x290;
//     undefined field628_0x291;
//     undefined field629_0x292;
//     undefined field630_0x293;
//     undefined field631_0x294;
//     undefined field632_0x295;
//     undefined field633_0x296;
//     undefined field634_0x297;
//     undefined field635_0x298;
//     undefined field636_0x299;
//     undefined field637_0x29a;
//     undefined field638_0x29b;
//     undefined field639_0x29c;
//     undefined field640_0x29d;
//     undefined field641_0x29e;
//     undefined field642_0x29f;
//     undefined field643_0x2a0;
//     undefined field644_0x2a1;
//     undefined field645_0x2a2;
//     undefined field646_0x2a3;
//     undefined field647_0x2a4;
//     undefined field648_0x2a5;
//     undefined field649_0x2a6;
//     undefined field650_0x2a7;
//     undefined field651_0x2a8;
//     undefined field652_0x2a9;
//     undefined field653_0x2aa;
//     undefined field654_0x2ab;
//     undefined field655_0x2ac;
//     undefined field656_0x2ad;
//     undefined field657_0x2ae;
//     undefined field658_0x2af;
//     undefined field659_0x2b0;
//     undefined field660_0x2b1;
//     undefined field661_0x2b2;
//     undefined field662_0x2b3;
//     undefined field663_0x2b4;
//     undefined field664_0x2b5;
//     undefined field665_0x2b6;
//     undefined field666_0x2b7;
//     undefined field667_0x2b8;
//     undefined field668_0x2b9;
//     undefined field669_0x2ba;
//     undefined field670_0x2bb;
//     undefined field671_0x2bc;
//     undefined field672_0x2bd;
//     undefined field673_0x2be;
//     undefined field674_0x2bf;
//     undefined field675_0x2c0;
//     undefined field676_0x2c1;
//     undefined field677_0x2c2;
//     undefined field678_0x2c3;
//     undefined field679_0x2c4;
//     undefined field680_0x2c5;
//     undefined field681_0x2c6;
//     undefined field682_0x2c7;
//     undefined field683_0x2c8;
//     undefined field684_0x2c9;
//     undefined field685_0x2ca;
//     undefined field686_0x2cb;
//     undefined field687_0x2cc;
//     undefined field688_0x2cd;
//     undefined field689_0x2ce;
//     undefined field690_0x2cf;
//     undefined field691_0x2d0;
//     undefined field692_0x2d1;
//     undefined field693_0x2d2;
//     undefined field694_0x2d3;
//     undefined field695_0x2d4;
//     undefined field696_0x2d5;
//     undefined field697_0x2d6;
//     undefined field698_0x2d7;
//     undefined field699_0x2d8;
//     undefined field700_0x2d9;
//     undefined field701_0x2da;
//     undefined field702_0x2db;
//     undefined field703_0x2dc;
//     undefined field704_0x2dd;
//     undefined field705_0x2de;
//     undefined field706_0x2df;
//     undefined field707_0x2e0;
//     undefined field708_0x2e1;
//     undefined field709_0x2e2;
//     undefined field710_0x2e3;
//     undefined field711_0x2e4;
//     undefined field712_0x2e5;
//     undefined field713_0x2e6;
//     undefined field714_0x2e7;
//     undefined field715_0x2e8;
//     undefined field716_0x2e9;
//     undefined field717_0x2ea;
//     undefined field718_0x2eb;
//     undefined field719_0x2ec;
//     undefined field720_0x2ed;
//     undefined field721_0x2ee;
//     undefined field722_0x2ef;
//     undefined field723_0x2f0;
//     undefined field724_0x2f1;
//     undefined field725_0x2f2;
//     undefined field726_0x2f3;
//     undefined field727_0x2f4;
//     undefined field728_0x2f5;
//     undefined field729_0x2f6;
//     undefined field730_0x2f7;
//     undefined field731_0x2f8;
//     undefined field732_0x2f9;
//     undefined field733_0x2fa;
//     undefined field734_0x2fb;
//     undefined field735_0x2fc;
//     undefined field736_0x2fd;
//     undefined field737_0x2fe;
//     undefined field738_0x2ff;
//     undefined field739_0x300;
//     undefined field740_0x301;
//     undefined field741_0x302;
//     undefined field742_0x303;
//     undefined field743_0x304;
//     undefined field744_0x305;
//     undefined field745_0x306;
//     undefined field746_0x307;
//     undefined field747_0x308;
//     undefined field748_0x309;
//     undefined field749_0x30a;
//     undefined field750_0x30b;
//     undefined field751_0x30c;
//     undefined field752_0x30d;
//     undefined field753_0x30e;
//     undefined field754_0x30f;
//     undefined field755_0x310;
//     undefined field756_0x311;
//     undefined field757_0x312;
//     undefined field758_0x313;
//     undefined field759_0x314;
//     undefined field760_0x315;
//     undefined field761_0x316;
//     undefined field762_0x317;
//     undefined field763_0x318;
//     undefined field764_0x319;
//     undefined field765_0x31a;
//     undefined field766_0x31b;
//     undefined field767_0x31c;
//     undefined field768_0x31d;
//     undefined field769_0x31e;
//     undefined field770_0x31f;
//     undefined field771_0x320;
//     undefined field772_0x321;
//     undefined field773_0x322;
//     undefined field774_0x323;
//     undefined field775_0x324;
//     undefined field776_0x325;
//     undefined field777_0x326;
//     undefined field778_0x327;
//     undefined field779_0x328;
//     undefined field780_0x329;
//     undefined field781_0x32a;
//     undefined field782_0x32b;
//     undefined field783_0x32c;
//     undefined field784_0x32d;
//     undefined field785_0x32e;
//     undefined field786_0x32f;
//     undefined field787_0x330;
//     undefined field788_0x331;
//     undefined field789_0x332;
//     undefined field790_0x333;
//     undefined field791_0x334;
//     undefined field792_0x335;
//     undefined field793_0x336;
//     undefined field794_0x337;
//     undefined field795_0x338;
//     undefined field796_0x339;
//     undefined field797_0x33a;
//     undefined field798_0x33b;
//     undefined field799_0x33c;
//     undefined field800_0x33d;
//     undefined field801_0x33e;
//     undefined field802_0x33f;
//     undefined field803_0x340;
//     undefined field804_0x341;
//     undefined field805_0x342;
//     undefined field806_0x343;
//     undefined field807_0x344;
//     undefined field808_0x345;
//     undefined field809_0x346;
//     undefined field810_0x347;
//     undefined field811_0x348;
//     undefined field812_0x349;
//     undefined field813_0x34a;
//     undefined field814_0x34b;
//     undefined field815_0x34c;
//     undefined field816_0x34d;
//     undefined field817_0x34e;
//     undefined field818_0x34f;
//     undefined field819_0x350;
//     undefined field820_0x351;
//     undefined field821_0x352;
//     undefined field822_0x353;
//     undefined field823_0x354;
//     undefined field824_0x355;
//     undefined field825_0x356;
//     undefined field826_0x357;
//     undefined field827_0x358;
//     undefined field828_0x359;
//     undefined field829_0x35a;
//     undefined field830_0x35b;
//     undefined field831_0x35c;
//     undefined field832_0x35d;
//     undefined field833_0x35e;
//     undefined field834_0x35f;
//     undefined field835_0x360;
//     undefined field836_0x361;
//     undefined field837_0x362;
//     undefined field838_0x363;
//     undefined field839_0x364;
//     undefined field840_0x365;
//     undefined field841_0x366;
//     undefined field842_0x367;
//     undefined field843_0x368;
//     undefined field844_0x369;
//     undefined field845_0x36a;
//     undefined field846_0x36b;
//     undefined field847_0x36c;
//     undefined field848_0x36d;
//     undefined field849_0x36e;
//     undefined field850_0x36f;
//     undefined field851_0x370;
//     undefined field852_0x371;
//     undefined field853_0x372;
//     undefined field854_0x373;
//     undefined field855_0x374;
//     undefined field856_0x375;
//     undefined field857_0x376;
//     undefined field858_0x377;
//     undefined field859_0x378;
//     undefined field860_0x379;
//     undefined field861_0x37a;
//     undefined field862_0x37b;
//     undefined field863_0x37c;
//     undefined field864_0x37d;
//     undefined field865_0x37e;
//     undefined field866_0x37f;
//     undefined field867_0x380;
//     undefined field868_0x381;
//     undefined field869_0x382;
//     undefined field870_0x383;
//     undefined field871_0x384;
//     undefined field872_0x385;
//     undefined field873_0x386;
//     undefined field874_0x387;
//     undefined field875_0x388;
//     undefined field876_0x389;
//     undefined field877_0x38a;
//     undefined field878_0x38b;
//     undefined field879_0x38c;
//     undefined field880_0x38d;
//     undefined field881_0x38e;
//     undefined field882_0x38f;
//     undefined field883_0x390;
//     undefined field884_0x391;
//     undefined field885_0x392;
//     undefined field886_0x393;
//     undefined field887_0x394;
//     undefined field888_0x395;
//     undefined field889_0x396;
//     undefined field890_0x397;
//     undefined field891_0x398;
//     undefined field892_0x399;
//     undefined field893_0x39a;
//     undefined field894_0x39b;
//     undefined field895_0x39c;
//     undefined field896_0x39d;
//     undefined field897_0x39e;
//     undefined field898_0x39f;
//     undefined field899_0x3a0;
//     undefined field900_0x3a1;
//     undefined field901_0x3a2;
//     undefined field902_0x3a3;
//     undefined field903_0x3a4;
//     undefined field904_0x3a5;
//     undefined field905_0x3a6;
//     undefined field906_0x3a7;
//     undefined field907_0x3a8;
//     undefined field908_0x3a9;
//     undefined field909_0x3aa;
//     undefined field910_0x3ab;
//     undefined field911_0x3ac;
//     undefined field912_0x3ad;
//     undefined field913_0x3ae;
//     undefined field914_0x3af;
//     undefined field915_0x3b0;
//     undefined field916_0x3b1;
//     undefined field917_0x3b2;
//     undefined field918_0x3b3;
//     undefined field919_0x3b4;
//     undefined field920_0x3b5;
//     undefined field921_0x3b6;
//     undefined field922_0x3b7;
//     undefined field923_0x3b8;
//     undefined field924_0x3b9;
//     undefined field925_0x3ba;
//     undefined field926_0x3bb;
//     undefined field927_0x3bc;
//     undefined field928_0x3bd;
//     undefined field929_0x3be;
//     undefined field930_0x3bf;
//     undefined field931_0x3c0;
//     undefined field932_0x3c1;
//     undefined field933_0x3c2;
//     undefined field934_0x3c3;
//     undefined field935_0x3c4;
//     undefined field936_0x3c5;
//     undefined field937_0x3c6;
//     undefined field938_0x3c7;
//     undefined field939_0x3c8;
//     undefined field940_0x3c9;
//     undefined field941_0x3ca;
//     undefined field942_0x3cb;
//     undefined field943_0x3cc;
//     undefined field944_0x3cd;
//     undefined field945_0x3ce;
//     undefined field946_0x3cf;
//     undefined field947_0x3d0;
//     undefined field948_0x3d1;
//     undefined field949_0x3d2;
//     undefined field950_0x3d3;
//     undefined field951_0x3d4;
//     undefined field952_0x3d5;
//     undefined field953_0x3d6;
//     undefined field954_0x3d7;
//     undefined field955_0x3d8;
//     undefined field956_0x3d9;
//     undefined field957_0x3da;
//     undefined field958_0x3db;
//     undefined field959_0x3dc;
//     undefined field960_0x3dd;
//     undefined field961_0x3de;
//     undefined field962_0x3df;
//     undefined field963_0x3e0;
//     undefined field964_0x3e1;
//     undefined field965_0x3e2;
//     undefined field966_0x3e3;
//     undefined field967_0x3e4;
//     undefined field968_0x3e5;
//     undefined field969_0x3e6;
//     undefined field970_0x3e7;
//     undefined field971_0x3e8;
//     undefined field972_0x3e9;
//     undefined field973_0x3ea;
//     undefined field974_0x3eb;
//     undefined field975_0x3ec;
//     undefined field976_0x3ed;
//     undefined field977_0x3ee;
//     undefined field978_0x3ef;
//     undefined field979_0x3f0;
//     undefined field980_0x3f1;
//     undefined field981_0x3f2;
//     undefined field982_0x3f3;
//     undefined field983_0x3f4;
//     undefined field984_0x3f5;
//     undefined field985_0x3f6;
//     undefined field986_0x3f7;
//     undefined field987_0x3f8;
//     undefined field988_0x3f9;
//     undefined field989_0x3fa;
//     undefined field990_0x3fb;
//     undefined field991_0x3fc;
//     undefined field992_0x3fd;
//     undefined field993_0x3fe;
//     undefined field994_0x3ff;
//     undefined field995_0x400;
//     undefined field996_0x401;
//     undefined field997_0x402;
//     undefined field998_0x403;
//     undefined field999_0x404;
//     undefined field1000_0x405;
//     undefined field1001_0x406;
//     undefined field1002_0x407;
//     undefined field1003_0x408;
//     undefined field1004_0x409;
//     undefined field1005_0x40a;
//     undefined field1006_0x40b;
//     undefined field1007_0x40c;
//     undefined field1008_0x40d;
//     undefined field1009_0x40e;
//     undefined field1010_0x40f;
//     undefined field1011_0x410;
//     undefined field1012_0x411;
//     undefined field1013_0x412;
//     undefined field1014_0x413;
//     undefined field1015_0x414;
//     undefined field1016_0x415;
//     undefined field1017_0x416;
//     undefined field1018_0x417;
//     undefined field1019_0x418;
//     undefined field1020_0x419;
//     undefined field1021_0x41a;
//     undefined field1022_0x41b;
//     undefined field1023_0x41c;
//     undefined field1024_0x41d;
//     undefined field1025_0x41e;
//     undefined field1026_0x41f;
//     undefined field1027_0x420;
//     undefined field1028_0x421;
//     undefined field1029_0x422;
//     undefined field1030_0x423;
//     undefined field1031_0x424;
//     undefined field1032_0x425;
//     undefined field1033_0x426;
//     undefined field1034_0x427;
//     undefined field1035_0x428;
//     undefined field1036_0x429;
//     undefined field1037_0x42a;
//     undefined field1038_0x42b;
//     undefined field1039_0x42c;
//     undefined field1040_0x42d;
//     undefined field1041_0x42e;
//     undefined field1042_0x42f;
//     undefined field1043_0x430;
//     undefined field1044_0x431;
//     undefined field1045_0x432;
//     undefined field1046_0x433;
//     undefined field1047_0x434;
//     undefined field1048_0x435;
//     undefined field1049_0x436;
//     undefined field1050_0x437;
//     undefined field1051_0x438;
//     undefined field1052_0x439;
//     undefined field1053_0x43a;
//     undefined field1054_0x43b;
//     undefined field1055_0x43c;
//     undefined field1056_0x43d;
//     undefined field1057_0x43e;
//     undefined field1058_0x43f;
//     undefined field1059_0x440;
//     undefined field1060_0x441;
//     undefined field1061_0x442;
//     undefined field1062_0x443;
//     undefined field1063_0x444;
//     undefined field1064_0x445;
//     undefined field1065_0x446;
//     undefined field1066_0x447;
//     undefined field1067_0x448;
//     undefined field1068_0x449;
//     undefined field1069_0x44a;
//     undefined field1070_0x44b;
//     undefined field1071_0x44c;
//     undefined field1072_0x44d;
//     undefined field1073_0x44e;
//     undefined field1074_0x44f;
//     undefined field1075_0x450;
//     undefined field1076_0x451;
//     undefined field1077_0x452;
//     undefined field1078_0x453;
//     undefined field1079_0x454;
//     undefined field1080_0x455;
//     undefined field1081_0x456;
//     undefined field1082_0x457;
//     undefined field1083_0x458;
//     undefined field1084_0x459;
//     undefined field1085_0x45a;
//     undefined field1086_0x45b;
//     undefined field1087_0x45c;
//     undefined field1088_0x45d;
//     undefined field1089_0x45e;
//     undefined field1090_0x45f;
//     undefined field1091_0x460;
//     undefined field1092_0x461;
//     undefined field1093_0x462;
//     undefined field1094_0x463;
//     undefined field1095_0x464;
//     undefined field1096_0x465;
//     undefined field1097_0x466;
//     undefined field1098_0x467;
//     undefined field1099_0x468;
//     undefined field1100_0x469;
//     undefined field1101_0x46a;
//     undefined field1102_0x46b;
//     undefined field1103_0x46c;
//     undefined field1104_0x46d;
//     undefined field1105_0x46e;
//     undefined field1106_0x46f;
//     undefined field1107_0x470;
//     undefined field1108_0x471;
//     undefined field1109_0x472;
//     undefined field1110_0x473;
//     undefined field1111_0x474;
//     undefined field1112_0x475;
//     undefined field1113_0x476;
//     undefined field1114_0x477;
//     undefined field1115_0x478;
//     undefined field1116_0x479;
//     undefined field1117_0x47a;
//     undefined field1118_0x47b;
//     undefined field1119_0x47c;
//     undefined field1120_0x47d;
//     undefined field1121_0x47e;
//     undefined field1122_0x47f;
//     undefined field1123_0x480;
//     undefined field1124_0x481;
//     undefined field1125_0x482;
//     undefined field1126_0x483;
//     undefined field1127_0x484;
//     undefined field1128_0x485;
//     undefined field1129_0x486;
//     undefined field1130_0x487;
//     undefined field1131_0x488;
//     undefined field1132_0x489;
//     undefined field1133_0x48a;
//     undefined field1134_0x48b;
//     undefined field1135_0x48c;
//     undefined field1136_0x48d;
//     undefined field1137_0x48e;
//     undefined field1138_0x48f;
//     undefined field1139_0x490;
//     undefined field1140_0x491;
//     undefined field1141_0x492;
//     undefined field1142_0x493;
//     undefined field1143_0x494;
//     undefined field1144_0x495;
//     undefined field1145_0x496;
//     undefined field1146_0x497;
//     undefined field1147_0x498;
//     undefined field1148_0x499;
//     undefined field1149_0x49a;
//     undefined field1150_0x49b;
//     undefined field1151_0x49c;
//     undefined field1152_0x49d;
//     undefined field1153_0x49e;
//     undefined field1154_0x49f;
//     undefined field1155_0x4a0;
//     undefined field1156_0x4a1;
//     undefined field1157_0x4a2;
//     undefined field1158_0x4a3;
//     undefined field1159_0x4a4;
//     undefined field1160_0x4a5;
//     undefined field1161_0x4a6;
//     undefined field1162_0x4a7;
//     undefined field1163_0x4a8;
//     undefined field1164_0x4a9;
//     undefined field1165_0x4aa;
//     undefined field1166_0x4ab;
//     undefined field1167_0x4ac;
//     undefined field1168_0x4ad;
//     undefined field1169_0x4ae;
//     undefined field1170_0x4af;
//     undefined field1171_0x4b0;
//     undefined field1172_0x4b1;
//     undefined field1173_0x4b2;
//     undefined field1174_0x4b3;
//     undefined field1175_0x4b4;
//     undefined field1176_0x4b5;
//     undefined field1177_0x4b6;
//     undefined field1178_0x4b7;
//     undefined field1179_0x4b8;
//     undefined field1180_0x4b9;
//     undefined field1181_0x4ba;
//     undefined field1182_0x4bb;
//     undefined field1183_0x4bc;
//     undefined field1184_0x4bd;
//     undefined field1185_0x4be;
//     undefined field1186_0x4bf;
//     undefined field1187_0x4c0;
//     undefined field1188_0x4c1;
//     undefined field1189_0x4c2;
//     undefined field1190_0x4c3;
//     undefined field1191_0x4c4;
//     undefined field1192_0x4c5;
//     undefined field1193_0x4c6;
//     undefined field1194_0x4c7;
//     undefined field1195_0x4c8;
//     undefined field1196_0x4c9;
//     undefined field1197_0x4ca;
//     undefined field1198_0x4cb;
//     undefined field1199_0x4cc;
//     undefined field1200_0x4cd;
//     undefined field1201_0x4ce;
//     undefined field1202_0x4cf;
//     undefined field1203_0x4d0;
//     undefined field1204_0x4d1;
//     undefined field1205_0x4d2;
//     undefined field1206_0x4d3;
//     undefined field1207_0x4d4;
//     undefined field1208_0x4d5;
//     undefined field1209_0x4d6;
//     undefined field1210_0x4d7;
//     undefined field1211_0x4d8;
//     undefined field1212_0x4d9;
//     undefined field1213_0x4da;
//     undefined field1214_0x4db;
//     undefined field1215_0x4dc;
//     undefined field1216_0x4dd;
//     undefined field1217_0x4de;
//     undefined field1218_0x4df;
//     undefined field1219_0x4e0;
//     undefined field1220_0x4e1;
//     undefined field1221_0x4e2;
//     undefined field1222_0x4e3;
//     undefined field1223_0x4e4;
//     undefined field1224_0x4e5;
//     undefined field1225_0x4e6;
//     undefined field1226_0x4e7;
//     undefined field1227_0x4e8;
//     undefined field1228_0x4e9;
//     undefined field1229_0x4ea;
//     undefined field1230_0x4eb;
//     undefined field1231_0x4ec;
//     undefined field1232_0x4ed;
//     undefined field1233_0x4ee;
//     undefined field1234_0x4ef;
//     undefined field1235_0x4f0;
//     undefined field1236_0x4f1;
//     undefined field1237_0x4f2;
//     undefined field1238_0x4f3;
//     undefined field1239_0x4f4;
//     undefined field1240_0x4f5;
//     undefined field1241_0x4f6;
//     undefined field1242_0x4f7;
//     undefined field1243_0x4f8;
//     undefined field1244_0x4f9;
//     undefined field1245_0x4fa;
//     undefined field1246_0x4fb;
//     undefined field1247_0x4fc;
//     undefined field1248_0x4fd;
//     undefined field1249_0x4fe;
//     undefined field1250_0x4ff;
//     undefined field1251_0x500;
//     undefined field1252_0x501;
//     undefined field1253_0x502;
//     undefined field1254_0x503;
//     undefined field1255_0x504;
//     undefined field1256_0x505;
//     undefined field1257_0x506;
//     undefined field1258_0x507;
//     undefined field1259_0x508;
//     undefined field1260_0x509;
//     undefined field1261_0x50a;
//     undefined field1262_0x50b;
//     undefined field1263_0x50c;
//     undefined field1264_0x50d;
//     undefined field1265_0x50e;
//     undefined field1266_0x50f;
//     undefined field1267_0x510;
//     undefined field1268_0x511;
//     undefined field1269_0x512;
//     undefined field1270_0x513;
//     undefined field1271_0x514;
//     undefined field1272_0x515;
//     undefined field1273_0x516;
//     undefined field1274_0x517;
//     undefined field1275_0x518;
//     undefined field1276_0x519;
//     undefined field1277_0x51a;
//     undefined field1278_0x51b;
//     undefined field1279_0x51c;
//     undefined field1280_0x51d;
//     undefined field1281_0x51e;
//     undefined field1282_0x51f;
//     undefined field1283_0x520;
//     undefined field1284_0x521;
//     undefined field1285_0x522;
//     undefined field1286_0x523;
//     undefined field1287_0x524;
//     undefined field1288_0x525;
//     undefined field1289_0x526;
//     undefined field1290_0x527;
//     undefined field1291_0x528;
//     undefined field1292_0x529;
//     undefined field1293_0x52a;
//     undefined field1294_0x52b;
//     undefined field1295_0x52c;
//     undefined field1296_0x52d;
//     undefined field1297_0x52e;
//     undefined field1298_0x52f;
//     undefined field1299_0x530;
//     undefined field1300_0x531;
//     undefined field1301_0x532;
//     undefined field1302_0x533;
//     undefined field1303_0x534;
//     undefined field1304_0x535;
//     undefined field1305_0x536;
//     undefined field1306_0x537;
//     undefined field1307_0x538;
//     undefined field1308_0x539;
//     undefined field1309_0x53a;
//     undefined field1310_0x53b;
//     undefined field1311_0x53c;
//     undefined field1312_0x53d;
//     undefined field1313_0x53e;
//     undefined field1314_0x53f;
//     undefined field1315_0x540;
//     undefined field1316_0x541;
//     undefined field1317_0x542;
//     undefined field1318_0x543;
//     undefined field1319_0x544;
//     undefined field1320_0x545;
//     undefined field1321_0x546;
//     undefined field1322_0x547;
//     undefined field1323_0x548;
//     undefined field1324_0x549;
//     undefined field1325_0x54a;
//     undefined field1326_0x54b;
//     undefined field1327_0x54c;
//     undefined field1328_0x54d;
//     undefined field1329_0x54e;
//     undefined field1330_0x54f;
//     undefined field1331_0x550;
//     undefined field1332_0x551;
//     undefined field1333_0x552;
//     undefined field1334_0x553;
//     undefined field1335_0x554;
//     undefined field1336_0x555;
//     undefined field1337_0x556;
//     undefined field1338_0x557;
//     undefined field1339_0x558;
//     undefined field1340_0x559;
//     undefined field1341_0x55a;
//     undefined field1342_0x55b;
//     undefined field1343_0x55c;
//     undefined field1344_0x55d;
//     undefined field1345_0x55e;
//     undefined field1346_0x55f;
//     undefined field1347_0x560;
//     undefined field1348_0x561;
//     undefined field1349_0x562;
//     undefined field1350_0x563;
//     undefined field1351_0x564;
//     undefined field1352_0x565;
//     undefined field1353_0x566;
//     undefined field1354_0x567;
//     undefined field1355_0x568;
//     undefined field1356_0x569;
//     undefined field1357_0x56a;
//     undefined field1358_0x56b;
//     undefined field1359_0x56c;
//     undefined field1360_0x56d;
//     undefined field1361_0x56e;
//     undefined field1362_0x56f;
//     undefined field1363_0x570;
//     undefined field1364_0x571;
//     undefined field1365_0x572;
//     undefined field1366_0x573;
//     undefined field1367_0x574;
//     undefined field1368_0x575;
//     undefined field1369_0x576;
//     undefined field1370_0x577;
//     undefined field1371_0x578;
//     undefined field1372_0x579;
//     undefined field1373_0x57a;
//     undefined field1374_0x57b;
//     undefined field1375_0x57c;
//     undefined field1376_0x57d;
//     undefined field1377_0x57e;
//     undefined field1378_0x57f;
//     undefined field1379_0x580;
//     undefined field1380_0x581;
//     undefined field1381_0x582;
//     undefined field1382_0x583;
//     undefined field1383_0x584;
//     undefined field1384_0x585;
//     undefined field1385_0x586;
//     undefined field1386_0x587;
//     undefined field1387_0x588;
//     undefined field1388_0x589;
//     undefined field1389_0x58a;
//     undefined field1390_0x58b;
//     undefined field1391_0x58c;
//     undefined field1392_0x58d;
//     undefined field1393_0x58e;
//     undefined field1394_0x58f;
//     undefined field1395_0x590;
//     undefined field1396_0x591;
//     undefined field1397_0x592;
//     undefined field1398_0x593;
//     undefined field1399_0x594;
//     undefined field1400_0x595;
//     undefined field1401_0x596;
//     undefined field1402_0x597;
//     undefined field1403_0x598;
//     undefined field1404_0x599;
//     undefined field1405_0x59a;
//     undefined field1406_0x59b;
//     undefined field1407_0x59c;
//     undefined field1408_0x59d;
//     undefined field1409_0x59e;
//     undefined field1410_0x59f;
//     undefined field1411_0x5a0;
//     undefined field1412_0x5a1;
//     undefined field1413_0x5a2;
//     undefined field1414_0x5a3;
//     undefined field1415_0x5a4;
//     undefined field1416_0x5a5;
//     undefined field1417_0x5a6;
//     undefined field1418_0x5a7;
//     undefined field1419_0x5a8;
//     undefined field1420_0x5a9;
//     undefined field1421_0x5aa;
//     undefined field1422_0x5ab;
//     undefined field1423_0x5ac;
//     undefined field1424_0x5ad;
//     undefined field1425_0x5ae;
//     undefined field1426_0x5af;
//     undefined field1427_0x5b0;
//     undefined field1428_0x5b1;
//     undefined field1429_0x5b2;
//     undefined field1430_0x5b3;
//     undefined field1431_0x5b4;
//     undefined field1432_0x5b5;
//     undefined field1433_0x5b6;
//     undefined field1434_0x5b7;
//     undefined field1435_0x5b8;
//     undefined field1436_0x5b9;
//     undefined field1437_0x5ba;
//     undefined field1438_0x5bb;
//     undefined field1439_0x5bc;
//     undefined field1440_0x5bd;
//     undefined field1441_0x5be;
//     undefined field1442_0x5bf;
//     undefined field1443_0x5c0;
//     undefined field1444_0x5c1;
//     undefined field1445_0x5c2;
//     undefined field1446_0x5c3;
//     undefined field1447_0x5c4;
//     undefined field1448_0x5c5;
//     undefined field1449_0x5c6;
//     undefined field1450_0x5c7;
//     undefined field1451_0x5c8;
//     undefined field1452_0x5c9;
//     undefined field1453_0x5ca;
//     undefined field1454_0x5cb;
//     undefined field1455_0x5cc;
//     undefined field1456_0x5cd;
//     undefined field1457_0x5ce;
//     undefined field1458_0x5cf;
//     undefined field1459_0x5d0;
//     undefined field1460_0x5d1;
//     undefined field1461_0x5d2;
//     undefined field1462_0x5d3;
//     undefined field1463_0x5d4;
//     undefined field1464_0x5d5;
//     undefined field1465_0x5d6;
//     undefined field1466_0x5d7;
//     undefined field1467_0x5d8;
//     undefined field1468_0x5d9;
//     undefined field1469_0x5da;
//     undefined field1470_0x5db;
//     undefined field1471_0x5dc;
//     undefined field1472_0x5dd;
//     undefined field1473_0x5de;
//     undefined field1474_0x5df;
//     undefined field1475_0x5e0;
//     undefined field1476_0x5e1;
//     undefined field1477_0x5e2;
//     undefined field1478_0x5e3;
//     undefined field1479_0x5e4;
//     undefined field1480_0x5e5;
//     undefined field1481_0x5e6;
//     undefined field1482_0x5e7;
//     undefined field1483_0x5e8;
//     undefined field1484_0x5e9;
//     undefined field1485_0x5ea;
//     undefined field1486_0x5eb;
//     undefined field1487_0x5ec;
//     undefined field1488_0x5ed;
//     undefined field1489_0x5ee;
//     undefined field1490_0x5ef;
//     undefined field1491_0x5f0;
//     undefined field1492_0x5f1;
//     undefined field1493_0x5f2;
//     undefined field1494_0x5f3;
//     undefined field1495_0x5f4;
//     undefined field1496_0x5f5;
//     undefined field1497_0x5f6;
//     undefined field1498_0x5f7;
//     undefined field1499_0x5f8;
//     undefined field1500_0x5f9;
//     undefined field1501_0x5fa;
//     undefined field1502_0x5fb;
//     undefined field1503_0x5fc;
//     undefined field1504_0x5fd;
//     undefined field1505_0x5fe;
//     undefined field1506_0x5ff;
//     undefined field1507_0x600;
//     undefined field1508_0x601;
//     undefined field1509_0x602;
//     undefined field1510_0x603;
//     undefined field1511_0x604;
//     undefined field1512_0x605;
//     undefined field1513_0x606;
//     undefined field1514_0x607;
//     undefined field1515_0x608;
//     undefined field1516_0x609;
//     undefined field1517_0x60a;
//     undefined field1518_0x60b;
//     undefined field1519_0x60c;
//     undefined field1520_0x60d;
//     undefined field1521_0x60e;
//     undefined field1522_0x60f;
//     undefined field1523_0x610;
//     undefined field1524_0x611;
//     undefined field1525_0x612;
//     undefined field1526_0x613;
//     undefined field1527_0x614;
//     undefined field1528_0x615;
//     undefined field1529_0x616;
//     undefined field1530_0x617;
//     undefined field1531_0x618;
//     undefined field1532_0x619;
//     undefined field1533_0x61a;
//     undefined field1534_0x61b;
//     undefined field1535_0x61c;
//     undefined field1536_0x61d;
//     undefined field1537_0x61e;
//     undefined field1538_0x61f;
//     undefined field1539_0x620;
//     undefined field1540_0x621;
//     undefined field1541_0x622;
//     undefined field1542_0x623;
//     undefined field1543_0x624;
//     undefined field1544_0x625;
//     undefined field1545_0x626;
//     undefined field1546_0x627;
//     undefined field1547_0x628;
//     undefined field1548_0x629;
//     undefined field1549_0x62a;
//     undefined field1550_0x62b;
//     undefined field1551_0x62c;
//     undefined field1552_0x62d;
//     undefined field1553_0x62e;
//     undefined field1554_0x62f;
//     undefined field1555_0x630;
//     undefined field1556_0x631;
//     undefined field1557_0x632;
//     undefined field1558_0x633;
//     undefined field1559_0x634;
//     undefined field1560_0x635;
//     undefined field1561_0x636;
//     undefined field1562_0x637;
//     undefined field1563_0x638;
//     undefined field1564_0x639;
//     undefined field1565_0x63a;
//     undefined field1566_0x63b;
//     undefined field1567_0x63c;
//     undefined field1568_0x63d;
//     undefined field1569_0x63e;
//     undefined field1570_0x63f;
//     undefined field1571_0x640;
//     undefined field1572_0x641;
//     undefined field1573_0x642;
//     undefined field1574_0x643;
//     undefined field1575_0x644;
//     undefined field1576_0x645;
//     undefined field1577_0x646;
//     undefined field1578_0x647;
//     undefined field1579_0x648;
//     undefined field1580_0x649;
//     undefined field1581_0x64a;
//     undefined field1582_0x64b;
//     undefined field1583_0x64c;
//     undefined field1584_0x64d;
//     undefined field1585_0x64e;
//     undefined field1586_0x64f;
//     undefined field1587_0x650;
//     undefined field1588_0x651;
//     undefined field1589_0x652;
//     undefined field1590_0x653;
//     undefined field1591_0x654;
//     undefined field1592_0x655;
//     undefined field1593_0x656;
//     undefined field1594_0x657;
//     undefined field1595_0x658;
//     undefined field1596_0x659;
//     undefined field1597_0x65a;
//     undefined field1598_0x65b;
//     undefined field1599_0x65c;
//     undefined field1600_0x65d;
//     undefined field1601_0x65e;
//     undefined field1602_0x65f;
//     undefined field1603_0x660;
//     undefined field1604_0x661;
//     undefined field1605_0x662;
//     undefined field1606_0x663;
//     undefined field1607_0x664;
//     undefined field1608_0x665;
//     undefined field1609_0x666;
//     undefined field1610_0x667;
//     undefined field1611_0x668;
//     undefined field1612_0x669;
//     undefined field1613_0x66a;
//     undefined field1614_0x66b;
//     undefined field1615_0x66c;
//     undefined field1616_0x66d;
//     undefined field1617_0x66e;
//     undefined field1618_0x66f;
//     undefined field1619_0x670;
//     undefined field1620_0x671;
//     undefined field1621_0x672;
//     undefined field1622_0x673;
//     undefined field1623_0x674;
//     undefined field1624_0x675;
//     undefined field1625_0x676;
//     undefined field1626_0x677;
//     undefined field1627_0x678;
//     undefined field1628_0x679;
//     undefined field1629_0x67a;
//     undefined field1630_0x67b;
//     undefined field1631_0x67c;
//     undefined field1632_0x67d;
//     undefined field1633_0x67e;
//     undefined field1634_0x67f;
//     undefined field1635_0x680;
//     undefined field1636_0x681;
//     undefined field1637_0x682;
//     undefined field1638_0x683;
//     undefined field1639_0x684;
//     undefined field1640_0x685;
//     undefined field1641_0x686;
//     undefined field1642_0x687;
//     undefined field1643_0x688;
//     undefined field1644_0x689;
//     undefined field1645_0x68a;
//     undefined field1646_0x68b;
//     undefined field1647_0x68c;
//     undefined field1648_0x68d;
//     undefined field1649_0x68e;
//     undefined field1650_0x68f;
//     undefined field1651_0x690;
//     undefined field1652_0x691;
//     undefined field1653_0x692;
//     undefined field1654_0x693;
//     undefined field1655_0x694;
//     undefined field1656_0x695;
//     undefined field1657_0x696;
//     undefined field1658_0x697;
//     undefined field1659_0x698;
//     undefined field1660_0x699;
//     undefined field1661_0x69a;
//     undefined field1662_0x69b;
//     undefined field1663_0x69c;
//     undefined field1664_0x69d;
//     undefined field1665_0x69e;
//     undefined field1666_0x69f;
//     undefined field1667_0x6a0;
//     undefined field1668_0x6a1;
//     undefined field1669_0x6a2;
//     undefined field1670_0x6a3;
//     undefined field1671_0x6a4;
//     undefined field1672_0x6a5;
//     undefined field1673_0x6a6;
//     undefined field1674_0x6a7;
//     undefined field1675_0x6a8;
//     undefined field1676_0x6a9;
//     undefined field1677_0x6aa;
//     undefined field1678_0x6ab;
//     undefined field1679_0x6ac;
//     undefined field1680_0x6ad;
//     undefined field1681_0x6ae;
//     undefined field1682_0x6af;
//     undefined field1683_0x6b0;
//     undefined field1684_0x6b1;
//     undefined field1685_0x6b2;
//     undefined field1686_0x6b3;
//     undefined field1687_0x6b4;
//     undefined field1688_0x6b5;
//     undefined field1689_0x6b6;
//     undefined field1690_0x6b7;
//     undefined field1691_0x6b8;
//     undefined field1692_0x6b9;
//     undefined field1693_0x6ba;
//     undefined field1694_0x6bb;
//     undefined field1695_0x6bc;
//     undefined field1696_0x6bd;
//     undefined field1697_0x6be;
//     undefined field1698_0x6bf;
//     undefined field1699_0x6c0;
//     undefined field1700_0x6c1;
//     undefined field1701_0x6c2;
//     undefined field1702_0x6c3;
//     undefined field1703_0x6c4;
//     undefined field1704_0x6c5;
//     undefined field1705_0x6c6;
//     undefined field1706_0x6c7;
//     undefined field1707_0x6c8;
//     undefined field1708_0x6c9;
//     undefined field1709_0x6ca;
//     undefined field1710_0x6cb;
//     undefined field1711_0x6cc;
//     undefined field1712_0x6cd;
//     undefined field1713_0x6ce;
//     undefined field1714_0x6cf;
//     undefined field1715_0x6d0;
//     undefined field1716_0x6d1;
//     undefined field1717_0x6d2;
//     undefined field1718_0x6d3;
//     undefined field1719_0x6d4;
//     undefined field1720_0x6d5;
//     undefined field1721_0x6d6;
//     undefined field1722_0x6d7;
//     undefined field1723_0x6d8;
//     undefined field1724_0x6d9;
//     undefined field1725_0x6da;
//     undefined field1726_0x6db;
//     undefined field1727_0x6dc;
//     undefined field1728_0x6dd;
//     undefined field1729_0x6de;
//     undefined field1730_0x6df;
//     undefined field1731_0x6e0;
//     undefined field1732_0x6e1;
//     undefined field1733_0x6e2;
//     undefined field1734_0x6e3;
//     undefined field1735_0x6e4;
//     undefined field1736_0x6e5;
//     undefined field1737_0x6e6;
//     undefined field1738_0x6e7;
//     undefined field1739_0x6e8;
//     undefined field1740_0x6e9;
//     undefined field1741_0x6ea;
//     undefined field1742_0x6eb;
//     undefined field1743_0x6ec;
//     undefined field1744_0x6ed;
//     undefined field1745_0x6ee;
//     undefined field1746_0x6ef;
//     undefined field1747_0x6f0;
//     undefined field1748_0x6f1;
//     undefined field1749_0x6f2;
//     undefined field1750_0x6f3;
//     undefined field1751_0x6f4;
//     undefined field1752_0x6f5;
//     undefined field1753_0x6f6;
//     undefined field1754_0x6f7;
//     undefined field1755_0x6f8;
//     undefined field1756_0x6f9;
//     undefined field1757_0x6fa;
//     undefined field1758_0x6fb;
//     undefined field1759_0x6fc;
//     undefined field1760_0x6fd;
//     undefined field1761_0x6fe;
//     undefined field1762_0x6ff;
//     undefined field1763_0x700;
//     undefined field1764_0x701;
//     undefined field1765_0x702;
//     undefined field1766_0x703;
//     undefined field1767_0x704;
//     undefined field1768_0x705;
//     undefined field1769_0x706;
//     undefined field1770_0x707;
//     undefined field1771_0x708;
//     undefined field1772_0x709;
//     undefined field1773_0x70a;
//     undefined field1774_0x70b;
//     undefined field1775_0x70c;
//     undefined field1776_0x70d;
//     undefined field1777_0x70e;
//     undefined field1778_0x70f;
//     undefined field1779_0x710;
//     undefined field1780_0x711;
//     undefined field1781_0x712;
//     undefined field1782_0x713;
//     undefined field1783_0x714;
//     undefined field1784_0x715;
//     undefined field1785_0x716;
//     undefined field1786_0x717;
//     undefined field1787_0x718;
//     undefined field1788_0x719;
//     undefined field1789_0x71a;
//     undefined field1790_0x71b;
//     undefined field1791_0x71c;
//     undefined field1792_0x71d;
//     undefined field1793_0x71e;
//     undefined field1794_0x71f;
//     undefined field1795_0x720;
//     undefined field1796_0x721;
//     undefined field1797_0x722;
//     undefined field1798_0x723;
//     undefined field1799_0x724;
//     undefined field1800_0x725;
//     undefined field1801_0x726;
//     undefined field1802_0x727;
//     undefined field1803_0x728;
//     undefined field1804_0x729;
//     undefined field1805_0x72a;
//     undefined field1806_0x72b;
//     undefined field1807_0x72c;
//     undefined field1808_0x72d;
//     undefined field1809_0x72e;
//     undefined field1810_0x72f;
//     undefined field1811_0x730;
//     undefined field1812_0x731;
//     undefined field1813_0x732;
//     undefined field1814_0x733;
//     undefined field1815_0x734;
//     undefined field1816_0x735;
//     undefined field1817_0x736;
//     undefined field1818_0x737;
//     undefined field1819_0x738;
//     undefined field1820_0x739;
//     undefined field1821_0x73a;
//     undefined field1822_0x73b;
//     undefined field1823_0x73c;
//     undefined field1824_0x73d;
//     undefined field1825_0x73e;
//     undefined field1826_0x73f;
//     undefined field1827_0x740;
//     undefined field1828_0x741;
//     undefined field1829_0x742;
//     undefined field1830_0x743;
//     undefined field1831_0x744;
//     undefined field1832_0x745;
//     undefined field1833_0x746;
//     undefined field1834_0x747;
//     undefined field1835_0x748;
//     undefined field1836_0x749;
//     undefined field1837_0x74a;
//     undefined field1838_0x74b;
//     undefined field1839_0x74c;
//     undefined field1840_0x74d;
//     undefined field1841_0x74e;
//     undefined field1842_0x74f;
//     undefined field1843_0x750;
//     undefined field1844_0x751;
//     undefined field1845_0x752;
//     undefined field1846_0x753;
//     undefined field1847_0x754;
//     undefined field1848_0x755;
//     undefined field1849_0x756;
//     undefined field1850_0x757;
//     undefined field1851_0x758;
//     undefined field1852_0x759;
//     undefined field1853_0x75a;
//     undefined field1854_0x75b;
//     undefined field1855_0x75c;
//     undefined field1856_0x75d;
//     undefined field1857_0x75e;
//     undefined field1858_0x75f;
//     undefined field1859_0x760;
//     undefined field1860_0x761;
//     undefined field1861_0x762;
//     undefined field1862_0x763;
//     undefined field1863_0x764;
//     undefined field1864_0x765;
//     undefined field1865_0x766;
//     undefined field1866_0x767;
//     undefined field1867_0x768;
//     undefined field1868_0x769;
//     undefined field1869_0x76a;
//     undefined field1870_0x76b;
//     undefined field1871_0x76c;
//     undefined field1872_0x76d;
//     undefined field1873_0x76e;
//     undefined field1874_0x76f;
//     undefined field1875_0x770;
//     undefined field1876_0x771;
//     undefined field1877_0x772;
//     undefined field1878_0x773;
//     undefined field1879_0x774;
//     undefined field1880_0x775;
//     undefined field1881_0x776;
//     undefined field1882_0x777;
//     undefined field1883_0x778;
//     undefined field1884_0x779;
//     undefined field1885_0x77a;
//     undefined field1886_0x77b;
//     undefined field1887_0x77c;
//     undefined field1888_0x77d;
//     undefined field1889_0x77e;
//     undefined field1890_0x77f;
//     undefined field1891_0x780;
//     undefined field1892_0x781;
//     undefined field1893_0x782;
//     undefined field1894_0x783;
//     undefined field1895_0x784;
//     undefined field1896_0x785;
//     undefined field1897_0x786;
//     undefined field1898_0x787;
//     undefined field1899_0x788;
//     undefined field1900_0x789;
//     undefined field1901_0x78a;
//     undefined field1902_0x78b;
//     undefined field1903_0x78c;
//     undefined field1904_0x78d;
//     undefined field1905_0x78e;
//     undefined field1906_0x78f;
//     undefined field1907_0x790;
//     undefined field1908_0x791;
//     undefined field1909_0x792;
//     undefined field1910_0x793;
//     undefined field1911_0x794;
//     undefined field1912_0x795;
//     undefined field1913_0x796;
//     undefined field1914_0x797;
//     undefined field1915_0x798;
//     undefined field1916_0x799;
//     undefined field1917_0x79a;
//     undefined field1918_0x79b;
//     undefined field1919_0x79c;
//     undefined field1920_0x79d;
//     undefined field1921_0x79e;
//     undefined field1922_0x79f;
//     undefined field1923_0x7a0;
//     undefined field1924_0x7a1;
//     undefined field1925_0x7a2;
//     undefined field1926_0x7a3;
//     undefined field1927_0x7a4;
//     undefined field1928_0x7a5;
//     undefined field1929_0x7a6;
//     undefined field1930_0x7a7;
//     undefined field1931_0x7a8;
//     undefined field1932_0x7a9;
//     undefined field1933_0x7aa;
//     undefined field1934_0x7ab;
//     undefined field1935_0x7ac;
//     undefined field1936_0x7ad;
//     undefined field1937_0x7ae;
//     undefined field1938_0x7af;
//     undefined field1939_0x7b0;
//     undefined field1940_0x7b1;
//     undefined field1941_0x7b2;
//     undefined field1942_0x7b3;
//     undefined field1943_0x7b4;
//     undefined field1944_0x7b5;
//     undefined field1945_0x7b6;
//     undefined field1946_0x7b7;
//     undefined field1947_0x7b8;
//     undefined field1948_0x7b9;
//     undefined field1949_0x7ba;
//     undefined field1950_0x7bb;
//     undefined field1951_0x7bc;
//     undefined field1952_0x7bd;
//     undefined field1953_0x7be;
//     undefined field1954_0x7bf;
//     undefined field1955_0x7c0;
//     undefined field1956_0x7c1;
//     undefined field1957_0x7c2;
//     undefined field1958_0x7c3;
//     undefined field1959_0x7c4;
//     undefined field1960_0x7c5;
//     undefined field1961_0x7c6;
//     undefined field1962_0x7c7;
//     undefined field1963_0x7c8;
//     undefined field1964_0x7c9;
//     undefined field1965_0x7ca;
//     undefined field1966_0x7cb;
//     undefined field1967_0x7cc;
//     undefined field1968_0x7cd;
//     undefined field1969_0x7ce;
//     undefined field1970_0x7cf;
//     undefined field1971_0x7d0;
//     undefined field1972_0x7d1;
//     undefined field1973_0x7d2;
//     undefined field1974_0x7d3;
//     undefined field1975_0x7d4;
//     undefined field1976_0x7d5;
//     undefined field1977_0x7d6;
//     undefined field1978_0x7d7;
//     undefined field1979_0x7d8;
//     undefined field1980_0x7d9;
//     undefined field1981_0x7da;
//     undefined field1982_0x7db;
//     undefined field1983_0x7dc;
//     undefined field1984_0x7dd;
//     undefined field1985_0x7de;
//     undefined field1986_0x7df;
//     undefined field1987_0x7e0;
//     undefined field1988_0x7e1;
//     undefined field1989_0x7e2;
//     undefined field1990_0x7e3;
//     undefined field1991_0x7e4;
//     undefined field1992_0x7e5;
//     undefined field1993_0x7e6;
//     undefined field1994_0x7e7;
//     undefined field1995_0x7e8;
//     undefined field1996_0x7e9;
//     undefined field1997_0x7ea;
//     undefined field1998_0x7eb;
//     undefined field1999_0x7ec;
//     undefined field2000_0x7ed;
//     undefined field2001_0x7ee;
//     undefined field2002_0x7ef;
//     undefined field2003_0x7f0;
//     undefined field2004_0x7f1;
//     undefined field2005_0x7f2;
//     undefined field2006_0x7f3;
//     undefined field2007_0x7f4;
//     undefined field2008_0x7f5;
//     undefined field2009_0x7f6;
//     undefined field2010_0x7f7;
//     undefined field2011_0x7f8;
//     undefined field2012_0x7f9;
//     undefined field2013_0x7fa;
//     undefined field2014_0x7fb;
//     undefined field2015_0x7fc;
//     undefined field2016_0x7fd;
//     undefined field2017_0x7fe;
//     undefined field2018_0x7ff;
//     undefined field2019_0x800;
//     undefined field2020_0x801;
//     undefined field2021_0x802;
//     undefined field2022_0x803;
//     undefined field2023_0x804;
//     undefined field2024_0x805;
//     undefined field2025_0x806;
//     undefined field2026_0x807;
//     undefined field2027_0x808;
//     undefined field2028_0x809;
//     undefined field2029_0x80a;
//     undefined field2030_0x80b;
//     undefined field2031_0x80c;
//     undefined field2032_0x80d;
//     undefined field2033_0x80e;
//     undefined field2034_0x80f;
//     undefined field2035_0x810;
//     undefined field2036_0x811;
//     undefined field2037_0x812;
//     undefined field2038_0x813;
//     undefined field2039_0x814;
//     undefined field2040_0x815;
//     undefined field2041_0x816;
//     undefined field2042_0x817;
//     undefined field2043_0x818;
//     undefined field2044_0x819;
//     undefined field2045_0x81a;
//     undefined field2046_0x81b;
//     undefined field2047_0x81c;
//     undefined field2048_0x81d;
//     undefined field2049_0x81e;
//     undefined field2050_0x81f;
//     undefined field2051_0x820;
//     undefined field2052_0x821;
//     undefined field2053_0x822;
//     undefined field2054_0x823;
//     undefined field2055_0x824;
//     undefined field2056_0x825;
//     undefined field2057_0x826;
//     undefined field2058_0x827;
//     undefined field2059_0x828;
//     undefined field2060_0x829;
//     undefined field2061_0x82a;
//     undefined field2062_0x82b;
//     struct EventDistributionData m_Events[512];
//     UINT16 m_TimerNum;
//     UINT16 m_EventsNum;
//     BOOL m_Paused;
// };
// 
// struct evtServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type evtServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef enum eWaveforms {
//     kZero=0,
//     kOne=1,
//     kSine=2,
//     kSquare=3,
//     kTriangle=4,
//     kSawtooth=5,
//     kReverseSaw=6
// } eWaveforms;
// 
// typedef enum eWeight {
//     kWeightDefault=0,
//     kWeightLight=0,
//     kWeightMedium=1,
//     kWeightHeavy=2
// } eWeight;
// 
// typedef enum eWindEffect {
//     kWEAttachZone=0,
//     kWEDefault=0,
//     kWEUpdateZone=1,
//     kWEUpdateJoint=2
// } eWindEffect;
// 
// typedef struct exception exception, *Pexception;
// 
// struct exception {
//     int type;
//     char *name;
//     double arg1;
//     double arg2;
//     double retval;
//     int err;
//     undefined field6_0x24;
//     undefined field7_0x25;
//     undefined field8_0x26;
//     undefined field9_0x27;
// };
// 
// typedef struct exception_descriptor exception_descriptor, *Pexception_descriptor;
// 
// typedef struct exception_lang_info exception_lang_info, *Pexception_lang_info;
// 
// typedef struct exception_table exception_table, *Pexception_table;
// 
// struct exception_table {
//     void *start_region;
//     void *end_region;
//     void *exception_handler;
//     void *match_info;
// };
// 
// struct exception_lang_info {
//     short int language;
//     short int version;
// };
// 
// struct exception_descriptor {
//     void *runtime_id_field;
//     struct exception_lang_info lang;
//     struct exception_table table[1];
// };
// 
// typedef enum exception_source_language {
//     EH_LANG_C89=1,
//     EH_LANG_C=2,
//     EH_LANG_Ada83=3,
//     EH_LANG_C_plus_plus=4,
//     EH_LANG_Cobol74=5,
//     EH_LANG_Cobol85=6,
//     EH_LANG_Fortran77=7,
//     EH_LANG_Fortran90=8,
//     EH_LANG_Pascal83=9,
//     EH_LANG_Modula2=10,
//     EH_LANG_Java=11,
//     EH_LANG_Mips_Assembler=32769
// } exception_source_language;
// 
// typedef struct ExportTableChunk ExportTableChunk, *PExportTableChunk;
// 
// struct ExportTableChunk {
//     INT32 m_iNumEntries;
// };
// 
// typedef FLOAT f32;
// 
// typedef DOUBLE f64;
// 
// typedef struct F_ActionInstance F_ActionInstance, *PF_ActionInstance;
// 
// typedef struct F_ObjectInstance F_ObjectInstance, *PF_ObjectInstance;
// 
// typedef struct F_ObjectInstance__vtable F_ObjectInstance__vtable, *PF_ObjectInstance__vtable;
// 
struct F_ObjectInstance {
    struct F_ObjectInstance *parent;
    struct F_ObjectInstance__vtable *__vtable;
};

struct F_ObjectInstance__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type F_ObjectInstance;
    struct __vtbl_ptr_type IsSpriteInstance;
};

struct F_ActionInstance {
    UINT8 *actions;
    struct F_ObjectInstance *objectInstance;
    struct F_ActionInstance *next;
};
// 
// typedef struct F_ActionScript F_ActionScript, *PF_ActionScript;
// 
struct F_ActionScript {
    UINT8 *actions;
    UINT32 nActionBytes;
};
// 
// typedef struct F_Button F_Button, *PF_Button;
// 
// typedef struct F_Sprite F_Sprite, *PF_Sprite;
// 
// typedef struct F_ButtonAction F_ButtonAction, *PF_ButtonAction;
// 
// typedef struct F_Layer F_Layer, *PF_Layer;
// 
// typedef struct F_FrameActionLabel F_FrameActionLabel, *PF_FrameActionLabel;
// 
// typedef struct F_FrameCell F_FrameCell, *PF_FrameCell;
// 
struct F_Button {
    struct F_Sprite *sprite;
    struct F_ButtonAction *actionArray;
    UINT16 nActions;
    undefined field3_0xa;
    undefined field4_0xb;
};

struct F_FrameCell {
    UINT16 frameNumber;
    UINT16 objectID;
    UINT16 matrixID;
    UINT16 cxformID;
    UINT16 nameID;
};

struct F_FrameActionLabel {
    struct F_ActionScript *actionArray;
    UINT16 frameNumber;
    UINT16 nActions;
    UINT16 labelID;
    undefined field4_0xa;
    undefined field5_0xb;
};

struct F_ButtonAction {
    UINT8 *actions;
    UINT32 nActionBytes;
    UINT32 gpButton;
    UINT16 flags;
    undefined field4_0xe;
    undefined field5_0xf;
};

struct F_Layer {
    struct F_FrameCell *cellArray;
    UINT16 depth;
    UINT16 nCells;
};

struct F_Sprite {
    struct F_Layer *layerArray;
    struct F_FrameActionLabel *actionLabelArray;
    UINT16 nFrames;
    UINT16 nLayers;
    UINT16 nActionLabels;
    INT16 xMin;
    INT16 yMin;
    INT16 xMax;
    INT16 yMax;
    undefined field9_0x16;
    undefined field10_0x17;
};
// 
// typedef struct F_ButtonInstance F_ButtonInstance, *PF_ButtonInstance;
// 
// typedef struct F_ButtonInstance__vtable F_ButtonInstance__vtable, *PF_ButtonInstance__vtable;
// 
// typedef struct F_LayerInstance F_LayerInstance, *PF_LayerInstance;
// 
struct F_LayerInstance {
    struct F_ObjectInstance *instance;
    struct F_FrameCell *curFrameCell;
};

struct F_ButtonInstance {
    struct F_ObjectInstance *parent; /* Inherited from F_ObjectInstance */
    struct F_ButtonInstance__vtable *__vtable; /* Inherited from F_ObjectInstance */
    struct F_Sprite *sprite;
    struct F_LayerInstance *layerInstanceArray;
};

struct F_ButtonInstance__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type F_ButtonInstance;
    struct __vtbl_ptr_type IsSpriteInstance;
};
// 
// typedef struct F_Cxform F_Cxform, *PF_Cxform;
// 
typedef struct F_Cxform {
    INT16 mulr;
    INT16 mulg;
    INT16 mulb;
    INT16 mula;
} F_Cxform;
// 
// typedef struct F_Dictionary F_Dictionary, *PF_Dictionary;
// 
// typedef struct NameValue NameValue, *PNameValue;
// 
struct F_Dictionary {
    struct NameValue **hashTable;
};

struct NameValue {
    char *name;
    char *value;
    struct NameValue *next;
};

// typedef struct F_EditText F_EditText, *PF_EditText;
// 
typedef struct F_EditText {
    UINT16 variableID;
    UINT16 initTextID;
    UINT16 fontID;
    UINT16 fontHeight;
    UINT32 color;
    UINT16 maxLength;
    UINT16 leftMargin;
    UINT16 rightMargin;
    UINT16 indent;
    UINT16 leading;
    INT16 xMin;
    INT16 yMin;
    UINT16 width;
    UINT16 height;
    UINT8 align;
    UINT8 flags;
} F_EditText;
// 
// typedef struct F_EditTextInstance F_EditTextInstance, *PF_EditTextInstance;
// 
// typedef struct F_EditTextInstance__vtable F_EditTextInstance__vtable, *PF_EditTextInstance__vtable;
// 
// typedef struct F_MovieInstance F_MovieInstance, *PF_MovieInstance;
// 
// typedef struct TextItem TextItem, *PTextItem;
// 
// typedef union F_EditTextInstance__value F_EditTextInstance__value, *PF_EditTextInstance__value;
// 
// typedef struct F_Stack F_Stack, *PF_Stack;
// 
// typedef struct F_Movie F_Movie, *PF_Movie;
// 
// typedef struct F_SpriteInstance F_SpriteInstance, *PF_SpriteInstance;
// 
// typedef struct F_VarCmdHandler F_VarCmdHandler, *PF_VarCmdHandler;
// 
// typedef struct renViewportContext renViewportContext, *PrenViewportContext;
// 
// typedef union TextItem__u TextItem__u, *PTextItem__u;
// 
// typedef struct F_Stack__unnamed_-1 F_Stack__unnamed_-1, *PF_Stack__unnamed_-1;
// 
// typedef struct F_Object F_Object, *PF_Object;
// 
// typedef struct F_Shape F_Shape, *PF_Shape;
// 
// typedef struct F_Font F_Font, *PF_Font;
// 
// typedef struct F_Text F_Text, *PF_Text;
// 
// typedef struct F_Matrix F_Matrix, *PF_Matrix;
// 
// typedef struct F_SpriteInstance__vtable F_SpriteInstance__vtable, *PF_SpriteInstance__vtable;
// 
// typedef struct F_VarCmdHandler__vtable F_VarCmdHandler__vtable, *PF_VarCmdHandler__vtable;
// 
// typedef struct F_Material F_Material, *PF_Material;
// 
union TextItem__u {
    struct F_Shape *shape;
    struct F_SpriteInstance *si;
};

struct TextItem {
    union TextItem__u u;
    INT16 x;
    INT16 style;
};

struct F_Font {
    struct F_Shape *triStripGlyphArray;
    struct F_Shape *texturedGlyphArray;
    INT16 *advanceArray;
    UINT16 *codeArray;
    UINT32 nGlyphs;
    FLOAT textureThreshold;
    UINT16 nameID;
    UINT16 ascent;
    UINT16 descent;
    UINT16 leading;
    UINT16 flags;
    undefined field11_0x22;
    undefined field12_0x23;
};

struct F_Material {
    UINT32 color;
    UINT32 texture;
};

struct F_Matrix {
    INT32 a;
    INT32 b;
    INT32 c;
    INT32 d;
    INT16 tx;
    INT16 ty;
};

typedef struct F_SpriteInstance {
    struct F_ObjectInstance *parent; /* Inherited from F_ObjectInstance */
    struct F_SpriteInstance__vtable *__vtable; /* Inherited from F_ObjectInstance */
    char *name;
    BOOL playing;
    UINT32 curFrame;
    UINT32 nextFrame;
    UINT16 request;
    UINT16 overUnderCode;
    struct F_Sprite *sprite;
    struct F_MovieInstance *movieInstance;
    struct F_Dictionary dictionary;
    struct F_LayerInstance *layerInstanceArray;
    UINT dropShadowColor;
    FLOAT dropShadowOffset;
    FLOAT screenGOFOV;
    BOOL visible;
    FLOAT xPos;
    FLOAT yPos;
    FLOAT xScale;
    FLOAT yScale;
    FLOAT width;
    FLOAT height;
    FLOAT alpha;
    FLOAT rotation;
    undefined1 *spriteCB;
    void *cbData;
} F_SpriteInstance;

struct F_Object {
    UINT16 type;
    UINT16 index;
};

union F_EditTextInstance__value {
    char *s;
    FLOAT f;
    int i;
    BOOL b;
};

typedef struct F_EditTextInstance {
    struct F_ObjectInstance *parent; /* Inherited from F_ObjectInstance */
    struct F_EditTextInstance__vtable *__vtable; /* Inherited from F_ObjectInstance */
    struct F_MovieInstance *movieInstance;
    struct TextItem *itemArray;
    union F_EditTextInstance__value value;
    UINT16 nMacros;
    UINT16 nShapes;
    UINT16 nSprites;
    UINT16 rendered:1;
    UINT16 isString:1;
    undefined field10_0x1b;
} F_EditTextInstance;

struct F_EditTextInstance__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type F_EditTextInstance;
    struct __vtbl_ptr_type IsSpriteInstance;
};

struct F_Movie {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct F_Object *objectArray;
    struct F_Shape *shapeArray;
    struct F_Font *fontArray;
    struct F_Text *textArray;
    struct F_EditText *editTextArray;
    struct F_Button *buttonArray;
    struct F_Sprite *spriteArray;
    struct F_Sprite *rootSprite;
    struct F_Matrix *matrixArray;
    struct F_Cxform *cxformArray;
    char *nameArray;
    UINT16 version;
    UINT16 frameRate;
    UINT16 width;
    UINT16 height;
    UINT32 nObjects;
    UINT32 nShapes;
    UINT32 nFonts;
    UINT32 nTexts;
    UINT32 nEditTexts;
    UINT32 nButtons;
    UINT32 nSprites;
    UINT16 nMatrices;
    UINT16 nCxforms;
    UINT16 nameArraySize;
    undefined field26_0x5a;
    undefined field27_0x5b;
};

struct F_VarCmdHandler__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type GetVariable;
    struct __vtbl_ptr_type SetVariable;
    struct __vtbl_ptr_type Command;
    struct __vtbl_ptr_type CommandResult;
    struct __vtbl_ptr_type PerFrame;
};

struct F_SpriteInstance__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type F_SpriteInstance;
    struct __vtbl_ptr_type IsSpriteInstance;
};

struct F_Text {
    UINT8 *data;
    struct F_Matrix matrix;
    UINT32 nBytes;
};

struct F_Stack__unnamed___ {
    UINT16 type;
    UINT16 data;
};

struct F_VarCmdHandler {
    char *prefix;
    int prefixLen;
    int lastCmdID;
    struct F_VarCmdHandler *next;
    struct F_VarCmdHandler__vtable *__vtable;
};

struct F_Shape {
    struct F_Material *matArray;
    UINT16 partNumber;
    UINT16 nMaterials;
};

struct F_Stack {
    struct F_Stack__unnamed___ stack[256];
    unsigned char stackPool[2048];
    int stackTop;
    int stackData;
};

struct F_MovieInstance {
    struct VUMat4 matrix;
    struct F_Cxform cxform;
    struct F_Stack stack;
    struct F_Movie *movie;
    struct F_SpriteInstance *spriteInstance;
    struct F_ActionInstance *firstActionInstance;
    struct F_ActionInstance *lastActionInstance;
    struct F_VarCmdHandler *vchList;
    struct renModel *model;
    struct renViewportContext *viewportContext;
    UINT32 startMS;
    BOOL pausing;
    BOOL looping;
    BOOL repeatFrame;
    BOOL simKeyEvent;
    INT32 lastFlashFrame;
    INT32 nGameFrames;
    INT32 firstGameFrame;
    UINT32 lastPrimaryDown;
    UINT32 lastSecondaryDown;
    UINT32 primaryPress;
    UINT32 primaryRelease;
    UINT32 secondaryPress;
    UINT32 secondaryRelease;
    struct F_Cxform curCxform[2];
    struct F_SpriteInstance *curSI;
    UINT32 renderQuality;
    undefined field27_0xcbc;
    undefined field28_0xcbd;
    undefined field29_0xcbe;
    undefined field30_0xcbf;
};
// 
struct renViewportContext {
    struct VUVec4 m_vViewportVectors[5];
    long unsigned int m_VC[2];
    unsigned int m_DMAStandAloneBuff[32];
    UINT32 *m_pDMAStandAlone[2];
    undefined field4_0xe8;
    undefined field5_0xe9;
    undefined field6_0xea;
    undefined field7_0xeb;
    undefined field8_0xec;
    undefined field9_0xed;
    undefined field10_0xee;
    undefined field11_0xef;
};
// 
// typedef struct F_TextInstance F_TextInstance, *PF_TextInstance;
// 
// typedef struct F_TextInstance__vtable F_TextInstance__vtable, *PF_TextInstance__vtable;
// 
struct F_TextInstance {
    struct F_ObjectInstance *parent; /* Inherited from F_ObjectInstance */
    struct F_TextInstance__vtable *__vtable; /* Inherited from F_ObjectInstance */
    struct F_MovieInstance *movieInstance;
};

struct F_TextInstance__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type F_TextInstance;
    struct __vtbl_ptr_type IsSpriteInstance;
};
// 
// typedef struct Face Face, *PFace;
// 
// struct Face {
//     short int fVertexIndex[3];
//     short unsigned int fNormalisedArea;
// };
// 
// typedef struct dwarf_fde fde;
// 
// typedef struct fde_accumulator fde_accumulator, *Pfde_accumulator;
// 
// typedef struct fde_vector fde_vector, *Pfde_vector;
// 
// typedef unsigned int size_t;
// 
// struct fde_vector {
//     fde **array;
//     size_t count;
// };
// 
// struct fde_accumulator {
//     struct fde_vector linear;
//     struct fde_vector erratic;
// };
// 
// typedef struct FieldResult FieldResult, *PFieldResult;
// 
// struct FieldResult {
//     struct wadContext *fWadContext;
//     struct goGameObject *fGameObject;
//     unsigned int fTargetID;
//     float fMaximum;
//     float fModulate;
//     float fAccumulate;
// };
// 
// typedef struct FieldTarget FieldTarget, *PFieldTarget;
// 
// struct FieldTarget {
//     UINT32 fTargetID;
//     char fType;
//     char fOperation;
//     INT16 fNextTarget;
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     FLOAT w;
//     FLOAT min_p;
//     FLOAT max_p;
//     FLOAT f_min;
//     FLOAT f_max;
// };
// 
// typedef struct FieldTestOutput FieldTestOutput, *PFieldTestOutput;
// 
// struct FieldTestOutput {
//     int fNumFields;
//     struct FieldResult fFields[64];
// };
// 
// typedef struct FightManager FightManager, *PFightManager;
// 
// struct FightManager {
//     UINT32 m_iFrameCnt;
//     struct stdList m_FightList;
// };
// 
// typedef struct __sFILE FILE;
// 
// typedef struct File File, *PFile;
// 
// struct File {
//     UINT32 m_uFilename;
//     char *m_pData;
// };
// 
// typedef struct FileAttributes FileAttributes, *PFileAttributes;
// 
// typedef struct LocAndSize LocAndSize, *PLocAndSize;
// 
// struct LocAndSize {
//     UInt32 offset;
//     UInt32 size;
// };
// 
// struct FileAttributes {
//     UInt32 type;
//     UInt32 num_chunks;
//     struct LocAndSize where[1];
// };
// 
// typedef struct FileAttributes *FileAttributesPtr;
// 
typedef enum Flags__1_12144 {
    kNurbsCurve=0,
    kMeshSurface=1,
    kNurbsSurface=2,
    kTypeMask=3
} Flags__1_12144;

typedef enum Flags__1_12248 {
    kVUDoubleBuffered=1
} Flags__1_12248;

typedef enum Flags__1_12425 {
    kIsAnimated=1,
    kResetInterpolator=2,
    kHasLOD=4
} Flags__1_12425;

typedef enum Flags__1_12831 {
    kHasColour=1,
    kHasTexture=2,
    kForcedTimeStep=4
} Flags__1_12831;

typedef enum Flags__1_17009 {
    IGNORE_MODE=1,
    WORLD_IDLE_MOVE_SET=2,
    kSHOWHEALTHMETER=4,
    kDBG_REGISTERED=8,
    kDBG_POSSESSED=16,
    PATROL_RECALC=32,
    DOING_INIT_MOVE=64,
    IGNORE_HITS=128,
    PAUSED_MODE=256
} Flags__1_17009;

typedef enum Flags__1_9755 {
    kWrite=8192,
    kPending=16384,
    kUseSCE=32768
} Flags__1_9755;

typedef enum Flags__1_9943 {
    kIsInCombat=1,
    kIsOnGround=2,
    kIsOnRope=4,
    kIsClimbing=8,
    kIsFlying=16,
    kIsSwimming=32,
    kIsJumping=64,
    kIsFalling=128,
    kPlayerStateMask=255,
    kIsDynamic=256,
    kACMoveDolly=512,
    kACRailRelative=1024,
    kJumpCompensation=2048,
    kTriggerAnimation=4096,
    kActionZoom=8192,
    kDoubleJumpComp=16384,
    kMicIsUnderwater=32768,
    kMultipleTargets=65536,
    kCamIsUnderwater=131072,
    kUseStaticTarget=262144,
    kIgnoreMicMaxDistance=524288,
    kOverrideMicBoomRatio=1048576,
    kFieldBlended=2097152,
    kTrackToFrameTargets=4194304,
    kDollyObscuredBoss=8388608,
    kDollyObscuredPlayer=16777216
} Flags__1_9943;

typedef enum Flash_MemCard_Screen {
    Flash_MemCard_Done=0,
    Flash_MemCard_FoundCard=1,
    Flash_MemCard_NoCardsInserted=2,
    Flash_MemCard_Unformatted=3,
    Flash_MemCard_InsufficientSpace=4,
    Flash_MemCard_ErrorReading=5,
    Flash_MemCard_Formatting=6,
    Flash_MemCard_FormatComplete=7,
    Flash_MemCard_FormatFailure=8,
    Flash_MemCard_CheckingForCard=9,
    Flash_MemCard_LoadFileQuery=10,
    Flash_MemCard_LoadingFile=11,
    Flash_MemCard_LoadFailure=12,
    Flash_MemCard_LoadSuccess=13,
    Flash_MemCard_NoDataFile=14,
    Flash_MemCard_OverwriteCheck=15,
    Flash_MemCard_CreateFiles=16,
    Flash_MemCard_SavingFile=17,
    Flash_MemCard_SaveSuccess=18,
    Flash_MemCard_SaveFailure=19,
    Flash_MemCard_AutoSaveIndicator=20,
    Flash_MemCard_SelectCard=21,
    Flash_MemCard_SelectSaveFile=22,
    Flash_MemCard_SelectLoadFile=23,
    Flash_MemCard_InsuffSpaceAtStart=24,
    Flash_MemCard_EmptyScreen=25,
    Flash_MemCard_NoSavedGames=26,
    Flash_MemCard_InsuffSpaceAtStartTwo=27,
    Flash_MemCard_CardRemovedFromSlot=28
} Flash_MemCard_Screen;
// 
// typedef struct FlashInterface FlashInterface, *PFlashInterface;
// 
// typedef struct FlashInterface__vtable FlashInterface__vtable, *PFlashInterface__vtable;
// 
typedef enum GOD_METER_STATE {
    GOD_METER_OFF=0,
    GOD_METER_ON=1
} GOD_METER_STATE;

typedef enum GOD_EFFECT_STATE {
    GOD_EFFECT_NORMAL=0,
    GOD_EFFECT_MIN=1,
    GOD_EFFECT_WARNING=2
} GOD_EFFECT_STATE;

typedef enum GOD_STATE_STATE {
    GOD_STATE_OFF=0,
    GOD_STATE_ON=1
} GOD_STATE_STATE;

typedef enum GOD_COMBO_STATE {
    GOD_COMBO_CHANGE=2
} GOD_COMBO_STATE;
// 
// typedef struct fvEntry fvEntry, *PfvEntry;
// 
// typedef struct FlashInterface__unnamed_-1 FlashInterface__unnamed_-1, *PFlashInterface__unnamed_-1;
// 
// typedef struct renFlashClient renFlashClient, *PrenFlashClient;
// 
// typedef struct fvEntry__setFunc fvEntry__setFunc, *PfvEntry__setFunc;
// 
// typedef union fvEntry__setFunc____pfn_or_delta2 fvEntry__setFunc____pfn_or_delta2, *PfvEntry__setFunc____pfn_or_delta2;
// 
struct FlashInterface__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type GetVariable;
    struct __vtbl_ptr_type SetVariable;
    struct __vtbl_ptr_type Command;
    struct __vtbl_ptr_type CommandResult;
    struct __vtbl_ptr_type PerFrame;
    struct __vtbl_ptr_type FlashInterface;
};

struct renFlashClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    undefined field83_0x70;
    undefined field84_0x71;
    undefined field85_0x72;
    undefined field86_0x73;
    undefined field87_0x74;
    undefined field88_0x75;
    undefined field89_0x76;
    undefined field90_0x77;
    undefined field91_0x78;
    undefined field92_0x79;
    undefined field93_0x7a;
    undefined field94_0x7b;
    undefined field95_0x7c;
    undefined field96_0x7d;
    undefined field97_0x7e;
    undefined field98_0x7f;
    undefined field99_0x80;
    undefined field100_0x81;
    undefined field101_0x82;
    undefined field102_0x83;
    undefined field103_0x84;
    undefined field104_0x85;
    undefined field105_0x86;
    undefined field106_0x87;
    undefined field107_0x88;
    undefined field108_0x89;
    undefined field109_0x8a;
    undefined field110_0x8b;
    undefined field111_0x8c;
    undefined field112_0x8d;
    undefined field113_0x8e;
    undefined field114_0x8f;
    undefined field115_0x90;
    undefined field116_0x91;
    undefined field117_0x92;
    undefined field118_0x93;
    undefined field119_0x94;
    undefined field120_0x95;
    undefined field121_0x96;
    undefined field122_0x97;
    undefined field123_0x98;
    undefined field124_0x99;
    undefined field125_0x9a;
    undefined field126_0x9b;
    undefined field127_0x9c;
    undefined field128_0x9d;
    undefined field129_0x9e;
    undefined field130_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field132_0xa4;
    undefined field133_0xa5;
    undefined field134_0xa6;
    undefined field135_0xa7;
    undefined field136_0xa8;
    undefined field137_0xa9;
    undefined field138_0xaa;
    undefined field139_0xab;
    undefined field140_0xac;
    undefined field141_0xad;
    undefined field142_0xae;
    undefined field143_0xaf;
    struct VUVec4 _vTint; /* Inherited from renGROB */
    struct renGROBJFlags _GROBJFlags; /* Inherited from renGROB */
    renGROBMatList *_pMaterialBuffer; /* Inherited from renGROB */
    UINT32 _uLayerID; /* Inherited from renGROB */
    UINT32 _uViewID; /* Inherited from renGROB */
    undefined field149_0xdc;
    undefined field150_0xdd;
    undefined field151_0xde;
    undefined field152_0xdf;
    struct F_MovieInstance *movieInstance;
    struct F_SpriteInstance *dynSpriteInstance[4];
    undefined field155_0xf4;
    undefined field156_0xf5;
    undefined field157_0xf6;
    undefined field158_0xf7;
    undefined field159_0xf8;
    undefined field160_0xf9;
    undefined field161_0xfa;
    undefined field162_0xfb;
    undefined field163_0xfc;
    undefined field164_0xfd;
    undefined field165_0xfe;
    undefined field166_0xff;
};

union fvEntry__setFunc____pfn_or_delta2 {
    undefined1 *__pfn;
    short int __delta2;
};

struct FlashInterface__unnamed___ {
    UINT16 moveID;
    UINT16 open;
};

struct fvEntry__setFunc {
    short int __delta;
    short int __index;
    union fvEntry__setFunc____pfn_or_delta2 __pfn_or_delta2;
};

struct fvEntry {
    char *name;
    int type;
    void *value;
    BOOL readOnly;
    struct fvEntry__setFunc setFunc;
};

typedef struct FlashInterface {
    char *prefix; /* Inherited from F_VarCmdHandler */
    int prefixLen; /* Inherited from F_VarCmdHandler */
    int lastCmdID; /* Inherited from F_VarCmdHandler */
    struct F_VarCmdHandler *next; /* Inherited from F_VarCmdHandler */
    struct FlashInterface__vtable *__vtable; /* Inherited from F_VarCmdHandler */
    int HealthMeter_Value;
    int MagicMeter_Value;
    int HermesMeter_Value;
    int EnemyMeter_Value1;
    int EnemyMeter_Value2;
    int EnemyMeter_Value3;
    int EnemyState_Value1;
    int EnemyState_Value2;
    int EnemyState_Value3;
    int GodMeter_Value;
    int ComboBlastLevel_Value;
    int ComboBlastFraction_Value;
    int Timer_Value;
    int Timer_Seconds;
    char *Commend_Value;
    char *TestString_Value;
    int HitCounter_Value;
    int Combo_Amount;
    char *Combo_Message;
    int HealthMeter_Level;
    int MagicMeter_Level;
    int HermesMeter_Level;
    int MeterBarGrow;
    int HealthShard_Count;
    int MagicShard_Count;
    int CyclopsEye_Count;
    int Earth_Status;
    int Electric_Status;
    int Lightning_Status;
    int Medusa_Status;
    int Wind_Status;
    int Bone_Status;
    int Hammer_Status;
    int Olympus_Status;
    int Hermes_Status;
    int IcarusWings_Status;
    int GoldenFleece_Status;
    int GodMode_Status;
    char *ZoneReport_Title;
    char *MessageTemplate_Line1;
    char *MessageTemplate_Line2;
    char *MessageTemplate_Line3;
    char *MessageTemplate_Line4;
    char *MessageTemplate_Line5;
    int MessageTemplate_Style;
    int MTemplate_Opacity;
    char *MenuTemplate_Line1;
    char *MenuTemplate_Line2;
    char *MenuTemplate_Line3;
    char *MenuTemplate_Menu1;
    char *MenuTemplate_Menu2;
    char *MenuTemplate_Menu3;
    char *MenuTemplate_Menu4;
    char *MenuTemplate_Menu5;
    char *MemoryCard_Name;
    char *MemoryCard_Date;
    char *MemoryCard_PlayTime;
    char *MemoryCard_Difficulty;
    char *ListName1;
    char *ListName2;
    char *ListName3;
    char *ListName4;
    char *ListName5;
    char *ListName6;
    char *ListName7;
    char *ListName8;
    char *ListButtons1;
    char *ListButtons2;
    char *ListButtons3;
    char *ListButtons4;
    char *ListButtons5;
    char *ListButtons6;
    char *ListButtons7;
    char *ListButtons8;
    char *ListDesc1;
    char *ListDesc2;
    char *ListDesc3;
    char *ListHelp;
    char *ListMoreUp;
    char *ListMoreDown;
    char *PlayerGrade;
    int ChallengeUnlocked;
    int ChallengeReward;
    char *ChallengeTime;
    char *ChallengeTimeGrade;
    int ChallengeOrbs;
    char *ChallengeOrbsGrade;
    int ChallengeDamage;
    char *ChallengeDamageGrade;
    int ChallengeKill;
    char *ChallengeKillGrade;
    int ChallengeMeter;
    char *ChallengeMeterGrade;
    int ChallengeBonus;
    char *ChallengeBonusGrade;
    int ChallengeStage;
    char *ChallengeStageGrade;
    int ChallengeStage1;
    char *ChallengeStage1Grade;
    int ChallengeStage2;
    char *ChallengeStage2Grade;
    int ChallengeStage3;
    char *ChallengeStage3Grade;
    int ChallengeStage4;
    char *ChallengeStage4Grade;
    int ChallengeStage5;
    char *ChallengeStage5Grade;
    int ChallengeStage6;
    char *ChallengeStage6Grade;
    int ChallengeStage7;
    char *ChallengeStage7Grade;
    int ChallengeOverall;
    char *ChallengeOverallGrade;
    int ShellStartState;
    int BootUp_WideScreen;
    int BootUp_ProgressiveScan;
    int Costume1;
    int Costume2;
    int Costume3;
    int Costume4;
    int Costume5;
    int Costume6;
    int Costume7;
    int DifficultyBeaten;
    char *GameVersion;
    int SpecialLevel;
    int UrnsAvailable;
    int Cheat;
    int Demo;
    int Language;
    int EnableButtons;
    int Difficulty_Level;
    int Costume_Choice;
    int LoadSavedMagic;
    int PowerUp_FirstTime;
    int Zone_Choice;
    int PowerOrb_Count;
    int BladesOrb_Count;
    int EarthOrb_Count;
    int ElectricOrb_Count;
    int LightningOrb_Count;
    int MedusaOrb_Count;
    int WindOrb_Count;
    int BoneOrb_Count;
    int HammerOrb_Count;
    int OlympusOrb_Count;
    int Blades_Level;
    int Earth_Level;
    int Electric_Level;
    int Lightning_Level;
    int Medusa_Level;
    int Wind_Level;
    int Bone_Level;
    int Hammer_Level;
    int Olympus_Level;
    int UrnStatus1;
    int UrnStatus2;
    int UrnStatus3;
    int UrnStatus4;
    int UrnStatus5;
    int UrnStatus6;
    int SubWeapon_Choice;
    int ChallengeSelected;
    int FreeCombat_InfiniteHealth;
    int FreeCombat_InfiniteMagic;
    int FreeCombat_InfiniteGodMode;
    int FreeCombat_Difficulty;
    int FreeCombat_Arena;
    int FreeCombat_TotalCreatures;
    int FreeCombat_Creature1Count;
    int FreeCombat_Creature1Max;
    int FreeCombat_Creature1State;
    int FreeCombat_Creature1Type;
    int FreeCombat_Creature2Count;
    int FreeCombat_Creature2Max;
    int FreeCombat_Creature2State;
    int FreeCombat_Creature2Type;
    int FreeCombat_Creature3Count;
    int FreeCombat_Creature3Max;
    int FreeCombat_Creature3State;
    int FreeCombat_Creature3Type;
    int MemoryCard_CardSlot;
    int MemoryCard1_Save;
    int MemoryCard2_Save;
    int MemoryCard1_SaveSlot;
    int MemoryCard2_SaveSlot;
    int MessageTemplate_Event;
    int MenuTemplate_Event;
    int InterfaceStyle_Event;
    int MeterBar_Event;
    int HealthMeter_Event;
    int MagicMeter_Event;
    int HermesMeter_Event;
    int PowerOrb_Event;
    int HitCounter_Event;
    int PickUp_Event;
    int PickUpInfo_Event;
    int SubWeaponEnable_Event;
    int EnemyMeter_Event1;
    int EnemyMeter_Event2;
    int EnemyMeter_Event3;
    int EnemyState_Event1;
    int EnemyState_Event2;
    int EnemyState_Event3;
    int Control_Event;
    int GodMeter_Event;
    int GodMeterEffect_Event;
    int GodState_Event;
    int ComboBlast_Event;
    int Timer_Event;
    int Commend_Event;
    int TestString_Event;
    int PauseMenu_Event;
    int PSMMenu_Event;
    int DeadMenu_Event;
    int FailedMenu_Event;
    int ChallengeMenu_Event;
    int FreeCombatMenu_Event;
    int ZoneReport_Event;
    int SaveGame_Event;
    int DiscRemoved_Event;
    int PadRemoved_Event;
    int MemoryCard_Event;
    int Menu_Choice;
    int Done;
    int PauseDone;
    int PSMDone;
    int ShellPhase;
    int MusicVolume;
    int SoundVolume;
    int Vibration;
    int InvertPegasus;
    int WideScreen;
    int ProgressiveScan;
    int SoundMode;
    int ShowMsgTips;
    char *Sound1;
    char *Sound2;
    char *Sound3;
    char *Sound4;
    int DropShadowColor;
    FLOAT DropShadowOffset;
    int OverUnder;
    FLOAT FOV;
    int Stat_PlayerDeaths;
    int Stat_PlayerSaves;
    int Stat_PowerOrbs;
    int Stat_HealthOrbs;
    int Stat_MagicOrbs;
    int Stat_GodModeOrbs;
    int Stat_TotalChests;
    int Stat_BreakablesBroken;
    int Stat_MaxHitCounter;
    int Stat_EnemySpawns;
    int Stat_EnemyKills;
    int Stat_CSKills;
    int Stat_MiniGameWins;
    int Stat_DeathDecaps;
    int Stat_StoneShatters;
    int Stat_AirShatters;
    enum GOD_METER_STATE godMeterState;
    enum GOD_EFFECT_STATE godEffectState;
    enum GOD_STATE_STATE godStateState;
    enum GOD_COMBO_STATE godComboState;
    struct fvEntry fvTable[281];
    struct wadContext *sgImgWC;
    struct renTexture *sgImgTexture;
    struct F_Shape *sgImgShape[10];
    struct FlashInterface__unnamed___ ms_Header[16];
    int ms_FirstMove;
    int ms_LastMove;
    int ms_TopMove;
    int ms_SelMove;
    int ms_Start;
    int ms_Dir;
    int ms_NHeaders;
    int ms_CurMove;
    int ms_SecondMove;
    int ms_BottomMove;
    char *ms_LockedHdr;
    char *ms_LockedDesc;
    char *ms_NewSuffix;
    char *ms_HelpBack;
    char *ms_HelpClose;
    char *ms_HelpOpen;
    unsigned int ms_MoveSeen[4];
    BOOL ms_Refresh;
    FLOAT ms_Time;
    int bs_FirstMove;
    int bs_LastMove;
    int bs_TopMove;
    int bs_SelMove;
    int bs_Start;
    int bs_Dir;
    int bs_CurMove;
    int bs_SecondMove;
    int bs_BottomMove;
    int bs_PlaylistSize;
    UINT32 bs_DoneFrame;
    UINT32 bs_PlaylistMovie;
    char *bs_Code;
    char *bs_Level;
    char **bs_Playlist;
    BOOL bs_Refresh;
    BOOL bs_Selected;
    FLOAT bs_Time;
    int curMsgID;
    int curMenuID;
    int curPickUpInfo;
    int msgPage;
    int nMsgPages;
    FLOAT msgSeconds;
    FLOAT msgTimeSoFar;
    FLOAT commendTimeLeft;
    struct renTexture *msgTexture;
    struct F_Shape *genericPickupShape;
    int mSpecial;
    int meterBarGrowMsgID;
    struct renFlashClient *flashClient[3];
    struct Emitter *soundEmitter;
    struct F_SpriteInstance *promptButtonSpriteInstance;
    UINT32 promptButtonHash;
    int curPickUp;
    int interfaceStyle;
    BOOL firstTimeMsgHack;
    BOOL meterBarShowing;
    BOOL magicMeterGlowing;
    BOOL hermesMeterGlowing;
    int enemyMeterShowing[3];
    int enemyStateShowing[3];
    BOOL timerState;
    int hitCounterState;
    BOOL doVibration;
    BOOL hack_enemyMeterOff;
} FlashInterface;
// 
// typedef struct FlashPool FlashPool, *PFlashPool;
// 
// struct FlashPool {
//     UINT32 blockSize;
//     UINT32 blockCount;
//     struct Pool__1_336 *pool;
// };
// 
typedef enum FlashResponse {
    FR_INIT=-2,
    FR_WAITING=-1,
    FR_CANCEL=0,
    FR_NO=0,
    FR_CONTINUE=1,
    FR_YES=1
} FlashResponse;
// 
// typedef DFtype FLO_type;
// 
// typedef float SFtype;
// 
// typedef SFtype FLO_type;
// 
// typedef union FLO_union_type__48_38 FLO_union_type__48_38, *PFLO_union_type__48_38;
// 
// typedef long unsigned int UDItype;
// 
// typedef UDItype fractype;
// 
// typedef unsigned int USItype;
// 
// typedef USItype halffractype;
// 
// typedef struct FLO_union_type__bits__48_38 FLO_union_type__bits__48_38, *PFLO_union_type__bits__48_38;
// 
// struct FLO_union_type__bits__48_38 {
//     fractype fraction:52;
//     unsigned int exp:11;
//     unsigned int sign:1;
// };
// 
// union FLO_union_type__48_38 {
//     FLO_type value;
//     fractype value_raw;
//     halffractype words[2];
//     struct FLO_union_type__bits__48_38 bits;
// };
// 
// typedef union FLO_union_type__49_38 FLO_union_type__49_38, *PFLO_union_type__49_38;
// 
// typedef USItype fractype;
// 
// typedef struct FLO_union_type__bits__49_38 FLO_union_type__bits__49_38, *PFLO_union_type__bits__49_38;
// 
// struct FLO_union_type__bits__49_38 {
//     fractype fraction:23;
//     unsigned int exp:8;
//     unsigned int sign:1;
// };
// 
// union FLO_union_type__49_38 {
//     FLO_type value;
//     fractype value_raw;
//     struct FLO_union_type__bits__49_38 bits;
// };
// 
// typedef struct fmvSettings fmvSettings, *PfmvSettings;
// 
// struct fmvSettings {
//     char cFileName[128];
//     enum EFMVDisplayMode Mode;
//     enum EFMVDisplayWidescreen Widescreen;
//     enum EFMVDisplayWidescreen MissingWidescreen;
//     INT32 iUpperFieldFirst;
//     enum EShellMpegMultiplexType MPlexType;
//     enum EShellMpegVideoType VideoType;
//     enum EShellMpegAudioType AudioType;
//     INT32 iAudioChannel;
//     struct HeapZone *pHZ;
//     BOOL bStart;
//     INT32 iPauseChannels;
// };
// 
// typedef struct Formation Formation, *PFormation;
// 
// typedef struct Formation__vtable Formation__vtable, *PFormation__vtable;
// 
// struct Formation__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Formation;
// };
// 
// struct Formation {
//     struct goGameObject *m_pGo;
//     UINT32 m_iPosMask;
//     struct Formation__vtable *__vtable;
// };
// 
// typedef enum fp_class_type {
//     CLASS_SNAN=0,
//     CLASS_QNAN=1,
//     CLASS_ZERO=2,
//     CLASS_NUMBER=3,
//     CLASS_INFINITY=4
// } fp_class_type;
// 
// typedef struct fp_number_type__48_34 fp_number_type__48_34, *Pfp_number_type__48_34;
// 
// typedef union fp_number_type__fraction__48_34 fp_number_type__fraction__48_34, *Pfp_number_type__fraction__48_34;
// 
// union fp_number_type__fraction__48_34 {
//     fractype ll;
//     halffractype l[2];
// };
// 
// struct fp_number_type__48_34 {
//     enum fp_class_type class;
//     unsigned int sign;
//     int normal_exp;
//     undefined field3_0xc;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     union fp_number_type__fraction__48_34 fraction;
// };
// 
// typedef struct fp_number_type__49_34 fp_number_type__49_34, *Pfp_number_type__49_34;
// 
// typedef union fp_number_type__fraction__49_34 fp_number_type__fraction__49_34, *Pfp_number_type__fraction__49_34;
// 
// typedef short unsigned int UHItype;
// 
// typedef UHItype halffractype;
// 
// union fp_number_type__fraction__49_34 {
//     fractype ll;
//     halffractype l[2];
// };
// 
// struct fp_number_type__49_34 {
//     enum fp_class_type class;
//     unsigned int sign;
//     int normal_exp;
//     union fp_number_type__fraction__49_34 fraction;
// };
// 
// typedef _fpos_t fpos_t;
// 
// typedef struct frame_state frame_state, *Pframe_state;
// 
// struct frame_state {
//     void *cfa;
//     void *eh_ptr;
//     long int cfa_offset;
//     long int args_size;
//     long int reg_or_offset[80];
//     short unsigned int cfa_reg;
//     short unsigned int retaddr_column;
//     char saved[80];
//     undefined field8_0x2ec;
//     undefined field9_0x2ed;
//     undefined field10_0x2ee;
//     undefined field11_0x2ef;
// };
// 
// typedef struct frame_state_internal frame_state_internal, *Pframe_state_internal;
// 
// struct frame_state_internal {
//     struct frame_state s;
//     struct frame_state_internal *saved_state;
//     undefined field2_0x2f4;
//     undefined field3_0x2f5;
//     undefined field4_0x2f6;
//     undefined field5_0x2f7;
// };
// 
// typedef struct FreezeBeamCallbackData FreezeBeamCallbackData, *PFreezeBeamCallbackData;
// 
// struct FreezeBeamCallbackData {
//     struct VUVec4 m_vHeadPos;
//     struct VUVec4 m_vHeadAxis;
//     struct VUVec4 m_vConeOrigin;
//     FLOAT m_fLenSq;
//     FLOAT m_fCosAngle;
//     FLOAT m_fForceRadius;
//     INT16 m_iNumTargets;
//     undefined field7_0x3e;
//     undefined field8_0x3f;
// };
// 
// typedef enum FT_TYPE {
//     FT_Crank=0,
//     FT_MedusaHead=1,
//     FT_PowerOrb=2,
//     FT_Pushable=3,
//     FT_SkellyRope=4,
//     FT_SkellyWall=5,
//     FT_Swim=6,
//     FT_MinMiniGame=7,
//     FT_UseMedusaHead=8,
//     FT_UseLightBolt=9,
//     FT_BalanceBeam=10,
//     FT_MedusaFreeze=11,
//     FT_GodMeter=12,
//     FT_SkellyGrab=13,
//     FT_EnemyInAir=14,
//     FT_EnemyEvade=15,
//     FT_HintMsg=16,
//     FT_HealthOrb=17,
//     FT_EnoughOrbs=18,
//     FT_ShieldSkelly=19,
//     FT_MagicOrb=20,
//     FT_FreezingMedusa=21,
//     FT_GodOrb=22
// } FT_TYPE;
// 
// typedef undefined1 *func_ptr;
// 
// typedef struct fxBlendedFog fxBlendedFog, *PfxBlendedFog;
// 
// typedef struct fxBlendedFog__vtable fxBlendedFog__vtable, *PfxBlendedFog__vtable;
// 
// typedef struct fxFogBlender fxFogBlender, *PfxFogBlender;
// 
// struct fxFogBlender {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColor__1_5567 m_FogT; /* Inherited from tFog */
//     struct tColor__1_5567 m_FogM; /* Inherited from tFog */
//     struct tColor__1_5567 m_FogB; /* Inherited from tFog */
//     FLOAT m_TopPoint; /* Inherited from tFog */
//     FLOAT m_MiddlePoint; /* Inherited from tFog */
//     FLOAT m_BottomPoint; /* Inherited from tFog */
//     INT32 m_CentreZ; /* Inherited from tFog */
//     FLOAT m_DeltaX; /* Inherited from tFog */
//     FLOAT m_DeltaY; /* Inherited from tFog */
//     FLOAT m_DeltaZ; /* Inherited from tFog */
//     FLOAT m_TileScale; /* Inherited from tFog */
//     char m_Material[24]; /* Inherited from tFog */
//     UINT32 m_BlendMode; /* Inherited from tFog */
//     INT32 m_BackPlaneAlpha; /* Inherited from tFog */
//     INT32 m_Layered; /* Inherited from tFog */
//     undefined field19_0x84;
//     undefined field20_0x85;
//     undefined field21_0x86;
//     undefined field22_0x87;
//     undefined field23_0x88;
//     undefined field24_0x89;
//     undefined field25_0x8a;
//     undefined field26_0x8b;
//     undefined field27_0x8c;
//     undefined field28_0x8d;
//     undefined field29_0x8e;
//     undefined field30_0x8f;
// };
// 
// struct fxBlendedFog__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxBlendedFog;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct fxBlendedFog {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxBlendedFog__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct fxFogBlender fAccumulator; /* Inherited from renFXScriptBlended<fxFogBlender> */
//     struct VUMat4 m_mPreviousInverseCamera;
//     UINT32 m_uLastZAddr;
//     UINT32 m_uLastBackAddr;
//     INT32 m_iLastBackPlaneAlpha;
//     FLOAT m_fLastFrontAlpha;
//     UINT32 m_uLastWorkspace;
//     struct dmaContext *m_pRG2BAContext;
//     struct dmaContext *m_pAlphaContext;
//     struct dmaContext *m_pFSPolyContext;
//     UINT32 *m_pRemapPalettes[2];
//     INT32 m_iRemapBuffer;
//     struct stdDynaString m_Material;
//     struct renTexture *m_pTexture;
//     struct wadContext *m_pWadContext;
//     undefined field41_0x15c;
//     undefined field42_0x15d;
//     undefined field43_0x15e;
//     undefined field44_0x15f;
//     struct VUVec4 m_vDelta;
//     FLOAT m_fTotalRotZ;
//     float m_fS[4];
//     float m_fT[4];
//     undefined field49_0x194;
//     undefined field50_0x195;
//     undefined field51_0x196;
//     undefined field52_0x197;
//     undefined field53_0x198;
//     undefined field54_0x199;
//     undefined field55_0x19a;
//     undefined field56_0x19b;
//     undefined field57_0x19c;
//     undefined field58_0x19d;
//     undefined field59_0x19e;
//     undefined field60_0x19f;
// };
// 
// typedef struct fxBlur fxBlur, *PfxBlur;
// 
// typedef struct fxBlur__vtable fxBlur__vtable, *PfxBlur__vtable;
// 
// struct fxBlur__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxBlur;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct fxBlur {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxBlur__vtable *__vtable; /* Inherited from renFXScript */
//     struct dmaContext *m_pContext;
// };
// 
// typedef struct fxBoneData fxBoneData, *PfxBoneData;
// 
struct fxBoneData {
    float m_fProb[32];
    FLOAT m_fLongestBoneSq;
    unsigned char m_iIdx[32];
};
// 
// typedef struct fxCameraFilter fxCameraFilter, *PfxCameraFilter;
// 
// typedef struct fxCameraFilter__vtable fxCameraFilter__vtable, *PfxCameraFilter__vtable;
// 
// typedef struct fxCameraFilterBlender fxCameraFilterBlender, *PfxCameraFilterBlender;
// 
// struct fxCameraFilter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxCameraFilter;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct fxCameraFilterBlender {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColor__1_5567 m_Top; /* Inherited from tCameraFilter */
//     struct tColor__1_5567 m_Middle; /* Inherited from tCameraFilter */
//     struct tColor__1_5567 m_Bottom; /* Inherited from tCameraFilter */
//     FLOAT m_TopPoint; /* Inherited from tCameraFilter */
//     FLOAT m_MiddlePoint; /* Inherited from tCameraFilter */
//     FLOAT m_BottomPoint; /* Inherited from tCameraFilter */
//     UINT32 m_BlendMode; /* Inherited from tCameraFilter */
// };
// 
// struct fxCameraFilter {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxCameraFilter__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct fxCameraFilterBlender fAccumulator; /* Inherited from renFXScriptBlended<fxCameraFilterBlender> */
//     struct dmaContext *m_pContext;
//     undefined field28_0x94;
//     undefined field29_0x95;
//     undefined field30_0x96;
//     undefined field31_0x97;
//     undefined field32_0x98;
//     undefined field33_0x99;
//     undefined field34_0x9a;
//     undefined field35_0x9b;
//     undefined field36_0x9c;
//     undefined field37_0x9d;
//     undefined field38_0x9e;
//     undefined field39_0x9f;
// };
// 
// typedef struct fxClearView fxClearView, *PfxClearView;
// 
// typedef struct fxClearView__vtable fxClearView__vtable, *PfxClearView__vtable;
// 
// struct fxClearView__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxClearView;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct fxClearView {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxClearView__vtable *__vtable; /* Inherited from renFXScript */
//     struct dmaContext *m_pContext;
//     undefined field7_0x1c;
//     undefined field8_0x1d;
//     undefined field9_0x1e;
//     undefined field10_0x1f;
//     UINT64 m_uGSAlphaReg;
//     UINT32 m_uZ;
//     UINT32 m_uZTst;
//     UINT32 m_uABGRMask;
//     BOOL m_bDontClearZBuffer;
// };
// 
// typedef struct fxClient fxClient, *PfxClient;
// 
// typedef struct fxClient__vtable fxClient__vtable, *PfxClient__vtable;
// 
// struct fxClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxClient__vtable *__vtable;
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
// };
// 
// struct fxClient__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxClient;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxClientContainer fxClientContainer, *PfxClientContainer;
// 
// typedef struct fxClientListBase fxClientListBase, *PfxClientListBase;
// 
// typedef struct fxClientListBase__vtable fxClientListBase__vtable, *PfxClientListBase__vtable;
// 
// struct fxClientListBase {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxClientListBase__vtable *__vtable;
// };
// 
// struct fxClientContainer {
//     struct fxClientListBase *fClientLists[14];
//     struct Pool__1_336 *fClientListPool;
// };
// 
// struct fxClientListBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// typedef struct fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient> fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>, *PfxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>;
// 
// typedef struct fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>__vtable fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>__vtable, *PfxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>__vtable;
// 
// struct fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient> {
//     struct fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// struct fxClientFactory<0,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxParticleEmitterClient>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// typedef struct fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter> fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>, *PfxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>;
// 
// typedef struct fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>__vtable fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>__vtable, *PfxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>__vtable;
// 
// struct fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter> {
//     struct fxClientFactory<1,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxDirectionalEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter> fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>, *PfxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>;
// 
// typedef struct fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>__vtable fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>__vtable, *PfxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>__vtable;
// 
// struct fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter> {
//     struct fxClientFactory<10,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSkeletonEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail> fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>, *PfxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>;
// 
// typedef struct fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>__vtable fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>__vtable, *PfxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>__vtable;
// 
// struct fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail> {
//     struct fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// struct fxClientFactory<11,fxTrailLoadParm,fxTrailClientParm,fxTrail>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// typedef struct fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField> fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>, *PfxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>;
// 
// typedef struct fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>__vtable fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>__vtable, *PfxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>__vtable;
// 
// struct fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField> {
//     struct fxClientFactory<12,fxFieldLoadParm,fxFieldClientParm,fxField>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry> fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>, *PfxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>;
// 
// typedef struct fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>__vtable fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>__vtable, *PfxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>__vtable;
// 
// struct fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry> {
//     struct fxClientFactory<13,fxGeometryLoadParm,fxGeometryClientParm,fxGeometry>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter> fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>, *PfxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>;
// 
// typedef struct fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>__vtable fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>__vtable, *PfxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>__vtable;
// 
// struct fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter> {
//     struct fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// struct fxClientFactory<2,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxOmniEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// typedef struct fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter> fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>, *PfxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>;
// 
// typedef struct fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>__vtable fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>__vtable, *PfxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>__vtable;
// 
// struct fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter> {
//     struct fxClientFactory<3,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxPolySurfaceEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter> fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>, *PfxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>;
// 
// typedef struct fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>__vtable fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>__vtable, *PfxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>__vtable;
// 
// struct fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter> {
//     struct fxClientFactory<4,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCurveEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter> fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>, *PfxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>;
// 
// typedef struct fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>__vtable fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>__vtable, *PfxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>__vtable;
// 
// struct fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter> {
//     struct fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// struct fxClientFactory<5,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCubeEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// typedef struct fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter> fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>, *PfxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>;
// 
// typedef struct fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>__vtable fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>__vtable, *PfxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>__vtable;
// 
// struct fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter> {
//     struct fxClientFactory<6,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxSphereEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter> fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>, *PfxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>;
// 
// typedef struct fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>__vtable fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>__vtable, *PfxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>__vtable;
// 
// struct fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter> {
//     struct fxClientFactory<7,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxCylinderEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter> fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>, *PfxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>;
// 
// typedef struct fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>__vtable fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>__vtable, *PfxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>__vtable;
// 
// struct fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter> {
//     struct fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// struct fxClientFactory<8,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxConeEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// typedef struct fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter> fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>, *PfxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>;
// 
// typedef struct fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>__vtable fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>__vtable, *PfxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>__vtable;
// 
// struct fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter> {
//     struct fxClientFactory<9,fxParticleEmitterLoadParm,fxParticleEmitterClientParm,fxTorusEmitter>__vtable *__vtable; /* Inherited from fxClientFactoryBase */
// };
// 
// typedef struct fxClientFactoryBase fxClientFactoryBase, *PfxClientFactoryBase;
// 
// typedef struct fxClientFactoryBase__vtable fxClientFactoryBase__vtable, *PfxClientFactoryBase__vtable;
// 
// struct fxClientFactoryBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type BuildParm;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type MakeClientList;
// };
// 
// struct fxClientFactoryBase {
//     struct fxClientFactoryBase__vtable *__vtable;
// };
// 
// typedef struct fxClientList<fxClient> fxClientList<fxClient>, *PfxClientList<fxClient>;
// 
// typedef struct fxClientList<fxClient>__vtable fxClientList<fxClient>__vtable, *PfxClientList<fxClient>__vtable;
// 
// struct fxClientList<fxClient> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxClientList<fxClient>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// struct fxClientList<fxClient>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// typedef struct fxClientList<fxParticleEmitterClient> fxClientList<fxParticleEmitterClient>, *PfxClientList<fxParticleEmitterClient>;
// 
// typedef struct fxClientList<fxParticleEmitterClient>__vtable fxClientList<fxParticleEmitterClient>__vtable, *PfxClientList<fxParticleEmitterClient>__vtable;
// 
// struct fxClientList<fxParticleEmitterClient>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxClientList<fxParticleEmitterClient> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxClientList<fxParticleEmitterClient>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxClientList<fxTrail> fxClientList<fxTrail>, *PfxClientList<fxTrail>;
// 
// typedef struct fxClientList<fxTrail>__vtable fxClientList<fxTrail>__vtable, *PfxClientList<fxTrail>__vtable;
// 
// struct fxClientList<fxTrail>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxClientList<fxTrail> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxClientList<fxTrail>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxClientParm fxClientParm, *PfxClientParm;
// 
// struct fxClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     INT32 fGroupID;
// };
// 
// typedef struct fxConeEmitter fxConeEmitter, *PfxConeEmitter;
// 
// typedef struct fxConeEmitter__vtable fxConeEmitter__vtable, *PfxConeEmitter__vtable;
// 
// typedef struct fxEmitterAttributes fxEmitterAttributes, *PfxEmitterAttributes;
// 
// typedef struct fxTransformInterpolator fxTransformInterpolator, *PfxTransformInterpolator;
// 
// typedef struct fxGeometry fxGeometry, *PfxGeometry;
// 
// typedef enum OrientationFormat {
//     kNone=0,
//     kNormal=1,
//     kXYVectors=2,
//     kMatrix=3,
//     kQuaternion=4,
//     kEuler=5,
//     kNumOrientationFormats=6
// } OrientationFormat;
// 
// typedef struct fxTransformInterpolatorParm fxTransformInterpolatorParm, *PfxTransformInterpolatorParm;
// 
// typedef struct fxGeometry__vtable fxGeometry__vtable, *PfxGeometry__vtable;
// 
// typedef struct fxGeometryClientParm fxGeometryClientParm, *PfxGeometryClientParm;
// 
// typedef union fxGeometry__fGeometry fxGeometry__fGeometry, *PfxGeometry__fGeometry;
// 
// typedef union fxGeometryClientParm__fGeometry fxGeometryClientParm__fGeometry, *PfxGeometryClientParm__fGeometry;
// 
// typedef struct meshSurface meshSurface, *PmeshSurface;
// 
// typedef struct Vertex Vertex, *PVertex;
// 
// union fxGeometry__fGeometry {
//     void *fRaw;
//     struct nurbsCurve *fNurbsCurve;
//     struct meshSurface *fMeshSurface;
// };
// 
// struct fxGeometry__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxGeometry;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxEmitterAttributes {
//     float fDirection[3];
//     float fSpread;
//     float fSpeed;
//     float fSpeedRandom;
//     float fMinDistance;
//     float fMaxDistance;
//     float fRate;
//     float fTangentSpeed;
//     float fNormalSpeed;
//     float fVolumeOffset[3];
//     float fVolumeSweep;
//     float fSectionRadius;
//     float fSpeedAwayCenter;
//     float fSpeedAwayAxis;
//     float fSpeedAlong;
//     float fSpeedAround;
//     float fRandomDirection;
//     float fDirectionalSpeed;
// };
// 
// struct Vertex {
//     float fPosition[3];
//     float fNormal[3];
// };
// 
// struct meshSurface {
//     int fNumVertices;
//     int fNumFaces;
//     struct Vertex *fVertices;
//     struct Face *fFaces;
// };
// 
// struct fxGeometry {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxGeometry__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct fxGeometryClientParm *fParm;
//     UINT32 fFlags;
//     union fxGeometry__fGeometry fGeometry;
//     undefined field99_0x8c;
//     undefined field100_0x8d;
//     undefined field101_0x8e;
//     undefined field102_0x8f;
// };
// 
// struct fxConeEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxConeEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxTransformInterpolator {
//     struct VUMat4 fControls1;
//     struct VUMat4 fControls2;
//     bool fFirstFrame;
//     undefined field3_0x81;
//     undefined field4_0x82;
//     undefined field5_0x83;
//     float fTimesteps[3];
//     struct fxTransformInterpolatorParm *fParm;
//     undefined field8_0x94;
//     undefined field9_0x95;
//     undefined field10_0x96;
//     undefined field11_0x97;
//     undefined field12_0x98;
//     undefined field13_0x99;
//     undefined field14_0x9a;
//     undefined field15_0x9b;
//     undefined field16_0x9c;
//     undefined field17_0x9d;
//     undefined field18_0x9e;
//     undefined field19_0x9f;
// };
// 
// union fxGeometryClientParm__fGeometry {
//     void *fRaw;
//     struct nurbsCurve *fNurbsCurve;
//     struct meshSurface *fMeshSurface;
// };
// 
// struct fxGeometryClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     INT32 fGroupID; /* Inherited from fxClientParm */
//     struct stdDynaString fIdentifier;
//     UINT32 fFlags;
//     union fxGeometryClientParm__fGeometry fGeometry;
// };
// 
// struct fxTransformInterpolatorParm {
//     float fRotationWeight;
//     float fTranslationWeight;
// };
// 
// struct fxConeEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxConeEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// typedef struct fxCubeEmitter fxCubeEmitter, *PfxCubeEmitter;
// 
// typedef struct fxCubeEmitter__vtable fxCubeEmitter__vtable, *PfxCubeEmitter__vtable;
// 
// struct fxCubeEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxCubeEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxCubeEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxCubeEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// typedef struct fxCurveEmitter fxCurveEmitter, *PfxCurveEmitter;
// 
// typedef struct fxCurveEmitter__vtable fxCurveEmitter__vtable, *PfxCurveEmitter__vtable;
// 
// struct fxCurveEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxCurveEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
//     struct VUVec4 fEmitterDirection;
//     struct VUMat4 fGeometryMatrix;
// };
// 
// struct fxCurveEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxCurveEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxCylinderEmitter fxCylinderEmitter, *PfxCylinderEmitter;
// 
// typedef struct fxCylinderEmitter__vtable fxCylinderEmitter__vtable, *PfxCylinderEmitter__vtable;
// 
// struct fxCylinderEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxCylinderEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// struct fxCylinderEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxCylinderEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxDepthOfField fxDepthOfField, *PfxDepthOfField;
// 
// typedef struct fxDepthOfField__vtable fxDepthOfField__vtable, *PfxDepthOfField__vtable;
// 
// struct fxDepthOfField {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxDepthOfField__vtable *__vtable; /* Inherited from renFXScript */
//     struct dmaContext *_pContext;
// };
// 
// struct fxDepthOfField__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxDepthOfField;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct fxDirectionalEmitter fxDirectionalEmitter, *PfxDirectionalEmitter;
// 
// typedef struct fxDirectionalEmitter__vtable fxDirectionalEmitter__vtable, *PfxDirectionalEmitter__vtable;
// 
// struct fxDirectionalEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxDirectionalEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxDirectionalEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxDirectionalEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// typedef struct fxEmitterClientList<fxConeEmitter> fxEmitterClientList<fxConeEmitter>, *PfxEmitterClientList<fxConeEmitter>;
// 
// typedef struct fxEmitterClientList<fxConeEmitter>__vtable fxEmitterClientList<fxConeEmitter>__vtable, *PfxEmitterClientList<fxConeEmitter>__vtable;
// 
// struct fxEmitterClientList<fxConeEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxConeEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxConeEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxCubeEmitter> fxEmitterClientList<fxCubeEmitter>, *PfxEmitterClientList<fxCubeEmitter>;
// 
// typedef struct fxEmitterClientList<fxCubeEmitter>__vtable fxEmitterClientList<fxCubeEmitter>__vtable, *PfxEmitterClientList<fxCubeEmitter>__vtable;
// 
// struct fxEmitterClientList<fxCubeEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxCubeEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// struct fxEmitterClientList<fxCubeEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// typedef struct fxEmitterClientList<fxCurveEmitter> fxEmitterClientList<fxCurveEmitter>, *PfxEmitterClientList<fxCurveEmitter>;
// 
// typedef struct fxEmitterClientList<fxCurveEmitter>__vtable fxEmitterClientList<fxCurveEmitter>__vtable, *PfxEmitterClientList<fxCurveEmitter>__vtable;
// 
// struct fxEmitterClientList<fxCurveEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxCurveEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxCurveEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxCylinderEmitter> fxEmitterClientList<fxCylinderEmitter>, *PfxEmitterClientList<fxCylinderEmitter>;
// 
// typedef struct fxEmitterClientList<fxCylinderEmitter>__vtable fxEmitterClientList<fxCylinderEmitter>__vtable, *PfxEmitterClientList<fxCylinderEmitter>__vtable;
// 
// struct fxEmitterClientList<fxCylinderEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxCylinderEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxCylinderEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxDirectionalEmitter> fxEmitterClientList<fxDirectionalEmitter>, *PfxEmitterClientList<fxDirectionalEmitter>;
// 
// typedef struct fxEmitterClientList<fxDirectionalEmitter>__vtable fxEmitterClientList<fxDirectionalEmitter>__vtable, *PfxEmitterClientList<fxDirectionalEmitter>__vtable;
// 
// struct fxEmitterClientList<fxDirectionalEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxDirectionalEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxDirectionalEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxOmniEmitter> fxEmitterClientList<fxOmniEmitter>, *PfxEmitterClientList<fxOmniEmitter>;
// 
// typedef struct fxEmitterClientList<fxOmniEmitter>__vtable fxEmitterClientList<fxOmniEmitter>__vtable, *PfxEmitterClientList<fxOmniEmitter>__vtable;
// 
// struct fxEmitterClientList<fxOmniEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxOmniEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxOmniEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxPolySurfaceEmitter> fxEmitterClientList<fxPolySurfaceEmitter>, *PfxEmitterClientList<fxPolySurfaceEmitter>;
// 
// typedef struct fxEmitterClientList<fxPolySurfaceEmitter>__vtable fxEmitterClientList<fxPolySurfaceEmitter>__vtable, *PfxEmitterClientList<fxPolySurfaceEmitter>__vtable;
// 
// struct fxEmitterClientList<fxPolySurfaceEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxPolySurfaceEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxPolySurfaceEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxSkeletonEmitter> fxEmitterClientList<fxSkeletonEmitter>, *PfxEmitterClientList<fxSkeletonEmitter>;
// 
// typedef struct fxEmitterClientList<fxSkeletonEmitter>__vtable fxEmitterClientList<fxSkeletonEmitter>__vtable, *PfxEmitterClientList<fxSkeletonEmitter>__vtable;
// 
// struct fxEmitterClientList<fxSkeletonEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxSkeletonEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxSkeletonEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxSphereEmitter> fxEmitterClientList<fxSphereEmitter>, *PfxEmitterClientList<fxSphereEmitter>;
// 
// typedef struct fxEmitterClientList<fxSphereEmitter>__vtable fxEmitterClientList<fxSphereEmitter>__vtable, *PfxEmitterClientList<fxSphereEmitter>__vtable;
// 
// struct fxEmitterClientList<fxSphereEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxSphereEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxSphereEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxEmitterClientList<fxTorusEmitter> fxEmitterClientList<fxTorusEmitter>, *PfxEmitterClientList<fxTorusEmitter>;
// 
// typedef struct fxEmitterClientList<fxTorusEmitter>__vtable fxEmitterClientList<fxTorusEmitter>__vtable, *PfxEmitterClientList<fxTorusEmitter>__vtable;
// 
// struct fxEmitterClientList<fxTorusEmitter>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessClients;
// };
// 
// struct fxEmitterClientList<fxTorusEmitter> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     struct fxEmitterClientList<fxTorusEmitter>__vtable *__vtable; /* Inherited from fxClientListBase */
// };
// 
// typedef struct fxFade fxFade, *PfxFade;
// 
// typedef struct fxFade__vtable fxFade__vtable, *PfxFade__vtable;
// 
// struct fxFade {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxFade__vtable *__vtable; /* Inherited from renFXScript */
//     struct dmaContext *m_pContext;
// };
// 
// struct fxFade__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxFade;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct fxField fxField, *PfxField;
// 
// typedef struct fxField__vtable fxField__vtable, *PfxField__vtable;
// 
// typedef struct fxFieldAttributes fxFieldAttributes, *PfxFieldAttributes;
// 
// struct fxFieldAttributes {
//     float fMagnitude;
//     float fAttenuation;
//     float fDirectionAxis[3];
//     float fVolumeOffset[3];
//     float fVolumeSweep;
//     float fSectionRadius;
//     float fMinDistance;
//     float fMaxDistance;
//     float fSpeed;
//     float fInheritVelocity;
//     float fRadialType;
//     float fSpread;
//     float fFrequency;
//     float fNoiseLevel;
//     float fNoiseRatio;
//     float fAwayFromCentreAxis;
//     float fAlongAxis;
//     float fAroundAxis;
//     float fDirectionalSpeed;
// };
// 
// struct fxField__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxField;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxField {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxField__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     UINT32 fFlags;
//     struct fxFieldAttributes *fAttributes;
//     undefined field98_0x88;
//     undefined field99_0x89;
//     undefined field100_0x8a;
//     undefined field101_0x8b;
//     undefined field102_0x8c;
//     undefined field103_0x8d;
//     undefined field104_0x8e;
//     undefined field105_0x8f;
// };
// 
// typedef struct fxFieldClientParm fxFieldClientParm, *PfxFieldClientParm;
// 
// struct fxFieldClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     INT32 fGroupID; /* Inherited from fxClientParm */
//     UINT32 fFlags;
//     struct fxFieldAttributes fAttributes;
// };
// 
// typedef struct fxFieldFunctionBlock fxFieldFunctionBlock, *PfxFieldFunctionBlock;
// 
// typedef undefined1 *fxSingleForceFunction;
// 
// typedef undefined1 *fxFirstForceFunction;
// 
// typedef undefined1 *fxMiddleForceFunction;
// 
// typedef undefined1 *fxLastForceFunction;
// 
// struct fxFieldFunctionBlock {
//     fxSingleForceFunction fSingleForce;
//     fxSingleForceFunction fSingleForceFirstFrame;
//     fxFirstForceFunction fFirstForce;
//     fxMiddleForceFunction fMiddleForce;
//     fxLastForceFunction fLastForce;
//     fxLastForceFunction fLastForceFirstFrame;
// };
// 
// typedef struct fxFieldLoadParm fxFieldLoadParm, *PfxFieldLoadParm;
// 
// struct fxFieldLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize; /* Inherited from fxLoadParm */
//     UINT32 fFlags;
//     struct fxFieldAttributes fAttributes;
// };
// 
// typedef struct fxFieldParameterBlock fxFieldParameterBlock, *PfxFieldParameterBlock;
// 
// struct fxFieldParameterBlock {
//     struct VUVec4 fPosition;
//     struct VUVec4 fDirection;
//     struct fxFieldFunctionBlock fFunctions;
//     undefined field3_0x38;
//     undefined field4_0x39;
//     undefined field5_0x3a;
//     undefined field6_0x3b;
//     undefined field7_0x3c;
//     undefined field8_0x3d;
//     undefined field9_0x3e;
//     undefined field10_0x3f;
// };
// 
// typedef struct fxForceFunction<DirectionalDrag> fxForceFunction<DirectionalDrag>, *PfxForceFunction<DirectionalDrag>;
// 
// struct fxForceFunction<DirectionalDrag> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<Gravity> fxForceFunction<Gravity>, *PfxForceFunction<Gravity>;
// 
// struct fxForceFunction<Gravity> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<Newton> fxForceFunction<Newton>, *PfxForceFunction<Newton>;
// 
// struct fxForceFunction<Newton> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<OmniDrag> fxForceFunction<OmniDrag>, *PfxForceFunction<OmniDrag>;
// 
// struct fxForceFunction<OmniDrag> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<Radial> fxForceFunction<Radial>, *PfxForceFunction<Radial>;
// 
// struct fxForceFunction<Radial> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<TurbulenceTest> fxForceFunction<TurbulenceTest>, *PfxForceFunction<TurbulenceTest>;
// 
// struct fxForceFunction<TurbulenceTest> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<Uniform> fxForceFunction<Uniform>, *PfxForceFunction<Uniform>;
// 
// struct fxForceFunction<Uniform> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxForceFunction<Vortex> fxForceFunction<Vortex>, *PfxForceFunction<Vortex>;
// 
// struct fxForceFunction<Vortex> {
//     undefined field0_0x0;
// };
// 
// typedef struct fxFullScreenEffectAction fxFullScreenEffectAction, *PfxFullScreenEffectAction;
// 
// struct fxFullScreenEffectAction {
//     undefined field0_0x0;
// };
// 
// typedef struct fxGeometryLoadParm fxGeometryLoadParm, *PfxGeometryLoadParm;
// 
// struct fxGeometryLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize; /* Inherited from fxLoadParm */
//     UINT32 fFlags;
//     struct stdDynaString fGeometryName;
//     struct stdDynaString fIdentifier;
// };
// 
// typedef struct fxLoadParm fxLoadParm, *PfxLoadParm;
// 
// struct fxLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize;
// };
// 
// typedef struct fxOmniEmitter fxOmniEmitter, *PfxOmniEmitter;
// 
// typedef struct fxOmniEmitter__vtable fxOmniEmitter__vtable, *PfxOmniEmitter__vtable;
// 
// struct fxOmniEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxOmniEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// struct fxOmniEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxOmniEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxParticleEmitterClient fxParticleEmitterClient, *PfxParticleEmitterClient;
// 
// typedef struct fxParticleEmitterClient__vtable fxParticleEmitterClient__vtable, *PfxParticleEmitterClient__vtable;
// 
// struct fxParticleEmitterClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxParticleEmitterClient__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset;
//     struct VUVec4 fVelocityOffset;
//     struct fxEmitterAttributes *fAttributes;
//     struct fxTransformInterpolator *fInterpolator;
//     struct renParticleSystem *fParticleSystem;
//     struct fxGeometry *fGeometry;
//     UINT32 fType;
//     float fRateModulate;
//     float fRateFraction;
//     unsigned int fFlags;
//     int fPSystemOrientation;
//     undefined1 *fOrientationConversion;
//     enum OrientationFormat fOrientationFormat;
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// struct fxParticleEmitterClient__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxParticleEmitterClient;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxParticleEmitterClientParm fxParticleEmitterClientParm, *PfxParticleEmitterClientParm;
// 
// struct fxParticleEmitterClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     INT32 fGroupID; /* Inherited from fxClientParm */
//     struct stdDynaString fParticleSystemIdentifier;
//     struct stdDynaString fGeometryIdentifier;
//     struct fxEmitterAttributes fAttributes;
//     float fLODNear;
//     float fLODFar;
// };
// 
// typedef struct fxParticleEmitterLoadParm fxParticleEmitterLoadParm, *PfxParticleEmitterLoadParm;
// 
// struct fxParticleEmitterLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize; /* Inherited from fxLoadParm */
//     struct stdDynaString fParticleSystemIdentifier;
//     struct stdDynaString fGeometryIdentifier;
//     struct fxEmitterAttributes fAttributes;
//     float fLODNear;
//     float fLODFar;
// };
// 
// typedef struct fxParticleEmitterTemplateData fxParticleEmitterTemplateData, *PfxParticleEmitterTemplateData;
// 
// struct fxParticleEmitterTemplateData {
//     int fType;
//     struct fxEmitterAttributes fAttributes;
// };
// 
// typedef struct fxParticleSystemTemplateData fxParticleSystemTemplateData, *PfxParticleSystemTemplateData;
// 
// struct fxParticleSystemTemplateData {
//     float *fContextData;
//     int fContextDataSize;
//     int fRenderer;
//     int fMaxParticles;
//     int fEmissionRateType;
//     float fEmissionRate;
//     float fParticleLife;
//     int fFlags;
//     struct renParticleFormat fParticleFormat;
//     short int fInputCopyDescriptor_QWords[8];
//     short int fInputCopyDescriptor_WComponents[8];
//     short int fRandomDescriptor_QWords[8];
//     short int fRandomDescriptor_WComponents[8];
//     short int fOutputCopyDescriptor_QWords[8];
//     short int fOutputCopyDescriptor_WComponents[8];
//     short int fFunctionDescriptor_Subroutines[8];
//     short int fFunctionDescriptor_ArgumentOffsets[8];
// };
// 
// typedef struct fxPolySurfaceEmitter fxPolySurfaceEmitter, *PfxPolySurfaceEmitter;
// 
// typedef struct fxPolySurfaceEmitter__vtable fxPolySurfaceEmitter__vtable, *PfxPolySurfaceEmitter__vtable;
// 
// struct fxPolySurfaceEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxPolySurfaceEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// struct fxPolySurfaceEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxPolySurfaceEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxReflection fxReflection, *PfxReflection;
// 
// typedef struct renView renView, *PrenView;
// 
// typedef struct fxZBufStencil fxZBufStencil, *PfxZBufStencil;
// 
// typedef struct stdCList<tPortal *,stdAllocator<stdCListNodeBase> > stdCList<tPortal *,stdAllocator<stdCListNodeBase> >, *PstdCList<tPortal *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct renViewport renViewport, *PrenViewport;
// 
// typedef struct renFrustum renFrustum, *PrenFrustum;
// 
// typedef struct fxZBufStencil__vtable fxZBufStencil__vtable, *PfxZBufStencil__vtable;
// 
// struct renViewport {
//     FLOAT fTop;
//     FLOAT fBottom;
//     FLOAT fLeft;
//     FLOAT fRight;
//     FLOAT fStretchH;
//     FLOAT fStretchV;
// };
// 
// struct stdCList<tPortal *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct fxZBufStencil {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct fxZBufStencil__vtable *__vtable; /* Inherited from renFXScript */
//     struct dmaContext *m_pContext;
// };
// 
// struct fxZBufStencil__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxZBufStencil;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct fxReflection {
//     struct renView *m_pSourceView;
//     struct Client__1_9324 *m_pCamera;
//     struct renView *m_pReflectionView;
//     struct fxClearView *m_pClearZ;
//     struct fxClearView *m_pClearAllButMirror;
//     struct fxBlur *m_pFSBlur;
//     struct fxZBufStencil *m_pZStencil;
//     struct stdCList<tPortal *,stdAllocator<stdCListNodeBase> > m_Portals;
//     BOOL m_bViewConnected;
// };
// 
// struct renFrustum {
//     FLOAT FOVH;
//     FLOAT FOVV;
//     FLOAT Near;
//     FLOAT Far;
// };
// 
// struct renView {
//     struct VUMat4 m_mWorldToCamera;
//     struct VUMat4 m_mWorldToFrustum;
//     struct VUMat4 m_mWorldToOuterFrustum;
//     struct VUMat4 m_mWorldToViewport;
//     struct VUMat4 m_mCameraToFrustum;
//     struct VUMat4 m_mCameraToOuterFrustum;
//     struct VUMat4 m_mCameraToViewport;
//     struct VUMat4 m_mFrustumToViewport;
//     struct VUMat4 m_mOuterFrustumToViewport;
//     struct VUMat4 m_mCameraToWorld;
//     struct VUMat4 m_mFrustumToCamera;
//     struct VUVec4 m_vViewportClippingPlanes[2];
//     struct VUVec4 m_vOuterViewportClippingPlanes[2];
//     struct VUVec4 m_vFrustumToViewportScale;
//     struct VUVec4 m_vOuterFrustumToViewportScale;
//     struct VUVec4 m_vFrustumToViewportOffset;
//     struct VUVec4 m_vFrustumToViewportScaleNoFTOI;
//     struct VUVec4 m_vOuterFrustumToViewportScaleNoFTOI;
//     struct VUVec4 m_vFrustumToViewportOffsetNoFTOI;
//     struct stdList m_Cameras;
//     struct renViewport m_Viewport;
//     struct renFrustum m_Frustum;
//     struct renFrustum m_OuterFrustum;
//     BOOL m_bUpdatePipeline;
//     BOOL m_bClipToPhysicalScreen;
//     BOOL m_bIsActive;
//     FLOAT m_fZRange;
//     FLOAT m_forceAspectRatio;
//     UINT32 m_uID;
//     struct renViewportContext *m_pViewportContext[2];
// };
// 
// typedef struct fxScratch fxScratch, *PfxScratch;
// 
// struct fxScratch {
//     struct VUMat4 C0;
//     struct VUMat4 C1;
//     struct VUMat4 C2;
//     struct VUVec4 V0;
//     struct VUVec4 V1;
//     struct VUMat4 fEmitterMatrix;
//     struct VUMat4 fVelocityMatrix;
// };
// 
// typedef struct fxScriptArgs fxScriptArgs, *PfxScriptArgs;
// 
// struct fxScriptArgs {
//     struct svrClientParm *fClientParm;
//     int fTemplate;
// };
// 
// typedef struct fxServer fxServer, *PfxServer;
// 
// typedef struct fxServer__vtable fxServer__vtable, *PfxServer__vtable;
// 
// typedef struct stdStack<const svrContext<svrTemplate<fxClientContainer> > *,32> stdStack<const svrContext<svrTemplate<fxClientContainer> > *,32>, *PstdStack<const svrContext<svrTemplate<fxClientContainer> > *,32>;
// 
// typedef struct svrContext<svrTemplate<fxClientContainer> > svrContext<svrTemplate<fxClientContainer> >, *PsvrContext<svrTemplate<fxClientContainer> >;
// 
// typedef struct svrContext<svrTemplate<fxClientContainer> >__vtable svrContext<svrTemplate<fxClientContainer> >__vtable, *PsvrContext<svrTemplate<fxClientContainer> >__vtable;
// 
// struct stdStack<const svrContext<svrTemplate<fxClientContainer> > *,32> {
//     struct svrContext<svrTemplate<fxClientContainer> > *fStack[32];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct svrContext<svrTemplate<fxClientContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct fxServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct fxServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<fxClientContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<fxClientContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<fxClientContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<fxClientContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<fxClientContainer> > */
// };
// 
// struct fxServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct svrContext<svrTemplate<fxClientContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrContext<svrTemplate<fxClientContainer> >__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<fxClientContainer> */
//     UINT32 m_uRefCount;
//     UINT32 m_uConnectionRefCount;
//     struct svrContextParm *m_pParm;
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents;
//     struct wadContext *m_pMyWadContext;
// };
// 
// typedef struct svrMultiServer<svrTemplate<fxClientContainer> > svrMultiServer<svrTemplate<fxClientContainer> >, *PsvrMultiServer<svrTemplate<fxClientContainer> >;
// 
// typedef struct svrMultiServer<svrTemplate<fxClientContainer> > fxServerBase;
// 
// typedef struct svrMultiServer<svrTemplate<fxClientContainer> >__vtable svrMultiServer<svrTemplate<fxClientContainer> >__vtable, *PsvrMultiServer<svrTemplate<fxClientContainer> >__vtable;
// 
// struct svrMultiServer<svrTemplate<fxClientContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMultiServer<svrTemplate<fxClientContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<fxClientContainer> > *,32> m_contextstack;
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectedClientsPerServer;
//     UINT32 m_uMasterContextServerID;
// };
// 
// struct svrMultiServer<svrTemplate<fxClientContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMultiServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// typedef struct svrTemplate<fxClientContainer> svrTemplate<fxClientContainer>, *PsvrTemplate<fxClientContainer>;
// 
// typedef struct svrTemplate<fxClientContainer> fxServerContainer;
// 
// typedef struct svrTemplate<fxClientContainer>__vtable svrTemplate<fxClientContainer>__vtable, *PsvrTemplate<fxClientContainer>__vtable;
// 
// struct svrTemplate<fxClientContainer>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTemplate<fxClientContainer> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<fxClientContainer>__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     UINT32 m_uNumConnected;
// };
// 
// typedef struct fxServerContext fxServerContext, *PfxServerContext;
// 
// typedef struct fxServerContext__vtable fxServerContext__vtable, *PfxServerContext__vtable;
// 
// struct fxServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct fxServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct fxServerContext__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<fxClientContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<fxClientContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<fxClientContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<fxClientContainer> > */
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents; /* Inherited from svrContext<svrTemplate<fxClientContainer> > */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<fxClientContainer> > */
//     struct Pool__1_336 *fInterpolatorPool;
// };
// 
// typedef struct svrContext<svrTemplate<fxClientContainer> > fxServerContextBase;
// 
// typedef struct fxServerMasterContext fxServerMasterContext, *PfxServerMasterContext;
// 
// typedef struct fxServerMasterContext__vtable fxServerMasterContext__vtable, *PfxServerMasterContext__vtable;
// 
// struct fxServerMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxServerMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct fxServerMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct fxServerMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<fxClientContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<fxClientContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<fxClientContainer> > */
// };
// 
// typedef struct svrMasterContext<svrTemplate<fxClientContainer> > svrMasterContext<svrTemplate<fxClientContainer> >, *PsvrMasterContext<svrTemplate<fxClientContainer> >;
// 
// typedef struct svrMasterContext<svrTemplate<fxClientContainer> > fxServerMasterContextBase;
// 
// typedef struct svrMasterContext<svrTemplate<fxClientContainer> >__vtable svrMasterContext<svrTemplate<fxClientContainer> >__vtable, *PsvrMasterContext<svrTemplate<fxClientContainer> >__vtable;
// 
// struct svrMasterContext<svrTemplate<fxClientContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMasterContext<svrTemplate<fxClientContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter;
//     UINT32 m_uMaxConnectionsPerContext;
//     UINT32 m_uMaxClientsPerContext;
// };
// 
// struct svrMasterContext<svrTemplate<fxClientContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct fxSkeletonEmitter fxSkeletonEmitter, *PfxSkeletonEmitter;
// 
// typedef struct fxSkeletonEmitter__vtable fxSkeletonEmitter__vtable, *PfxSkeletonEmitter__vtable;
// 
// struct fxSkeletonEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxSkeletonEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxSkeletonEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxSkeletonEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
//     struct fxBoneData *m_pBoneData;
//     undefined field114_0xd4;
//     undefined field115_0xd5;
//     undefined field116_0xd6;
//     undefined field117_0xd7;
//     undefined field118_0xd8;
//     undefined field119_0xd9;
//     undefined field120_0xda;
//     undefined field121_0xdb;
//     undefined field122_0xdc;
//     undefined field123_0xdd;
//     undefined field124_0xde;
//     undefined field125_0xdf;
// };
// 
// typedef struct fxSphereEmitter fxSphereEmitter, *PfxSphereEmitter;
// 
// typedef struct fxSphereEmitter__vtable fxSphereEmitter__vtable, *PfxSphereEmitter__vtable;
// 
// struct fxSphereEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxSphereEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxSphereEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxSphereEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// typedef struct fxStencil fxStencil, *PfxStencil;
// 
// struct fxStencil {
//     UINT32 m_uUpdate;
//     BOOL m_bIsActive;
//     unsigned int m_uABGR[2];
//     long unsigned int m_uGSAlphaReg[2];
//     struct dmaContext *m_pPreContext;
//     struct dmaContext *m_pPostContext[2];
//     undefined field6_0x2c;
//     undefined field7_0x2d;
//     undefined field8_0x2e;
//     undefined field9_0x2f;
// };
// 
// typedef struct fxTorusEmitter fxTorusEmitter, *PfxTorusEmitter;
// 
// typedef struct fxTorusEmitter__vtable fxTorusEmitter__vtable, *PfxTorusEmitter__vtable;
// 
// struct fxTorusEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxTorusEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
// struct fxTorusEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxTorusEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// typedef struct fxTrail fxTrail, *PfxTrail;
// 
// typedef struct fxTrail__vtable fxTrail__vtable, *PfxTrail__vtable;
// 
// typedef struct fxVectorInterpolator fxVectorInterpolator, *PfxVectorInterpolator;
// 
struct fxVectorInterpolator {
    struct VUVec4 *m_pVectors[3];
    struct VUVec4 *m_pA;
    struct VUVec4 *m_pB;
    INT32 m_iNumVectors;
    BOOL m_bFirstFrame;
};

struct fxTrail {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject; /* Inherited from goClient */
    struct svrClientParm *m_pParm; /* Inherited from goClient */
    undefined field18_0x20;
    undefined field19_0x21;
    undefined field20_0x22;
    undefined field21_0x23;
    undefined field22_0x24;
    undefined field23_0x25;
    undefined field24_0x26;
    undefined field25_0x27;
    undefined field26_0x28;
    undefined field27_0x29;
    undefined field28_0x2a;
    undefined field29_0x2b;
    undefined field30_0x2c;
    undefined field31_0x2d;
    undefined field32_0x2e;
    undefined field33_0x2f;
    undefined field34_0x30;
    undefined field35_0x31;
    undefined field36_0x32;
    undefined field37_0x33;
    undefined field38_0x34;
    undefined field39_0x35;
    undefined field40_0x36;
    undefined field41_0x37;
    undefined field42_0x38;
    undefined field43_0x39;
    undefined field44_0x3a;
    undefined field45_0x3b;
    undefined field46_0x3c;
    undefined field47_0x3d;
    undefined field48_0x3e;
    undefined field49_0x3f;
    struct stdListNode *_pNextItem; /* Inherited from stdListNode */
    struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
    undefined field52_0x48;
    undefined field53_0x49;
    undefined field54_0x4a;
    undefined field55_0x4b;
    undefined field56_0x4c;
    undefined field57_0x4d;
    undefined field58_0x4e;
    undefined field59_0x4f;
    undefined field60_0x50;
    undefined field61_0x51;
    undefined field62_0x52;
    undefined field63_0x53;
    undefined field64_0x54;
    undefined field65_0x55;
    undefined field66_0x56;
    undefined field67_0x57;
    undefined field68_0x58;
    undefined field69_0x59;
    undefined field70_0x5a;
    undefined field71_0x5b;
    undefined field72_0x5c;
    undefined field73_0x5d;
    undefined field74_0x5e;
    undefined field75_0x5f;
    INT16 fTransformID; /* Inherited from goAttachmentClient */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
    undefined field78_0x64;
    undefined field79_0x65;
    undefined field80_0x66;
    undefined field81_0x67;
    UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
    struct fxTrail__vtable *__vtable; /* Inherited from fxClient */
    undefined field84_0x74;
    undefined field85_0x75;
    undefined field86_0x76;
    undefined field87_0x77;
    undefined field88_0x78;
    undefined field89_0x79;
    undefined field90_0x7a;
    undefined field91_0x7b;
    undefined field92_0x7c;
    undefined field93_0x7d;
    undefined field94_0x7e;
    undefined field95_0x7f;
    undefined field96_0x80;
    undefined field97_0x81;
    undefined field98_0x82;
    undefined field99_0x83;
    undefined field100_0x84;
    undefined field101_0x85;
    undefined field102_0x86;
    undefined field103_0x87;
    undefined field104_0x88;
    undefined field105_0x89;
    undefined field106_0x8a;
    undefined field107_0x8b;
    undefined field108_0x8c;
    undefined field109_0x8d;
    undefined field110_0x8e;
    undefined field111_0x8f;
    undefined field112_0x90;
    undefined field113_0x91;
    undefined field114_0x92;
    undefined field115_0x93;
    undefined field116_0x94;
    undefined field117_0x95;
    undefined field118_0x96;
    undefined field119_0x97;
    undefined field120_0x98;
    undefined field121_0x99;
    undefined field122_0x9a;
    undefined field123_0x9b;
    undefined field124_0x9c;
    undefined field125_0x9d;
    undefined field126_0x9e;
    undefined field127_0x9f;
    struct stdSLListNode *_pNextItem_; /* Inherited from stdSLListNode */
    undefined field129_0xa4;
    undefined field130_0xa5;
    undefined field131_0xa6;
    undefined field132_0xa7;
    undefined field133_0xa8;
    undefined field134_0xa9;
    undefined field135_0xaa;
    undefined field136_0xab;
    undefined field137_0xac;
    undefined field138_0xad;
    undefined field139_0xae;
    undefined field140_0xaf;
    undefined field141_0xb0;
    undefined field142_0xb1;
    undefined field143_0xb2;
    undefined field144_0xb3;
    undefined field145_0xb4;
    undefined field146_0xb5;
    undefined field147_0xb6;
    undefined field148_0xb7;
    undefined field149_0xb8;
    undefined field150_0xb9;
    undefined field151_0xba;
    undefined field152_0xbb;
    undefined field153_0xbc;
    undefined field154_0xbd;
    undefined field155_0xbe;
    undefined field156_0xbf;
    undefined field157_0xc0;
    undefined field158_0xc1;
    undefined field159_0xc2;
    undefined field160_0xc3;
    undefined field161_0xc4;
    undefined field162_0xc5;
    undefined field163_0xc6;
    undefined field164_0xc7;
    undefined field165_0xc8;
    undefined field166_0xc9;
    undefined field167_0xca;
    undefined field168_0xcb;
    undefined field169_0xcc;
    undefined field170_0xcd;
    undefined field171_0xce;
    undefined field172_0xcf;
    undefined field173_0xd0;
    undefined field174_0xd1;
    undefined field175_0xd2;
    undefined field176_0xd3;
    undefined field177_0xd4;
    undefined field178_0xd5;
    undefined field179_0xd6;
    undefined field180_0xd7;
    undefined field181_0xd8;
    undefined field182_0xd9;
    undefined field183_0xda;
    undefined field184_0xdb;
    undefined field185_0xdc;
    undefined field186_0xdd;
    undefined field187_0xde;
    undefined field188_0xdf;
    undefined field189_0xe0;
    undefined field190_0xe1;
    undefined field191_0xe2;
    undefined field192_0xe3;
    undefined field193_0xe4;
    undefined field194_0xe5;
    undefined field195_0xe6;
    undefined field196_0xe7;
    undefined field197_0xe8;
    undefined field198_0xe9;
    undefined field199_0xea;
    undefined field200_0xeb;
    undefined field201_0xec;
    undefined field202_0xed;
    undefined field203_0xee;
    undefined field204_0xef;
    undefined field205_0xf0;
    undefined field206_0xf1;
    undefined field207_0xf2;
    undefined field208_0xf3;
    undefined field209_0xf4;
    undefined field210_0xf5;
    undefined field211_0xf6;
    undefined field212_0xf7;
    undefined field213_0xf8;
    undefined field214_0xf9;
    undefined field215_0xfa;
    undefined field216_0xfb;
    undefined field217_0xfc;
    undefined field218_0xfd;
    undefined field219_0xfe;
    undefined field220_0xff;
    undefined field221_0x100;
    undefined field222_0x101;
    undefined field223_0x102;
    undefined field224_0x103;
    undefined field225_0x104;
    undefined field226_0x105;
    undefined field227_0x106;
    undefined field228_0x107;
    undefined field229_0x108;
    undefined field230_0x109;
    undefined field231_0x10a;
    undefined field232_0x10b;
    undefined field233_0x10c;
    undefined field234_0x10d;
    undefined field235_0x10e;
    undefined field236_0x10f;
    undefined field237_0x110;
    undefined field238_0x111;
    undefined field239_0x112;
    undefined field240_0x113;
    undefined field241_0x114;
    undefined field242_0x115;
    undefined field243_0x116;
    undefined field244_0x117;
    undefined field245_0x118;
    undefined field246_0x119;
    undefined field247_0x11a;
    undefined field248_0x11b;
    undefined field249_0x11c;
    undefined field250_0x11d;
    undefined field251_0x11e;
    undefined field252_0x11f;
    struct fxVectorInterpolator fVectorInterpolator;
    INT32 m_iVertsPerHoop;
    INT32 m_iNumChunks;
    INT32 m_iNumHoops;
    INT32 m_iHoopsPerChunk;
    INT32 m_iClearNextFrame;
    FLOAT m_fTime;
    UINT32 m_uFlags;
    BOOL m_bEnabled;
    BOOL m_bPreviouslyEnabled;
    struct VUVec4 m_vColour;
    FLOAT m_fTimeStep;
    int m_iOldestHoop[2];
    int m_iNextHoop[2];
    int m_LastUpdated;
    FLOAT *m_pfHoopTimes;
    struct renEEPrim *m_pEEPrim;
};

struct fxTrail__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type fxTrail;
    struct __vtbl_ptr_type Connect;
    struct __vtbl_ptr_type Disconnect;
    struct __vtbl_ptr_type InitAnim;
};
// 
// typedef struct fxTrailClientParm fxTrailClientParm, *PfxTrailClientParm;
// 
struct fxTrailClientParm {
    UINT32 m_uID; /* Inherited from svrClientType */
    struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
    INT16 fTransformID; /* Inherited from goAttachmentClientParm */
    INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
    unsigned int fTransform; /* Inherited from goAttachmentClientParm */
    INT32 fGroupID; /* Inherited from fxClientParm */
    FLOAT m_fTrailLength;
    INT32 m_iNumHoopVerts;
    UINT32 m_uFlags;
    struct VUVec4 *m_pVertices;
    undefined field10_0x24;
    undefined field11_0x25;
    undefined field12_0x26;
    undefined field13_0x27;
    undefined field14_0x28;
    undefined field15_0x29;
    undefined field16_0x2a;
    undefined field17_0x2b;
    undefined field18_0x2c;
    undefined field19_0x2d;
    undefined field20_0x2e;
    undefined field21_0x2f;
    struct VUMat4 m_mTransform;
    struct VUVec4 m_vColour;
    struct stdDynaString m_sMaterialName;
    undefined field25_0x98;
    undefined field26_0x99;
    undefined field27_0x9a;
    undefined field28_0x9b;
    undefined field29_0x9c;
    undefined field30_0x9d;
    undefined field31_0x9e;
    undefined field32_0x9f;
};
// 
// typedef struct fxTrailLoadParm fxTrailLoadParm, *PfxTrailLoadParm;
// 
// struct fxTrailLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize; /* Inherited from fxLoadParm */
//     struct stdDynaString fCurveName;
//     FLOAT fTrailLength;
//     UINT32 fFlags;
//     float fColour[4];
//     struct stdDynaString fMaterialName;
//     INT fNumSubdivisions;
// };
// 
// typedef struct fxVolumeEmitter fxVolumeEmitter, *PfxVolumeEmitter;
// 
// typedef struct fxVolumeEmitter__vtable fxVolumeEmitter__vtable, *PfxVolumeEmitter__vtable;
// 
// struct fxVolumeEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type fxVolumeEmitter;
//     struct __vtbl_ptr_type Connect;
//     struct __vtbl_ptr_type Disconnect;
//     struct __vtbl_ptr_type InitAnim;
// };
// 
// struct fxVolumeEmitter {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     struct fxVolumeEmitter__vtable *__vtable; /* Inherited from fxClient */
//     undefined field84_0x74;
//     undefined field85_0x75;
//     undefined field86_0x76;
//     undefined field87_0x77;
//     undefined field88_0x78;
//     undefined field89_0x79;
//     undefined field90_0x7a;
//     undefined field91_0x7b;
//     undefined field92_0x7c;
//     undefined field93_0x7d;
//     undefined field94_0x7e;
//     undefined field95_0x7f;
//     struct VUVec4 fPositionOffset; /* Inherited from fxParticleEmitterClient */
//     struct VUVec4 fVelocityOffset; /* Inherited from fxParticleEmitterClient */
//     struct fxEmitterAttributes *fAttributes; /* Inherited from fxParticleEmitterClient */
//     struct fxTransformInterpolator *fInterpolator; /* Inherited from fxParticleEmitterClient */
//     struct renParticleSystem *fParticleSystem; /* Inherited from fxParticleEmitterClient */
//     struct fxGeometry *fGeometry; /* Inherited from fxParticleEmitterClient */
//     UINT32 fType; /* Inherited from fxParticleEmitterClient */
//     float fRateModulate; /* Inherited from fxParticleEmitterClient */
//     float fRateFraction; /* Inherited from fxParticleEmitterClient */
//     unsigned int fFlags; /* Inherited from fxParticleEmitterClient */
//     int fPSystemOrientation; /* Inherited from fxParticleEmitterClient */
//     undefined1 *fOrientationConversion; /* Inherited from fxParticleEmitterClient */
//     enum OrientationFormat fOrientationFormat; /* Inherited from fxParticleEmitterClient */
//     undefined field109_0xcc;
//     undefined field110_0xcd;
//     undefined field111_0xce;
//     undefined field112_0xcf;
// };
// 
typedef enum GAME_STATE {
    GAME_INIT,
    GAME_LOADING_SHELL,
    GAME_SHELL_BOOT_SCREEN,
    GAME_SHELL,
    GAME_SHELL_NEW_GAME,
    GAME_SHELL_LOAD_GAME,
    GAME_SHELL_LOAD_DONE,
    GAME_SHELL_LOAD_CANCELLED,
    GAME_LOADING_HERO,
    GAME_LOADING_LEVEL,
    GAME_LOAD_CHECKING,
    GAME_PLAYING,
    GAME_PAUSE_MENU,
    GAME_PSM_MENU,
    GAME_FAILED_OR_DEAD_MENU,
    GAME_CHALLENGE_MENU,
    GAME_FREE_COMBAT_MENU,
    GAME_SAVE_MENU,
    GAME_SAVE_LOCKED_STATUS,
    GAME_SAVE_MEM_CARD,
    GAME_SAVE_MENU_DONE,
    GAME_LOAD_MEM_CARD
} GAME_STATE;
// 
// typedef struct GameState GameState, *PGameState;
// 
// struct GameState {
//     undefined field0_0x0;
// };
// 
// typedef struct GameWadLoader GameWadLoader, *PGameWadLoader;
// 
// struct GameWadLoader {
//     undefined field0_0x0;
// };
// 
// typedef struct GetSoundUserDataCommandStruct GetSoundUserDataCommandStruct, *PGetSoundUserDataCommandStruct;
// 
// struct GetSoundUserDataCommandStruct {
//     u_int bank;
//     int snd_index;
//     u_long bank_name;
//     uint16 snd_name;
//     int *destination;
//     undefined field5_0x24;
//     undefined field6_0x25;
//     undefined field7_0x26;
//     undefined field8_0x27;
//     undefined field9_0x28;
//     undefined field10_0x29;
//     undefined field11_0x2a;
//     undefined field12_0x2b;
//     undefined field13_0x2c;
//     undefined field14_0x2d;
//     undefined field15_0x2e;
//     undefined field16_0x2f;
// };
// 
// typedef struct Gfx Gfx, *PGfx;
// 
// struct Gfx {
//     undefined field0_0x0;
// };
// 
// typedef struct gfxHDR gfxHDR, *PgfxHDR;
// 
// struct gfxHDR {
//     undefined field0_0x0;
// };
// 
// typedef short unsigned int gid_t;
// 
// typedef struct gif gif, *Pgif;
// 
// struct gif {
//     undefined field0_0x0;
// };
// 
// typedef struct Global Global, *PGlobal;
// 
// struct Global {
//     undefined field0_0x0;
// };
// 
// typedef struct GlobalDataModule GlobalDataModule, *PGlobalDataModule;
// 
// typedef struct GlobalDataModule__vtable GlobalDataModule__vtable, *PGlobalDataModule__vtable;
// 
// typedef struct VarInfo__1_19940 VarInfo__1_19940, *PVarInfo__1_19940;
// 
// struct GlobalDataModule__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Name;
//     struct __vtbl_ptr_type GetVariable;
//     struct __vtbl_ptr_type SetVariable;
//     struct __vtbl_ptr_type CallFunction;
// };
// 
// struct VarInfo__1_19940 {
//     UINT32 data;
//     UINT32 initData;
//     char name[16];
//     UINT8 type;
//     UINT8 initialized;
//     undefined field5_0x1a;
//     undefined field6_0x1b;
// };
// 
// struct GlobalDataModule {
//     struct GlobalDataModule__vtable *__vtable; /* Inherited from sliModule */
//     short int idxArray[1024];
//     struct VarInfo__1_19940 varArray[150];
//     char stringPool[16];
//     int nextBase;
//     int nVars;
//     BOOL initializing;
// };
// 
// typedef struct Globals Globals, *PGlobals;
// 
// typedef struct tReverbPreset tReverbPreset, *PtReverbPreset;
// 
// typedef struct tMixerSetting tMixerSetting, *PtMixerSetting;
// 
// struct tReverbPreset {
//     char *m_Name;
//     INT16 m_Reverb;
//     undefined field2_0x6;
//     undefined field3_0x7;
// };
// 
// struct Globals {
//     struct tReverbPreset *m_ReverbPresets; /* Inherited from tSoundGlobals */
//     struct tMixerSetting *m_MixerSettings; /* Inherited from tSoundGlobals */
//     FLOAT m_SlowMoScale; /* Inherited from tSoundGlobals */
//     FLOAT m_SlowMoMaxSlew; /* Inherited from tSoundGlobals */
//     FLOAT m_UnderwaterVolumeScale; /* Inherited from tSoundGlobals */
//     INT16 m_UnderwaterPitchOffset; /* Inherited from tSoundGlobals */
//     undefined field6_0x16;
//     undefined field7_0x17;
//     FLOAT m_UnderwaterMusicVolScale; /* Inherited from tSoundGlobals */
//     FLOAT m_UnderwaterTweenTime; /* Inherited from tSoundGlobals */
//     FLOAT m_MicMaxDistance; /* Inherited from tSoundGlobals */
//     FLOAT m_MicBoomRatio; /* Inherited from tSoundGlobals */
// };
// 
// struct tMixerSetting {
//     char *m_Name;
//     FLOAT m_SFX;
//     FLOAT m_Music;
//     FLOAT m_Dialogue;
//     FLOAT m_User1;
//     FLOAT m_User2;
//     FLOAT m_User3;
//     FLOAT m_User4;
//     FLOAT m_User5;
//     FLOAT m_User6;
//     FLOAT m_User7;
//     FLOAT m_User8;
//     FLOAT m_User9;
//     FLOAT m_User10;
//     FLOAT m_User11;
//     FLOAT m_User12;
//     FLOAT m_Reverb;
// };
// 
// typedef struct goAIBase goAIBase, *PgoAIBase;
// 
// typedef struct goAIBase__vtable goAIBase__vtable, *PgoAIBase__vtable;
// 
// struct goAIBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goAIBase;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type IsCulled;
//     struct __vtbl_ptr_type GetFlightHeight;
// };
// 
// struct goAIBase {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goAIBase__vtable *__vtable; /* Inherited from goCreatureController */
//     struct wypClient *m_pPatrolClient;
//     struct tDecisionTree m_DTree;
//     float m_fSiteOffset[4];
//     struct goAIWorldRep *m_pWorldRep;
//     INT16 m_iCurSite;
//     UINT16 m_iStartSite;
//     INT16 m_iPatrolSite;
//     undefined field10_0x36;
//     undefined field11_0x37;
// };
// 
// typedef struct goAirCurrentObject goAirCurrentObject, *PgoAirCurrentObject;
// 
// typedef struct goAirCurrentObjectData goAirCurrentObjectData, *PgoAirCurrentObjectData;
// 
// struct goAirCurrentObjectData {
//     FLOAT m_fRadius;
//     FLOAT m_fPower;
//     FLOAT m_fLength;
//     FLOAT m_fTermVel;
//     BOOL m_bWOIcarus;
//     BOOL m_bApplyToAI;
// };
// 
// struct goAirCurrentObject {
//     struct goAirCurrentObjectData m_Data;
// };
// 
// typedef struct goAresSky goAresSky, *PgoAresSky;
// 
// struct goAresSky {
//     FLOAT tLast;
//     int idxLast;
// };
// 
// typedef struct goAttachmentClient goAttachmentClient, *PgoAttachmentClient;
// 
// struct goAttachmentClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID;
//     INT16 fAnimationSetID;
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp;
// };
// 
// typedef struct goAttachmentClientParm goAttachmentClientParm, *PgoAttachmentClientParm;
// 
// struct goAttachmentClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID;
//     INT16 fAnimationSetID;
//     unsigned int fTransform;
// };
// 
// typedef struct goAttachmentLoadParm goAttachmentLoadParm, *PgoAttachmentLoadParm;
// 
// struct goAttachmentLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID;
//     INT16 fTransformID;
//     INT16 fAnimationSetID;
//     INT32 fAttachmentFlags;
//     float fLocalMatrix[16];
// };
// 
// typedef struct goAttachmentLWClient goAttachmentLWClient, *PgoAttachmentLWClient;
// 
// struct goAttachmentLWClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     undefined field132_0xa4;
//     undefined field133_0xa5;
//     undefined field134_0xa6;
//     undefined field135_0xa7;
//     undefined field136_0xa8;
//     undefined field137_0xa9;
//     undefined field138_0xaa;
//     undefined field139_0xab;
//     undefined field140_0xac;
//     undefined field141_0xad;
//     undefined field142_0xae;
//     undefined field143_0xaf;
// };
// 
// typedef struct goBalanceGeom goBalanceGeom, *PgoBalanceGeom;
// 
// struct goBalanceGeom {
//     undefined field0_0x0;
// };
// 
// typedef struct goBase goBase, *PgoBase;
// 
// typedef struct goBase__vtable goBase__vtable, *PgoBase__vtable;
// 
// struct goBase {
//     struct goGameObject *m_pGameObject;
//     struct goBase__vtable *__vtable;
// };
// 
// struct goBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goBase;
// };
// 
// typedef struct goBreakable goBreakable, *PgoBreakable;
// 
// typedef struct tBreakable tBreakable, *PtBreakable;
// 
// typedef struct tOrbEmitter tOrbEmitter, *PtOrbEmitter;
// 
// typedef struct tBonus tBonus, *PtBonus;
// 
// typedef struct tRandomizer tRandomizer, *PtRandomizer;
// 
// struct tRandomizer {
//     struct FLOAT16 m_Probability;
//     INT8 m_Min;
//     INT8 m_Max;
// };
// 
// struct tOrbEmitter {
//     struct tOrb *m_HealthOrb;
//     struct tOrb *m_MagicOrb;
//     struct tOrb *m_PowerUpOrb;
//     struct tOrb *m_GodModeOrb;
//     char *m_EmitterJoint;
//     FLOAT m_EmitterRadius;
//     char *m_TargetJoint;
//     FLOAT m_TargetYOffset;
//     FLOAT m_TargetZOffset;
//     FLOAT m_TargetRadius;
//     char *m_AttractJoint;
//     FLOAT m_AttractYOffset;
//     FLOAT m_AttractZOffset;
//     struct tRandomizer m_NormalHealth;
//     struct tRandomizer m_NormalMagic;
//     struct tRandomizer m_NormalPowerUp;
//     struct tRandomizer m_NormalGodMode;
//     FLOAT m_HealthThreshold;
//     struct tRandomizer m_LowHealth;
//     FLOAT m_MagicThreshold;
//     struct tRandomizer m_LowMagic;
// };
// 
// struct tBreakable {
//     struct tOrbEmitter *m_OrbEmitter;
//     struct tOrbEmitter *m_AirOrbEmitter;
//     struct tBonus *m_Bonus;
//     struct tBonus *m_AirBonus;
//     struct FLOAT16 m_HitPoints;
//     struct FLOAT16 m_OpaqueTime;
//     struct FLOAT16 m_FadeTime;
//     UINT8 m_Type;
//     UINT8 m_Flags;
// };
// 
// struct tBonus {
//     INT16 m_PowerUpPoints;
//     INT16 m_MessageIdx;
//     UINT32 m_IncStat;
// };
// 
// struct goBreakable {
//     struct VUVec4 m_vOriginalCullSphere;
//     FLOAT m_fOriginalCullRadius;
//     struct BreakablePieces *m_pPieces;
//     struct tBreakable *m_pTweaks;
//     struct goGameObject *m_pGO;
//     struct collisionClient *m_pCC;
//     FLOAT m_fTime;
//     FLOAT m_fHitPoints;
//     UINT8 m_bIsBroken;
//     UINT8 m_bIsEntityCreated;
//     undefined field10_0x2e;
//     undefined field11_0x2f;
//     struct goHandle m_hKillTarget;
//     undefined field13_0x34;
//     undefined field14_0x35;
//     undefined field15_0x36;
//     undefined field16_0x37;
//     undefined field17_0x38;
//     undefined field18_0x39;
//     undefined field19_0x3a;
//     undefined field20_0x3b;
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
// };
// 
// typedef struct goCameraShake goCameraShake, *PgoCameraShake;
// 
// struct goCameraShake {
//     struct tCameraShake *fTweak; /* Inherited from Shaker */
//     float fTime; /* Inherited from Shaker */
//     struct tCameraShake *fTweak;
//     float fTime;
// };
// 
// typedef struct goCameraSway goCameraSway, *PgoCameraSway;
// 
// typedef struct goCameraSway__vtable goCameraSway__vtable, *PgoCameraSway__vtable;
// 
// typedef struct goCameraSwayPrim goCameraSwayPrim, *PgoCameraSwayPrim;
// 
// struct goCameraSwayPrim {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct VUMat4 fSway;
//     struct goScript *fScript;
//     undefined field6_0x54;
//     undefined field7_0x55;
//     undefined field8_0x56;
//     undefined field9_0x57;
//     undefined field10_0x58;
//     undefined field11_0x59;
//     undefined field12_0x5a;
//     undefined field13_0x5b;
//     undefined field14_0x5c;
//     undefined field15_0x5d;
//     undefined field16_0x5e;
//     undefined field17_0x5f;
// };
// 
// struct goCameraSway {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct goCameraSway__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct goCameraSwayPrim fAccumulator; /* Inherited from renFXScriptBlended<goCameraSwayPrim> */
// };
// 
// struct goCameraSway__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goCameraSway;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct goClient goClient, *PgoClient;
// 
struct goClient {
    UINT32 m_uID; /* Inherited from svrClientType */
    UINT16 m_uClientFlags; /* Inherited from svrClient */
    UINT16 m_uContextID; /* Inherited from svrClient */
    undefined field3_0x8;
    undefined field4_0x9;
    undefined field5_0xa;
    undefined field6_0xb;
    undefined field7_0xc;
    undefined field8_0xd;
    undefined field9_0xe;
    undefined field10_0xf;
    UINT32 _uKey; /* Inherited from svrClientKey */
    undefined field12_0x14;
    undefined field13_0x15;
    undefined field14_0x16;
    undefined field15_0x17;
    struct goGameObject *m_pGameObject;
    struct svrClientParm *m_pParm;
};

// typedef struct svrContextParm goClientContextParm;
// 
// typedef struct goClientListNode goClientListNode, *PgoClientListNode;
// 
// struct goClientListNode {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
// };
// 
// typedef struct goClientTreeNode<svrSortedListContainer> goClientTreeNode<svrSortedListContainer>, *PgoClientTreeNode<svrSortedListContainer>;
// 
// struct goClientTreeNode<svrSortedListContainer> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     struct svrClientTreeNode<svrSortedListContainer,goClient> *m_pParent; /* Inherited from svrClientTreeNode<svrSortedListContainer,goClient> */
//     goScriptContainerType *m_pChildren; /* Inherited from svrClientTreeNode<svrSortedListContainer,goClient> */
// };
// 
// typedef struct GOCtxtInfo GOCtxtInfo, *PGOCtxtInfo;
// 
// struct GOCtxtInfo {
//     UINT32 id;
//     struct stdDynaString s;
// };
// 
// typedef struct GodMode GodMode, *PGodMode;
// 
// struct GodMode {
//     undefined field0_0x0;
// };
// 
// typedef struct goFarClip goFarClip, *PgoFarClip;
// 
// struct goFarClip {
//     struct goScript *_script;
//     FLOAT _FarClip;
//     FLOAT _LastFarClip;
// };
// 
// typedef struct goFarClipArgs goFarClipArgs, *PgoFarClipArgs;
// 
// struct goFarClipArgs {
//     FLOAT FarClip;
// };
// 
// typedef struct svrTree<svrCListContainer,goAttachmentLWClient> svrTree<svrCListContainer,goAttachmentLWClient>, *PsvrTree<svrCListContainer,goAttachmentLWClient>;
// 
// typedef struct svrTree<svrCListContainer,goAttachmentLWClient> goGameObjectTree;
// 
// typedef struct svrTree<svrCListContainer,goAttachmentLWClient>__vtable svrTree<svrCListContainer,goAttachmentLWClient>__vtable, *PsvrTree<svrCListContainer,goAttachmentLWClient>__vtable;
// 
// struct svrTree<svrCListContainer,goAttachmentLWClient>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTree;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTree<svrCListContainer,goAttachmentLWClient> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTree<svrCListContainer,goAttachmentLWClient>__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > */
// };
// 
// typedef struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> goGameObjectTreeNode;
// 
// typedef struct goGhostTrail goGhostTrail, *PgoGhostTrail;
// 
// typedef struct Segment__1_18428 Segment__1_18428, *PSegment__1_18428;
// 
// typedef struct VUQuat VUQuat, *PVUQuat;
// 
// struct goGhostTrail {
//     struct goGameObject *m_pGameObject;
//     INT32 m_iRootJointIdx;
//     FLOAT m_fTrailLength;
//     INT32 m_iNumJoints;
//     struct Segment__1_18428 *m_pSegmentArray;
//     struct VUQuat *m_pQuatArray;
//     struct VUVec4 *m_pTranArray;
//     INT32 m_iNumControlPoints;
//     BOOL m_bAutomaticUpdate;
// };
// 
// struct VUQuat {
//     int16 v; /* Inherited from VUVec4 */
// };
// 
// struct Segment__1_18428 {
//     FLOAT m_fDist;
//     struct VUMat4 *m_pJointMat;
// };
// 
// typedef struct goGrapplePoint goGrapplePoint, *PgoGrapplePoint;
// 
// typedef struct goGrapplePointArgs goGrapplePointArgs, *PgoGrapplePointArgs;
// 
struct goGrapplePoint {
    struct goGameObject *m_pGameObject;
    struct goGameObject *m_pInactiveGO;
    struct goGrapplePointArgs *m_pArgs;
    INT32 m_iScriptJointID;
    UINT32 m_uFlags;
};

struct goGrapplePointArgs {
    INT32 m_iType;
    INT32 m_iInitialDir;
    INT32 m_iPossibleDir;
    INT32 m_iCircleDir;
    BOOL m_bEnabledByDefault;
    BOOL m_bActiveByDefault;
    BOOL m_bAllowRotating;
    BOOL m_bAllowClimbing;
    FLOAT m_fDefaultChainLength;
    FLOAT m_fActivateRadius;
    FLOAT m_fActivateConeAngle;
    FLOAT m_fSlingShotVel;
    char m_sBranch[24];
    BOOL m_bAttach;
    BOOL m_bKnockOff;
};
// 
// typedef struct goGridAI goGridAI, *PgoGridAI;
// 
// typedef struct goGridAI__vtable goGridAI__vtable, *PgoGridAI__vtable;
// 
// struct goGridAI__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goGridAI;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Destroy;
//     struct __vtbl_ptr_type GetStartBranch;
//     struct __vtbl_ptr_type SetSaveData;
//     struct __vtbl_ptr_type GetSaveData;
//     struct __vtbl_ptr_type GetControlSystem;
//     struct __vtbl_ptr_type IsDead;
//     struct __vtbl_ptr_type IsFreezable;
//     struct __vtbl_ptr_type IsBreakable;
//     struct __vtbl_ptr_type ResetTweaks;
//     struct __vtbl_ptr_type UpdateI;
//     struct __vtbl_ptr_type EnterStateI;
//     struct __vtbl_ptr_type IsStateTerminatingI;
//     struct __vtbl_ptr_type ExitStateI;
// };
// 
// struct goGridAI {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goGridAI__vtable *__vtable; /* Inherited from goCreatureController */
//     struct tCreature *m_pTweaks; /* Inherited from goReactiveController */
//     struct tSoldierBase *m_pBodyTweaks; /* Inherited from goReactiveController */
//     struct tAIBase *m_pAITweaks; /* Inherited from goReactiveController */
//     UINT32 m_dwFlags; /* Inherited from goReactiveController */
//     enum eState__1_19513 m_eState; /* Inherited from goReactiveController */
//     FLOAT m_fTimer; /* Inherited from goReactiveController */
//     struct goHandle m_hTarget; /* Inherited from goReactiveController */
//     struct goHandle m_hKillTarget; /* Inherited from goReactiveController */
//     struct tBranch *m_pStartBranch; /* Inherited from goReactiveController */
//     struct CSpacePartition m_SpacePartition;
//     INT32 m_iJointIndex;
// };
// 
// typedef struct goHandleDB goHandleDB, *PgoHandleDB;
// 
// typedef struct HandleData HandleData, *PHandleData;
// 
// typedef union HandleData__goHandle__unnamed_0 HandleData__goHandle__unnamed_0, *PHandleData__goHandle__unnamed_0;
// 
// typedef struct HandleData__goHandle__unnamed__unnamed_0 HandleData__goHandle__unnamed__unnamed_0, *PHandleData__goHandle__unnamed__unnamed_0;
// 
// typedef struct HandleData__goHandle__unnamed__unnamed_0 HandleData__goHandle__unnamed__unnamed_0, *PHandleData__goHandle__unnamed__unnamed_0;
// 
// struct HandleData__goHandle__unnamed__unnamed_0 {
//     UINT32 m_uType:3;
//     INT32 m_iNextAvailableIdx:29;
// };
// 
// struct HandleData__goHandle__unnamed__unnamed_0 {
//     UINT32 m_uDummyType:3;
//     UINT32 m_uTimeStamp:20;
//     UINT32 m_uIndex:9;
// };
// 
// union HandleData__goHandle__unnamed_0 {
//     UINT32 m_uAll;
//     struct HandleData__goHandle__unnamed__unnamed_0 field1;
//     struct HandleData__goHandle__unnamed__unnamed_0 field2;
// };
// 
// struct HandleData {
//     union HandleData__goHandle__unnamed_0 field0_0x0; /* Inherited from goHandle */
//     struct goGameObject *m_pGO;
//     void *m_pData;
// };
// 
// struct goHandleDB {
//     UINT32 m_uTimeStamp:20;
//     undefined field1_0x3;
//     INT32 m_iNextAvailableIdx;
//     struct HandleData m_aHandleData[512];
// };
// 
// typedef struct goHeroBreak goHeroBreak, *PgoHeroBreak;
// 
// struct goHeroBreak {
//     undefined field0_0x0;
// };
// 
// typedef struct goIcarusWings goIcarusWings, *PgoIcarusWings;
// 
// typedef struct goIcarusWings__vtable goIcarusWings__vtable, *PgoIcarusWings__vtable;
// 
// struct goIcarusWings__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Callback;
// };
// 
// struct goIcarusWings {
//     struct goIcarusWings__vtable *__vtable; /* Inherited from anmPlayerEndCallback */
//     FLOAT fDieTime;
//     FLOAT fRate;
//     struct goScript *pIcarusScript;
//     struct goGameObject *pIcarusWings;
//     struct anmPlayer *m_pPlayer;
//     struct renGfxClut *pGfx;
//     struct fxParticleEmitterClient *pPartEmit[12];
//     UINT8 iFrame;
//     INT8 iState;
//     INT8 iVisualWings;
//     undefined field11_0x4f;
// };
// 
// typedef struct goInstanceLP goInstanceLP, *PgoInstanceLP;
// 
// typedef struct goInstData goInstData, *PgoInstData;
// 
// struct goInstData {
//     UINT16 _uParmID;
//     UINT16 _uFlags;
//     float _mat[4][3];
//     tVector3 _vLookAt;
//     FLOAT _fAnimStartTime;
//     UINT16 _uAnimStartFile;
//     UINT16 _uInstNum;
//     INT16 _parentGOID;
//     UINT16 _parentJointID;
// };
// 
// struct goInstanceLP {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct stdDynaString _cPrototypeName;
//     struct goInstData _instdata;
// };
// 
// typedef struct goInstanceParm goInstanceParm, *PgoInstanceParm;
// 
// struct goInstanceParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     char _cName[24]; /* Inherited from goParmBase */
//     struct goInstData _instdata;
//     struct goPrototype *_pPrototype;
// };
// 
// typedef struct goIO goIO, *PgoIO;
// 
// typedef struct goIO__vtable goIO__vtable, *PgoIO__vtable;
// 
// typedef struct tIO tIO, *PtIO;
// 
// typedef struct tHandleSystem tHandleSystem, *PtHandleSystem;
// 
// typedef struct tCrankMotionSet tCrankMotionSet, *PtCrankMotionSet;
// 
// typedef struct tHandle tHandle, *PtHandle;
// 
// typedef struct tCustomBank tCustomBank, *PtCustomBank;
// 
// typedef struct tHandleSystem__vtable tHandleSystem__vtable, *PtHandleSystem__vtable;
// 
// struct tHandle {
//     UINT8 m_Flags;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_YRange;
//     FLOAT m_XZRange;
//     FLOAT m_Angle;
//     FLOAT m_BehindRange;
// };
// 
// struct tCrankMotionSet {
//     FLOAT m_Acceleration;
//     FLOAT m_MaxSpeed;
// };
// 
// struct goIO {
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goIO__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vVelocity; /* Inherited from goCreature */
//     struct VUVec4 m_vImpulse; /* Inherited from goCreature */
//     struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
//     struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
//     struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field45_0x1e8;
//     undefined field46_0x1e9;
//     undefined field47_0x1ea;
//     undefined field48_0x1eb;
//     undefined field49_0x1ec;
//     undefined field50_0x1ed;
//     undefined field51_0x1ee;
//     undefined field52_0x1ef;
//     struct VUMat4 m_mMovingPlatform; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vMovingPlatformOffset; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vGroundNormal; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vWallNormal; /* Inherited from goCreatureCollision */
//     FLOAT m_fWaterLevel; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pGroundATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWallATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWaterATR; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pGroundWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWallWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWaterWC; /* Inherited from goCreatureCollision */
//     struct goGameObject *m_pGroundGO; /* Inherited from goCreatureCollision */
//     UINT32 m_uGroundGOJointID; /* Inherited from goCreatureCollision */
//     UINT32 m_uNoCollisionType; /* Inherited from goCreatureCollision */
//     UINT32 m_uIgnoreSheetBits; /* Inherited from goCreatureCollision */
//     INT16 m_iHeadTrackJointIdx; /* Inherited from goCreatureCollision */
//     INT16 m_wDummy; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackJointOrientX; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackMaxAngle; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackAmount; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackTargetAmount; /* Inherited from goCreatureCollision */
//     struct tIO *_pTweaker;
//     struct anmClient *_pAnmClient;
//     struct goGameObject *_pPusherGO;
//     struct tHandleSystem *_pHandles;
//     FLOAT _fIOSpeed;
//     FLOAT _fTargetPos;
//     FLOAT _fPreviousAnimTime;
//     FLOAT _fAnimTotalTime;
//     INT32 _iPrevProgress;
//     INT32 _iPrevRate;
//     INT32 _iInstance;
//     INT16 _iLocalType;
//     UINT16 _uSoundFlag;
//     UINT8 dynCreated;
//     UINT8 m_uIOFlags;
//     undefined field89_0x2d2;
//     undefined field90_0x2d3;
//     FLOAT m_fDamagePoints;
//     undefined field92_0x2d8;
//     undefined field93_0x2d9;
//     undefined field94_0x2da;
//     undefined field95_0x2db;
//     undefined field96_0x2dc;
//     undefined field97_0x2dd;
//     undefined field98_0x2de;
//     undefined field99_0x2df;
// };
// 
// struct tHandleSystem {
//     struct tHandle *m_pHandleTweak;
//     int m_iHandleJoints[8];
//     INT32 m_iNumberHandleJoints;
//     FLOAT m_fHandleYRange;
//     FLOAT m_fHandleXZRange;
//     FLOAT m_fHandleCosAngle;
//     FLOAT m_fHandleBehindRange;
//     struct tHandleSystem__vtable *__vtable;
// };
// 
// struct goIO__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goIO;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type GetRope;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
//     struct __vtbl_ptr_type GetMoveSystem;
//     struct __vtbl_ptr_type GetFightSystem;
// };
// 
// struct tIO {
//     UINT8 m_BaseFlags; /* Inherited from tIOBase */
//     UINT8 m_Type;
//     UINT8 m_Weight;
//     UINT8 m_Flags;
//     UINT8 m_DefaultDir;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     UINT32 m_CrankPrompt;
//     FLOAT m_Radius;
//     FLOAT m_Height;
//     FLOAT m_Buoyancy;
//     FLOAT m_MaxSlopeSpeed;
//     struct tCrankMotionSet m_CrankSetWind;
//     struct tCrankMotionSet m_CrankSetUnwind;
//     struct tCrankMotionSet m_CrankSetEvent;
//     FLOAT m_CrankBrake;
//     FLOAT m_CrankStopWindow;
//     FLOAT *m_CrankStopList;
//     char *m_PushSound;
//     char *m_PushClunkSound;
//     char *m_PushLandSound;
//     char *m_CrankLockSound;
//     char *m_CoreCrankLockSound;
//     char *m_CrankForwardSound;
//     char *m_CrankBackwardSound;
//     INT16 m_CrankClickFCount;
//     INT16 m_CrankClickBCount;
//     struct tHandle m_Handle;
//     struct tCustomBank *m_CustomBank;
// };
// 
// struct tCustomBank {
//     struct tBranch *m_CrankIdle;
//     struct tBranch *m_CrankPush;
//     struct tBranch *m_CrankPull;
//     struct tBranch *m_CrankPushL;
//     struct tBranch *m_CrankPullL;
//     struct tBranch *m_CrankPushR;
//     struct tBranch *m_CrankPullR;
// };
// 
// struct tHandleSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tHandleSystem;
// };
// 
// typedef struct goIO_CSM goIO_CSM, *PgoIO_CSM;
// 
// typedef struct goIO_CSM__vtable goIO_CSM__vtable, *PgoIO_CSM__vtable;
// 
// typedef struct tCSM tCSM, *PtCSM;
// 
// struct goIO_CSM {
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goIO_CSM__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vVelocity; /* Inherited from goCreature */
//     struct VUVec4 m_vImpulse; /* Inherited from goCreature */
//     struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
//     struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
//     struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field45_0x1e8;
//     undefined field46_0x1e9;
//     undefined field47_0x1ea;
//     undefined field48_0x1eb;
//     undefined field49_0x1ec;
//     undefined field50_0x1ed;
//     undefined field51_0x1ee;
//     undefined field52_0x1ef;
//     struct tCSM *m_pTweaker;
//     INT32 m_iPrevProgress;
//     INT32 m_iPrevRate;
//     INT32 m_iInstance;
//     INT32 m_iCurrentAnim;
//     struct goGameObject *m_pPusherGO;
//     struct anmClient *m_pAnmClient;
//     struct tHandleSystem *m_pHandles;
//     FLOAT m_fIOSpeed;
//     INT32 m_iCurrentChestType;
//     INT32 m_iLastChestType;
//     FLOAT m_fRaidenCycleTime;
//     UINT32 m_uMiscFlags;
//     undefined field66_0x224;
//     undefined field67_0x225;
//     undefined field68_0x226;
//     undefined field69_0x227;
//     undefined field70_0x228;
//     undefined field71_0x229;
//     undefined field72_0x22a;
//     undefined field73_0x22b;
//     undefined field74_0x22c;
//     undefined field75_0x22d;
//     undefined field76_0x22e;
//     undefined field77_0x22f;
// };
// 
// struct goIO_CSM__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goIO_CSM;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type GetRope;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
//     struct __vtbl_ptr_type GetMoveSystem;
//     struct __vtbl_ptr_type GetFightSystem;
// };
// 
// struct tCSM {
//     UINT8 m_BaseFlags; /* Inherited from tIOBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tBranch *m_PlayerBranch1;
//     struct tBranch *m_PlayerBranch2;
//     char *m_IOAnm1;
//     char *m_IOAnm2;
//     char *m_IOIdleAnm;
//     struct tHandle m_Handle;
//     struct tOrbEmitter *m_OrbEmitterList[4];
//     FLOAT m_PickupDelay;
//     FLOAT m_RaidenCycleTime;
//     UINT8 m_Pickup;
//     UINT8 m_ChestType;
//     UINT8 m_Flags;
//     undefined field16_0x47;
// };
// 
// typedef struct goIO_TandF goIO_TandF, *PgoIO_TandF;
// 
// typedef struct goIO_TandF__vtable goIO_TandF__vtable, *PgoIO_TandF__vtable;
// 
// typedef struct tTnF tTnF, *PtTnF;
// 
// struct goIO_TandF {
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goIO_TandF__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vVelocity; /* Inherited from goCreature */
//     struct VUVec4 m_vImpulse; /* Inherited from goCreature */
//     struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
//     struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
//     struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field45_0x1e8;
//     undefined field46_0x1e9;
//     undefined field47_0x1ea;
//     undefined field48_0x1eb;
//     undefined field49_0x1ec;
//     undefined field50_0x1ed;
//     undefined field51_0x1ee;
//     undefined field52_0x1ef;
//     struct tTnF *m_pTweaker;
//     FLOAT m_fIOSpeed;
//     INT32 m_iPrevProgress;
//     INT32 m_iPrevRate;
//     INT32 m_iInstance;
//     INT32 m_iCurrentAnim;
//     struct goGameObject *m_pPusherGO;
//     struct anmClient *m_pAnmClient;
//     struct tHandleSystem *m_pHandles;
//     FLOAT m_fProgress;
//     FLOAT m_fYGrab;
//     UINT32 m_uSoundFlag;
//     INT32 m_iCurrentLoopVolume;
//     UINT32 m_uMiscFlags;
//     UINT8 dynCreated;
//     undefined field68_0x229;
//     undefined field69_0x22a;
//     undefined field70_0x22b;
//     undefined field71_0x22c;
//     undefined field72_0x22d;
//     undefined field73_0x22e;
//     undefined field74_0x22f;
// };
// 
// struct tTnF {
//     UINT8 m_BaseFlags; /* Inherited from tIOBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Acc;
//     FLOAT m_Dec;
//     FLOAT m_MaxWindupSpeed;
//     FLOAT m_MaxUnwindSpeed;
//     FLOAT m_TFTime;
//     struct tBranch *m_PlayerGrabBranch;
//     struct tBranch *m_PlayerTnFBranch;
//     struct tBranch *m_PlayerFlourishBranch;
//     char *m_IOTnFAnm;
//     char *m_IOFlourishAnm;
//     char *m_IOIdleAnm;
//     char *m_GrabSound;
//     char *m_ResetSound;
//     char *m_FlourishSound;
//     char *m_ResetPostFlourishSound;
//     char *m_TnFLoopSound;
//     char *m_RatchetForwardSound;
//     char *m_RatchetBackwardSound;
//     FLOAT m_FullVolumeYVel;
//     INT16 m_MaxVolumeChange;
//     undefined field24_0x52;
//     undefined field25_0x53;
//     FLOAT m_FinalSyncJointY;
//     struct tHandle m_Handle;
//     INT16 m_RatchetClickFCount;
//     INT16 m_RatchetClickBCount;
//     UINT8 m_Button;
//     UINT8 m_Flags;
//     undefined field32_0x72;
//     undefined field33_0x73;
// };
// 
// struct goIO_TandF__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goIO_TandF;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type GetRope;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
//     struct __vtbl_ptr_type GetMoveSystem;
//     struct __vtbl_ptr_type GetFightSystem;
// };
// 
// typedef struct GoldenFleece GoldenFleece, *PGoldenFleece;
// 
// struct GoldenFleece {
//     undefined field0_0x0;
// };
// 
// typedef struct goLensFlare goLensFlare, *PgoLensFlare;
// 
// typedef struct goLensFlare__vtable goLensFlare__vtable, *PgoLensFlare__vtable;
// 
// typedef struct goLensFlareArgs goLensFlareArgs, *PgoLensFlareArgs;
// 
// struct goLensFlare {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct goLensFlare__vtable *__vtable; /* Inherited from renFXScript */
//     struct goLensFlareArgs *m_pArgs;
//     struct goScript *m_pScript;
//     struct renTexture *m_pTexture;
//     FLOAT m_fSize;
//     FLOAT m_fSampleSize;
//     BOOL m_fxScriptActive;
// };
// 
// struct goLensFlareArgs {
//     FLOAT m_fSize;
//     FLOAT m_fSampleSize;
//     char m_sName[24];
// };
// 
// struct goLensFlare__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goLensFlare;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct GOListItem GOListItem, *PGOListItem;
// 
// struct GOListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct goGameObject *go;
// };
// 
// typedef struct goLoadParmBase goLoadParmBase, *PgoLoadParmBase;
// 
// struct goLoadParmBase {
//     UINT32 m_uID; /* Inherited from svrClientType */
// };
// 
// typedef struct goLoadParmClientContext goLoadParmClientContext, *PgoLoadParmClientContext;
// 
// struct goLoadParmClientContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT _uNumGameObjects;
//     struct stdDynaString _cGoParmName[1];
// };
// 
// typedef struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >, *PsvrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >;
// 
// typedef struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > goMasterContextBase;
// 
// typedef struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable, *PsvrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable;
// 
// struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter;
//     UINT32 m_uMaxConnectionsPerContext;
//     UINT32 m_uMaxClientsPerContext;
// };
// 
// struct svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct goMasterContextServer goMasterContextServer, *PgoMasterContextServer;
// 
// typedef struct goMasterContextServer__vtable goMasterContextServer__vtable, *PgoMasterContextServer__vtable;
// 
// struct goMasterContextServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goMasterContextServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct goMasterContextServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goMasterContextServer__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
// };
// 
// typedef struct goMirror goMirror, *PgoMirror;
// 
// typedef struct goMirrorArgs goMirrorArgs, *PgoMirrorArgs;
// 
// typedef struct renGROB renGROB, *PrenGROB;
// 
// typedef struct tMirror tMirror, *PtMirror;
// 
// typedef struct tMirror__vtable tMirror__vtable, *PtMirror__vtable;
// 
// struct goMirrorArgs {
//     BOOL m_bBlur;
//     BOOL m_bNoUserObjects;
// };
// 
// struct goMirror {
//     struct goMirrorArgs m_args;
//     struct renGROB *m_pGROB;
//     struct tMirror *m_pMirror[2];
// };
// 
// struct renGROB {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     undefined field18_0x20;
//     undefined field19_0x21;
//     undefined field20_0x22;
//     undefined field21_0x23;
//     undefined field22_0x24;
//     undefined field23_0x25;
//     undefined field24_0x26;
//     undefined field25_0x27;
//     undefined field26_0x28;
//     undefined field27_0x29;
//     undefined field28_0x2a;
//     undefined field29_0x2b;
//     undefined field30_0x2c;
//     undefined field31_0x2d;
//     undefined field32_0x2e;
//     undefined field33_0x2f;
//     undefined field34_0x30;
//     undefined field35_0x31;
//     undefined field36_0x32;
//     undefined field37_0x33;
//     undefined field38_0x34;
//     undefined field39_0x35;
//     undefined field40_0x36;
//     undefined field41_0x37;
//     undefined field42_0x38;
//     undefined field43_0x39;
//     undefined field44_0x3a;
//     undefined field45_0x3b;
//     undefined field46_0x3c;
//     undefined field47_0x3d;
//     undefined field48_0x3e;
//     undefined field49_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field52_0x48;
//     undefined field53_0x49;
//     undefined field54_0x4a;
//     undefined field55_0x4b;
//     undefined field56_0x4c;
//     undefined field57_0x4d;
//     undefined field58_0x4e;
//     undefined field59_0x4f;
//     undefined field60_0x50;
//     undefined field61_0x51;
//     undefined field62_0x52;
//     undefined field63_0x53;
//     undefined field64_0x54;
//     undefined field65_0x55;
//     undefined field66_0x56;
//     undefined field67_0x57;
//     undefined field68_0x58;
//     undefined field69_0x59;
//     undefined field70_0x5a;
//     undefined field71_0x5b;
//     undefined field72_0x5c;
//     undefined field73_0x5d;
//     undefined field74_0x5e;
//     undefined field75_0x5f;
//     INT16 fTransformID; /* Inherited from goAttachmentClient */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClient */
//     undefined field78_0x64;
//     undefined field79_0x65;
//     undefined field80_0x66;
//     undefined field81_0x67;
//     UINT64 fTimeStamp; /* Inherited from goAttachmentClient */
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     undefined field132_0xa4;
//     undefined field133_0xa5;
//     undefined field134_0xa6;
//     undefined field135_0xa7;
//     undefined field136_0xa8;
//     undefined field137_0xa9;
//     undefined field138_0xaa;
//     undefined field139_0xab;
//     undefined field140_0xac;
//     undefined field141_0xad;
//     undefined field142_0xae;
//     undefined field143_0xaf;
//     struct VUVec4 _vTint;
//     struct renGROBJFlags _GROBJFlags;
//     renGROBMatList *_pMaterialBuffer;
//     UINT32 _uLayerID;
//     UINT32 _uViewID;
//     undefined field149_0xdc;
//     undefined field150_0xdd;
//     undefined field151_0xde;
//     undefined field152_0xdf;
// };
// 
// struct tMirror__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetPortalMatrix;
// };
// 
// struct tMirror {
//     struct VUVec4 m_vPortalPlane; /* Inherited from tPortal */
//     struct VUVec4 m_vToPortal; /* Inherited from tPortal */
//     struct renGROB *m_pGROB; /* Inherited from tPortal */
//     BOOL m_bBlur; /* Inherited from tPortal */
//     BOOL m_bNoUserObjects; /* Inherited from tPortal */
//     struct tMirror__vtable *__vtable; /* Inherited from tPortal */
// };
// 
// typedef struct goParmBase goParmBase, *PgoParmBase;
// 
// typedef struct goParmBase goParm;
// 
// struct goParmBase {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     char _cName[24];
// };
// 
// typedef struct goPassive goPassive, *PgoPassive;
// 
// typedef struct goPassive__vtable goPassive__vtable, *PgoPassive__vtable;
// 
// typedef struct tPassive tPassive, *PtPassive;
// 
// typedef struct tFlyingSystem tFlyingSystem, *PtFlyingSystem;
// 
// typedef struct tFlyingSystem__vtable tFlyingSystem__vtable, *PtFlyingSystem__vtable;
// 
// struct tPassive {
//     char *m_GOName; /* Inherited from tSoldierBase */
//     FLOAT m_PlaybackSpeedScale; /* Inherited from tSoldierBase */
//     FLOAT m_TweenTimeScale; /* Inherited from tSoldierBase */
//     UINT8 m_SoldierType; /* Inherited from tSoldierBase */
//     undefined field4_0xd;
//     UINT16 m_Flags; /* Inherited from tSoldierBase */
//     struct tAttachments **m_AttachmentList; /* Inherited from tSoldierBase */
//     struct tCameraTarget *m_Targets; /* Inherited from tSoldierBase */
//     FLOAT m_Scale; /* Inherited from tSoldierBase */
//     FLOAT m_Mass; /* Inherited from tSoldierBase */
//     FLOAT m_Friction; /* Inherited from tSoldierBase */
//     FLOAT m_Radius; /* Inherited from tSoldierBase */
//     FLOAT m_Height; /* Inherited from tSoldierBase */
//     FLOAT m_Buoyancy; /* Inherited from tSoldierBase */
//     FLOAT m_StepHeight; /* Inherited from tSoldierBase */
//     FLOAT m_StepHeightDown; /* Inherited from tSoldierBase */
//     FLOAT m_TerminalVel; /* Inherited from tSoldierBase */
//     FLOAT m_HighFallVel; /* Inherited from tSoldierBase */
//     FLOAT m_InAirAcc; /* Inherited from tSoldierBase */
//     FLOAT m_DeathFadeToBlackTime; /* Inherited from tSoldierBase */
//     FLOAT m_DeathFadeBlackToGoneTime; /* Inherited from tSoldierBase */
//     char *m_DeathEffect; /* Inherited from tSoldierBase */
//     FLOAT m_FreezeResistance; /* Inherited from tSoldierBase */
//     struct tBranch *m_FreezeMove; /* Inherited from tSoldierBase */
//     char *m_FrozenGOName; /* Inherited from tSoldierBase */
//     char *m_FrozenFXName; /* Inherited from tSoldierBase */
//     char *m_HeadTrackJoint; /* Inherited from tSoldierBase */
//     FLOAT m_HeadTrackJointOrientX; /* Inherited from tSoldierBase */
//     FLOAT m_HeadTrackMaxAngle; /* Inherited from tSoldierBase */
//     struct tHandle *m_Handle;
// };
// 
struct tFlyingSystem {
    struct VUMat4 m_mMovement;
    struct tFlyingSystem__vtable *__vtable;
    undefined field2_0x44;
    undefined field3_0x45;
    undefined field4_0x46;
    undefined field5_0x47;
    undefined field6_0x48;
    undefined field7_0x49;
    undefined field8_0x4a;
    undefined field9_0x4b;
    undefined field10_0x4c;
    undefined field11_0x4d;
    undefined field12_0x4e;
    undefined field13_0x4f;
};
// 
// struct goPassive {
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goPassive__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vVelocity; /* Inherited from goCreature */
//     struct VUVec4 m_vImpulse; /* Inherited from goCreature */
//     struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
//     struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
//     struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field45_0x1e8;
//     undefined field46_0x1e9;
//     undefined field47_0x1ea;
//     undefined field48_0x1eb;
//     undefined field49_0x1ec;
//     undefined field50_0x1ed;
//     undefined field51_0x1ee;
//     undefined field52_0x1ef;
//     struct VUMat4 m_mMovingPlatform; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vMovingPlatformOffset; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vGroundNormal; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vWallNormal; /* Inherited from goCreatureCollision */
//     FLOAT m_fWaterLevel; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pGroundATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWallATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWaterATR; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pGroundWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWallWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWaterWC; /* Inherited from goCreatureCollision */
//     struct goGameObject *m_pGroundGO; /* Inherited from goCreatureCollision */
//     UINT32 m_uGroundGOJointID; /* Inherited from goCreatureCollision */
//     UINT32 m_uNoCollisionType; /* Inherited from goCreatureCollision */
//     UINT32 m_uIgnoreSheetBits; /* Inherited from goCreatureCollision */
//     INT16 m_iHeadTrackJointIdx; /* Inherited from goCreatureCollision */
//     INT16 m_wDummy; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackJointOrientX; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackMaxAngle; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackAmount; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackTargetAmount; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vCurrentSpeed;
//     struct VUVec4 m_vDamageDir;
//     FLOAT m_fDamagePoints;
//     UINT32 m_uDamageMaterialFX;
//     struct tPassive *m_pPassiveTweaks;
//     struct tAnimSystem *m_pAnimSystem;
//     struct tFlyingSystem *m_pFlyingSystem;
//     struct tEffectSystem *m_pEffectSystem;
//     struct tHandleSystem *m_pHandleSystem;
//     FLOAT m_fFreezeResistance;
//     FLOAT m_fMaxFreezeResistance;
//     struct goGameObject *m_pFrozenStatue;
//     FLOAT m_fGeneralTimer;
//     FLOAT m_fIgnoreMotionTimer;
//     FLOAT m_fNoDamageTimer;
//     FLOAT m_fActiveTimer;
//     UINT32 m_dwFlags;
//     INT16 m_iTargetingJointIdx;
//     UINT8 m_iSaveData;
//     undefined field93_0x2ff;
// };
// 
// struct goPassive__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goPassive;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type GetRope;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
// };
// 
struct tFlyingSystem__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tFlyingSystem;
};
// 
// typedef struct goPassiveAI goPassiveAI, *PgoPassiveAI;
// 
// typedef struct goPassiveAI__vtable goPassiveAI__vtable, *PgoPassiveAI__vtable;
// 
// struct goPassiveAI__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goPassiveAI;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Destroy;
//     struct __vtbl_ptr_type GetStartBranch;
//     struct __vtbl_ptr_type SetSaveData;
//     struct __vtbl_ptr_type GetSaveData;
//     struct __vtbl_ptr_type GetControlSystem;
//     struct __vtbl_ptr_type IsDead;
//     struct __vtbl_ptr_type IsFreezable;
//     struct __vtbl_ptr_type IsBreakable;
//     struct __vtbl_ptr_type ResetTweaks;
//     struct __vtbl_ptr_type UpdateI;
//     struct __vtbl_ptr_type EnterStateI;
//     struct __vtbl_ptr_type IsStateTerminatingI;
//     struct __vtbl_ptr_type ExitStateI;
// };
// 
// struct goPassiveAI {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goPassiveAI__vtable *__vtable; /* Inherited from goCreatureController */
//     struct tCreature *m_pTweaks; /* Inherited from goReactiveController */
//     struct tSoldierBase *m_pBodyTweaks; /* Inherited from goReactiveController */
//     struct tAIBase *m_pAITweaks; /* Inherited from goReactiveController */
//     UINT32 m_dwFlags; /* Inherited from goReactiveController */
//     enum eState__1_19513 m_eState; /* Inherited from goReactiveController */
//     FLOAT m_fTimer; /* Inherited from goReactiveController */
//     struct goHandle m_hTarget; /* Inherited from goReactiveController */
//     struct goHandle m_hKillTarget; /* Inherited from goReactiveController */
//     struct tBranch *m_pStartBranch; /* Inherited from goReactiveController */
// };
// 
// typedef struct goPegasus goPegasus, *PgoPegasus;
// 
// typedef struct goPegasus__vtable goPegasus__vtable, *PgoPegasus__vtable;
// 
// typedef struct renLight renLight, *PrenLight;
// 
// typedef struct tActionPegasusBoost tActionPegasusBoost, *PtActionPegasusBoost;
// 
// struct goPegasus {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct goPegasus__vtable *__vtable; /* Inherited from goCreatureController */
//     struct wypClient *m_pPatrolClient; /* Inherited from goAIBase */
//     struct tDecisionTree m_DTree; /* Inherited from goAIBase */
//     float m_fSiteOffset[4]; /* Inherited from goAIBase */
//     struct goAIWorldRep *m_pWorldRep; /* Inherited from goAIBase */
//     INT16 m_iCurSite; /* Inherited from goAIBase */
//     UINT16 m_iStartSite; /* Inherited from goAIBase */
//     INT16 m_iPatrolSite; /* Inherited from goAIBase */
//     undefined field10_0x36;
//     undefined field11_0x37;
//     undefined field12_0x38;
//     undefined field13_0x39;
//     undefined field14_0x3a;
//     undefined field15_0x3b;
//     undefined field16_0x3c;
//     undefined field17_0x3d;
//     undefined field18_0x3e;
//     undefined field19_0x3f;
//     undefined field20_0x40;
//     undefined field21_0x41;
//     undefined field22_0x42;
//     undefined field23_0x43;
//     undefined field24_0x44;
//     undefined field25_0x45;
//     undefined field26_0x46;
//     undefined field27_0x47;
//     undefined field28_0x48;
//     undefined field29_0x49;
//     undefined field30_0x4a;
//     undefined field31_0x4b;
//     undefined field32_0x4c;
//     undefined field33_0x4d;
//     undefined field34_0x4e;
//     undefined field35_0x4f;
//     undefined field36_0x50;
//     undefined field37_0x51;
//     undefined field38_0x52;
//     undefined field39_0x53;
//     undefined field40_0x54;
//     undefined field41_0x55;
//     undefined field42_0x56;
//     undefined field43_0x57;
//     undefined field44_0x58;
//     undefined field45_0x59;
//     undefined field46_0x5a;
//     undefined field47_0x5b;
//     undefined field48_0x5c;
//     undefined field49_0x5d;
//     undefined field50_0x5e;
//     undefined field51_0x5f;
//     undefined field52_0x60;
//     undefined field53_0x61;
//     undefined field54_0x62;
//     undefined field55_0x63;
//     undefined field56_0x64;
//     undefined field57_0x65;
//     undefined field58_0x66;
//     undefined field59_0x67;
//     undefined field60_0x68;
//     undefined field61_0x69;
//     undefined field62_0x6a;
//     undefined field63_0x6b;
//     undefined field64_0x6c;
//     undefined field65_0x6d;
//     undefined field66_0x6e;
//     undefined field67_0x6f;
//     undefined field68_0x70;
//     undefined field69_0x71;
//     undefined field70_0x72;
//     undefined field71_0x73;
//     undefined field72_0x74;
//     undefined field73_0x75;
//     undefined field74_0x76;
//     undefined field75_0x77;
//     undefined field76_0x78;
//     undefined field77_0x79;
//     undefined field78_0x7a;
//     undefined field79_0x7b;
//     undefined field80_0x7c;
//     undefined field81_0x7d;
//     undefined field82_0x7e;
//     undefined field83_0x7f;
//     undefined field84_0x80;
//     undefined field85_0x81;
//     undefined field86_0x82;
//     undefined field87_0x83;
//     undefined field88_0x84;
//     undefined field89_0x85;
//     undefined field90_0x86;
//     undefined field91_0x87;
//     undefined field92_0x88;
//     undefined field93_0x89;
//     undefined field94_0x8a;
//     undefined field95_0x8b;
//     undefined field96_0x8c;
//     undefined field97_0x8d;
//     undefined field98_0x8e;
//     undefined field99_0x8f;
//     undefined field100_0x90;
//     undefined field101_0x91;
//     undefined field102_0x92;
//     undefined field103_0x93;
//     undefined field104_0x94;
//     undefined field105_0x95;
//     undefined field106_0x96;
//     undefined field107_0x97;
//     undefined field108_0x98;
//     undefined field109_0x99;
//     undefined field110_0x9a;
//     undefined field111_0x9b;
//     undefined field112_0x9c;
//     undefined field113_0x9d;
//     undefined field114_0x9e;
//     undefined field115_0x9f;
//     undefined field116_0xa0;
//     undefined field117_0xa1;
//     undefined field118_0xa2;
//     undefined field119_0xa3;
//     undefined field120_0xa4;
//     undefined field121_0xa5;
//     undefined field122_0xa6;
//     undefined field123_0xa7;
//     undefined field124_0xa8;
//     undefined field125_0xa9;
//     undefined field126_0xaa;
//     undefined field127_0xab;
//     undefined field128_0xac;
//     undefined field129_0xad;
//     undefined field130_0xae;
//     undefined field131_0xaf;
//     undefined field132_0xb0;
//     undefined field133_0xb1;
//     undefined field134_0xb2;
//     undefined field135_0xb3;
//     undefined field136_0xb4;
//     undefined field137_0xb5;
//     undefined field138_0xb6;
//     undefined field139_0xb7;
//     undefined field140_0xb8;
//     undefined field141_0xb9;
//     undefined field142_0xba;
//     undefined field143_0xbb;
//     undefined field144_0xbc;
//     undefined field145_0xbd;
//     undefined field146_0xbe;
//     undefined field147_0xbf;
//     undefined field148_0xc0;
//     undefined field149_0xc1;
//     undefined field150_0xc2;
//     undefined field151_0xc3;
//     undefined field152_0xc4;
//     undefined field153_0xc5;
//     undefined field154_0xc6;
//     undefined field155_0xc7;
//     undefined field156_0xc8;
//     undefined field157_0xc9;
//     undefined field158_0xca;
//     undefined field159_0xcb;
//     undefined field160_0xcc;
//     undefined field161_0xcd;
//     undefined field162_0xce;
//     undefined field163_0xcf;
//     undefined field164_0xd0;
//     undefined field165_0xd1;
//     undefined field166_0xd2;
//     undefined field167_0xd3;
//     undefined field168_0xd4;
//     undefined field169_0xd5;
//     undefined field170_0xd6;
//     undefined field171_0xd7;
//     undefined field172_0xd8;
//     undefined field173_0xd9;
//     undefined field174_0xda;
//     undefined field175_0xdb;
//     undefined field176_0xdc;
//     undefined field177_0xdd;
//     undefined field178_0xde;
//     undefined field179_0xdf;
//     undefined field180_0xe0;
//     undefined field181_0xe1;
//     undefined field182_0xe2;
//     undefined field183_0xe3;
//     undefined field184_0xe4;
//     undefined field185_0xe5;
//     undefined field186_0xe6;
//     undefined field187_0xe7;
//     undefined field188_0xe8;
//     undefined field189_0xe9;
//     undefined field190_0xea;
//     undefined field191_0xeb;
//     undefined field192_0xec;
//     undefined field193_0xed;
//     undefined field194_0xee;
//     undefined field195_0xef;
//     undefined field196_0xf0;
//     undefined field197_0xf1;
//     undefined field198_0xf2;
//     undefined field199_0xf3;
//     undefined field200_0xf4;
//     undefined field201_0xf5;
//     undefined field202_0xf6;
//     undefined field203_0xf7;
//     undefined field204_0xf8;
//     undefined field205_0xf9;
//     undefined field206_0xfa;
//     undefined field207_0xfb;
//     undefined field208_0xfc;
//     undefined field209_0xfd;
//     undefined field210_0xfe;
//     undefined field211_0xff;
//     undefined field212_0x100;
//     undefined field213_0x101;
//     undefined field214_0x102;
//     undefined field215_0x103;
//     undefined field216_0x104;
//     undefined field217_0x105;
//     undefined field218_0x106;
//     undefined field219_0x107;
//     undefined field220_0x108;
//     undefined field221_0x109;
//     undefined field222_0x10a;
//     undefined field223_0x10b;
//     undefined field224_0x10c;
//     undefined field225_0x10d;
//     undefined field226_0x10e;
//     undefined field227_0x10f;
//     undefined field228_0x110;
//     undefined field229_0x111;
//     undefined field230_0x112;
//     undefined field231_0x113;
//     undefined field232_0x114;
//     undefined field233_0x115;
//     undefined field234_0x116;
//     undefined field235_0x117;
//     undefined field236_0x118;
//     undefined field237_0x119;
//     undefined field238_0x11a;
//     undefined field239_0x11b;
//     undefined field240_0x11c;
//     undefined field241_0x11d;
//     undefined field242_0x11e;
//     undefined field243_0x11f;
//     undefined field244_0x120;
//     undefined field245_0x121;
//     undefined field246_0x122;
//     undefined field247_0x123;
//     undefined field248_0x124;
//     undefined field249_0x125;
//     undefined field250_0x126;
//     undefined field251_0x127;
//     undefined field252_0x128;
//     undefined field253_0x129;
//     undefined field254_0x12a;
//     undefined field255_0x12b;
//     undefined field256_0x12c;
//     undefined field257_0x12d;
//     undefined field258_0x12e;
//     undefined field259_0x12f;
//     undefined field260_0x130;
//     undefined field261_0x131;
//     undefined field262_0x132;
//     undefined field263_0x133;
//     undefined field264_0x134;
//     undefined field265_0x135;
//     undefined field266_0x136;
//     undefined field267_0x137;
//     undefined field268_0x138;
//     undefined field269_0x139;
//     undefined field270_0x13a;
//     undefined field271_0x13b;
//     undefined field272_0x13c;
//     undefined field273_0x13d;
//     undefined field274_0x13e;
//     undefined field275_0x13f;
//     undefined field276_0x140;
//     undefined field277_0x141;
//     undefined field278_0x142;
//     undefined field279_0x143;
//     undefined field280_0x144;
//     undefined field281_0x145;
//     undefined field282_0x146;
//     undefined field283_0x147;
//     undefined field284_0x148;
//     undefined field285_0x149;
//     undefined field286_0x14a;
//     undefined field287_0x14b;
//     undefined field288_0x14c;
//     undefined field289_0x14d;
//     undefined field290_0x14e;
//     undefined field291_0x14f;
//     undefined field292_0x150;
//     undefined field293_0x151;
//     undefined field294_0x152;
//     undefined field295_0x153;
//     undefined field296_0x154;
//     undefined field297_0x155;
//     undefined field298_0x156;
//     undefined field299_0x157;
//     undefined field300_0x158;
//     undefined field301_0x159;
//     undefined field302_0x15a;
//     undefined field303_0x15b;
//     undefined field304_0x15c;
//     undefined field305_0x15d;
//     undefined field306_0x15e;
//     undefined field307_0x15f;
//     undefined field308_0x160;
//     undefined field309_0x161;
//     undefined field310_0x162;
//     undefined field311_0x163;
//     undefined field312_0x164;
//     undefined field313_0x165;
//     undefined field314_0x166;
//     undefined field315_0x167;
//     undefined field316_0x168;
//     undefined field317_0x169;
//     undefined field318_0x16a;
//     undefined field319_0x16b;
//     undefined field320_0x16c;
//     undefined field321_0x16d;
//     undefined field322_0x16e;
//     undefined field323_0x16f;
//     undefined field324_0x170;
//     undefined field325_0x171;
//     undefined field326_0x172;
//     undefined field327_0x173;
//     undefined field328_0x174;
//     undefined field329_0x175;
//     undefined field330_0x176;
//     undefined field331_0x177;
//     undefined field332_0x178;
//     undefined field333_0x179;
//     undefined field334_0x17a;
//     undefined field335_0x17b;
//     undefined field336_0x17c;
//     undefined field337_0x17d;
//     undefined field338_0x17e;
//     undefined field339_0x17f;
//     undefined field340_0x180;
//     undefined field341_0x181;
//     undefined field342_0x182;
//     undefined field343_0x183;
//     undefined field344_0x184;
//     undefined field345_0x185;
//     undefined field346_0x186;
//     undefined field347_0x187;
//     undefined field348_0x188;
//     undefined field349_0x189;
//     undefined field350_0x18a;
//     undefined field351_0x18b;
//     undefined field352_0x18c;
//     undefined field353_0x18d;
//     undefined field354_0x18e;
//     undefined field355_0x18f;
//     undefined field356_0x190;
//     undefined field357_0x191;
//     undefined field358_0x192;
//     undefined field359_0x193;
//     undefined field360_0x194;
//     undefined field361_0x195;
//     undefined field362_0x196;
//     undefined field363_0x197;
//     undefined field364_0x198;
//     undefined field365_0x199;
//     undefined field366_0x19a;
//     undefined field367_0x19b;
//     undefined field368_0x19c;
//     undefined field369_0x19d;
//     undefined field370_0x19e;
//     undefined field371_0x19f;
//     undefined field372_0x1a0;
//     undefined field373_0x1a1;
//     undefined field374_0x1a2;
//     undefined field375_0x1a3;
//     undefined field376_0x1a4;
//     undefined field377_0x1a5;
//     undefined field378_0x1a6;
//     undefined field379_0x1a7;
//     undefined field380_0x1a8;
//     undefined field381_0x1a9;
//     undefined field382_0x1aa;
//     undefined field383_0x1ab;
//     undefined field384_0x1ac;
//     undefined field385_0x1ad;
//     undefined field386_0x1ae;
//     undefined field387_0x1af;
//     undefined field388_0x1b0;
//     undefined field389_0x1b1;
//     undefined field390_0x1b2;
//     undefined field391_0x1b3;
//     undefined field392_0x1b4;
//     undefined field393_0x1b5;
//     undefined field394_0x1b6;
//     undefined field395_0x1b7;
//     undefined field396_0x1b8;
//     undefined field397_0x1b9;
//     undefined field398_0x1ba;
//     undefined field399_0x1bb;
//     undefined field400_0x1bc;
//     undefined field401_0x1bd;
//     undefined field402_0x1be;
//     undefined field403_0x1bf;
//     undefined field404_0x1c0;
//     undefined field405_0x1c1;
//     undefined field406_0x1c2;
//     undefined field407_0x1c3;
//     undefined field408_0x1c4;
//     undefined field409_0x1c5;
//     undefined field410_0x1c6;
//     undefined field411_0x1c7;
//     undefined field412_0x1c8;
//     undefined field413_0x1c9;
//     undefined field414_0x1ca;
//     undefined field415_0x1cb;
//     undefined field416_0x1cc;
//     undefined field417_0x1cd;
//     undefined field418_0x1ce;
//     undefined field419_0x1cf;
//     undefined field420_0x1d0;
//     undefined field421_0x1d1;
//     undefined field422_0x1d2;
//     undefined field423_0x1d3;
//     undefined field424_0x1d4;
//     undefined field425_0x1d5;
//     undefined field426_0x1d6;
//     undefined field427_0x1d7;
//     undefined field428_0x1d8;
//     undefined field429_0x1d9;
//     undefined field430_0x1da;
//     undefined field431_0x1db;
//     undefined field432_0x1dc;
//     undefined field433_0x1dd;
//     undefined field434_0x1de;
//     undefined field435_0x1df;
//     undefined field436_0x1e0;
//     undefined field437_0x1e1;
//     undefined field438_0x1e2;
//     undefined field439_0x1e3;
//     undefined field440_0x1e4;
//     undefined field441_0x1e5;
//     undefined field442_0x1e6;
//     undefined field443_0x1e7;
//     undefined field444_0x1e8;
//     undefined field445_0x1e9;
//     undefined field446_0x1ea;
//     undefined field447_0x1eb;
//     undefined field448_0x1ec;
//     undefined field449_0x1ed;
//     undefined field450_0x1ee;
//     undefined field451_0x1ef;
//     undefined field452_0x1f0;
//     undefined field453_0x1f1;
//     undefined field454_0x1f2;
//     undefined field455_0x1f3;
//     undefined field456_0x1f4;
//     undefined field457_0x1f5;
//     undefined field458_0x1f6;
//     undefined field459_0x1f7;
//     undefined field460_0x1f8;
//     undefined field461_0x1f9;
//     undefined field462_0x1fa;
//     undefined field463_0x1fb;
//     undefined field464_0x1fc;
//     undefined field465_0x1fd;
//     undefined field466_0x1fe;
//     undefined field467_0x1ff;
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goPegasus__vtable *__vtable; /* Inherited from goBase */
//     struct tCreature *m_pCTweaks; /* Inherited from goCreature */
//     struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
//     struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
//     struct VUMat4 m_mMotion; /* Inherited from goCreature */
//     struct VUMat4 m_mPhysical; /* Inherited from goCreature */
//     struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
//     struct VUVec4 m_vDirectedPoint; /* Inherited from goPegasusAI */
//     struct VUVec4 m_vDirectedAlignment; /* Inherited from goPegasusAI */
//     struct VUVec4 m_vPvTargetPos; /* Inherited from goPegasusAI */
//     struct VUVec4 m_vMod; /* Inherited from goPegasusAI */
//     FLOAT m_fMod; /* Inherited from goPegasusAI */
//     undefined field481_0x324;
//     undefined field482_0x325;
//     undefined field483_0x326;
//     undefined field484_0x327;
//     undefined field485_0x328;
//     undefined field486_0x329;
//     undefined field487_0x32a;
//     undefined field488_0x32b;
//     undefined field489_0x32c;
//     undefined field490_0x32d;
//     undefined field491_0x32e;
//     undefined field492_0x32f;
//     undefined field493_0x330;
//     undefined field494_0x331;
//     undefined field495_0x332;
//     undefined field496_0x333;
//     undefined field497_0x334;
//     undefined field498_0x335;
//     undefined field499_0x336;
//     undefined field500_0x337;
//     undefined field501_0x338;
//     undefined field502_0x339;
//     undefined field503_0x33a;
//     undefined field504_0x33b;
//     undefined field505_0x33c;
//     undefined field506_0x33d;
//     undefined field507_0x33e;
//     undefined field508_0x33f;
//     undefined field509_0x340;
//     undefined field510_0x341;
//     undefined field511_0x342;
//     undefined field512_0x343;
//     undefined field513_0x344;
//     undefined field514_0x345;
//     undefined field515_0x346;
//     undefined field516_0x347;
//     undefined field517_0x348;
//     undefined field518_0x349;
//     undefined field519_0x34a;
//     undefined field520_0x34b;
//     undefined field521_0x34c;
//     undefined field522_0x34d;
//     undefined field523_0x34e;
//     undefined field524_0x34f;
//     struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
//     FLOAT m_fMaxSpeed; /* Inherited from goCreature */
//     FLOAT m_fScale; /* Inherited from goCreature */
//     FLOAT m_fTimeScale; /* Inherited from goCreature */
//     UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
//     UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
//     FLOAT m_fHitPoints; /* Inherited from goCreature */
//     FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
//     FLOAT m_fFreezeAmount; /* Inherited from goCreature */
//     struct goHandle m_hFreezeSource; /* Inherited from goCreature */
//     FLOAT m_fRampHitPoints; /* Inherited from goCreature */
//     struct goCreature *m_pChildCreature; /* Inherited from goCreature */
//     struct goCreature *m_pParentCreature; /* Inherited from goCreature */
//     INT32 m_iAttachedToJointID; /* Inherited from goCreature */
//     UINT32 m_uAttachmentType; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
//     FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
//     UINT32 m_CameraTargets; /* Inherited from goCreature */
//     struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
//     struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
//     struct renModel *m_pModel; /* Inherited from goCreature */
//     struct renShadowClient *m_pShadow; /* Inherited from goCreature */
//     struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
//     struct goHandle m_hMountCreature; /* Inherited from goCreature */
//     struct goHandle m_hRiderCreature; /* Inherited from goCreature */
//     struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
//     struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
//     struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
//     struct CShield *m_pShield; /* Inherited from goCreature */
//     struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
//     struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
//     FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
//     undefined field557_0x3e8;
//     undefined field558_0x3e9;
//     undefined field559_0x3ea;
//     undefined field560_0x3eb;
//     undefined field561_0x3ec;
//     undefined field562_0x3ed;
//     undefined field563_0x3ee;
//     undefined field564_0x3ef;
//     struct VUMat4 m_mMovingPlatform; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vMovingPlatformOffset; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vGroundNormal; /* Inherited from goCreatureCollision */
//     struct VUVec4 m_vWallNormal; /* Inherited from goCreatureCollision */
//     FLOAT m_fWaterLevel; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pGroundATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWallATR; /* Inherited from goCreatureCollision */
//     struct AtrValue *m_pWaterATR; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pGroundWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWallWC; /* Inherited from goCreatureCollision */
//     struct wadContext *m_pWaterWC; /* Inherited from goCreatureCollision */
//     struct goGameObject *m_pGroundGO; /* Inherited from goCreatureCollision */
//     UINT32 m_uGroundGOJointID; /* Inherited from goCreatureCollision */
//     UINT32 m_uNoCollisionType; /* Inherited from goCreatureCollision */
//     UINT32 m_uIgnoreSheetBits; /* Inherited from goCreatureCollision */
//     INT16 m_iHeadTrackJointIdx; /* Inherited from goCreatureCollision */
//     INT16 m_wDummy; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackJointOrientX; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackMaxAngle; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackAmount; /* Inherited from goCreatureCollision */
//     FLOAT m_fHeadTrackTargetAmount; /* Inherited from goCreatureCollision */
//     undefined field586_0x4a0;
//     undefined field587_0x4a1;
//     undefined field588_0x4a2;
//     undefined field589_0x4a3;
//     undefined field590_0x4a4;
//     undefined field591_0x4a5;
//     undefined field592_0x4a6;
//     undefined field593_0x4a7;
//     undefined field594_0x4a8;
//     undefined field595_0x4a9;
//     undefined field596_0x4aa;
//     undefined field597_0x4ab;
//     undefined field598_0x4ac;
//     undefined field599_0x4ad;
//     undefined field600_0x4ae;
//     undefined field601_0x4af;
//     undefined field602_0x4b0;
//     undefined field603_0x4b1;
//     undefined field604_0x4b2;
//     undefined field605_0x4b3;
//     undefined field606_0x4b4;
//     undefined field607_0x4b5;
//     undefined field608_0x4b6;
//     undefined field609_0x4b7;
//     undefined field610_0x4b8;
//     undefined field611_0x4b9;
//     undefined field612_0x4ba;
//     undefined field613_0x4bb;
//     undefined field614_0x4bc;
//     undefined field615_0x4bd;
//     undefined field616_0x4be;
//     undefined field617_0x4bf;
//     undefined field618_0x4c0;
//     undefined field619_0x4c1;
//     undefined field620_0x4c2;
//     undefined field621_0x4c3;
//     undefined field622_0x4c4;
//     undefined field623_0x4c5;
//     undefined field624_0x4c6;
//     undefined field625_0x4c7;
//     undefined field626_0x4c8;
//     undefined field627_0x4c9;
//     undefined field628_0x4ca;
//     undefined field629_0x4cb;
//     undefined field630_0x4cc;
//     undefined field631_0x4cd;
//     undefined field632_0x4ce;
//     undefined field633_0x4cf;
//     undefined field634_0x4d0;
//     undefined field635_0x4d1;
//     undefined field636_0x4d2;
//     undefined field637_0x4d3;
//     undefined field638_0x4d4;
//     undefined field639_0x4d5;
//     undefined field640_0x4d6;
//     undefined field641_0x4d7;
//     undefined field642_0x4d8;
//     undefined field643_0x4d9;
//     undefined field644_0x4da;
//     undefined field645_0x4db;
//     undefined field646_0x4dc;
//     undefined field647_0x4dd;
//     undefined field648_0x4de;
//     undefined field649_0x4df;
//     undefined field650_0x4e0;
//     undefined field651_0x4e1;
//     undefined field652_0x4e2;
//     undefined field653_0x4e3;
//     undefined field654_0x4e4;
//     undefined field655_0x4e5;
//     undefined field656_0x4e6;
//     undefined field657_0x4e7;
//     undefined field658_0x4e8;
//     undefined field659_0x4e9;
//     undefined field660_0x4ea;
//     undefined field661_0x4eb;
//     undefined field662_0x4ec;
//     undefined field663_0x4ed;
//     undefined field664_0x4ee;
//     undefined field665_0x4ef;
//     undefined field666_0x4f0;
//     undefined field667_0x4f1;
//     undefined field668_0x4f2;
//     undefined field669_0x4f3;
//     undefined field670_0x4f4;
//     undefined field671_0x4f5;
//     undefined field672_0x4f6;
//     undefined field673_0x4f7;
//     undefined field674_0x4f8;
//     undefined field675_0x4f9;
//     undefined field676_0x4fa;
//     undefined field677_0x4fb;
//     undefined field678_0x4fc;
//     undefined field679_0x4fd;
//     undefined field680_0x4fe;
//     undefined field681_0x4ff;
//     undefined field682_0x500;
//     undefined field683_0x501;
//     undefined field684_0x502;
//     undefined field685_0x503;
//     undefined field686_0x504;
//     undefined field687_0x505;
//     undefined field688_0x506;
//     undefined field689_0x507;
//     undefined field690_0x508;
//     undefined field691_0x509;
//     undefined field692_0x50a;
//     undefined field693_0x50b;
//     undefined field694_0x50c;
//     undefined field695_0x50d;
//     undefined field696_0x50e;
//     undefined field697_0x50f;
//     undefined field698_0x510;
//     undefined field699_0x511;
//     undefined field700_0x512;
//     undefined field701_0x513;
//     undefined field702_0x514;
//     undefined field703_0x515;
//     undefined field704_0x516;
//     undefined field705_0x517;
//     undefined field706_0x518;
//     undefined field707_0x519;
//     undefined field708_0x51a;
//     undefined field709_0x51b;
//     undefined field710_0x51c;
//     undefined field711_0x51d;
//     undefined field712_0x51e;
//     undefined field713_0x51f;
//     undefined field714_0x520;
//     undefined field715_0x521;
//     undefined field716_0x522;
//     undefined field717_0x523;
//     undefined field718_0x524;
//     undefined field719_0x525;
//     undefined field720_0x526;
//     undefined field721_0x527;
//     undefined field722_0x528;
//     undefined field723_0x529;
//     undefined field724_0x52a;
//     undefined field725_0x52b;
//     undefined field726_0x52c;
//     undefined field727_0x52d;
//     undefined field728_0x52e;
//     undefined field729_0x52f;
//     undefined field730_0x530;
//     undefined field731_0x531;
//     undefined field732_0x532;
//     undefined field733_0x533;
//     undefined field734_0x534;
//     undefined field735_0x535;
//     undefined field736_0x536;
//     undefined field737_0x537;
//     undefined field738_0x538;
//     undefined field739_0x539;
//     undefined field740_0x53a;
//     undefined field741_0x53b;
//     undefined field742_0x53c;
//     undefined field743_0x53d;
//     undefined field744_0x53e;
//     undefined field745_0x53f;
//     undefined field746_0x540;
//     undefined field747_0x541;
//     undefined field748_0x542;
//     undefined field749_0x543;
//     undefined field750_0x544;
//     undefined field751_0x545;
//     undefined field752_0x546;
//     undefined field753_0x547;
//     undefined field754_0x548;
//     undefined field755_0x549;
//     undefined field756_0x54a;
//     undefined field757_0x54b;
//     undefined field758_0x54c;
//     undefined field759_0x54d;
//     undefined field760_0x54e;
//     undefined field761_0x54f;
//     undefined field762_0x550;
//     undefined field763_0x551;
//     undefined field764_0x552;
//     undefined field765_0x553;
//     undefined field766_0x554;
//     undefined field767_0x555;
//     undefined field768_0x556;
//     undefined field769_0x557;
//     undefined field770_0x558;
//     undefined field771_0x559;
//     undefined field772_0x55a;
//     undefined field773_0x55b;
//     undefined field774_0x55c;
//     undefined field775_0x55d;
//     undefined field776_0x55e;
//     undefined field777_0x55f;
//     undefined field778_0x560;
//     undefined field779_0x561;
//     undefined field780_0x562;
//     undefined field781_0x563;
//     undefined field782_0x564;
//     undefined field783_0x565;
//     undefined field784_0x566;
//     undefined field785_0x567;
//     undefined field786_0x568;
//     undefined field787_0x569;
//     undefined field788_0x56a;
//     undefined field789_0x56b;
//     undefined field790_0x56c;
//     undefined field791_0x56d;
//     undefined field792_0x56e;
//     undefined field793_0x56f;
//     undefined field794_0x570;
//     undefined field795_0x571;
//     undefined field796_0x572;
//     undefined field797_0x573;
//     undefined field798_0x574;
//     undefined field799_0x575;
//     undefined field800_0x576;
//     undefined field801_0x577;
//     undefined field802_0x578;
//     undefined field803_0x579;
//     undefined field804_0x57a;
//     undefined field805_0x57b;
//     undefined field806_0x57c;
//     undefined field807_0x57d;
//     undefined field808_0x57e;
//     undefined field809_0x57f;
//     undefined field810_0x580;
//     undefined field811_0x581;
//     undefined field812_0x582;
//     undefined field813_0x583;
//     undefined field814_0x584;
//     undefined field815_0x585;
//     undefined field816_0x586;
//     undefined field817_0x587;
//     undefined field818_0x588;
//     undefined field819_0x589;
//     undefined field820_0x58a;
//     undefined field821_0x58b;
//     undefined field822_0x58c;
//     undefined field823_0x58d;
//     undefined field824_0x58e;
//     undefined field825_0x58f;
//     undefined field826_0x590;
//     undefined field827_0x591;
//     undefined field828_0x592;
//     undefined field829_0x593;
//     undefined field830_0x594;
//     undefined field831_0x595;
//     undefined field832_0x596;
//     undefined field833_0x597;
//     undefined field834_0x598;
//     undefined field835_0x599;
//     undefined field836_0x59a;
//     undefined field837_0x59b;
//     undefined field838_0x59c;
//     undefined field839_0x59d;
//     undefined field840_0x59e;
//     undefined field841_0x59f;
//     undefined field842_0x5a0;
//     undefined field843_0x5a1;
//     undefined field844_0x5a2;
//     undefined field845_0x5a3;
//     undefined field846_0x5a4;
//     undefined field847_0x5a5;
//     undefined field848_0x5a6;
//     undefined field849_0x5a7;
//     undefined field850_0x5a8;
//     undefined field851_0x5a9;
//     undefined field852_0x5aa;
//     undefined field853_0x5ab;
//     undefined field854_0x5ac;
//     undefined field855_0x5ad;
//     undefined field856_0x5ae;
//     undefined field857_0x5af;
//     struct goPegasusAIVehicle m_PegVehicle; /* Inherited from goPegasusAI */
//     struct goPegasusAIDamage m_PegDamage; /* Inherited from goPegasusAI */
//     struct tAnimSystem *m_pAnimSystem; /* Inherited from goPegasusAI */
//     struct tEffectSystem *m_pEffectSystem; /* Inherited from goPegasusAI */
//     struct tPegasusAI *m_pTweaks; /* Inherited from goPegasusAI */
//     UINT32 m_iFlags; /* Inherited from goPegasusAI */
//     FLOAT m_fNonAttackPeriod; /* Inherited from goPegasusAI */
//     UINT16 m_iDestSite; /* Inherited from goPegasusAI */
//     UINT16 m_iState; /* Inherited from goPegasusAI */
//     BOOL m_bAllowOffScreen; /* Inherited from goPegasusAI */
//     undefined field868_0x64c;
//     undefined field869_0x64d;
//     undefined field870_0x64e;
//     undefined field871_0x64f;
//     struct renLight *m_pLight;
//     struct Client__1_9324 *m_pProjCam;
//     struct goGameObject *m_pTargetIcon;
//     undefined field875_0x65c;
//     undefined field876_0x65d;
//     undefined field877_0x65e;
//     undefined field878_0x65f;
//     struct VUMat4 m_mLastSplineMat;
//     struct VUVec4 m_vLocalMovement;
//     struct VUVec4 m_vImpulseVel;
//     struct tActionPegasusBoost *m_pBoostTwk;
//     FLOAT m_fCurrXAngle;
//     FLOAT m_fCurrZAngle;
//     FLOAT m_fReticlePosX;
//     FLOAT m_fReticlePosY;
//     FLOAT m_fReticleVelX;
//     FLOAT m_fReticleVelY;
//     FLOAT m_fRandomFlap;
//     FLOAT m_fNoTrackTimer;
//     FLOAT m_fMovementReduxFactor;
//     UINT32 m_iLastUpdateFrame;
//     UINT32 m_iFlags;
//     UINT32 m_iECZoneID;
//     struct goHandle m_hRamTarget;
//     FLOAT m_fBoostMultiplier;
//     FLOAT m_fBoostTime;
//     FLOAT m_fTime;
//     FLOAT m_fLockOnBlock;
//     struct anmPlayer *TurbPlayers[6];
//     UINT8 m_iSwarming;
//     undefined field902_0x721;
//     undefined field903_0x722;
//     undefined field904_0x723;
//     BOOL m_bDontConfuseLockedOn;
//     BOOL m_bPegInvisible;
//     UINT8 m_iPrePegMagicLevel;
//     undefined field908_0x72d;
//     undefined field909_0x72e;
//     undefined field910_0x72f;
// };
// 
// struct renLight {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     struct VUVec4 m_vWorldPos;
//     struct VUVec4 m_vWorldDir;
//     struct VUVec4 m_vNormalisedColor;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field16_0x48;
//     undefined field17_0x49;
//     undefined field18_0x4a;
//     undefined field19_0x4b;
//     undefined field20_0x4c;
//     undefined field21_0x4d;
//     undefined field22_0x4e;
//     undefined field23_0x4f;
//     undefined field24_0x50;
//     undefined field25_0x51;
//     undefined field26_0x52;
//     undefined field27_0x53;
//     undefined field28_0x54;
//     undefined field29_0x55;
//     undefined field30_0x56;
//     undefined field31_0x57;
//     undefined field32_0x58;
//     undefined field33_0x59;
//     undefined field34_0x5a;
//     undefined field35_0x5b;
//     undefined field36_0x5c;
//     undefined field37_0x5d;
//     undefined field38_0x5e;
//     undefined field39_0x5f;
//     undefined field40_0x60;
//     undefined field41_0x61;
//     undefined field42_0x62;
//     undefined field43_0x63;
//     undefined field44_0x64;
//     undefined field45_0x65;
//     undefined field46_0x66;
//     undefined field47_0x67;
//     undefined field48_0x68;
//     undefined field49_0x69;
//     undefined field50_0x6a;
//     undefined field51_0x6b;
//     undefined field52_0x6c;
//     undefined field53_0x6d;
//     undefined field54_0x6e;
//     undefined field55_0x6f;
//     undefined field56_0x70;
//     undefined field57_0x71;
//     undefined field58_0x72;
//     undefined field59_0x73;
//     undefined field60_0x74;
//     undefined field61_0x75;
//     undefined field62_0x76;
//     undefined field63_0x77;
//     undefined field64_0x78;
//     undefined field65_0x79;
//     undefined field66_0x7a;
//     undefined field67_0x7b;
//     undefined field68_0x7c;
//     undefined field69_0x7d;
//     undefined field70_0x7e;
//     undefined field71_0x7f;
//     struct VUVec4 m_vCameraOuterConePlanes[4];
//     INT32 m_iType;
//     FLOAT m_fMidRange;
//     FLOAT m_fMidIntensity;
//     FLOAT m_fRange;
//     FLOAT m_fInnerConeAngle;
//     FLOAT m_fOuterConeAngle;
//     FLOAT m_fSpotlightCoeff;
//     FLOAT m_fIntensityModulate;
//     FLOAT m_fLuminanceBias;
//     struct anmClient *m_pAnimClient;
//     struct anmParm *m_pAnimParm;
//     int padAlign16[1];
// };
// 
// struct tActionPegasusBoost {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_InitialCost;
//     FLOAT m_Multiplier;
//     FLOAT m_RampTime;
//     FLOAT m_DecelTime;
//     FLOAT m_RampCoefA;
//     FLOAT m_RampCoefB;
//     FLOAT m_RampCoefC;
//     FLOAT m_RampCoefD;
//     FLOAT m_Drain;
//     FLOAT m_PegasusMovementMult;
// };
// 
// struct goPegasus__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goPegasus;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type GetControlNormal;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type ClearVelocity;
//     struct __vtbl_ptr_type Recycle;
//     struct __vtbl_ptr_type AddVarsToVFS;
//     struct __vtbl_ptr_type RemoveWadContext;
//     struct __vtbl_ptr_type SubtractHitPoints;
//     struct __vtbl_ptr_type SetImpulse;
//     struct __vtbl_ptr_type GetCreatureControls;
//     struct __vtbl_ptr_type GetAnimSystem;
//     struct __vtbl_ptr_type GetAttachmentSystem;
//     struct __vtbl_ptr_type GetHandleSystem;
//     struct __vtbl_ptr_type GetEffectSystem;
//     struct __vtbl_ptr_type Disable;
//     struct __vtbl_ptr_type Enable;
//     struct __vtbl_ptr_type SetCircleSaveData;
//     struct __vtbl_ptr_type CanDoCombatMove;
//     struct __vtbl_ptr_type CanAutoAim;
//     struct __vtbl_ptr_type SetDamageInfo;
//     struct __vtbl_ptr_type GetMass;
//     struct __vtbl_ptr_type GetHeight;
//     struct __vtbl_ptr_type GetRadius;
//     struct __vtbl_ptr_type GetFreezeTimeLeft;
//     struct __vtbl_ptr_type GetFrozenRatio;
//     struct __vtbl_ptr_type IsFrozen;
//     struct __vtbl_ptr_type CreateFrozenIncarnation;
//     struct __vtbl_ptr_type GetGOName;
//     struct __vtbl_ptr_type PushableWeight;
//     struct __vtbl_ptr_type GetTargetingPos;
//     struct __vtbl_ptr_type DerivedTweaks;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetNavBranch;
//     struct __vtbl_ptr_type GetFirstNavBankMotionP;
//     struct __vtbl_ptr_type FindSound;
// };
// 
// typedef struct goPlayer goPlayer, *PgoPlayer;
// 
// typedef struct goPlayer__vtable goPlayer__vtable, *PgoPlayer__vtable;
// 
struct goPlayer__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type goPlayer;
    struct __vtbl_ptr_type GetDamageMultiplier;
    struct __vtbl_ptr_type IsCreatureDead;
    struct __vtbl_ptr_type QuickBlock;
};

typedef struct goPlayer {
    struct goCreature *m_pCreature; /* Inherited from goCreatureController */
    struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
    struct goPlayer__vtable *__vtable; /* Inherited from goCreatureController */
    FLOAT m_fDeadTime;
    FLOAT m_fNoJumpTime;
    FLOAT m_fRemovePromptDelay;
    FLOAT m_fWiggleMeter;
    FLOAT m_fWiggleLastXLeft;
    FLOAT m_fWiggleLastYLeft;
    INT32 m_iJoystickZone;
    FLOAT m_fHitCounter;
    FLOAT m_fHitCounterLastFrame;
    FLOAT m_fHitCounterTimer;
    struct tBranch *m_pCurrentFreezeMove;
    struct Emitter *m_pLowHealthSoundEmitter;
    FLOAT m_fLowHealthTimeToTrigger;
    FLOAT m_fLowHealthDeadTimer;
    struct goGameObject *m_pReticle;
    BOOL m_bReticleValid;
    UINT32 m_uHermesLineOfSightFrame;
    struct goHandle m_hHermesBeam;
    UINT32 m_iZone;
    INT32 m_iSavePointID;
    FLOAT m_fSavePointDist;
    struct renMaterial *m_pSavePointBeamMat;
    undefined field25_0x64;
    undefined field26_0x65;
    undefined field27_0x66;
    undefined field28_0x67;
    undefined field29_0x68;
    undefined field30_0x69;
    undefined field31_0x6a;
    undefined field32_0x6b;
    undefined field33_0x6c;
    undefined field34_0x6d;
    undefined field35_0x6e;
    undefined field36_0x6f;
    struct tValidityDisk m_ValidDisk;
    struct fxBoneData m_BoneData;
    FLOAT m_fMeterBarTime;
    UINT32 m_uBonusPoints;
    UINT32 m_uBonusMsgIdx;
    struct fxTrailClientParm *m_pBodyTrailClientParm;
    struct fxTrail *m_pBodyTrail;
    undefined field44_0x1a8;
    undefined field45_0x1a9;
    undefined field46_0x1aa;
    undefined field47_0x1ab;
    undefined field48_0x1ac;
    undefined field49_0x1ad;
    undefined field50_0x1ae;
    undefined field51_0x1af;
} goPlayer;
// 
// typedef struct goPrototypeLP goPrototypeLP, *PgoPrototypeLP;
// 
// struct goPrototypeLP {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT _uNumJoints;
//     UINT _uJointRootID;
//     UINT _uParmFlags;
//     UINT _uJointMatrixByteOffset;
//     struct anmJoint _joints[1];
// };
// 
// typedef struct goRopeSkinned goRopeSkinned, *PgoRopeSkinned;
// 
// typedef struct goRopeSkinned__vtable goRopeSkinned__vtable, *PgoRopeSkinned__vtable;
// 
// typedef struct Segment__1_19213 Segment__1_19213, *PSegment__1_19213;
// 
// typedef struct Weight Weight, *PWeight;
// 
// typedef struct goRopeSkinnedArgs goRopeSkinnedArgs, *PgoRopeSkinnedArgs;
// 
// typedef struct tRope tRope, *PtRope;
// 
// struct tRope {
//     FLOAT m_SegmentMass;
//     FLOAT m_SpringConstant;
//     FLOAT m_SpringDamping;
//     FLOAT m_SpringConstant2;
//     FLOAT m_SpringDamping2;
//     FLOAT m_BraceSpringConstant;
//     FLOAT m_BraceSpringDamping;
//     FLOAT m_GlobalDamping;
//     FLOAT m_Gravity;
//     INT8 m_OverSample;
//     undefined field10_0x25;
//     undefined field11_0x26;
//     undefined field12_0x27;
//     char *m_SlideSound;
//     char *m_GrabSound;
//     char *m_GrabEffect;
//     char *m_InitialGrabSound;
//     char *m_SwingSound;
//     UINT8 m_RopeDirType;
//     undefined field19_0x3d;
//     undefined field20_0x3e;
//     undefined field21_0x3f;
// };
// 
// struct Weight {
//     struct VUVec4 m_vWeightForce;
//     FLOAT m_fWeightDistAlongRope;
//     FLOAT m_fWeightMass;
//     FLOAT m_fWeightActualMass;
//     FLOAT m_fWeightRadius;
//     BOOL m_bWeightAttached;
//     undefined field6_0x24;
//     undefined field7_0x25;
//     undefined field8_0x26;
//     undefined field9_0x27;
//     undefined field10_0x28;
//     undefined field11_0x29;
//     undefined field12_0x2a;
//     undefined field13_0x2b;
//     undefined field14_0x2c;
//     undefined field15_0x2d;
//     undefined field16_0x2e;
//     undefined field17_0x2f;
// };
// 
// struct goRopeSkinned {
//     struct goGameObject *m_pGameObject; /* Inherited from goBase */
//     struct goRopeSkinned__vtable *__vtable; /* Inherited from goBase */
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 m_vPinPos;
//     struct VUVec4 m_vRopeSwingAxis;
//     struct VUVec4 m_vRopeOrigin;
//     INT32 m_iPinSegment;
//     struct Segment__1_19213 *m_pSegmentArray;
//     INT32 m_iRopeRootJointIdx;
//     struct CullSphere *m_pCullSphere;
//     INT32 m_iCullRootJointIdx;
//     INT32 m_iNumSegments;
//     FLOAT m_fSegmentLength;
//     FLOAT m_fStretchedSegmentLength;
//     FLOAT m_fStretchedRopeLength;
//     undefined field22_0x64;
//     undefined field23_0x65;
//     undefined field24_0x66;
//     undefined field25_0x67;
//     undefined field26_0x68;
//     undefined field27_0x69;
//     undefined field28_0x6a;
//     undefined field29_0x6b;
//     undefined field30_0x6c;
//     undefined field31_0x6d;
//     undefined field32_0x6e;
//     undefined field33_0x6f;
//     struct Weight m_aWeights[16];
//     INT32 m_iNumWeights;
//     UINT32 m_uFlags;
//     FLOAT m_fIdleTime;
//     FLOAT m_fActualGlobalDamping;
//     UINT32 m_uLastGameFrameCount;
//     struct goScript *m_pScript;
//     struct goRopeSkinnedArgs *m_pArgs;
//     struct tRope *m_pTweakers;
// };
// 
// struct goRopeSkinnedArgs {
//     char m_sTweakName[24];
//     FLOAT m_fLength;
//     BOOL m_bAllowSwinging;
//     BOOL m_bDoublePinned;
//     BOOL m_bZipLine;
//     BOOL m_bPole;
//     FLOAT m_fSecondPinX;
//     FLOAT m_fSecondPinY;
//     FLOAT m_fSecondPinZ;
// };
// 
// struct goRopeSkinned__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goRopeSkinned;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
// };
// 
// struct Segment__1_19213 {
//     struct VUVec4 m_vPos;
//     struct VUVec4 m_vVel;
//     struct VUVec4 m_vForce;
//     FLOAT m_fMass;
//     struct VUMat4 *m_pJointMat;
//     int m_Dummy[2];
// };
// 
// typedef struct goSavePoint goSavePoint, *PgoSavePoint;
// 
// struct goSavePoint {
//     struct goGameObject *go;
//     int savePointID;
//     struct renMaterial *beamMat;
// };
// 
// typedef struct goScriptContext goScriptContext, *PgoScriptContext;
// 
// typedef struct goScriptContext__vtable goScriptContext__vtable, *PgoScriptContext__vtable;
// 
// struct goScriptContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goScriptContext__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTree<svrSortedListContainer,goClient> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTree<svrSortedListContainer,goClient> > */
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents; /* Inherited from svrContext<svrTree<svrSortedListContainer,goClient> > */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTree<svrSortedListContainer,goClient> > */
//     struct Pool__1_336 *m_pClientPool;
// };
// 
// struct goScriptContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goScriptContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrContext<svrTree<svrSortedListContainer,goClient> > svrContext<svrTree<svrSortedListContainer,goClient> >, *PsvrContext<svrTree<svrSortedListContainer,goClient> >;
// 
// typedef struct svrContext<svrTree<svrSortedListContainer,goClient> > goScriptContextBase;
// 
// typedef struct svrContext<svrTree<svrSortedListContainer,goClient> >__vtable svrContext<svrTree<svrSortedListContainer,goClient> >__vtable, *PsvrContext<svrTree<svrSortedListContainer,goClient> >__vtable;
// 
// struct svrContext<svrTree<svrSortedListContainer,goClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrContext<svrTree<svrSortedListContainer,goClient> >__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > */
//     UINT32 m_uRefCount;
//     UINT32 m_uConnectionRefCount;
//     struct svrContextParm *m_pParm;
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents;
//     struct wadContext *m_pMyWadContext;
// };
// 
// struct svrContext<svrTree<svrSortedListContainer,goClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct goScriptDefaultArgs goScriptDefaultArgs, *PgoScriptDefaultArgs;
// 
// struct goScriptDefaultArgs {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<camera::CSCameraScript,goScriptDefaultArgs> goScriptHelper<camera::CSCameraScript,goScriptDefaultArgs>, *PgoScriptHelper<camera::CSCameraScript,goScriptDefaultArgs>;
// 
// struct goScriptHelper<camera::CSCameraScript,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<camera::Script,goScriptDefaultArgs> goScriptHelper<camera::Script,goScriptDefaultArgs>, *PgoScriptHelper<camera::Script,goScriptDefaultArgs>;
// 
// struct goScriptHelper<camera::Script,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<fxFullScreenEffectAction,goScriptDefaultArgs> goScriptHelper<fxFullScreenEffectAction,goScriptDefaultArgs>, *PgoScriptHelper<fxFullScreenEffectAction,goScriptDefaultArgs>;
// 
// struct goScriptHelper<fxFullScreenEffectAction,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goAirCurrentObject,goAirCurrentObjectData> goScriptHelper<goAirCurrentObject,goAirCurrentObjectData>, *PgoScriptHelper<goAirCurrentObject,goAirCurrentObjectData>;
// 
// struct goScriptHelper<goAirCurrentObject,goAirCurrentObjectData> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goAirCurrentObject,goScriptDefaultArgs> goScriptHelper<goAirCurrentObject,goScriptDefaultArgs>, *PgoScriptHelper<goAirCurrentObject,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goAirCurrentObject,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goAresSky,goScriptDefaultArgs> goScriptHelper<goAresSky,goScriptDefaultArgs>, *PgoScriptHelper<goAresSky,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goAresSky,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goCameraShake,goCameraShake::Args> goScriptHelper<goCameraShake,goCameraShake::Args>, *PgoScriptHelper<goCameraShake,goCameraShake::Args>;
// 
// struct goScriptHelper<goCameraShake,goCameraShake::Args> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goCameraShake,goScriptDefaultArgs> goScriptHelper<goCameraShake,goScriptDefaultArgs>, *PgoScriptHelper<goCameraShake,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goCameraShake,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goCameraSwayPrim,goScriptDefaultArgs> goScriptHelper<goCameraSwayPrim,goScriptDefaultArgs>, *PgoScriptHelper<goCameraSwayPrim,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goCameraSwayPrim,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goFarClip,goFarClipArgs> goScriptHelper<goFarClip,goFarClipArgs>, *PgoScriptHelper<goFarClip,goFarClipArgs>;
// 
// struct goScriptHelper<goFarClip,goFarClipArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goFarClip,goScriptDefaultArgs> goScriptHelper<goFarClip,goScriptDefaultArgs>, *PgoScriptHelper<goFarClip,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goFarClip,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goGhostTrail,goScriptDefaultArgs> goScriptHelper<goGhostTrail,goScriptDefaultArgs>, *PgoScriptHelper<goGhostTrail,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goGhostTrail,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goGrapplePoint,goGrapplePointArgs> goScriptHelper<goGrapplePoint,goGrapplePointArgs>, *PgoScriptHelper<goGrapplePoint,goGrapplePointArgs>;
// 
// struct goScriptHelper<goGrapplePoint,goGrapplePointArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goGrapplePoint,goScriptDefaultArgs> goScriptHelper<goGrapplePoint,goScriptDefaultArgs>, *PgoScriptHelper<goGrapplePoint,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goGrapplePoint,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goLensFlare,goLensFlareArgs> goScriptHelper<goLensFlare,goLensFlareArgs>, *PgoScriptHelper<goLensFlare,goLensFlareArgs>;
// 
// struct goScriptHelper<goLensFlare,goLensFlareArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goLensFlare,goScriptDefaultArgs> goScriptHelper<goLensFlare,goScriptDefaultArgs>, *PgoScriptHelper<goLensFlare,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goLensFlare,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goMirror,goMirrorArgs> goScriptHelper<goMirror,goMirrorArgs>, *PgoScriptHelper<goMirror,goMirrorArgs>;
// 
// struct goScriptHelper<goMirror,goMirrorArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goMirror,goScriptDefaultArgs> goScriptHelper<goMirror,goScriptDefaultArgs>, *PgoScriptHelper<goMirror,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goMirror,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goRopeSkinned,goRopeSkinnedArgs> goScriptHelper<goRopeSkinned,goRopeSkinnedArgs>, *PgoScriptHelper<goRopeSkinned,goRopeSkinnedArgs>;
// 
// struct goScriptHelper<goRopeSkinned,goRopeSkinnedArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goRopeSkinned,goScriptDefaultArgs> goScriptHelper<goRopeSkinned,goScriptDefaultArgs>, *PgoScriptHelper<goRopeSkinned,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goRopeSkinned,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goShadow,goScriptDefaultArgs> goScriptHelper<goShadow,goScriptDefaultArgs>, *PgoScriptHelper<goShadow,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goShadow,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goSkybox,goScriptDefaultArgs> goScriptHelper<goSkybox,goScriptDefaultArgs>, *PgoScriptHelper<goSkybox,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goSkybox,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goWeather,goScriptDefaultArgs> goScriptHelper<goWeather,goScriptDefaultArgs>, *PgoScriptHelper<goWeather,goScriptDefaultArgs>;
// 
// struct goScriptHelper<goWeather,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<goWeather,goWeatherArgs> goScriptHelper<goWeather,goWeatherArgs>, *PgoScriptHelper<goWeather,goWeatherArgs>;
// 
// struct goScriptHelper<goWeather,goWeatherArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<HermesBeam,goScriptDefaultArgs> goScriptHelper<HermesBeam,goScriptDefaultArgs>, *PgoScriptHelper<HermesBeam,goScriptDefaultArgs>;
// 
// struct goScriptHelper<HermesBeam,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<HermesBeam,HermesBeamArgs> goScriptHelper<HermesBeam,HermesBeamArgs>, *PgoScriptHelper<HermesBeam,HermesBeamArgs>;
// 
// struct goScriptHelper<HermesBeam,HermesBeamArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<renFXScriptBlended<fxBloom::State>::Script,goScriptDefaultArgs> goScriptHelper<renFXScriptBlended<fxBloom::State>::Script,goScriptDefaultArgs>, *PgoScriptHelper<renFXScriptBlended<fxBloom::State>::Script,goScriptDefaultArgs>;
// 
// struct goScriptHelper<renFXScriptBlended<fxBloom::State>::Script,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<renFXScriptBlended<fxCameraFilterBlender>::Script,goScriptDefaultArgs> goScriptHelper<renFXScriptBlended<fxCameraFilterBlender>::Script,goScriptDefaultArgs>, *PgoScriptHelper<renFXScriptBlended<fxCameraFilterBlender>::Script,goScriptDefaultArgs>;
// 
// struct goScriptHelper<renFXScriptBlended<fxCameraFilterBlender>::Script,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<renFXScriptBlended<fxFogBlender>::Script,goScriptDefaultArgs> goScriptHelper<renFXScriptBlended<fxFogBlender>::Script,goScriptDefaultArgs>, *PgoScriptHelper<renFXScriptBlended<fxFogBlender>::Script,goScriptDefaultArgs>;
// 
// struct goScriptHelper<renFXScriptBlended<fxFogBlender>::Script,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<renFXScriptBlended<fxFSWarp::State>::Script,goScriptDefaultArgs> goScriptHelper<renFXScriptBlended<fxFSWarp::State>::Script,goScriptDefaultArgs>, *PgoScriptHelper<renFXScriptBlended<fxFSWarp::State>::Script,goScriptDefaultArgs>;
// 
// struct goScriptHelper<renFXScriptBlended<fxFSWarp::State>::Script,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<RumbleAndShake,goScriptDefaultArgs> goScriptHelper<RumbleAndShake,goScriptDefaultArgs>, *PgoScriptHelper<RumbleAndShake,goScriptDefaultArgs>;
// 
// struct goScriptHelper<RumbleAndShake,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<SC_Pendulum,goScriptDefaultArgs> goScriptHelper<SC_Pendulum,goScriptDefaultArgs>, *PgoScriptHelper<SC_Pendulum,goScriptDefaultArgs>;
// 
// struct goScriptHelper<SC_Pendulum,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<SC_Pendulum,SC_Pendulum::SPendulumArgs> goScriptHelper<SC_Pendulum,SC_Pendulum::SPendulumArgs>, *PgoScriptHelper<SC_Pendulum,SC_Pendulum::SPendulumArgs>;
// 
// struct goScriptHelper<SC_Pendulum,SC_Pendulum::SPendulumArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptHelper<sound::GroupModScript,goScriptDefaultArgs> goScriptHelper<sound::GroupModScript,goScriptDefaultArgs>, *PgoScriptHelper<sound::GroupModScript,goScriptDefaultArgs>;
// 
// struct goScriptHelper<sound::GroupModScript,goScriptDefaultArgs> {
//     undefined field0_0x0;
// };
// 
// typedef struct goScriptLoadParm goScriptLoadParm, *PgoScriptLoadParm;
// 
// struct goScriptLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct stdDynaString _cScriptName;
//     UINT16 _uSlice;
//     UINT16 _uPriority;
//     UINT16 _uFlags;
//     UINT16 _uJointID;
// };
// 
// typedef struct goScriptMasterContext goScriptMasterContext, *PgoScriptMasterContext;
// 
// typedef struct goScriptMasterContext__vtable goScriptMasterContext__vtable, *PgoScriptMasterContext__vtable;
// 
// struct goScriptMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goScriptMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTree<svrSortedListContainer,goClient> > */
// };
// 
// struct goScriptMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goScriptMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTree<svrSortedListContainer,goClient> > svrMasterContext<svrTree<svrSortedListContainer,goClient> >, *PsvrMasterContext<svrTree<svrSortedListContainer,goClient> >;
// 
// typedef struct svrMasterContext<svrTree<svrSortedListContainer,goClient> > goScriptMasterContextBase;
// 
// typedef struct svrMasterContext<svrTree<svrSortedListContainer,goClient> >__vtable svrMasterContext<svrTree<svrSortedListContainer,goClient> >__vtable, *PsvrMasterContext<svrTree<svrSortedListContainer,goClient> >__vtable;
// 
// struct svrMasterContext<svrTree<svrSortedListContainer,goClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMasterContext<svrTree<svrSortedListContainer,goClient> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter;
//     UINT32 m_uMaxConnectionsPerContext;
//     UINT32 m_uMaxClientsPerContext;
// };
// 
// struct svrMasterContext<svrTree<svrSortedListContainer,goClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct goScriptServer goScriptServer, *PgoScriptServer;
// 
// typedef struct goScriptServer__vtable goScriptServer__vtable, *PgoScriptServer__vtable;
// 
// typedef struct stdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32> stdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32>, *PstdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32>;
// 
// struct goScriptServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goScriptServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct stdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32> {
//     struct svrContext<svrTree<svrSortedListContainer,goClient> > *fStack[32];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct goScriptServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goScriptServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTree<svrSortedListContainer,goClient> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTree<svrSortedListContainer,goClient> > */
// };
// 
// typedef struct svrMultiServer<svrTree<svrSortedListContainer,goClient> > svrMultiServer<svrTree<svrSortedListContainer,goClient> >, *PsvrMultiServer<svrTree<svrSortedListContainer,goClient> >;
// 
// typedef struct svrMultiServer<svrTree<svrSortedListContainer,goClient> > goScriptServerBase;
// 
// typedef struct svrMultiServer<svrTree<svrSortedListContainer,goClient> >__vtable svrMultiServer<svrTree<svrSortedListContainer,goClient> >__vtable, *PsvrMultiServer<svrTree<svrSortedListContainer,goClient> >__vtable;
// 
// struct svrMultiServer<svrTree<svrSortedListContainer,goClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMultiServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct svrMultiServer<svrTree<svrSortedListContainer,goClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMultiServer<svrTree<svrSortedListContainer,goClient> >__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTree<svrSortedListContainer,goClient> > *,32> m_contextstack;
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectedClientsPerServer;
//     UINT32 m_uMasterContextServerID;
// };
// 
// typedef struct svrTree<svrSortedListContainer,goClient> svrTree<svrSortedListContainer,goClient>, *PsvrTree<svrSortedListContainer,goClient>;
// 
// typedef struct svrTree<svrSortedListContainer,goClient> goScriptServerTree;
// 
// typedef struct svrTree<svrSortedListContainer,goClient>__vtable svrTree<svrSortedListContainer,goClient>__vtable, *PsvrTree<svrSortedListContainer,goClient>__vtable;
// 
// struct svrTree<svrSortedListContainer,goClient>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTree;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTree<svrSortedListContainer,goClient> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTree<svrSortedListContainer,goClient>__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > */
// };
// 
// typedef struct goClientTreeNode<svrSortedListContainer> goScriptTreeNode;
// 
// typedef struct goServer goServer, *PgoServer;
// 
// typedef struct goServer__vtable goServer__vtable, *PgoServer__vtable;
// 
// typedef struct stdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32> stdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32>, *PstdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32>;
// 
// typedef struct stdStack<goGameObject *,16> stdStack<goGameObject *,16>, *PstdStack<goGameObject *,16>;
// 
// typedef struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > svrContext<svrTree<svrCListContainer,goAttachmentLWClient> >, *PsvrContext<svrTree<svrCListContainer,goAttachmentLWClient> >;
// 
// typedef struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable svrContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable, *PsvrContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable;
// 
// struct goServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct stdStack<goGameObject *,16> {
//     struct goGameObject *fStack[16];
//     INT8 fIndex;
//     undefined field2_0x41;
//     undefined field3_0x42;
//     undefined field4_0x43;
// };
// 
// struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct stdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32> {
//     struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *fStack[32];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct goServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     struct stdStack<goGameObject *,16> _activeGO;
// };
// 
// struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uRefCount;
//     UINT32 m_uConnectionRefCount;
//     struct svrContextParm *m_pParm;
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents;
//     struct wadContext *m_pMyWadContext;
// };
// 
// typedef struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >, *PsvrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >;
// 
// typedef struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > goServerBase;
// 
// typedef struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable, *PsvrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable;
// 
// struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > *,32> m_contextstack;
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectedClientsPerServer;
//     UINT32 m_uMasterContextServerID;
// };
// 
// struct svrMultiServer<svrTree<svrCListContainer,goAttachmentLWClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMultiServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// typedef struct goServerContext goServerContext, *PgoServerContext;
// 
// typedef struct goServerContext__vtable goServerContext__vtable, *PgoServerContext__vtable;
// 
// struct goServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct goServerContext__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents; /* Inherited from svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > */
//     struct Pool__1_336 *_pGameObjectPool;
//     struct Pool__1_336 *_pSkeletonPool;
//     struct Pool__1_336 *_pGOHandleListPool;
//     UINT32 _uUniqueID;
//     undefined1 *_cbFunc;
//     void *_cbData;
// };
// 
// struct goServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type goServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrContext<svrTree<svrCListContainer,goAttachmentLWClient> > goServerContextBase;
// 
// typedef struct goServerContextLoadParm goServerContextLoadParm, *PgoServerContextLoadParm;
// 
// struct goServerContextLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT32 m_bAllowDups; /* Inherited from svrContextLoadParm */
//     struct stdDynaString m_cParentName; /* Inherited from svrContextLoadParm */
//     UINT32 _uUniqueID;
// };
// 
// typedef struct goShadow goShadow, *PgoShadow;
// 
// struct goShadow {
//     undefined field0_0x0;
// };
// 
// typedef struct goSkybox goSkybox, *PgoSkybox;
// 
// struct goSkybox {
//     undefined field0_0x0;
// };
// 
// typedef struct goSoldier goSoldier, *PgoSoldier;
// 
// typedef struct goSoldier__vtable goSoldier__vtable, *PgoSoldier__vtable;
// 
// typedef struct tSoldierNavCaps tSoldierNavCaps, *PtSoldierNavCaps;
// 
// typedef struct tCreatureControls tCreatureControls, *PtCreatureControls;
// 
// typedef struct tSoldier tSoldier, *PtSoldier;
// 
// typedef struct tIOSystem tIOSystem, *PtIOSystem;
// 
// typedef struct tGrappleSystem tGrappleSystem, *PtGrappleSystem;
// 
// typedef struct SDecalContext SDecalContext, *PSDecalContext;
// 
// typedef struct tSys tSys, *PtSys;
// 
// typedef struct tPushableSpeedMod tPushableSpeedMod, *PtPushableSpeedMod;
// 
// typedef struct tDecalInfo tDecalInfo, *PtDecalInfo;
// 
// typedef struct tIOSystem__vtable tIOSystem__vtable, *PtIOSystem__vtable;
// 
// typedef struct tGrappleSystem__vtable tGrappleSystem__vtable, *PtGrappleSystem__vtable;
// 
// typedef union SDecalContext__unnamed_12 SDecalContext__unnamed_12, *PSDecalContext__unnamed_12;
// 
// typedef struct SDecal SDecal, *PSDecal;
// 
// typedef struct tHand__1_17527 tHand__1_17527, *PtHand__1_17527;
// 
typedef struct tAttachments tSTwk;
// 
// typedef struct tSys__vtable tSys__vtable, *PtSys__vtable;
// 
// typedef struct SDecalContext__unnamed__unnamed_12 SDecalContext__unnamed__unnamed_12, *PSDecalContext__unnamed__unnamed_12;
// 
// typedef struct SDecalContext__unnamed__unnamed_12 SDecalContext__unnamed__unnamed_12, *PSDecalContext__unnamed__unnamed_12;
// 
// typedef struct SDecalContext__unnamed__unnamed_121 SDecalContext__unnamed__unnamed_121, *PSDecalContext__unnamed__unnamed_121;
// 
typedef struct tHand__1_7658 tITwk;
// 
// typedef struct stdCList<fxClient *,stdAllocator<stdCListNodeBase> > stdCList<fxClient *,stdAllocator<stdCListNodeBase> >, *PstdCList<fxClient *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct tHand__1_17527__vtable tHand__1_17527__vtable, *PtHand__1_17527__vtable;
// 
struct SDecalContext__unnamed__unnamed_121 {
    FLOAT fOverrideCounter;
    FLOAT fOverrideCount;
};

struct tDecalInfo {
    UINT32 m_ParticleName;
    FLOAT m_ScaleX;
    FLOAT m_ScaleY;
    UINT8 m_Shape;
    UINT8 m_Texture;
    undefined field5_0xe;
    undefined field6_0xf;
};
// 
struct tHand__1_17527__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tHand;
    struct __vtbl_ptr_type Update;
    struct __vtbl_ptr_type Reset;
    struct __vtbl_ptr_type Warp;
    struct __vtbl_ptr_type PrepareForUnloading;
    struct __vtbl_ptr_type Show;
    struct __vtbl_ptr_type Hide;
};

struct SDecalContext__unnamed__unnamed_12 {
    FLOAT fOverrideMaster;
    FLOAT fOverrideMasterLength;
};

struct SDecalContext__unnamed__unnamed_12_ {
    FLOAT fOverrideTimer;
    FLOAT fOverrideLength;
};

union SDecalContext__unnamed_12 {
    struct SDecalContext__unnamed__unnamed_12 field0;
    struct SDecalContext__unnamed__unnamed_12_ field1;
    struct SDecalContext__unnamed__unnamed_121 field2;
};

struct SDecal {
    struct renParticleSystem *pSystem;
    FLOAT fScaleX;
    FLOAT fScaleY;
    UINT16 wShape;
    UINT16 wTexture;
};

struct SDecalContext {
    INT16 iNbDecals;
    UINT16 wFlags;
    UINT16 wActiveTexture;
    UINT16 wOverrideTexture;
    struct SDecalContext *pOverrideNext;
    union SDecalContext__unnamed_12 field5_0xc;
    struct SDecal pDecals[1];
};

struct tCreatureControls {
    struct VUVec4 m_vWorld;
    struct VUVec4 m_vCamera;
    struct VUVec4 m_vFacing;
    INT32 m_iJumpHack;
    INT32 m_iGrappleHack;
    UINT32 m_uControlFlags;
    undefined field6_0x3c;
    undefined field7_0x3d;
    undefined field8_0x3e;
    undefined field9_0x3f;
};

struct tSoldierNavCaps {
    UINT32 m_uCapabilityFlags;
};

struct goSoldier {
    struct goGameObject *m_pGameObject; /* Inherited from goBase */
    struct goSoldier__vtable *__vtable; /* Inherited from goBase */
    struct tCreature *m_pCTweaks; /* Inherited from goCreature */
    struct wadContext *m_pCTweaksContext; /* Inherited from goCreature */
    struct VUMat4 m_mInitialPosition; /* Inherited from goCreature */
    struct VUMat4 m_mMotion; /* Inherited from goCreature */
    struct VUMat4 m_mPhysical; /* Inherited from goCreature */
    struct VUVec4 m_vPhysicalPosForCamera; /* Inherited from goCreature */
    struct VUVec4 m_vVelocity; /* Inherited from goCreature */
    struct VUVec4 m_vImpulse; /* Inherited from goCreature */
    struct VUVec4 m_vLastMovement; /* Inherited from goCreature */
    struct VUVec4 m_vLastPosition; /* Inherited from goCreature */
    struct tCollisionBox m_NavCollision; /* Inherited from goCreature */
    struct tPhysicalDamping m_PhysDamp; /* Inherited from goCreature */
    FLOAT m_fMaxSpeed; /* Inherited from goCreature */
    FLOAT m_fScale; /* Inherited from goCreature */
    FLOAT m_fTimeScale; /* Inherited from goCreature */
    UINT32 m_uMotionStateFlags; /* Inherited from goCreature */
    UINT32 m_uInfoStateFlags; /* Inherited from goCreature */
    FLOAT m_fHitPoints; /* Inherited from goCreature */
    FLOAT m_fMaxHitPoints; /* Inherited from goCreature */
    FLOAT m_fFreezeAmount; /* Inherited from goCreature */
    struct goHandle m_hFreezeSource; /* Inherited from goCreature */
    FLOAT m_fRampHitPoints; /* Inherited from goCreature */
    struct goCreature *m_pChildCreature; /* Inherited from goCreature */
    struct goCreature *m_pParentCreature; /* Inherited from goCreature */
    INT32 m_iAttachedToJointID; /* Inherited from goCreature */
    UINT32 m_uAttachmentType; /* Inherited from goCreature */
    FLOAT m_fTimeSinceLastVisible; /* Inherited from goCreature */
    FLOAT m_fTimeSinceLastAttacked; /* Inherited from goCreature */
    UINT32 m_CameraTargets; /* Inherited from goCreature */
    struct Emitter *m_pSndEmitter; /* Inherited from goCreature */
    struct Emitter *m_pLoopSndEmitter; /* Inherited from goCreature */
    struct renModel *m_pModel; /* Inherited from goCreature */
    struct renShadowClient *m_pShadow; /* Inherited from goCreature */
    struct goCreatureController *m_pCreatureController; /* Inherited from goCreature */
    struct goHandle m_hMountCreature; /* Inherited from goCreature */
    struct goHandle m_hRiderCreature; /* Inherited from goCreature */
    struct wadContext *m_pGOParmWadContext; /* Inherited from goCreature */
    struct tMoveSystem *m_pMoveSystem; /* Inherited from goCreature */
    struct tFightSystem *m_pFightSystem; /* Inherited from goCreature */
    struct CShield *m_pShield; /* Inherited from goCreature */
    struct tPiggyBank__1_16335 m_PiggyBank; /* Inherited from goCreature */
    struct goGameObject *m_pCircleGO; /* Inherited from goCreature */
    FLOAT m_fCircleSoundDelay; /* Inherited from goCreature */
    undefined field45_0x1e8;
    undefined field46_0x1e9;
    undefined field47_0x1ea;
    undefined field48_0x1eb;
    undefined field49_0x1ec;
    undefined field50_0x1ed;
    undefined field51_0x1ee;
    undefined field52_0x1ef;
    struct VUMat4 m_mMovingPlatform; /* Inherited from goCreatureCollision */
    struct VUVec4 m_vMovingPlatformOffset; /* Inherited from goCreatureCollision */
    struct VUVec4 m_vGroundNormal; /* Inherited from goCreatureCollision */
    struct VUVec4 m_vWallNormal; /* Inherited from goCreatureCollision */
    FLOAT m_fWaterLevel; /* Inherited from goCreatureCollision */
    struct AtrValue *m_pGroundATR; /* Inherited from goCreatureCollision */
    struct AtrValue *m_pWallATR; /* Inherited from goCreatureCollision */
    struct AtrValue *m_pWaterATR; /* Inherited from goCreatureCollision */
    struct wadContext *m_pGroundWC; /* Inherited from goCreatureCollision */
    struct wadContext *m_pWallWC; /* Inherited from goCreatureCollision */
    struct wadContext *m_pWaterWC; /* Inherited from goCreatureCollision */
    struct goGameObject *m_pGroundGO; /* Inherited from goCreatureCollision */
    UINT32 m_uGroundGOJointID; /* Inherited from goCreatureCollision */
    UINT32 m_uNoCollisionType; /* Inherited from goCreatureCollision */
    UINT32 m_uIgnoreSheetBits; /* Inherited from goCreatureCollision */
    INT16 m_iHeadTrackJointIdx; /* Inherited from goCreatureCollision */
    INT16 m_wDummy; /* Inherited from goCreatureCollision */
    FLOAT m_fHeadTrackJointOrientX; /* Inherited from goCreatureCollision */
    FLOAT m_fHeadTrackMaxAngle; /* Inherited from goCreatureCollision */
    FLOAT m_fHeadTrackAmount; /* Inherited from goCreatureCollision */
    FLOAT m_fHeadTrackTargetAmount; /* Inherited from goCreatureCollision */
    struct VUMat4 m_mLightFrameMtx;
    struct VUVec4 m_vCurrentSpeed;
    struct VUVec4 m_vStrafeVelocity;
    struct VUVec4 m_vDamageDir;
    FLOAT m_fDamagePoints;
    UINT32 m_uDamageMaterialFX;
    FLOAT m_fFreezeResistance;
    FLOAT m_fMaxFreezeResistance;
    struct goHandle m_RopeHandle;
    FLOAT m_fRopeRelativePos;
    FLOAT m_fRopeForce;
    INT32 m_iRopeWeightIdx;
    FLOAT m_fNoCombatTimer;
    FLOAT m_fNoClimbTimer;
    FLOAT m_fWallHangTimer;
    FLOAT m_fNoHangTargetsTimer;
    FLOAT m_fIgnoreMotionTimer;
    FLOAT m_fNoDamageTimer;
    FLOAT m_fLandTimer;
    FLOAT m_fGeneralTimer;
    FLOAT m_fTurnDampingAirFactor;
    FLOAT m_fTurnDampingAirTweenTime;
    FLOAT m_fLean;
    FLOAT m_fWorkU;
    FLOAT m_fDivingDashSpeed;
    FLOAT m_fNoPhysicsU;
    FLOAT m_fNoPhysicsV;
    FLOAT m_fNoPhysicsAddU;
    FLOAT m_fNoPhysicsAddV;
    UINT32 m_uSoldierModeFlags;
    UINT32 m_uSoldierInfoFlags;
    struct tSoldierNavCaps m_Caps;
    struct tCreatureControls m_pCreatureControls;
    struct tSoldier *m_pTweaks;
    struct tAnimSystem *m_pAnimSystem;
    struct tFlyingSystem *m_pFlyingSystem;
    struct tIOSystem *m_pIOSystem;
    struct tGrappleSystem *m_pGrappleSystem;
    struct SDecalContext *m_pDecalContext;
    struct tSys *m_pAttachments;
    struct tEffectSystem *m_pEffectSystem;
    struct goHandle m_hFrozenStatue;
    short int m_iIKJoint[2];
    float m_fIKWeight[2];
    INT16 m_iTargetingJointIdx;
    undefined field119_0x3f2;
    undefined field120_0x3f3;
    FLOAT m_fDriftTimer;
    FLOAT m_fDriftingLean;
    UINT8 m_iSaveData;
    UINT8 m_iTrapBloodCounter;
    undefined field125_0x3fe;
    undefined field126_0x3ff;
    FLOAT m_fLightFrameSpeed;
    FLOAT m_fLightFrameForceAnimPos;
    FLOAT m_fLightFrameU;
    FLOAT m_fLightFrameV;
};

struct tPushableSpeedMod {
    FLOAT m_L;
    FLOAT m_M;
    FLOAT m_H;
};

struct tGrappleSystem {
    struct goGrapplePoint *m_pGrappleTarget;
    UINT32 m_uLastGrappleName;
    FLOAT m_fGrappleDist;
    FLOAT m_fGrappleForce;
    FLOAT m_fGrappleTimer;
    undefined field5_0x14;
    undefined field6_0x15;
    undefined field7_0x16;
    undefined field8_0x17;
    undefined field9_0x18;
    undefined field10_0x19;
    undefined field11_0x1a;
    undefined field12_0x1b;
    undefined field13_0x1c;
    undefined field14_0x1d;
    undefined field15_0x1e;
    undefined field16_0x1f;
    struct VUVec4 m_vGrappleVel;
    struct VUMat4 m_mLastGrappleTransform;
    struct tGrappleSystem__vtable *__vtable;
    undefined field20_0x74;
    undefined field21_0x75;
    undefined field22_0x76;
    undefined field23_0x77;
    undefined field24_0x78;
    undefined field25_0x79;
    undefined field26_0x7a;
    undefined field27_0x7b;
    undefined field28_0x7c;
    undefined field29_0x7d;
    undefined field30_0x7e;
    undefined field31_0x7f;
};

struct tSoldier {
    char *m_GOName; /* Inherited from tSoldierBase */
    FLOAT m_PlaybackSpeedScale; /* Inherited from tSoldierBase */
    FLOAT m_TweenTimeScale; /* Inherited from tSoldierBase */
    UINT8 m_SoldierType; /* Inherited from tSoldierBase */
    undefined field4_0xd;
    UINT16 m_Flags; /* Inherited from tSoldierBase */
    struct tAttachments **m_AttachmentList; /* Inherited from tSoldierBase */
    struct tCameraTarget *m_Targets; /* Inherited from tSoldierBase */
    FLOAT m_Scale; /* Inherited from tSoldierBase */
    FLOAT m_Mass; /* Inherited from tSoldierBase */
    FLOAT m_Friction; /* Inherited from tSoldierBase */
    FLOAT m_Radius; /* Inherited from tSoldierBase */
    FLOAT m_Height; /* Inherited from tSoldierBase */
    FLOAT m_Buoyancy; /* Inherited from tSoldierBase */
    FLOAT m_StepHeight; /* Inherited from tSoldierBase */
    FLOAT m_StepHeightDown; /* Inherited from tSoldierBase */
    FLOAT m_TerminalVel; /* Inherited from tSoldierBase */
    FLOAT m_HighFallVel; /* Inherited from tSoldierBase */
    FLOAT m_InAirAcc; /* Inherited from tSoldierBase */
    FLOAT m_DeathFadeToBlackTime; /* Inherited from tSoldierBase */
    FLOAT m_DeathFadeBlackToGoneTime; /* Inherited from tSoldierBase */
    char *m_DeathEffect; /* Inherited from tSoldierBase */
    FLOAT m_FreezeResistance; /* Inherited from tSoldierBase */
    struct tBranch *m_FreezeMove; /* Inherited from tSoldierBase */
    char *m_FrozenGOName; /* Inherited from tSoldierBase */
    char *m_FrozenFXName; /* Inherited from tSoldierBase */
    char *m_HeadTrackJoint; /* Inherited from tSoldierBase */
    FLOAT m_HeadTrackJointOrientX; /* Inherited from tSoldierBase */
    FLOAT m_HeadTrackMaxAngle; /* Inherited from tSoldierBase */
    UINT32 m_NavFlags;
    struct tBranch *m_AttachmentBreakMove;
    FLOAT m_ScrapeFactor;
    FLOAT m_JumpSpeed;
    FLOAT m_DoubleJumpSpeed;
    FLOAT m_DoubleJumpWindowStart;
    FLOAT m_DoubleJumpWindowEnd;
    FLOAT m_FallStartSpeed;
    FLOAT m_AirTurnDamping;
    FLOAT m_LandTimer;
    FLOAT m_DriftTime;
    FLOAT m_DriftGravModifier;
    FLOAT m_DriftTurnDamping;
    FLOAT m_DriftMaxSpeed;
    FLOAT m_DriftMinSpeed;
    FLOAT m_DriftAcc;
    FLOAT m_DriftDec;
    FLOAT m_DriftWinStartSingle;
    FLOAT m_DriftWinStartDouble;
    FLOAT m_DriftSingleTimer;
    FLOAT m_DriftDoubleTimer;
    FLOAT m_WallHangSpeedX;
    FLOAT m_WallFrontPressSpeed;
    FLOAT m_WallClimbMinSpeed;
    FLOAT m_WallClimbMaxSpeedX;
    FLOAT m_WallClimbMaxSpeedY;
    FLOAT m_WallClimbJumpSpeedX;
    FLOAT m_WallClimbJumpSpeedY;
    FLOAT m_WallClimbJumpSpeedZ;
    FLOAT m_AnticipateJumpSpeedY;
    FLOAT m_LadderSpeed;
    FLOAT m_LadderSlideThreshold;
    FLOAT m_LadderSlideMaxSpeed;
    FLOAT m_LadderSlideAcc;
    FLOAT m_LadderSlideDec;
    FLOAT m_RopeMinSpeed;
    FLOAT m_RopeMaxSpeed;
    FLOAT m_RopeJumpSpeedY;
    FLOAT m_RopeJumpSpeedZ;
    FLOAT m_RopeSwingForce;
    FLOAT m_RopeSlideMaxSpeed;
    FLOAT m_RopeSlideAcc;
    FLOAT m_RopeSlideDec;
    FLOAT m_RopeBPMinSpeed;
    FLOAT m_RopeBPMaxSpeed;
    FLOAT m_ZipLineMaxSpeed;
    FLOAT m_ZipLineAcc;
    struct tPushableSpeedMod m_PushableMinSpeed;
    struct tPushableSpeedMod m_PushableMaxSpeed;
    struct tPushableSpeedMod m_PushKickMinSpeed;
    struct tPushableSpeedMod m_PushKickMaxSpeed;
    FLOAT m_PushKickChargeTimeMax;
    UINT8 m_FlyingType;
    undefined field82_0x15d;
    undefined field83_0x15e;
    undefined field84_0x15f;
    FLOAT m_FlyingMaxSpeed;
    FLOAT m_FlyingAcc;
    FLOAT m_FlyingDec;
    FLOAT m_FlyingTurnDamping;
    FLOAT m_FlyingUpPush;
    FLOAT m_FlyingGravity;
    FLOAT m_FlyingTerminalVelDn;
    FLOAT m_FlyingTerminalVelUp;
    FLOAT m_SwimmingMinSpeed;
    FLOAT m_SwimmingMaxSpeed;
    FLOAT m_SwimmingSurfaceMaxSpeed;
    FLOAT m_SwimmingAcc;
    FLOAT m_SwimmingDec;
    FLOAT m_SwimmingTurnDamping;
    FLOAT m_FloatingRevGrav;
    FLOAT m_DivingRollScale;
    FLOAT m_DiveDashChargeTime;
    FLOAT m_DiveDashMinChargeTime;
    FLOAT m_DiveDashMinSpeed;
    FLOAT m_DiveDashMaxSpeed;
    FLOAT m_DiveDashMinTime;
    FLOAT m_DiveDashMaxTime;
    FLOAT m_BalanceWalkMinSpeed;
    FLOAT m_BalanceWalkMaxSpeed;
    FLOAT m_BalanceWalkAcc;
    FLOAT m_BalanceWalkDec;
    FLOAT m_BalanceWalkTurnDamping;
    FLOAT m_BalanceWalkCatchTime;
    FLOAT m_CeilingMinSpeed;
    FLOAT m_CeilingMaxSpeed;
    FLOAT m_CeilingAcc;
    FLOAT m_CeilingDec;
    FLOAT m_CeilingTurnDamping;
    INT16 m_ProximityWeight;
    INT16 m_ProximityWeightLimit;
    INT16 m_FightWeightLimit;
    INT16 m_ProjectileWeightLimit;
    char *m_IKLeftLegJointName;
    char *m_IKRightLegJointName;
    FLOAT m_GrappleClimbSpeed;
    FLOAT m_GrappleSwingForceScale;
    FLOAT m_GrappleSwingInitVelScale;
    FLOAT m_GrappleCircleForceScale;
    FLOAT m_GrappleCircleInitVelScale;
    FLOAT m_GrappleGravity;
    FLOAT m_GrappleYOffset;
    FLOAT m_GrappleMinChainLength;
    FLOAT m_GrappleMaxChainLength;
    FLOAT m_GrappleJumpDelay;
    FLOAT m_GrappleJumpMinSpeedY;
    FLOAT m_GrappleJumpMinSpeedZ;
    FLOAT m_GrappleJumpMaxSpeedY;
    FLOAT m_GrappleJumpMaxSpeedZ;
    struct tDecalInfo *m_DecalList;
};

struct tGrappleSystem__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tGrappleSystem;
};

struct tSys {
    struct tHand__1_17527 *m_pAttachments[2];
    tSTwk *m_pTweaks;
    struct goCreature *m_pCreature;
    UINT32 m_uFlags;
    struct tSys__vtable *__vtable;
};

struct tIOSystem {
    struct VUVec4 m_vIOForward;
    struct VUVec4 m_vIOLocalOffset;
    struct tBranch *m_pTF1_Branch;
    struct tBranch *m_pTF2_Branch;
    struct tBranch *m_pTF3_Branch;
    struct tBranch *m_pCSM1_Branch;
    struct tBranch *m_pCSM2_Branch;
    struct tIOSystem__vtable *__vtable;
    undefined field8_0x38;
    undefined field9_0x39;
    undefined field10_0x3a;
    undefined field11_0x3b;
    undefined field12_0x3c;
    undefined field13_0x3d;
    undefined field14_0x3e;
    undefined field15_0x3f;
};
// 
// struct stdCList<fxClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
struct tSys__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tSys;
};

struct goSoldier__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type goSoldier;
    struct __vtbl_ptr_type Update;
    struct __vtbl_ptr_type Reset;
    struct __vtbl_ptr_type GetControlNormal;
    struct __vtbl_ptr_type Warp;
    struct __vtbl_ptr_type ClearVelocity;
    struct __vtbl_ptr_type GetRope;
    struct __vtbl_ptr_type AddVarsToVFS;
    struct __vtbl_ptr_type RemoveWadContext;
    struct __vtbl_ptr_type SubtractHitPoints;
    struct __vtbl_ptr_type SetImpulse;
    struct __vtbl_ptr_type GetCreatureControls;
    struct __vtbl_ptr_type GetAnimSystem;
    struct __vtbl_ptr_type GetAttachmentSystem;
    struct __vtbl_ptr_type GetHandleSystem;
    struct __vtbl_ptr_type GetEffectSystem;
    struct __vtbl_ptr_type Disable;
    struct __vtbl_ptr_type Enable;
    struct __vtbl_ptr_type SetCircleSaveData;
    struct __vtbl_ptr_type CanDoCombatMove;
    struct __vtbl_ptr_type CanAutoAim;
    struct __vtbl_ptr_type SetDamageInfo;
    struct __vtbl_ptr_type GetMass;
    struct __vtbl_ptr_type GetHeight;
    struct __vtbl_ptr_type GetRadius;
    struct __vtbl_ptr_type GetFreezeTimeLeft;
    struct __vtbl_ptr_type GetFrozenRatio;
    struct __vtbl_ptr_type IsFrozen;
    struct __vtbl_ptr_type CreateFrozenIncarnation;
    struct __vtbl_ptr_type GetGOName;
    struct __vtbl_ptr_type PushableWeight;
    struct __vtbl_ptr_type GetTargetingPos;
    struct __vtbl_ptr_type DerivedTweaks;
    struct __vtbl_ptr_type GetNavBranch;
    struct __vtbl_ptr_type GetNavBranch_;
    struct __vtbl_ptr_type GetFirstNavBankMotionP;
    struct __vtbl_ptr_type FindSound;
};

struct tHand__1_17527 {
    tITwk *m_pTwk;
    struct tSys *m_pSys;
    struct goGameObject *m_pGO;
    short int m_iBladeJointIdx[3];
    INT16 m_iBladeStatus;
    INT16 m_iAttachmentID;
    undefined field6_0x16;
    undefined field7_0x17;
    UINT32 m_uFlags;
    struct stdCList *m_aBFXLists[5];
    struct goHandle m_hSliceEffect;
    struct ClientParm__1_9257 *m_pSliceSound;
    UINT32 m_uLastSliceMFX;
    UINT32 m_uLastSliceFrame;
    struct tHand__1_17527__vtable *__vtable;
};

struct tIOSystem__vtable {
    undefined field0_0x0;
    undefined field1_0x1;
    undefined field2_0x2;
    undefined field3_0x3;
    undefined field4_0x4;
    undefined field5_0x5;
    undefined field6_0x6;
    undefined field7_0x7;
    struct __vtbl_ptr_type tIOSystem;
};
// 
// typedef struct GOState_SaveListItem GOState_SaveListItem, *PGOState_SaveListItem;
// 
// typedef struct GOState_SaveListItem__vtable GOState_SaveListItem__vtable, *PGOState_SaveListItem__vtable;
// 
// struct GOState_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct GOState_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     UINT16 id;
//     UINT16 discoMask;
//     UINT32 visMask;
//     UINT8 alpha;
//     UINT8 animConnect;
//     INT16 animIndex;
//     FLOAT animTime;
//     FLOAT animScale;
//     UINT animFlags;
//     UINT32 sndBits;
// };
// 
// struct GOState_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GOState_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// typedef struct goThingOnASpring goThingOnASpring, *PgoThingOnASpring;
// 
// typedef struct Segment__1_18887 Segment__1_18887, *PSegment__1_18887;
// 
// struct goThingOnASpring {
//     struct goGameObject *m_pGameObject;
//     INT32 m_iRootJointIdx;
//     FLOAT m_fThingLength;
//     INT32 m_iNumJoints;
//     struct Segment__1_18887 *m_pSegmentArray;
// };
// 
// struct Segment__1_18887 {
//     struct VUVec4 m_vWorldPos;
//     FLOAT m_fDist;
//     struct VUMat4 *m_pJointMat;
//     INT32 m_iJointIdx;
//     UINT32 dummy1;
// };
// 
// typedef struct goWater goWater, *PgoWater;
// 
// typedef struct goWaterArgs goWaterArgs, *PgoWaterArgs;
// 
// struct goWater {
//     struct goWaterArgs *m_pArgs;
//     struct goGameObject *m_pGO;
//     struct goScript *m_pScript;
//     FLOAT m_fGridResolution;
//     INT32 m_iGridSizeX;
//     INT32 m_iGridSizeZ;
//     FLOAT *m_pGridBuf1;
//     FLOAT *m_pGridBuf2;
//     FLOAT *m_pGridMem;
//     FLOAT m_fRainCount;
//     struct renEEPrim *m_pEEPrim;
//     struct renEEPrimParm *m_pEEPrimParm;
//     struct renEEPrim *m_pSurfEEPrim;
//     struct renEEPrimParm *m_pSurfEEPrimParm;
//     INT32 m_iNumStripsPerChunk;
// };
// 
// struct goWaterArgs {
//     FLOAT m_fPatchSizeX;
//     FLOAT m_fPatchSizeZ;
//     FLOAT m_fPatchResolution;
//     INT32 m_iPatchShape;
//     char m_sReflMaterialName[24];
//     BOOL m_bReflOnTop;
//     FLOAT m_fRainOffsetX;
//     FLOAT m_fRainOffsetZ;
//     FLOAT m_fRainSizeX;
//     FLOAT m_fRainSizeZ;
//     INT32 m_iRainDropCount;
//     FLOAT m_fRainDropSize;
// };
// 
// typedef struct goWeather goWeather, *PgoWeather;
// 
// typedef struct goWeatherArgs goWeatherArgs, *PgoWeatherArgs;
// 
// struct goWeatherArgs {
//     INT32 m_iType;
//     FLOAT m_fWindX;
//     FLOAT m_fWindY;
//     FLOAT m_fWindZ;
//     FLOAT m_fPatchSizeX;
//     FLOAT m_fPatchSizeY;
//     FLOAT m_fPatchSizeZ;
// };
// 
// struct goWeather {
//     struct VUVec4 m_vPSPos;
//     struct VUVec4 m_vPSDelta;
//     struct VUVec4 m_vPSBoundingSphere;
//     struct VUVec4 m_vMin;
//     struct VUVec4 m_vMax;
//     struct VUVec4 m_vPatchOrigin;
//     struct VUVec4 m_vPatchMin;
//     struct VUVec4 m_vPatchMax;
//     struct goWeatherArgs *m_pArgs;
//     struct goGameObject *m_pGO;
//     struct renParticleSystem *m_pPS;
//     struct goScript *m_pScript;
//     FLOAT m_fPSTime;
//     FLOAT m_fBoxSize;
//     undefined field14_0x98;
//     undefined field15_0x99;
//     undefined field16_0x9a;
//     undefined field17_0x9b;
//     undefined field18_0x9c;
//     undefined field19_0x9d;
//     undefined field20_0x9e;
//     undefined field21_0x9f;
// };
// 
// typedef struct gParticlePoolOverrides__anonymousglobal gParticlePoolOverrides__anonymousglobal, *PgParticlePoolOverrides__anonymousglobal;
// 
// struct gParticlePoolOverrides__anonymousglobal {
//     char *name;
//     int initial_size;
//     int expand_by;
// };
// 
// typedef union GrainParams GrainParams, *PGrainParams;
// 
// typedef struct XREFGrainParams XREFGrainParams, *PXREFGrainParams;
// 
// typedef struct RandDelayParams RandDelayParams, *PRandDelayParams;
// 
// typedef struct LFOParams LFOParams, *PLFOParams;
// 
// typedef struct PlaySoundParams PlaySoundParams, *PPlaySoundParams;
// 
// typedef struct PluginParams PluginParams, *PPluginParams;
// 
// typedef struct LargestGrainParamStruct LargestGrainParamStruct, *PLargestGrainParamStruct;
// 
// struct LFOParams {
//     UInt8 which_lfo;
//     UInt8 target;
//     UInt8 target_extra;
//     UInt8 shape;
//     UInt16 duty_cycle;
//     UInt16 depth;
//     UInt16 flags;
//     UInt16 start_offset;
//     UInt32 step_size;
// };
// 
// struct XREFGrainParams {
//     UInt32 BankID;
//     UInt32 SoundIndex;
//     SInt32 PitchMod;
//     UInt32 Flags;
// };
// 
// struct PlaySoundParams {
//     SInt32 vol;
//     SInt32 pan;
//     char reg_settings[4];
//     SInt32 sound_id;
//     char snd_name[16];
// };
// 
// struct LargestGrainParamStruct {
//     char blank[32];
// };
// 
// struct RandDelayParams {
//     SInt32 Amount;
// };
// 
// struct PluginParams {
//     UInt32 id;
//     UInt32 index;
//     unsigned char data[24];
// };
// 
// union GrainParams {
//     struct Tone tone;
//     struct XREFGrainParams xref;
//     struct RandDelayParams delay;
//     struct ControlParams control;
//     struct LFOParams lfo;
//     struct PlaySoundParams play_sound;
//     struct PluginParams plugin_params;
//     struct LargestGrainParamStruct junk;
// };
// 
// typedef struct Graph Graph, *PGraph;
// 
// typedef struct PointPrim PointPrim, *PPointPrim;
// 
// typedef enum GraphType {
//     POINT_GRAPH=0,
//     LINE_GRAPH=1
// } GraphType;
// 
// struct Graph {
//     float *m_pSamples;
//     struct PointPrim *m_pPointPrims;
//     INT32 m_top;
//     INT32 m_left;
//     INT32 m_height;
//     float m_fRangeY[2];
//     CHAR m_red;
//     CHAR m_green;
//     CHAR m_blue;
//     undefined field9_0x1f;
//     UINT16 m_iNumSamples;
//     UINT16 m_iNextSample;
//     struct dmaContext *m_pGraphDMAContext;
//     enum GraphType m_graphType;
//     float *m_pMonitoredFloat;
//     UINT32 m_contextSizeInWords;
//     CHAR *m_pName;
// };
// 
// struct PointPrim {
//     UINT32 x;
//     UINT32 y;
//     UINT32 pad1;
//     UINT32 pad2;
// };
// 
// typedef struct GraphManager GraphManager, *PGraphManager;
// 
// struct GraphManager {
//     undefined field0_0x0;
// };
// 
// typedef struct Grapple_SaveListItem Grapple_SaveListItem, *PGrapple_SaveListItem;
// 
// typedef struct Grapple_SaveListItem__vtable Grapple_SaveListItem__vtable, *PGrapple_SaveListItem__vtable;
// 
// struct Grapple_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Grapple_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct Grapple_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Grapple_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     UINT16 id;
//     undefined field4_0xe;
//     undefined field5_0xf;
// };
// 
// typedef struct Gravity Gravity, *PGravity;
// 
// struct Gravity {
//     undefined field0_0x0;
// };
// 
// typedef struct GroupModScript GroupModScript, *PGroupModScript;
// 
// typedef struct GroupScale__1_19420 GroupScale__1_19420, *PGroupScale__1_19420;
// 
// typedef struct tActionSoundGroupMod tActionSoundGroupMod, *PtActionSoundGroupMod;
// 
// typedef enum State__1_19426 {
//     kOff=0,
//     kTweenIn=1,
//     kOn=2,
//     kTweenOut=3
// } State__1_19426;
// 
// typedef struct tSoundGroupMod tSoundGroupMod, *PtSoundGroupMod;
// 
// struct tActionSoundGroupMod {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_SoundName;
//     struct tSoundGroupMod *m_SoundGroupModList;
//     struct tTween m_TweenIn;
//     struct tTween m_TweenOut;
// };
// 
// struct GroupScale__1_19420 {
//     float fVolumeScale;
//     int fPitchOffset;
// };
// 
// struct GroupModScript {
//     struct GroupScale__1_19420 fTween[16];
//     struct GroupScale__1_19420 fCurrent[16];
//     float fTweenTimer;
//     struct tActionSoundGroupMod *fAction;
//     enum State__1_19426 fState;
//     struct Emitter *fEmitter;
//     int fVolumeTween;
//     int fVolumeCurrent;
//     struct goScript *fScript;
// };
// 
// struct tSoundGroupMod {
//     UINT16 m_GroupMask;
//     undefined field1_0x2;
//     undefined field2_0x3;
//     FLOAT m_VolumeScale;
//     INT16 m_PitchOffset;
//     undefined field5_0xa;
//     undefined field6_0xb;
// };
// 
// typedef struct GroupScale__1_14342 GroupScale__1_14342, *PGroupScale__1_14342;
// 
// struct GroupScale__1_14342 {
//     int fVolumeScale;
//     int fPitchOffset;
// };
// 
// typedef struct GrowCharInstanceData GrowCharInstanceData, *PGrowCharInstanceData;
// 
// typedef struct tActionGrowCharacter tActionGrowCharacter, *PtActionGrowCharacter;
// 
// struct tActionGrowCharacter {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_ChangeTime;
//     FLOAT m_ChangeWindow;
//     FLOAT m_FXStart;
//     FLOAT m_FXStartTime;
//     FLOAT m_AdultScale;
//     struct tBranch *m_TransformMove;
//     char *m_AdultEntityName;
//     UINT32 m_FXName;
// };
// 
// struct GrowCharInstanceData {
//     FLOAT m_fTime;
//     struct tActionGrowCharacter *m_pTemplateData;
//     struct goGameObject *m_pReservedAdult;
//     struct goHandle m_hEffect;
// };
// 
// typedef struct gsmem_t gsmem_t, *Pgsmem_t;
// 
// struct gsmem_t {
//     unsigned int *memory;
//     int wordSize;
// };
// 
// typedef struct GenericSoundHandler *GSoundHandlerPtr;
// 
// typedef struct Hammer Hammer, *PHammer;
// 
// struct Hammer {
//     undefined field0_0x0;
// };
// 
// typedef struct HammerSoul HammerSoul, *PHammerSoul;
// 
// typedef struct tSoul tSoul, *PtSoul;
// 
// typedef struct tSoul tHammerSoul;
// 
// struct tSoul {
//     INT8 m_NumSouls;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_SpawnJoint;
//     FLOAT m_Scale;
//     FLOAT m_MaxTime;
//     FLOAT m_MaxDamage;
//     FLOAT m_DamagePerHit;
//     FLOAT m_MaxVelocity;
//     FLOAT m_HomingAmount;
//     INT16 m_HitContext;
//     undefined field12_0x22;
//     undefined field13_0x23;
//     UINT32 m_HitFlags;
// };
// 
// struct HammerSoul {
//     struct VUVec4 m_vTargetPos;
//     struct VUVec4 m_vVel;
//     tHammerSoul *m_pTwk;
//     struct goGameObject *m_pGO;
//     struct goHandle m_hTarget;
//     FLOAT m_fDamageDone;
//     FLOAT m_fTimeSinceLastDamage;
//     FLOAT m_fCurrentTime;
//     FLOAT m_fAngleX;
//     FLOAT m_fAngleY;
//     FLOAT m_fAngleZ;
//     UINT32 m_uFlags;
//     undefined field12_0x48;
//     undefined field13_0x49;
//     undefined field14_0x4a;
//     undefined field15_0x4b;
//     undefined field16_0x4c;
//     undefined field17_0x4d;
//     undefined field18_0x4e;
//     undefined field19_0x4f;
// };
// 
// typedef Ptr *Handle;
// 
// typedef struct Handle__1_9269 Handle__1_9269, *PHandle__1_9269;
// 
// struct Handle__1_9269 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     short unsigned int fFlags;
//     unsigned char fEEState;
//     unsigned char fUpdatePending;
//     struct Tag fSound;
//     unsigned int fIOPHandle;
// };
// 
// typedef struct Header Header, *PHeader;
// 
// struct Header {
//     UINT16 m_ID;
//     UINT16 m_Version;
//     UINT32 m_Length;
//     char m_Name[24];
// };
// 
// typedef struct _HeapInfo HeapInfo;
// 
// typedef struct Hermes Hermes, *PHermes;
// 
// struct Hermes {
//     undefined field0_0x0;
// };
// 
// typedef struct HermesBeam HermesBeam, *PHermesBeam;
// 
// typedef struct HermesBeamArgs HermesBeamArgs, *PHermesBeamArgs;
// 
// struct HermesBeam {
//     struct goGameObject *m_pGameObject;
//     struct goGameObject *m_pEnabledGO;
//     struct goGameObject *m_pLineOfSightGO;
//     struct HermesBeamArgs *m_pArgs;
//     INT32 m_iScriptJointID;
//     UINT32 m_uFlags;
// };
// 
// struct HermesBeamArgs {
//     char m_sBeamName[24];
//     char m_sEnabledName[24];
//     char m_sLineOfSightName[24];
//     BOOL m_bEnabledByDefault;
// };
// 
// typedef struct HeroWadSlot HeroWadSlot, *PHeroWadSlot;
// 
// struct HeroWadSlot {
//     struct wadContext *wc;
//     INT32 variant;
//     UINT32 flags;
// };
// 
// typedef struct hfsmArrowEmitter hfsmArrowEmitter, *PhfsmArrowEmitter;
// 
// typedef struct hfsmArrowEmitter__vtable hfsmArrowEmitter__vtable, *PhfsmArrowEmitter__vtable;
// 
// typedef struct SArrowEmitter SArrowEmitter, *PSArrowEmitter;
// 
// typedef struct SArrowEmitter__vtable SArrowEmitter__vtable, *PSArrowEmitter__vtable;
// 
// typedef struct SInitial__1_21718 SInitial__1_21718, *PSInitial__1_21718;
// 
// typedef struct SInitial__1_21718__vtable SInitial__1_21718__vtable, *PSInitial__1_21718__vtable;
// 
// struct SInitial__1_21718__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_21718 {
//     struct SInitial__1_21718__vtable *__vtable; /* Inherited from hfsmState */
//     struct SArrowEmitter *Parent;
// };
// 
// struct SArrowEmitter {
//     struct SArrowEmitter__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21718 ChildInitial;
// };
// 
// struct hfsmArrowEmitter {
//     struct hfsmArrowEmitter__vtable *__vtable; /* Inherited from hfsMachine */
//     struct dummyActor Actor;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SArrowEmitter ChildArrowEmitter;
// };
// 
// struct SArrowEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmArrowEmitter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmArrowEmitter;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// typedef struct hfsmBalanceGeom hfsmBalanceGeom, *PhfsmBalanceGeom;
// 
// typedef struct hfsmBalanceGeom__vtable hfsmBalanceGeom__vtable, *PhfsmBalanceGeom__vtable;
// 
// typedef struct SBalanceGeom SBalanceGeom, *PSBalanceGeom;
// 
// typedef struct SBalanceGeom__vtable SBalanceGeom__vtable, *PSBalanceGeom__vtable;
// 
// typedef struct SInitial__1_16495 SInitial__1_16495, *PSInitial__1_16495;
// 
// typedef struct SInitial__1_16495__vtable SInitial__1_16495__vtable, *PSInitial__1_16495__vtable;
// 
// struct SBalanceGeom__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmBalanceGeom__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmBalanceGeom;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SInitial__1_16495__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_16495 {
//     struct SInitial__1_16495__vtable *__vtable; /* Inherited from hfsmState */
//     struct Emitter *pEmit;
//     struct ClientParm__1_9257 *pSndParm;
//     bool bNoSpring;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     struct SBalanceGeom *Parent;
// };
// 
// struct SBalanceGeom {
//     struct SBalanceGeom__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_16495 ChildInitial;
// };
// 
// struct hfsmBalanceGeom {
//     struct hfsmBalanceGeom__vtable *__vtable; /* Inherited from hfsMachine */
//     struct goBalanceGeom Actor;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SBalanceGeom ChildBalanceGeom;
// };
// 
// typedef struct hfsmBreakable hfsmBreakable, *PhfsmBreakable;
// 
// typedef struct hfsmBreakable__vtable hfsmBreakable__vtable, *PhfsmBreakable__vtable;
// 
// typedef struct SBreakable SBreakable, *PSBreakable;
// 
// typedef struct SBreakable__vtable SBreakable__vtable, *PSBreakable__vtable;
// 
// typedef struct SSTART SSTART, *PSSTART;
// 
// typedef struct SInitial__1_21480 SInitial__1_21480, *PSInitial__1_21480;
// 
// typedef struct SIdle__1_21490 SIdle__1_21490, *PSIdle__1_21490;
// 
// typedef struct SSmash SSmash, *PSSmash;
// 
// typedef struct SDone__1_21509 SDone__1_21509, *PSDone__1_21509;
// 
// typedef struct SSTART__vtable SSTART__vtable, *PSSTART__vtable;
// 
// typedef struct SInitial__1_21480__vtable SInitial__1_21480__vtable, *PSInitial__1_21480__vtable;
// 
// typedef struct SIdle__1_21490__vtable SIdle__1_21490__vtable, *PSIdle__1_21490__vtable;
// 
// typedef struct SSmash__vtable SSmash__vtable, *PSSmash__vtable;
// 
// typedef struct SDone__1_21509__vtable SDone__1_21509__vtable, *PSDone__1_21509__vtable;
// 
// struct SInitial__1_21480 {
//     struct SInitial__1_21480__vtable *__vtable; /* Inherited from hfsmState */
//     struct SBreakable *Parent;
// };
// 
// struct SSmash__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSmash {
//     struct SSmash__vtable *__vtable; /* Inherited from hfsmState */
//     struct SBreakable *Parent;
// };
// 
// struct SIdle__1_21490 {
//     struct SIdle__1_21490__vtable *__vtable; /* Inherited from hfsmState */
//     struct SBreakable *Parent;
// };
// 
// struct SDone__1_21509__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSTART__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SIdle__1_21490__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SBreakable__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSTART {
//     struct SSTART__vtable *__vtable; /* Inherited from hfsmState */
//     struct SBreakable *Parent;
// };
// 
// struct SInitial__1_21480__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDone__1_21509 {
//     struct SDone__1_21509__vtable *__vtable; /* Inherited from hfsmState */
//     struct SBreakable *Parent;
// };
// 
// struct SBreakable {
//     struct SBreakable__vtable *__vtable; /* Inherited from hfsmState */
//     struct SSTART ChildSTART;
//     struct SInitial__1_21480 ChildInitial;
//     struct SIdle__1_21490 ChildIdle;
//     struct SSmash ChildSmash;
//     struct SDone__1_21509 ChildDone;
// };
// 
// struct hfsmBreakable {
//     struct hfsmBreakable__vtable *__vtable; /* Inherited from hfsMachine */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
//     struct goBreakable Actor;
//     struct SBreakable ChildBreakable;
//     undefined field15_0x7c;
//     undefined field16_0x7d;
//     undefined field17_0x7e;
//     undefined field18_0x7f;
// };
// 
// struct hfsmBreakable__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmBreakable;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// typedef struct HFSMCreator HFSMCreator, *PHFSMCreator;
// 
// typedef struct HFSMCreator__vtable HFSMCreator__vtable, *PHFSMCreator__vtable;
// 
// struct HFSMCreator {
//     struct HFSMCreator__vtable *__vtable; /* Inherited from HFSMCreatorBase */
// };
// 
// struct HFSMCreator__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Create;
//     struct __vtbl_ptr_type GetName;
//     struct __vtbl_ptr_type GetDataSize;
//     struct __vtbl_ptr_type GetNumDependantClasses;
//     struct __vtbl_ptr_type GetDependantClass;
// };
// 
// typedef struct HFSMCreatorBase HFSMCreatorBase, *PHFSMCreatorBase;
// 
// typedef struct HFSMCreatorBase__vtable HFSMCreatorBase__vtable, *PHFSMCreatorBase__vtable;
// 
// struct HFSMCreatorBase {
//     struct HFSMCreatorBase__vtable *__vtable;
// };
// 
// struct HFSMCreatorBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Create;
//     struct __vtbl_ptr_type GetName;
//     struct __vtbl_ptr_type GetDataSize;
//     struct __vtbl_ptr_type GetNumDependantClasses;
//     struct __vtbl_ptr_type GetDependantClass;
// };
// 
// typedef struct hfsmDefault hfsmDefault, *PhfsmDefault;
// 
// typedef struct hfsmDefault__vtable hfsmDefault__vtable, *PhfsmDefault__vtable;
// 
// struct hfsmDefault__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmDefault;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct hfsmDefault {
//     struct hfsmDefault__vtable *__vtable; /* Inherited from hfsMachine */
//     struct hfsmState s;
// };
// 
// typedef struct hfsmEnemy1 hfsmEnemy1, *PhfsmEnemy1;
// 
// typedef struct hfsmEnemy1__vtable hfsmEnemy1__vtable, *PhfsmEnemy1__vtable;
// 
// typedef struct SEnemy1 SEnemy1, *PSEnemy1;
// 
// typedef struct SEnemy1__vtable SEnemy1__vtable, *PSEnemy1__vtable;
// 
// typedef struct SStart__1_20931 SStart__1_20931, *PSStart__1_20931;
// 
// typedef struct SPAUSE SPAUSE, *PSPAUSE;
// 
// typedef struct SPREPDIE__1_21069 SPREPDIE__1_21069, *PSPREPDIE__1_21069;
// 
// typedef struct SFROZEN__1_21079 SFROZEN__1_21079, *PSFROZEN__1_21079;
// 
// typedef struct SFROZEN_PAUSE SFROZEN_PAUSE, *PSFROZEN_PAUSE;
// 
// typedef struct SSINK SSINK, *PSSINK;
// 
// typedef struct SDESTROYAI__1_21108 SDESTROYAI__1_21108, *PSDESTROYAI__1_21108;
// 
// typedef struct SStart__1_20931__vtable SStart__1_20931__vtable, *PSStart__1_20931__vtable;
// 
// typedef struct SSeekTarget SSeekTarget, *PSSeekTarget;
// 
// typedef struct SSeekSite SSeekSite, *PSSeekSite;
// 
// typedef struct SCheckForClearSpawn SCheckForClearSpawn, *PSCheckForClearSpawn;
// 
// typedef struct SInitialMove SInitialMove, *PSInitialMove;
// 
// typedef struct SNoTarget SNoTarget, *PSNoTarget;
// 
// typedef struct SAttack SAttack, *PSAttack;
// 
// typedef struct SPAUSE__vtable SPAUSE__vtable, *PSPAUSE__vtable;
// 
// typedef struct SPREPDIE__1_21069__vtable SPREPDIE__1_21069__vtable, *PSPREPDIE__1_21069__vtable;
// 
// typedef struct SFROZEN__1_21079__vtable SFROZEN__1_21079__vtable, *PSFROZEN__1_21079__vtable;
// 
// typedef struct SFROZEN_PAUSE__vtable SFROZEN_PAUSE__vtable, *PSFROZEN_PAUSE__vtable;
// 
// typedef struct SSINK__vtable SSINK__vtable, *PSSINK__vtable;
// 
// typedef struct SDESTROYAI__1_21108__vtable SDESTROYAI__1_21108__vtable, *PSDESTROYAI__1_21108__vtable;
// 
// typedef struct SSeekTarget__vtable SSeekTarget__vtable, *PSSeekTarget__vtable;
// 
// typedef struct SSeekSite__vtable SSeekSite__vtable, *PSSeekSite__vtable;
// 
// typedef struct SCheckForClearSpawn__vtable SCheckForClearSpawn__vtable, *PSCheckForClearSpawn__vtable;
// 
// typedef struct SInitialMove__vtable SInitialMove__vtable, *PSInitialMove__vtable;
// 
// typedef struct SNoTarget__vtable SNoTarget__vtable, *PSNoTarget__vtable;
// 
// typedef struct SStand SStand, *PSStand;
// 
// typedef struct SWander SWander, *PSWander;
// 
// typedef struct SPatrol__1_20990 SPatrol__1_20990, *PSPatrol__1_20990;
// 
// typedef struct SAttack__vtable SAttack__vtable, *PSAttack__vtable;
// 
// typedef struct STarget STarget, *PSTarget;
// 
// typedef struct SSearch SSearch, *PSSearch;
// 
// typedef struct SReaquire SReaquire, *PSReaquire;
// 
// typedef struct SStand__vtable SStand__vtable, *PSStand__vtable;
// 
// typedef struct SWander__vtable SWander__vtable, *PSWander__vtable;
// 
// typedef struct SPatrol__1_20990__vtable SPatrol__1_20990__vtable, *PSPatrol__1_20990__vtable;
// 
// typedef struct STarget__vtable STarget__vtable, *PSTarget__vtable;
// 
// typedef struct SSearch__vtable SSearch__vtable, *PSSearch__vtable;
// 
// typedef struct SReaquire__vtable SReaquire__vtable, *PSReaquire__vtable;
// 
// struct SNoTarget__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStart__1_20931__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPREPDIE__1_21069__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPatrol__1_20990__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStand {
//     struct SStand__vtable *__vtable; /* Inherited from hfsmState */
//     struct SNoTarget *Parent;
// };
// 
// struct STarget__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SCheckForClearSpawn {
//     struct SCheckForClearSpawn__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_20931 *Parent;
// };
// 
// struct SPatrol__1_20990 {
//     struct SPatrol__1_20990__vtable *__vtable; /* Inherited from hfsmState */
//     struct SNoTarget *Parent;
// };
// 
// struct SWander {
//     struct SWander__vtable *__vtable; /* Inherited from hfsmState */
//     struct SNoTarget *Parent;
// };
// 
// struct SNoTarget {
//     struct SNoTarget__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_20931 *Parent;
//     struct SStand ChildStand;
//     struct SWander ChildWander;
//     struct SPatrol__1_20990 ChildPatrol;
// };
// 
// struct SInitialMove {
//     struct SInitialMove__vtable *__vtable; /* Inherited from hfsmState */
//     struct tBranch *pInitialBranch;
//     struct SStart__1_20931 *Parent;
// };
// 
// struct SSeekSite {
//     struct SSeekSite__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_20931 *Parent;
// };
// 
// struct STarget {
//     struct STarget__vtable *__vtable; /* Inherited from hfsmState */
//     struct SAttack *Parent;
// };
// 
// struct SReaquire {
//     struct SReaquire__vtable *__vtable; /* Inherited from hfsmState */
//     struct SAttack *Parent;
// };
// 
// struct SSearch {
//     struct SSearch__vtable *__vtable; /* Inherited from hfsmState */
//     UINT32 m_iEvtID;
//     struct SAttack *Parent;
// };
// 
// struct SAttack {
//     struct SAttack__vtable *__vtable; /* Inherited from hfsmState */
//     struct goHandle m_TargetHandle;
//     struct SStart__1_20931 *Parent;
//     struct STarget ChildTarget;
//     struct SSearch ChildSearch;
//     struct SReaquire ChildReaquire;
// };
// 
// struct SSeekTarget {
//     struct SSeekTarget__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_20931 *Parent;
// };
// 
// struct SStart__1_20931 {
//     struct SStart__1_20931__vtable *__vtable; /* Inherited from hfsmState */
//     UINT32 m_iInitTimer;
//     BOOL m_bDie;
//     struct SEnemy1 *Parent;
//     struct SSeekTarget ChildSeekTarget;
//     struct SSeekSite ChildSeekSite;
//     struct SCheckForClearSpawn ChildCheckForClearSpawn;
//     struct SInitialMove ChildInitialMove;
//     struct SNoTarget ChildNoTarget;
//     struct SAttack ChildAttack;
// };
// 
// struct SDESTROYAI__1_21108__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPAUSE__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPAUSE {
//     struct SPAUSE__vtable *__vtable; /* Inherited from hfsmState */
//     struct SEnemy1 *Parent;
// };
// 
// struct SPREPDIE__1_21069 {
//     struct SPREPDIE__1_21069__vtable *__vtable; /* Inherited from hfsmState */
//     struct SEnemy1 *Parent;
// };
// 
// struct SDESTROYAI__1_21108 {
//     struct SDESTROYAI__1_21108__vtable *__vtable; /* Inherited from hfsmState */
//     UINT8 iCnt;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SEnemy1 *Parent;
// };
// 
// struct SFROZEN__1_21079 {
//     struct SFROZEN__1_21079__vtable *__vtable; /* Inherited from hfsmState */
//     struct SEnemy1 *Parent;
// };
// 
// struct SSINK {
//     struct SSINK__vtable *__vtable; /* Inherited from hfsmState */
//     struct SEnemy1 *Parent;
// };
// 
// struct SFROZEN_PAUSE {
//     struct SFROZEN_PAUSE__vtable *__vtable; /* Inherited from hfsmState */
//     struct SEnemy1 *Parent;
// };
// 
// struct SEnemy1 {
//     struct SEnemy1__vtable *__vtable; /* Inherited from hfsmState */
//     INT32 m_iInitialMoveName;
//     UINT8 m_bInitialEntry;
//     UINT8 m_ucFrozenMemory;
//     INT16 m_PatrolSite;
//     struct SStart__1_20931 ChildStart;
//     struct SPAUSE ChildPAUSE;
//     struct SPREPDIE__1_21069 ChildPREPDIE;
//     struct SFROZEN__1_21079 ChildFROZEN;
//     struct SFROZEN_PAUSE ChildFROZEN_PAUSE;
//     struct SSINK ChildSINK;
//     struct SDESTROYAI__1_21108 ChildDESTROYAI;
// };
// 
// struct SSeekSite__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStand__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SFROZEN_PAUSE__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SReaquire__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SAttack__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSeekTarget__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SCheckForClearSpawn__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmEnemy1__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmEnemy1;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SEnemy1__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSearch__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmEnemy1 {
//     struct hfsmEnemy1__vtable *__vtable; /* Inherited from hfsMachine */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
//     struct goAI Actor;
//     struct SEnemy1 ChildEnemy1;
//     undefined field15_0x16c;
//     undefined field16_0x16d;
//     undefined field17_0x16e;
//     undefined field18_0x16f;
// };
// 
// struct SFROZEN__1_21079__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SWander__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitialMove__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSINK__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmHeroBreak hfsmHeroBreak, *PhfsmHeroBreak;
// 
// typedef struct hfsmHeroBreak__vtable hfsmHeroBreak__vtable, *PhfsmHeroBreak__vtable;
// 
// typedef struct SHeroBreak SHeroBreak, *PSHeroBreak;
// 
// typedef struct SHeroBreak__vtable SHeroBreak__vtable, *PSHeroBreak__vtable;
// 
// typedef struct SInitial__1_21660 SInitial__1_21660, *PSInitial__1_21660;
// 
// typedef struct SDone__1_21671 SDone__1_21671, *PSDone__1_21671;
// 
// typedef struct SInitial__1_21660__vtable SInitial__1_21660__vtable, *PSInitial__1_21660__vtable;
// 
// typedef struct SDone__1_21671__vtable SDone__1_21671__vtable, *PSDone__1_21671__vtable;
// 
// struct SDone__1_21671 {
//     struct SDone__1_21671__vtable *__vtable; /* Inherited from hfsmState */
//     struct SHeroBreak *Parent;
// };
// 
// struct SInitial__1_21660__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDone__1_21671__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_21660 {
//     struct SInitial__1_21660__vtable *__vtable; /* Inherited from hfsmState */
//     struct SHeroBreak *Parent;
// };
// 
// struct SHeroBreak {
//     struct SHeroBreak__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21660 ChildInitial;
//     struct SDone__1_21671 ChildDone;
// };
// 
// struct hfsmHeroBreak {
//     struct hfsmHeroBreak__vtable *__vtable; /* Inherited from hfsMachine */
//     struct goHeroBreak Actor;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SHeroBreak ChildHeroBreak;
// };
// 
// struct hfsmHeroBreak__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmHeroBreak;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SHeroBreak__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmIO_CSM hfsmIO_CSM, *PhfsmIO_CSM;
// 
// typedef struct hfsmIO_CSM__vtable hfsmIO_CSM__vtable, *PhfsmIO_CSM__vtable;
// 
// typedef struct IO_CSM_Inter IO_CSM_Inter, *PIO_CSM_Inter;
// 
// typedef struct SIO_CSM SIO_CSM, *PSIO_CSM;
// 
// typedef struct IO_CSM_Inter__vtable IO_CSM_Inter__vtable, *PIO_CSM_Inter__vtable;
// 
// typedef struct SIO_CSM__vtable SIO_CSM__vtable, *PSIO_CSM__vtable;
// 
// typedef struct SInitial__1_21416 SInitial__1_21416, *PSInitial__1_21416;
// 
// typedef struct SDone__1_21427 SDone__1_21427, *PSDone__1_21427;
// 
// typedef struct SInitial__1_21416__vtable SInitial__1_21416__vtable, *PSInitial__1_21416__vtable;
// 
// typedef struct SDone__1_21427__vtable SDone__1_21427__vtable, *PSDone__1_21427__vtable;
// 
// struct SInitial__1_21416__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_21416 {
//     struct SInitial__1_21416__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_CSM *Parent;
// };
// 
// struct IO_CSM_Inter {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct IO_CSM_Inter__vtable *__vtable; /* Inherited from goCreatureController */
//     struct goIO_CSM *pIO;
// };
// 
// struct SDone__1_21427 {
//     struct SDone__1_21427__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_CSM *Parent;
// };
// 
// struct SIO_CSM {
//     struct SIO_CSM__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21416 ChildInitial;
//     struct SDone__1_21427 ChildDone;
// };
// 
// struct hfsmIO_CSM {
//     struct hfsmIO_CSM__vtable *__vtable; /* Inherited from hfsMachine */
//     struct IO_CSM_Inter Actor;
//     struct SIO_CSM ChildIO_CSM;
// };
// 
// struct IO_CSM_Inter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IO_CSM_Inter;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type GetControlSystem;
// };
// 
// struct SIO_CSM__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmIO_CSM__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmIO_CSM;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SDone__1_21427__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmIO_Misc hfsmIO_Misc, *PhfsmIO_Misc;
// 
// typedef struct hfsmIO_Misc__vtable hfsmIO_Misc__vtable, *PhfsmIO_Misc__vtable;
// 
// typedef struct IOInter IOInter, *PIOInter;
// 
// typedef struct SIO_Misc SIO_Misc, *PSIO_Misc;
// 
// typedef struct IOInter__vtable IOInter__vtable, *PIOInter__vtable;
// 
// typedef struct SIO_Misc__vtable SIO_Misc__vtable, *PSIO_Misc__vtable;
// 
// typedef struct SInitial__1_21290 SInitial__1_21290, *PSInitial__1_21290;
// 
// typedef struct SDone__1_21301 SDone__1_21301, *PSDone__1_21301;
// 
// typedef struct SInitial__1_21290__vtable SInitial__1_21290__vtable, *PSInitial__1_21290__vtable;
// 
// typedef struct SDone__1_21301__vtable SDone__1_21301__vtable, *PSDone__1_21301__vtable;
// 
// struct SInitial__1_21290 {
//     struct SInitial__1_21290__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_Misc *Parent;
// };
// 
// struct SDone__1_21301 {
//     struct SDone__1_21301__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_Misc *Parent;
// };
// 
// struct SIO_Misc {
//     struct SIO_Misc__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21290 ChildInitial;
//     struct SDone__1_21301 ChildDone;
// };
// 
// struct IOInter {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct IOInter__vtable *__vtable; /* Inherited from goCreatureController */
//     struct goIO *pIO;
// };
// 
// struct hfsmIO_Misc {
//     struct hfsmIO_Misc__vtable *__vtable; /* Inherited from hfsMachine */
//     struct IOInter Actor;
//     struct SIO_Misc ChildIO_Misc;
// };
// 
// struct SIO_Misc__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_21290__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmIO_Misc__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmIO_Misc;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SDone__1_21301__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct IOInter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IOInter;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type GetControlSystem;
// };
// 
// typedef struct hfsmIO_TandF hfsmIO_TandF, *PhfsmIO_TandF;
// 
// typedef struct hfsmIO_TandF__vtable hfsmIO_TandF__vtable, *PhfsmIO_TandF__vtable;
// 
// typedef struct IO_TandF_Inter IO_TandF_Inter, *PIO_TandF_Inter;
// 
// typedef struct SIO_TandF SIO_TandF, *PSIO_TandF;
// 
// typedef struct IO_TandF_Inter__vtable IO_TandF_Inter__vtable, *PIO_TandF_Inter__vtable;
// 
// typedef struct SIO_TandF__vtable SIO_TandF__vtable, *PSIO_TandF__vtable;
// 
// typedef struct SInitial__1_21353 SInitial__1_21353, *PSInitial__1_21353;
// 
// typedef struct SDone__1_21364 SDone__1_21364, *PSDone__1_21364;
// 
// typedef struct SInitial__1_21353__vtable SInitial__1_21353__vtable, *PSInitial__1_21353__vtable;
// 
// typedef struct SDone__1_21364__vtable SDone__1_21364__vtable, *PSDone__1_21364__vtable;
// 
// struct SIO_TandF__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SInitial__1_21353 {
//     struct SInitial__1_21353__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_TandF *Parent;
// };
// 
// struct IO_TandF_Inter {
//     struct goCreature *m_pCreature; /* Inherited from goCreatureController */
//     struct goPlayerControls *m_pControls; /* Inherited from goCreatureController */
//     struct IO_TandF_Inter__vtable *__vtable; /* Inherited from goCreatureController */
//     struct goIO_TandF *pIO;
// };
// 
// struct SDone__1_21364__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDone__1_21364 {
//     struct SDone__1_21364__vtable *__vtable; /* Inherited from hfsmState */
//     struct SIO_TandF *Parent;
// };
// 
// struct SIO_TandF {
//     struct SIO_TandF__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21353 ChildInitial;
//     struct SDone__1_21364 ChildDone;
// };
// 
// struct hfsmIO_TandF {
//     struct hfsmIO_TandF__vtable *__vtable; /* Inherited from hfsMachine */
//     struct IO_TandF_Inter Actor;
//     struct SIO_TandF ChildIO_TandF;
// };
// 
// struct SInitial__1_21353__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmIO_TandF__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmIO_TandF;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct IO_TandF_Inter__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IO_TandF_Inter;
//     struct __vtbl_ptr_type GetDamageMultiplier;
//     struct __vtbl_ptr_type IsCreatureDead;
//     struct __vtbl_ptr_type QuickBlock;
//     struct __vtbl_ptr_type GetControlSystem;
// };
// 
// typedef struct hfsmManager hfsmManager, *PhfsmManager;
// 
// struct hfsmManager {
//     undefined field0_0x0;
// };
// 
// typedef struct hfsmPegasus hfsmPegasus, *PhfsmPegasus;
// 
// typedef struct hfsmPegasus__vtable hfsmPegasus__vtable, *PhfsmPegasus__vtable;
// 
// typedef struct SPegasus SPegasus, *PSPegasus;
// 
// typedef struct SPegasus__vtable SPegasus__vtable, *PSPegasus__vtable;
// 
// typedef struct SStorage SStorage, *PSStorage;
// 
// typedef struct SStart__1_20709 SStart__1_20709, *PSStart__1_20709;
// 
// typedef struct SStorage__vtable SStorage__vtable, *PSStorage__vtable;
// 
// typedef struct SStart__1_20709__vtable SStart__1_20709__vtable, *PSStart__1_20709__vtable;
// 
// struct SStorage {
//     struct SStorage__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPegasus *Parent;
// };
// 
// struct SStorage__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStart__1_20709__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStart__1_20709 {
//     struct SStart__1_20709__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPegasus *Parent;
// };
// 
// struct SPegasus {
//     struct SPegasus__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStorage ChildStorage;
//     struct SStart__1_20709 ChildStart;
// };
// 
// struct hfsmPegasus {
//     struct hfsmPegasus__vtable *__vtable; /* Inherited from hfsMachine */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
//     struct goPegasus Actor;
//     struct SPegasus ChildPegasus;
//     undefined field15_0x754;
//     undefined field16_0x755;
//     undefined field17_0x756;
//     undefined field18_0x757;
//     undefined field19_0x758;
//     undefined field20_0x759;
//     undefined field21_0x75a;
//     undefined field22_0x75b;
//     undefined field23_0x75c;
//     undefined field24_0x75d;
//     undefined field25_0x75e;
//     undefined field26_0x75f;
// };
// 
// struct hfsmPegasus__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmPegasus;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SPegasus__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmPegasusEnemy hfsmPegasusEnemy, *PhfsmPegasusEnemy;
// 
// typedef struct hfsmPegasusEnemy__vtable hfsmPegasusEnemy__vtable, *PhfsmPegasusEnemy__vtable;
// 
// typedef struct SPegasusEnemy SPegasusEnemy, *PSPegasusEnemy;
// 
// typedef struct SPegasusEnemy__vtable SPegasusEnemy__vtable, *PSPegasusEnemy__vtable;
// 
// typedef struct SStart__1_21154 SStart__1_21154, *PSStart__1_21154;
// 
// typedef struct SPREPDIE__1_21215 SPREPDIE__1_21215, *PSPREPDIE__1_21215;
// 
// typedef struct SFADE SFADE, *PSFADE;
// 
// typedef struct SDESTROYAI__1_21235 SDESTROYAI__1_21235, *PSDESTROYAI__1_21235;
// 
// typedef struct SStart__1_21154__vtable SStart__1_21154__vtable, *PSStart__1_21154__vtable;
// 
// typedef struct SPatrol__1_21164 SPatrol__1_21164, *PSPatrol__1_21164;
// 
// typedef struct SLockedOn SLockedOn, *PSLockedOn;
// 
// typedef struct SSwarm SSwarm, *PSSwarm;
// 
// typedef struct SFlight SFlight, *PSFlight;
// 
// typedef struct SPREPDIE__1_21215__vtable SPREPDIE__1_21215__vtable, *PSPREPDIE__1_21215__vtable;
// 
// typedef struct SFADE__vtable SFADE__vtable, *PSFADE__vtable;
// 
// typedef struct SDESTROYAI__1_21235__vtable SDESTROYAI__1_21235__vtable, *PSDESTROYAI__1_21235__vtable;
// 
// typedef struct SPatrol__1_21164__vtable SPatrol__1_21164__vtable, *PSPatrol__1_21164__vtable;
// 
// typedef struct SLockedOn__vtable SLockedOn__vtable, *PSLockedOn__vtable;
// 
// typedef struct SSwarm__vtable SSwarm__vtable, *PSSwarm__vtable;
// 
// typedef struct SFlight__vtable SFlight__vtable, *PSFlight__vtable;
// 
// struct SDESTROYAI__1_21235 {
//     struct SDESTROYAI__1_21235__vtable *__vtable; /* Inherited from hfsmState */
//     UINT8 iCnt;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SPegasusEnemy *Parent;
// };
// 
// struct SLockedOn {
//     struct SLockedOn__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_21154 *Parent;
// };
// 
// struct SFlight__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDESTROYAI__1_21235__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SFlight {
//     struct SFlight__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_21154 *Parent;
// };
// 
// struct SPatrol__1_21164 {
//     struct SPatrol__1_21164__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_21154 *Parent;
// };
// 
// struct SSwarm {
//     struct SSwarm__vtable *__vtable; /* Inherited from hfsmState */
//     struct SStart__1_21154 *Parent;
// };
// 
// struct SStart__1_21154 {
//     struct SStart__1_21154__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPegasusEnemy *Parent;
//     struct SInitialMove ChildInitialMove;
//     struct SPatrol__1_21164 ChildPatrol;
//     struct SLockedOn ChildLockedOn;
//     struct SSwarm ChildSwarm;
//     struct SFlight ChildFlight;
// };
// 
// struct SStart__1_21154__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPatrol__1_21164__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SFADE {
//     struct SFADE__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPegasusEnemy *Parent;
// };
// 
// struct SPREPDIE__1_21215 {
//     struct SPREPDIE__1_21215__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPegasusEnemy *Parent;
// };
// 
// struct SPegasusEnemy {
//     struct SPegasusEnemy__vtable *__vtable; /* Inherited from hfsmState */
//     INT32 m_iInitialMoveName;
//     UINT32 m_iInitTimer;
//     UINT8 m_bInitialEntry;
//     undefined field4_0xd;
//     INT16 m_PatrolSite;
//     struct SStart__1_21154 ChildStart;
//     struct SPREPDIE__1_21215 ChildPREPDIE;
//     struct SFADE ChildFADE;
//     struct SDESTROYAI__1_21235 ChildDESTROYAI;
// };
// 
// struct hfsmPegasusEnemy__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmPegasusEnemy;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SPegasusEnemy__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SLockedOn__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SFADE__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SSwarm__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPREPDIE__1_21215__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmPegasusEnemy {
//     struct hfsmPegasusEnemy__vtable *__vtable; /* Inherited from hfsMachine */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
//     struct goPegasusAI Actor;
//     struct SPegasusEnemy ChildPegasusEnemy;
// };
// 
// typedef struct hfsmPlayer hfsmPlayer, *PhfsmPlayer;
// 
// typedef struct hfsmPlayer__vtable hfsmPlayer__vtable, *PhfsmPlayer__vtable;
// 
// typedef struct SPlayer SPlayer, *PSPlayer;
// 
// typedef struct SPlayer__vtable SPlayer__vtable, *PSPlayer__vtable;
// 
// typedef struct SRunning SRunning, *PSRunning;
// 
// typedef struct SFROZEN__1_20863 SFROZEN__1_20863, *PSFROZEN__1_20863;
// 
// typedef struct SDead SDead, *PSDead;
// 
// typedef struct SRunning__vtable SRunning__vtable, *PSRunning__vtable;
// 
// typedef struct SStart__1_20841 SStart__1_20841, *PSStart__1_20841;
// 
// typedef struct SFROZEN__1_20863__vtable SFROZEN__1_20863__vtable, *PSFROZEN__1_20863__vtable;
// 
// typedef struct SDead__vtable SDead__vtable, *PSDead__vtable;
// 
// typedef struct SStart__1_20841__vtable SStart__1_20841__vtable, *PSStart__1_20841__vtable;
// 
// struct SFROZEN__1_20863 {
//     struct SFROZEN__1_20863__vtable *__vtable; /* Inherited from hfsmState */
//     INT32 m_iInvTime;
//     struct SPlayer *Parent;
// };
// 
// struct SDead__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStart__1_20841__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SStart__1_20841 {
//     struct SStart__1_20841__vtable *__vtable; /* Inherited from hfsmState */
//     UINT32 m_iLastHitFrame;
//     struct SRunning *Parent;
// };
// 
// struct SRunning {
//     struct SRunning__vtable *__vtable; /* Inherited from hfsmState */
//     UINT32 m_iFrameCnt;
//     INT32 m_iTimer;
//     INT32 m_iHitPauseTimer;
//     struct SPlayer *Parent;
//     struct SStart__1_20841 ChildStart;
// };
// 
// struct SDead {
//     struct SDead__vtable *__vtable; /* Inherited from hfsmState */
//     struct SPlayer *Parent;
// };
// 
// struct SPlayer {
//     struct SPlayer__vtable *__vtable; /* Inherited from hfsmState */
//     struct SRunning ChildRunning;
//     struct SFROZEN__1_20863 ChildFROZEN;
//     struct SDead ChildDead;
// };
// 
// struct hfsmPlayer {
//     struct hfsmPlayer__vtable *__vtable; /* Inherited from hfsMachine */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
//     struct goPlayer Actor;
//     struct SPlayer ChildPlayer;
//     undefined field15_0x1f8;
//     undefined field16_0x1f9;
//     undefined field17_0x1fa;
//     undefined field18_0x1fb;
//     undefined field19_0x1fc;
//     undefined field20_0x1fd;
//     undefined field21_0x1fe;
//     undefined field22_0x1ff;
// };
// 
// struct SRunning__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SPlayer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmPlayer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmPlayer;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SFROZEN__1_20863__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmReactive hfsmReactive, *PhfsmReactive;
// 
// typedef struct hfsmReactive__vtable hfsmReactive__vtable, *PhfsmReactive__vtable;
// 
// typedef struct SReactive SReactive, *PSReactive;
// 
// typedef struct SReactive__vtable SReactive__vtable, *PSReactive__vtable;
// 
// typedef struct SInitialize SInitialize, *PSInitialize;
// 
// typedef struct SIdle__1_20774 SIdle__1_20774, *PSIdle__1_20774;
// 
// typedef struct SFrozen SFrozen, *PSFrozen;
// 
// typedef struct SDying SDying, *PSDying;
// 
// typedef struct SDestroy SDestroy, *PSDestroy;
// 
// typedef struct SInitialize__vtable SInitialize__vtable, *PSInitialize__vtable;
// 
// typedef struct SIdle__1_20774__vtable SIdle__1_20774__vtable, *PSIdle__1_20774__vtable;
// 
// typedef struct SFrozen__vtable SFrozen__vtable, *PSFrozen__vtable;
// 
// typedef struct SDying__vtable SDying__vtable, *PSDying__vtable;
// 
// typedef struct SDestroy__vtable SDestroy__vtable, *PSDestroy__vtable;
// 
// struct SDying {
//     struct SDying__vtable *__vtable; /* Inherited from hfsmState */
//     struct SReactive *Parent;
// };
// 
// struct SIdle__1_20774 {
//     struct SIdle__1_20774__vtable *__vtable; /* Inherited from hfsmState */
//     struct SReactive *Parent;
// };
// 
// struct SDestroy {
//     struct SDestroy__vtable *__vtable; /* Inherited from hfsmState */
//     UINT8 iCnt;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     struct SReactive *Parent;
// };
// 
// struct SInitialize {
//     struct SInitialize__vtable *__vtable; /* Inherited from hfsmState */
//     struct SReactive *Parent;
// };
// 
// struct SFrozen {
//     struct SFrozen__vtable *__vtable; /* Inherited from hfsmState */
//     struct SReactive *Parent;
// };
// 
// struct SReactive {
//     struct SReactive__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitialize ChildInitialize;
//     struct SIdle__1_20774 ChildIdle;
//     struct SFrozen ChildFrozen;
//     struct SDying ChildDying;
//     struct SDestroy ChildDestroy;
// };
// 
// struct SIdle__1_20774__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SReactive__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmReactive {
//     struct hfsmReactive__vtable *__vtable; /* Inherited from hfsMachine */
//     struct CReactivePtr Actor;
//     struct SReactive ChildReactive;
// };
// 
// struct hfsmReactive__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmReactive;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SInitialize__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDestroy__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SFrozen__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct SDying__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef struct hfsmSavePoint hfsmSavePoint, *PhfsmSavePoint;
// 
// typedef struct hfsmSavePoint__vtable hfsmSavePoint__vtable, *PhfsmSavePoint__vtable;
// 
// typedef struct SSavePoint SSavePoint, *PSSavePoint;
// 
// typedef struct SSavePoint__vtable SSavePoint__vtable, *PSSavePoint__vtable;
// 
// typedef struct SInitial__1_21560 SInitial__1_21560, *PSInitial__1_21560;
// 
// typedef struct SInitial__1_21560__vtable SInitial__1_21560__vtable, *PSInitial__1_21560__vtable;
// 
// struct SInitial__1_21560 {
//     struct SInitial__1_21560__vtable *__vtable; /* Inherited from hfsmState */
//     struct SSavePoint *Parent;
// };
// 
// struct SSavePoint {
//     struct SSavePoint__vtable *__vtable; /* Inherited from hfsmState */
//     struct SInitial__1_21560 ChildInitial;
// };
// 
// struct SSavePoint__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// struct hfsmSavePoint {
//     struct hfsmSavePoint__vtable *__vtable; /* Inherited from hfsMachine */
//     struct goSavePoint Actor;
//     struct SSavePoint ChildSavePoint;
// };
// 
// struct hfsmSavePoint__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type hfsmSavePoint;
//     struct __vtbl_ptr_type GetStartState;
// };
// 
// struct SInitial__1_21560__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type ProcessEvent;
//     struct __vtbl_ptr_type CallExitCode;
// };
// 
// typedef short int HItype;
// 
// typedef struct Hole Hole, *PHole;
// 
// struct Hole {
//     struct tColorMod m_InnerRGBA; /* Inherited from tFS_Hole */
//     struct tColorMod m_MiddleRGBA; /* Inherited from tFS_Hole */
//     struct tColorMod m_OuterRGBA; /* Inherited from tFS_Hole */
//     struct tOffset m_Offset; /* Inherited from tFS_Hole */
//     FLOAT m_XScale; /* Inherited from tFS_Hole */
//     struct tRadii m_Radii; /* Inherited from tFS_Hole */
//     FLOAT m_pad; /* Inherited from tFS_Hole */
// };
// 
// typedef struct hwTimer hwTimer, *PhwTimer;
// 
// struct hwTimer {
//     UINT32 LastT0Count;
//     UINT32 LastT1Count;
// };
// 
// typedef INT16 i16;
// 
// typedef INT32 i32;
// 
// typedef long int INT64;
// 
// typedef INT64 i64;
// 
// typedef INT8 i8;
// 
// typedef union ieee_double_shape_type ieee_double_shape_type, *Pieee_double_shape_type;
// 
// typedef struct ieee_double_shape_type__parts ieee_double_shape_type__parts, *Pieee_double_shape_type__parts;
// 
// struct ieee_double_shape_type__parts {
//     __uint32_t lsw;
//     __uint32_t msw;
// };
// 
// union ieee_double_shape_type {
//     double value;
//     struct ieee_double_shape_type__parts parts;
// };
// 
// typedef union ieee_float_shape_type ieee_float_shape_type, *Pieee_float_shape_type;
// 
// union ieee_float_shape_type {
//     float value;
//     __uint32_t word;
// };
// 
// typedef struct ImportTableChunk ImportTableChunk, *PImportTableChunk;
// 
// struct ImportTableChunk {
//     INT32 m_iNumEntries;
// };
// 
// typedef struct IndirectData IndirectData, *PIndirectData;
// 
// struct IndirectData {
//     struct VUVec4 fPosition;
//     FLOAT fRotation;
//     FLOAT fElevation;
//     FLOAT fRoll;
//     FLOAT fFieldOfView;
// };
// 
// typedef short unsigned int ino_t;
// 
// typedef enum InteractionTypes {
//     kI_PlayAnimForward=-2147483648,
//     kI_None=0,
//     kI_Pushable=1,
//     kI_Crank=2,
//     kI_Lever=4,
//     kI_UWLever=8,
//     kI_TandF=16,
//     kI_CSM=32,
//     kI_UWCSM=64
// } InteractionTypes;
// 
// typedef struct Internal3Module Internal3Module, *PInternal3Module;
// 
// typedef struct Internal3Module__vtable Internal3Module__vtable, *PInternal3Module__vtable;
// 
// struct Internal3Module {
//     struct Internal3Module__vtable *__vtable; /* Inherited from sliModule */
//     struct Entity *lastCheckPointEntity;
//     FLOAT lastCheckPointTime;
// };
// 
// struct Internal3Module__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Name;
//     struct __vtbl_ptr_type GetVariable;
//     struct __vtbl_ptr_type SetVariable;
//     struct __vtbl_ptr_type CallFunction;
// };
// 
// typedef struct InterpFix16 InterpFix16, *PInterpFix16;
// 
// struct InterpFix16 {
//     undefined field0_0x0;
// };
// 
// typedef struct InterpFixU16 InterpFixU16, *PInterpFixU16;
// 
// struct InterpFixU16 {
//     undefined field0_0x0;
// };
// 
// typedef struct InterpTranslation16 InterpTranslation16, *PInterpTranslation16;
// 
// struct InterpTranslation16 {
//     undefined field0_0x0;
// };
// 
// typedef DItype intfrac;
// 
// typedef SItype intfrac;
// 
// typedef struct IO_CSM_SaveListItem IO_CSM_SaveListItem, *PIO_CSM_SaveListItem;
// 
// typedef struct IO_CSM_SaveListItem__vtable IO_CSM_SaveListItem__vtable, *PIO_CSM_SaveListItem__vtable;
// 
// struct IO_CSM_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct IO_CSM_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     struct goIO_CSM *pObj;
//     BOOL dataValid;
//     UINT16 id;
//     INT16 x;
//     INT16 y;
//     INT16 z;
//     unsigned char data[1];
//     undefined field10_0x1d;
//     undefined field11_0x1e;
//     undefined field12_0x1f;
// };
// 
// struct IO_CSM_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IO_CSM_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// typedef struct IO_CSM_State IO_CSM_State, *PIO_CSM_State;
// 
// struct IO_CSM_State {
//     UINT8 x;
// };
// 
// typedef struct IO_ParamData IO_ParamData, *PIO_ParamData;
// 
// struct IO_ParamData {
//     UINT32 tweakNameHash;
//     INT32 instance;
// };
// 
// typedef struct IO_SaveListItem IO_SaveListItem, *PIO_SaveListItem;
// 
// typedef struct IO_SaveListItem__vtable IO_SaveListItem__vtable, *PIO_SaveListItem__vtable;
// 
// struct IO_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct IO_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     struct goIO *pObj;
//     BOOL dataValid;
//     UINT16 id;
//     unsigned char data[14];
// };
// 
// struct IO_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IO_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// typedef struct IO_TandF_SaveListItem IO_TandF_SaveListItem, *PIO_TandF_SaveListItem;
// 
// typedef struct IO_TandF_SaveListItem__vtable IO_TandF_SaveListItem__vtable, *PIO_TandF_SaveListItem__vtable;
// 
// struct IO_TandF_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IO_TandF_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct IO_TandF_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct IO_TandF_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     struct goIO_TandF *pObj;
//     BOOL dataValid;
//     UINT16 id;
//     unsigned char data[4];
//     undefined field7_0x1a;
//     undefined field8_0x1b;
// };
// 
// typedef struct IO_TandF_State IO_TandF_State, *PIO_TandF_State;
// 
// struct IO_TandF_State {
//     FLOAT x;
// };
// 
// typedef struct IOPModule IOPModule, *PIOPModule;
// 
// struct IOPModule {
//     char *name;
//     char *args;
// };
// 
// typedef struct IOPVAGBankParm IOPVAGBankParm, *PIOPVAGBankParm;
// 
// typedef struct IOPVAGBankParm__vtable IOPVAGBankParm__vtable, *PIOPVAGBankParm__vtable;
// 
// struct IOPVAGBankParm__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type IOPVAGBankParm;
// };
// 
// struct IOPVAGBankParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     struct IOPVAGBankParm__vtable *__vtable; /* Inherited from svrClientUnloadParm */
//     undefined field10_0x10;
//     undefined field11_0x11;
//     undefined field12_0x12;
//     undefined field13_0x13;
//     undefined field14_0x14;
//     undefined field15_0x15;
//     undefined field16_0x16;
//     undefined field17_0x17;
//     undefined field18_0x18;
//     undefined field19_0x19;
//     undefined field20_0x1a;
//     undefined field21_0x1b;
//     undefined field22_0x1c;
//     undefined field23_0x1d;
//     undefined field24_0x1e;
//     undefined field25_0x1f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     int fIOPSlot;
// };
// 
// typedef undefined1 *IOPVagStreamMonCallback;
// 
// typedef struct IOPVagStreamMonitor IOPVagStreamMonitor, *PIOPVagStreamMonitor;
// 
// struct IOPVagStreamMonitor {
//     u_int BufferSize;
//     char *IOPStartAddress;
//     char *NextIOPReadAddress;
//     int TotalBytesConsumed;
//     IOPVagStreamMonCallback PreRingReadNotification;
//     IOPVagStreamMonCallback ConsumedRingDataNotification;
//     int PostCallbackSema;
//     char pad[36];
// };
// 
// typedef struct IOState IOState, *PIOState;
// 
// struct IOState {
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     INT16 angle;
//     undefined field4_0xe;
//     undefined field5_0xf;
// };
// 
// typedef struct Iterator__1_10122 Iterator__1_10122, *PIterator__1_10122;
// 
// typedef struct stdCListNode<renView *,stdAllocator<stdCListNodeBase> > stdCListNode<renView *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<renView *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<renView *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_10122 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<renView *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_1013 Iterator__1_1013, *PIterator__1_1013;
// 
// typedef struct stdCListNode<svr *,stdAllocator<stdCListNodeBase> > stdCListNode<svr *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<svr *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_1013 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<svr *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<svr *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_1062 Iterator__1_1062, *PIterator__1_1062;
// 
// typedef struct stdCListNode<svrClientParm *,stdCListMultiWadContextAllocator> stdCListNode<svrClientParm *,stdCListMultiWadContextAllocator>, *PstdCListNode<svrClientParm *,stdCListMultiWadContextAllocator>;
// 
// struct stdCListNode<svrClientParm *,stdCListMultiWadContextAllocator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_1062 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<svrClientParm *,stdCListMultiWadContextAllocator> *_pCurrNode;
// };
// 
// typedef struct iterator__1_10815 iterator__1_10815, *Piterator__1_10815;
// 
// struct iterator__1_10815 {
//     struct stdSkipListNode<unsigned int> *_pCurrNode;
//     UINT _uLevel;
// };
// 
// typedef struct Iterator__1_10865 Iterator__1_10865, *PIterator__1_10865;
// 
// typedef struct stdCListNode<renMaterial *,stdAllocator<stdCListNodeBase> > stdCListNode<renMaterial *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<renMaterial *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<renMaterial *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_10865 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<renMaterial *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_11138 Iterator__1_11138, *PIterator__1_11138;
// 
// struct Iterator__1_11138 {
//     struct stdSLListNode *_pCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_11365 Iterator__1_11365, *PIterator__1_11365;
// 
// typedef struct stdCListNode<dc::File *,stdAllocator<stdCListNodeBase> > stdCListNode<dc::File *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<dc::File *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_11365 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<dc::File *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<dc::File *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_11458 Iterator__1_11458, *PIterator__1_11458;
// 
// typedef struct Iterator__1_638 Iterator__1_638, *PIterator__1_638;
// 
// struct Iterator__1_638 {
//     struct stdListNode *fCurrNode; /* Inherited from Iterator */
// };
// 
// struct Iterator__1_11458 {
//     struct fxClientContainer *fContainer;
//     int fClientListIndex;
//     struct Iterator__1_638 fIterator;
// };
// 
// typedef struct Iterator__1_12339 Iterator__1_12339, *PIterator__1_12339;
// 
// struct Iterator__1_12339 {
//     struct VUVec4 fNull;
//     struct VUVec4 *fIterators[5];
//     int fEEStride;
//     int fVUStride;
//     int fCount;
//     float fTimeStep;
//     struct renParticleFormat fFormat;
//     struct renParticleSystem *fSystem;
//     struct renParticleChunk *fChunk;
//     undefined field9_0x48;
//     undefined field10_0x49;
//     undefined field11_0x4a;
//     undefined field12_0x4b;
//     undefined field13_0x4c;
//     undefined field14_0x4d;
//     undefined field15_0x4e;
//     undefined field16_0x4f;
// };
// 
// typedef struct Iterator__1_12693 Iterator__1_12693, *PIterator__1_12693;
// 
// typedef struct stdCListNode<tPortal *,stdAllocator<stdCListNodeBase> > stdCListNode<tPortal *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<tPortal *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_12693 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<tPortal *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<tPortal *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct iterator__1_13302 iterator__1_13302, *Piterator__1_13302;
// 
// struct iterator__1_13302 {
//     struct stdSkipListNode<unsigned int> *_pCurrNode;
//     UINT _uLevel;
// };
// 
// typedef struct Iterator__1_13330 Iterator__1_13330, *PIterator__1_13330;
// 
// typedef struct stdStack<svrCListContainer::Iterator,16> stdStack<svrCListContainer::Iterator,16>, *PstdStack<svrCListContainer::Iterator,16>;
// 
// typedef struct Iterator__1_658 Iterator__1_658, *PIterator__1_658;
// 
// struct Iterator__1_658 {
//     struct stdListNode *_pHeader; /* Inherited from Iterator */
//     struct stdListNode *_pCurrNode; /* Inherited from Iterator */
// };
// 
// struct stdStack<svrCListContainer::Iterator,16> {
//     struct Iterator__1_658 fStack[16];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct Iterator__1_13330 {
//     struct stdStack<svrCListContainer::Iterator,16> m_IteratorStack;
//     BOOL m_bPrune;
// };
// 
// typedef struct Iterator__1_13361 Iterator__1_13361, *PIterator__1_13361;
// 
// typedef struct stdStack<svrSortedListContainer::Iterator,16> stdStack<svrSortedListContainer::Iterator,16>, *PstdStack<svrSortedListContainer::Iterator,16>;
// 
// struct stdStack<svrSortedListContainer::Iterator,16> {
//     struct Iterator__1_658 fStack[16];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// struct Iterator__1_13361 {
//     struct stdStack<svrSortedListContainer::Iterator,16> m_IteratorStack;
//     BOOL m_bPrune;
// };
// 
// typedef struct Iterator__1_13421 Iterator__1_13421, *PIterator__1_13421;
// 
// struct Iterator__1_13421 {
//     struct stdListNode *_pHeader; /* Inherited from Iterator */
//     struct stdListNode *_pCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_13602 Iterator__1_13602, *PIterator__1_13602;
// 
// typedef struct stdCListNode<renDMABlock *,stdAllocator<stdCListNodeBase> > stdCListNode<renDMABlock *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<renDMABlock *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<renDMABlock *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_13602 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<renDMABlock *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_13745 Iterator__1_13745, *PIterator__1_13745;
// 
// struct Iterator__1_13745 {
//     struct stdListNode *fCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_13755 Iterator__1_13755, *PIterator__1_13755;
// 
// struct Iterator__1_13755 {
//     struct stdListNode *fCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_13798 Iterator__1_13798, *PIterator__1_13798;
// 
// typedef struct stdCListNode<renGfxClut *,stdAllocator<stdCListNodeBase> > stdCListNode<renGfxClut *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<renGfxClut *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_13798 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<renGfxClut *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<renGfxClut *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_14351 Iterator__1_14351, *PIterator__1_14351;
// 
// struct Iterator__1_14351 {
//     struct stdListNode *fHeader;
//     struct Handle__1_9269 *fCurrNode;
// };
// 
// typedef struct Iterator__1_1464 Iterator__1_1464, *PIterator__1_1464;
// 
// typedef struct stdCListNode<goScript *,stdAllocator<stdCListNodeBase> > stdCListNode<goScript *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<goScript *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<goScript *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_1464 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<goScript *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_14882 Iterator__1_14882, *PIterator__1_14882;
// 
// struct Iterator__1_14882 {
//     struct stdListNode *fHeader;
//     struct BankParm *fCurrNode;
// };
// 
// typedef struct Iterator__1_15284 Iterator__1_15284, *PIterator__1_15284;
// 
// typedef struct svrClientUnloadParm svrClientUnloadParm, *PsvrClientUnloadParm;
// 
// typedef struct svrClientUnloadParm__vtable svrClientUnloadParm__vtable, *PsvrClientUnloadParm__vtable;
// 
// struct Iterator__1_15284 {
//     struct stdListNode *fHeader;
//     struct svrClientUnloadParm *fCurrNode;
// };
// 
// struct svrClientUnloadParm__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrClientUnloadParm;
// };
// 
// struct svrClientUnloadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     struct svrClientUnloadParm__vtable *__vtable;
// };
// 
// typedef struct Iterator__1_15314 Iterator__1_15314, *PIterator__1_15314;
// 
// typedef struct stdCListNode<svrClientParm *,stdAllocator<stdCListNodeBase> > stdCListNode<svrClientParm *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<svrClientParm *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_15314 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<svrClientParm *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<svrClientParm *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_16741 Iterator__1_16741, *PIterator__1_16741;
// 
// typedef struct stdCListNode<tMove *,stdAllocator<stdCListNodeBase> > stdCListNode<tMove *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<tMove *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<tMove *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_16741 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<tMove *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_17407 Iterator__1_17407, *PIterator__1_17407;
// 
// typedef struct stdCListNode<goAIBase *,stdAllocator<stdCListNodeBase> > stdCListNode<goAIBase *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<goAIBase *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<goAIBase *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_17407 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<goAIBase *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct iterator__1_18465 iterator__1_18465, *Piterator__1_18465;
// 
// typedef struct stdSkipListNode<float> stdSkipListNode<float>, *PstdSkipListNode<float>;
// 
// struct stdSkipListNode<float> {
//     void *_value;
//     FLOAT _key;
//     UINT _uLevel;
//     struct stdSkipListNode<float> *_pNext[1];
// };
// 
// struct iterator__1_18465 {
//     struct stdSkipListNode<float> *_pCurrNode;
//     UINT _uLevel;
// };
// 
// typedef struct Iterator__1_18586 Iterator__1_18586, *PIterator__1_18586;
// 
// typedef struct stdCListNode<goGrapplePoint *,stdAllocator<stdCListNodeBase> > stdCListNode<goGrapplePoint *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<goGrapplePoint *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<goGrapplePoint *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_18586 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<goGrapplePoint *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_18689 Iterator__1_18689, *PIterator__1_18689;
// 
// typedef struct stdCListNode<HermesBeam *,stdAllocator<stdCListNodeBase> > stdCListNode<HermesBeam *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<HermesBeam *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<HermesBeam *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_18689 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<HermesBeam *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct iterator__1_19001 iterator__1_19001, *Piterator__1_19001;
// 
// struct iterator__1_19001 {
//     struct stdSkipListNode<unsigned int> *_pCurrNode;
//     UINT _uLevel;
// };
// 
// typedef struct Iterator__1_19028 Iterator__1_19028, *PIterator__1_19028;
// 
// typedef struct stdCListNode<odbObject *,stdAllocator<stdCListNodeBase> > stdCListNode<odbObject *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<odbObject *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<odbObject *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_19028 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<odbObject *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_19191 Iterator__1_19191, *PIterator__1_19191;
// 
// typedef struct stdCListNode<SC_Shield *,stdAllocator<stdCListNodeBase> > stdCListNode<SC_Shield *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<SC_Shield *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_19191 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<SC_Shield *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<SC_Shield *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_20223 Iterator__1_20223, *PIterator__1_20223;
// 
// typedef struct stdCListNode<goReactiveController *,stdAllocator<stdCListNodeBase> > stdCListNode<goReactiveController *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<goReactiveController *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_20223 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<goReactiveController *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<goReactiveController *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_20482 Iterator__1_20482, *PIterator__1_20482;
// 
// struct Iterator__1_20482 {
//     struct stdListNode *fHeader;
//     struct State__1_17650 *fCurrNode;
// };
// 
// typedef struct Iterator__1_20501 Iterator__1_20501, *PIterator__1_20501;
// 
// struct Iterator__1_20501 {
//     struct stdListNode *fCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_20520 Iterator__1_20520, *PIterator__1_20520;
// 
// typedef struct stdCListNode<anmClient *,stdAllocator<stdCListNodeBase> > stdCListNode<anmClient *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<anmClient *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_20520 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<anmClient *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<anmClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_20568 Iterator__1_20568, *PIterator__1_20568;
// 
// typedef struct stdCListNode<fxClient *,stdAllocator<stdCListNodeBase> > stdCListNode<fxClient *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<fxClient *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<fxClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_20568 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<fxClient *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_2271 Iterator__1_2271, *PIterator__1_2271;
// 
// typedef struct stdCListNode<goGameObject *,stdAllocator<stdCListNodeBase> > stdCListNode<goGameObject *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<goGameObject *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<goGameObject *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_2271 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<goGameObject *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_2480 Iterator__1_2480, *PIterator__1_2480;
// 
// typedef struct stdCListNode<wadCleanupData *,stdAllocator<stdCListNodeBase> > stdCListNode<wadCleanupData *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<wadCleanupData *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<wadCleanupData *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_2480 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<wadCleanupData *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_2617 Iterator__1_2617, *PIterator__1_2617;
// 
// typedef struct stdCListNode<Pool *,stdAllocator<stdCListNodeBase> > stdCListNode<Pool *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<Pool *,stdAllocator<stdCListNodeBase> >;
// 
// struct Iterator__1_2617 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<Pool *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// struct stdCListNode<Pool *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct Iterator__1_414 Iterator__1_414, *PIterator__1_414;
// 
// struct Iterator__1_414 {
//     struct stdListNode *_pHeader;
//     struct stdListNode *_pCurrNode;
// };
// 
// typedef struct Iterator__1_4221 Iterator__1_4221, *PIterator__1_4221;
// 
// struct Iterator__1_4221 {
//     struct stdSLListNode *_pCurrNode; /* Inherited from Iterator */
// };
// 
// typedef struct Iterator__1_4329 Iterator__1_4329, *PIterator__1_4329;
// 
// typedef struct stdCListNode<unsigned int,stdAllocator<stdCListNodeBase> > stdCListNode<unsigned int,stdAllocator<stdCListNodeBase> >, *PstdCListNode<unsigned int,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<unsigned int,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_4329 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<unsigned int,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_467 Iterator__1_467, *PIterator__1_467;
// 
// struct Iterator__1_467 {
//     struct stdSLListNode *_pCurrNode;
// };
// 
// typedef struct Iterator__1_4965 Iterator__1_4965, *PIterator__1_4965;
// 
// struct Iterator__1_4965 {
//     struct renMaterial **index;
// };
// 
// typedef struct Iterator__1_591 Iterator__1_591, *PIterator__1_591;
// 
// struct Iterator__1_591 {
//     struct stdListNode *fCurrNode;
// };
// 
// typedef struct Iterator__1_616 Iterator__1_616, *PIterator__1_616;
// 
// struct Iterator__1_616 {
//     undefined field0_0x0;
// };
// 
// typedef struct Iterator__1_696 Iterator__1_696, *PIterator__1_696;
// 
// typedef struct stdCListNode<svrClient *,stdAllocator<stdCListNodeBase> > stdCListNode<svrClient *,stdAllocator<stdCListNodeBase> >, *PstdCListNode<svrClient *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNode<svrClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// struct Iterator__1_696 {
//     struct stdListNode *_pHeader;
//     struct stdCListNode<svrClient *,stdAllocator<stdCListNodeBase> > *_pCurrNode;
// };
// 
// typedef struct Iterator__1_755 Iterator__1_755, *PIterator__1_755;
// 
// typedef struct svrHashBucketContainer svrHashBucketContainer, *PsvrHashBucketContainer;
// 
// typedef struct stdSLList stdSLList, *PstdSLList;
// 
// struct svrHashBucketContainer {
//     UINT32 m_uNumLists;
//     struct stdSLList *m_pList;
// };
// 
// struct stdSLList {
//     struct stdSLListNode _header;
// };
// 
// struct Iterator__1_755 {
//     UINT32 m_uCurrListIndex;
//     struct stdSLListNode *m_pCurrNode;
//     struct svrHashBucketContainer *m_pContainer;
// };
// 
// typedef struct Iterator__1_778 Iterator__1_778, *PIterator__1_778;
// 
// struct Iterator__1_778 {
//     struct svrArrayContainer *m_pContainer;
//     UINT m_uCurrClient;
// };
// 
// typedef long int key_t;
// 
// typedef enum Languages {
//     kAmerican=0,
//     kFrench=1,
//     kGerman=2,
//     kItalian=3,
//     kJapanese=4,
//     kKorean=5,
//     kRussian=6,
//     kSpanish=7,
//     kUK=8,
//     kNumLanguages=9
// } Languages;
// 
// typedef struct _LayerUVAnimMap LayerUVAnimMap;
// 
// typedef struct ldiv_t ldiv_t, *Pldiv_t;
// 
// struct ldiv_t {
//     long int quot;
//     long int rem;
// };
// 
// typedef struct LegalMoveData LegalMoveData, *PLegalMoveData;
// 
// struct LegalMoveData {
//     unsigned char Move[5];
// };
// 
// typedef struct LegalScreen LegalScreen, *PLegalScreen;
// 
// struct LegalScreen {
//     undefined field0_0x0;
// };
// 
// typedef struct LevelDataModule LevelDataModule, *PLevelDataModule;
// 
// typedef struct LevelDataModule__vtable LevelDataModule__vtable, *PLevelDataModule__vtable;
// 
// typedef struct VarInfo__1_19960 VarInfo__1_19960, *PVarInfo__1_19960;
// 
// struct VarInfo__1_19960 {
//     UINT32 data;
//     UINT32 name:30;
//     UINT32 type:2;
// };
// 
// struct LevelDataModule {
//     struct LevelDataModule__vtable *__vtable; /* Inherited from sliModule */
//     struct VarInfo__1_19960 varArray[1536];
//     int nextBase;
// };
// 
// struct LevelDataModule__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Name;
//     struct __vtbl_ptr_type GetVariable;
//     struct __vtbl_ptr_type SetVariable;
//     struct __vtbl_ptr_type CallFunction;
// };
// 
// typedef struct LevelWadSlot LevelWadSlot, *PLevelWadSlot;
// 
// struct LevelWadSlot {
//     char name[20];
//     struct wadContext *wc;
//     struct goServerContext *defaultGOContext;
//     UINT16 nRsrcWads;
//     undefined field4_0x1e;
//     undefined field5_0x1f;
//     UINT32 data;
//     UINT32 flags;
// };
// 
// typedef struct Lightning Lightning, *PLightning;
// 
// struct Lightning {
//     undefined field0_0x0;
// };
// 
// typedef struct LightningBolt LightningBolt, *PLightningBolt;
// 
// struct LightningBolt {
//     struct goGameObject *m_pGO;
//     struct goHandle m_hTarget;
//     UINT16 m_uTargetJointID;
//     undefined field3_0xa;
//     undefined field4_0xb;
//     FLOAT m_fTimeUntilDamage;
// };
// 
// typedef struct Listener Listener, *PListener;
// 
// struct Listener {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     int fVolume;
//     struct Client__1_9324 *fCamera;
//     struct VUMat4 fLocalMatrix;
//     struct VUMat4 fLWMatrix;
//     struct VUMat4 fInverseMatrix;
// };
// 
// typedef struct Loader Loader, *PLoader;
// 
// struct Loader {
//     undefined field0_0x0;
// };
// 
// typedef struct LoadParm LoadParm, *PLoadParm;
// 
// struct LoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     struct stdDynaString fCurveName;
//     struct stdDynaString fFilterName;
//     struct Attributes__1_9945 fAttributes;
//     INT32 fNumTweenOverrides;
// };
// 
// typedef enum LoadSaveType {
//     LOAD_BUFFER=0,
//     SAVE_BUFFER=1
// } LoadSaveType;
// 
// typedef enum Localizations {
//     kAmerican=0,
//     kFrench=1,
//     kGerman=2,
//     kItalian=3,
//     kJapanese=4,
//     kKorean=5,
//     kRussian=6,
//     kSpanish=7,
//     kUK=8,
//     kNumLocalizedVersions=9
// } Localizations;
// 
// typedef long long long int;
// 
// typedef enum LookMode {
//     kZoom=0,
//     kTilt=1,
//     kCombo=2,
//     kNumTogglableLookModes=2,
//     kNone=3,
//     kNumLookModes=4
// } LookMode;
// 
// typedef enum machine_mode {
//     VOIDmode=0,
//     PQImode=1,
//     QImode=2,
//     PHImode=3,
//     HImode=4,
//     PSImode=5,
//     SImode=6,
//     PDImode=7,
//     DImode=8,
//     TImode=9,
//     OImode=10,
//     QFmode=11,
//     HFmode=12,
//     TQFmode=13,
//     SFmode=14,
//     DFmode=15,
//     XFmode=16,
//     TFmode=17,
//     QCmode=18,
//     HCmode=19,
//     SCmode=20,
//     DCmode=21,
//     XCmode=22,
//     TCmode=23,
//     CQImode=24,
//     CHImode=25,
//     CSImode=26,
//     CDImode=27,
//     CTImode=28,
//     COImode=29,
//     BLKmode=30,
//     CCmode=31,
//     MAX_MACHINE_MODE=32
// } machine_mode;
// 
// typedef enum MagicTargetJoints {
//     kSoldierPosition=-4,
//     kGameObject=-3,
//     kAnimRoot=-2,
//     kNoParent=-1
// } MagicTargetJoints;
// 
// typedef struct ManagedPrim ManagedPrim, *PManagedPrim;
// 
// typedef enum PrimPriority {
//     kScript=0,
//     kZoned=1,
//     kCamera=2,
//     kEntity=3,
//     kCombatSystem=4,
//     kOverride=5,
//     kNumPriorities=6
// } PrimPriority;
// 
// typedef enum ManagedPrim__fState {
//     kIn=0,
//     kOn=1,
//     kOut=2
// } ManagedPrim__fState;
// 
// struct ManagedPrim {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm;
//     enum PrimPriority fPriority;
//     float fEaseIn;
//     float fEaseOut;
//     float fTransitionTime;
//     float fStateTimer;
//     enum ManagedPrim__fState fState;
// };
// 
// typedef struct MarkerCtxtListItem MarkerCtxtListItem, *PMarkerCtxtListItem;
// 
// struct MarkerCtxtListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct goServerContext *goCtxt;
//     UINT32 ctxtID;
//     BOOL connected;
//     struct stdList markerList;
// };
// 
// typedef struct MasterContext__1_13174 MasterContext__1_13174, *PMasterContext__1_13174;
// 
// typedef struct MasterContext__1_13174__vtable MasterContext__1_13174__vtable, *PMasterContext__1_13174__vtable;
// 
// struct MasterContext__1_13174 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct MasterContext__1_13174__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// struct MasterContext__1_13174__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type MasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct MasterContext__1_14320 MasterContext__1_14320, *PMasterContext__1_14320;
// 
// typedef struct MasterContext__1_14320__vtable MasterContext__1_14320__vtable, *PMasterContext__1_14320__vtable;
// 
// struct MasterContext__1_14320 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct MasterContext__1_14320__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// struct MasterContext__1_14320__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type MasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > MasterContextBase;
// 
// typedef struct MasterFile MasterFile, *PMasterFile;
// 
// typedef struct MasterFile__unnamed_-1 MasterFile__unnamed_-1, *PMasterFile__unnamed_-1;
// 
// typedef struct StateData__1_17299 StateData__1_17299, *PStateData__1_17299;
// 
// struct MasterFile__unnamed_-1 {
//     int fileIndex;
//     UINT version;
//     UINT32 playTime;
//     INT16 savePoint;
//     UINT8 difficulty;
//     UINT8 bonusPlay;
// };
// 
// struct StateData__1_17299 {
//     struct VUMat4 playerMatrix;
//     UINT64 firstTime;
//     UINT32 creatureFlags1;
//     UINT32 creatureFlags2;
//     UINT32 debugFlags;
//     UINT32 hasPickupBits;
//     UINT32 nDeaths;
//     FLOAT healthMeter;
//     FLOAT magicMeter;
//     FLOAT hermesMeter;
//     FLOAT godMeter;
//     FLOAT rampMagicMeter;
//     UINT32 powerUpPoints;
//     UINT16 bladesPoints;
//     UINT16 earthPoints;
//     UINT16 electricPoints;
//     UINT16 lightningPoints;
//     UINT16 windPoints;
//     UINT16 bonePoints;
//     UINT16 hammerPoints;
//     UINT16 medusaPoints;
//     UINT16 olympusPoints;
//     UINT8 healthMeterLevel;
//     UINT8 magicMeterLevel;
//     UINT8 hermesMeterLevel;
//     UINT8 bladesLevel;
//     UINT8 godModeLevel;
//     UINT8 earthLevel;
//     UINT8 electricLevel;
//     UINT8 lightningLevel;
//     UINT8 windLevel;
//     UINT8 boneLevel;
//     UINT8 hammerLevel;
//     UINT8 medusaLevel;
//     UINT8 olympusLevel;
//     UINT8 pickupSelected;
//     UINT8 subWeaponSelected;
//     UINT8 subWeaponToggle;
//     UINT8 nHealthShardPickups;
//     UINT8 nMagicShardPickups;
//     unsigned char firstTimeCounter[4];
//     UINT8 nCyclopsEyePickups;
//     UINT8 urnsEnabled;
//     unsigned char unused[2];
// };
// 
// struct MasterFile {
//     struct MasterFile__unnamed_-1 game[10];
//     UINT32 globalBits;
//     UINT32 optionBits;
//     unsigned int dummy1[2];
//     struct StateData__1_17299 eogps[4];
//     char challengeData[168];
//     unsigned int dummy2[2];
// };
// 
// typedef struct MaterialFX MaterialFX, *PMaterialFX;
// 
// struct MaterialFX {
//     undefined field0_0x0;
// };
// 
// typedef struct MCData MCData, *PMCData;
// 
// struct MCData {
//     UINT32 m_iSaveSize;
//     char m_cSaveName[32];
// };
// 
// typedef struct mcFile__anonymousglobal mcFile__anonymousglobal, *PmcFile__anonymousglobal;
// 
// struct mcFile__anonymousglobal {
//     char *name;
//     void *data;
//     int nBytes;
// };
// 
// typedef struct mCnvxCollisionClientParm mCnvxCollisionClientParm, *PmCnvxCollisionClientParm;
// 
// typedef struct mCnvxHeader mCnvxHeader, *PmCnvxHeader;
// 
// typedef struct mCnvxDbgHdr mCnvxDbgHdr, *PmCnvxDbgHdr;
// 
// struct mCnvxDbgHdr {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     char magic[8];
//     UINT32 totalSize;
//     UINT32 sizeofDbgPropMat;
//     UINT32 offset_dbgPropMatData;
//     UINT32 offset_nVertsPerHull;
//     UINT32 offset_nEdgesPerHull;
//     UINT32 offset_hullVerts;
//     UINT32 offset_hullEdges;
//     UINT32 offset_hullCenter;
// };
// 
// struct mCnvxHeader {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     char magic[8];
//     UINT32 totalSize;
//     enum CollisionSet collisionSet;
//     UINT32 nBalls;
//     UINT32 nHulls;
//     tVector localBound;
//     UINT32 rootJoint;
//     UINT32 atrVersion;
//     UINT32 nPropMats;
//     UINT32 sizeofPropMat;
//     UINT32 offset_propMatData;
//     UINT32 offset_ballJointID;
//     UINT32 offset_ballMatIndex;
//     UINT32 offset_ballBoundary;
//     UINT32 offset_nBndsPerHull;
//     UINT32 offset_hullJointID;
//     UINT32 offset_hullMatIndex;
//     UINT32 offset_hullBoundary;
// };
// 
// struct mCnvxCollisionClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     int type; /* Inherited from collisionClientParm */
//     struct mCnvxHeader *mCnvxHdr;
//     struct mCnvxDbgHdr *mCnvxDbg;
// };
// 
// typedef struct mCnvxCollisionVirtual mCnvxCollisionVirtual, *PmCnvxCollisionVirtual;
// 
// typedef struct mCnvxCollisionVirtual__vtable mCnvxCollisionVirtual__vtable, *PmCnvxCollisionVirtual__vtable;
// 
// struct mCnvxCollisionVirtual {
//     struct collisionClient *cc; /* Inherited from collisionVirtual */
//     struct mCnvxCollisionVirtual__vtable *__vtable; /* Inherited from collisionVirtual */
//     undefined field2_0x8;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     undefined field6_0xc;
//     undefined field7_0xd;
//     undefined field8_0xe;
//     undefined field9_0xf;
//     struct VUVec4 localBound;
//     struct VUVec4 worldBound;
//     UINT rootJoint;
//     struct mCnvxDbgHdr *mCnvxDbg;
//     enum CollisionSet collisionSet;
//     UINT32 nBalls;
//     UINT32 nHulls;
//     UINT32 nPropMats;
//     UINT32 sizeofPropMat;
//     UINT8 *propMatData;
//     UINT8 *ballJointID;
//     UINT8 *ballMatIndex;
//     struct VUVec4 *ballBoundary;
//     UINT8 *nBndsPerHull;
//     UINT8 *hullJointID;
//     UINT8 *hullMatIndex;
//     struct VUVec4 *hullBoundary;
//     UINT32 hullsAndBalls;
//     UINT64 worldTimeStamp;
//     struct VUVec4 *worldBall;
//     struct VUVec4 *worldHull;
//     UINT32 deltaFrameStamp;
//     undefined field32_0x84;
//     undefined field33_0x85;
//     undefined field34_0x86;
//     undefined field35_0x87;
//     undefined field36_0x88;
//     undefined field37_0x89;
//     undefined field38_0x8a;
//     undefined field39_0x8b;
//     undefined field40_0x8c;
//     undefined field41_0x8d;
//     undefined field42_0x8e;
//     undefined field43_0x8f;
// };
// 
// struct mCnvxCollisionVirtual__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type mCnvxCollisionVirtual;
//     struct __vtbl_ptr_type GetClientType;
//     struct __vtbl_ptr_type GetWorldBound;
//     struct __vtbl_ptr_type ComputeBoundingVolume;
//     struct __vtbl_ptr_type GetCollisionRootJoint;
//     struct __vtbl_ptr_type LineTest;
//     struct __vtbl_ptr_type SphereTest;
//     struct __vtbl_ptr_type SweptSphereTest;
//     struct __vtbl_ptr_type PointTest;
//     struct __vtbl_ptr_type PairTest;
//     struct __vtbl_ptr_type FindCollisionSpheres;
//     struct __vtbl_ptr_type BeginTestVolume;
//     struct __vtbl_ptr_type EndTestVolume;
//     struct __vtbl_ptr_type Reset;
// };
// 
// typedef struct MedusaEyeAttackData MedusaEyeAttackData, *PMedusaEyeAttackData;
// 
// typedef struct tActionMedusaEyeAttack tActionMedusaEyeAttack, *PtActionMedusaEyeAttack;
// 
// struct tActionMedusaEyeAttack {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_MedusaFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_ConeAngleDeg;
//     FLOAT m_Distance;
//     FLOAT m_ForceRadius;
//     FLOAT m_Lag;
//     FLOAT m_TimeLength;
//     FLOAT m_FreezeRate;
//     UINT32 m_PlayerFreezeMove;
//     UINT32 m_EffectName;
//     UINT32 m_JointName;
// };
// 
// struct MedusaEyeAttackData {
//     struct tActionMedusaEyeAttack *m_pTweaks;
//     struct goHandle m_hEffect;
//     float m_fAxis[3];
//     FLOAT m_fConeAngleCos;
//     FLOAT m_fTimer;
//     INT16 m_iJointIndex;
//     UINT16 m_iFramesSinceLastTick;
// };
// 
// typedef struct MedusaHead MedusaHead, *PMedusaHead;
// 
// struct MedusaHead {
//     undefined field0_0x0;
// };
// 
// typedef struct Mem Mem, *PMem;
// 
// struct Mem {
//     undefined field0_0x0;
// };
// 
// typedef struct mem_fun_t<void,svrTemplate<fxClientContainer> > mem_fun_t<void,svrTemplate<fxClientContainer> >, *Pmem_fun_t<void,svrTemplate<fxClientContainer> >;
// 
// typedef struct mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun, *Pmem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun;
// 
// typedef union mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun____pfn_or_delta2 mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun____pfn_or_delta2, *Pmem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun____pfn_or_delta2;
// 
// union mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun {
//     short int __delta;
//     short int __index;
//     union mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<fxClientContainer> > {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct mem_fun_t<void,svrTemplate<fxClientContainer> >___Pmemfun _Pmemfun;
// };
// 
// typedef struct mem_fun_t<void,svrTemplate<svrEmptyContainer> > mem_fun_t<void,svrTemplate<svrEmptyContainer> >, *Pmem_fun_t<void,svrTemplate<svrEmptyContainer> >;
// 
// typedef struct mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun, *Pmem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun;
// 
// typedef union mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun____pfn_or_delta2 mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun____pfn_or_delta2, *Pmem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun____pfn_or_delta2;
// 
// union mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun {
//     short int __delta;
//     short int __index;
//     union mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrEmptyContainer> > {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct mem_fun_t<void,svrTemplate<svrEmptyContainer> >___Pmemfun _Pmemfun;
// };
// 
// typedef struct mem_fun_t<void,svrTemplate<svrListContainer> > mem_fun_t<void,svrTemplate<svrListContainer> >, *Pmem_fun_t<void,svrTemplate<svrListContainer> >;
// 
// typedef struct mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun, *Pmem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun;
// 
// typedef union mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun____pfn_or_delta2 mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun____pfn_or_delta2, *Pmem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun____pfn_or_delta2;
// 
// union mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun {
//     short int __delta;
//     short int __index;
//     union mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrListContainer> > {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct mem_fun_t<void,svrTemplate<svrListContainer> >___Pmemfun _Pmemfun;
// };
// 
// typedef struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > > mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >;
// 
// typedef struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun;
// 
// typedef union mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun____pfn_or_delta2 mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun____pfn_or_delta2, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun____pfn_or_delta2;
// 
// union mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun {
//     short int __delta;
//     short int __index;
//     union mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > > {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > >___Pmemfun _Pmemfun;
// };
// 
// typedef struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > > mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >;
// 
// typedef struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun;
// 
// typedef union mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun____pfn_or_delta2 mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun____pfn_or_delta2, *Pmem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun____pfn_or_delta2;
// 
// union mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun {
//     short int __delta;
//     short int __index;
//     union mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > > {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct mem_fun_t<void,svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > >___Pmemfun _Pmemfun;
// };
// 
// typedef struct MemCard MemCard, *PMemCard;
// 
// struct MemCard {
//     undefined field0_0x0;
// };
// 
// typedef struct MemSafe MemSafe, *PMemSafe;
// 
// struct MemSafe {
//     undefined field0_0x0;
// };
// 
// typedef struct midi_data midi_data, *Pmidi_data;
// 
// struct midi_data {
//     SInt8 MidiChannel;
//     UInt8 KeyOnVelocity;
//     SInt16 pad2;
//     SInt32 ShouldBeOff;
//     ProgPtr KeyOnProg;
// };
// 
// typedef struct MIDIBlockHeader *MIDIBlockHeaderPtr;
// 
// typedef struct MIDIHandler *MIDIHandlerPtr;
// 
// typedef struct MIDISound MIDISound, *PMIDISound;
// 
// struct MIDISound {
//     SInt32 Type;
//     struct SoundBank_tag *Bank;
//     void *OrigBank;
//     UInt32 MIDIID;
//     SInt16 Vol;
//     SInt8 Repeats;
//     SInt8 VolGroup;
//     SInt16 Pan;
//     SInt8 Index;
//     UInt8 Flags;
//     void *MIDIBlock;
// };
// 
// typedef struct MIDISound *MIDISoundPtr;
// 
// typedef enum mips_abicalls_type {
//     MIPS_ABICALLS_NO=0,
//     MIPS_ABICALLS_YES=1
// } mips_abicalls_type;
// 
// typedef struct mips_frame_info mips_frame_info, *Pmips_frame_info;
// 
// struct mips_frame_info {
//     long int total_size;
//     long int var_size;
//     long int args_size;
//     long int extra_size;
//     int gp_reg_size;
//     int fp_reg_size;
//     long int mask;
//     long int fmask;
//     long int gp_save_offset;
//     long int fp_save_offset;
//     long int gp_sp_offset;
//     long int fp_sp_offset;
//     int initialized;
//     int num_gp;
//     int num_fp;
//     undefined field15_0x64;
//     undefined field16_0x65;
//     undefined field17_0x66;
//     undefined field18_0x67;
//     long int insns_len;
// };
// 
// typedef struct Mix Mix, *PMix;
// 
// struct Mix {
//     float fVolumes[16];
// };
// 
// typedef struct Mixer Mixer, *PMixer;
// 
// typedef enum State__1_19728 {
//     kWaiting=0,
//     kAutoDuck=1,
//     kFightTriggered=2,
//     kBarTriggered=3
// } State__1_19728;
// 
// struct Mixer {
//     struct Channel fChannels[2];
//     int fMainChannel;
//     enum State__1_19728 fState;
//     enum State__1_19728 fReturnState;
//     float fFadeTime;
//     float fSustainTime;
//     float fTime;
//     struct stdDynaString fTriggeredMusicName;
//     float fTimeIn;
//     float fTimeOut;
//     enum State__1_19689 fFightMode;
//     int fMixID;
//     struct Mix fTargetMix;
//     struct Mix fCurrentMix;
//     float fMixTweenTime;
// };
// 
// typedef struct MixerSetting MixerSetting, *PMixerSetting;
// 
// struct MixerSetting {
//     char *m_Name; /* Inherited from tMixerSetting */
//     FLOAT m_SFX; /* Inherited from tMixerSetting */
//     FLOAT m_Music; /* Inherited from tMixerSetting */
//     FLOAT m_Dialogue; /* Inherited from tMixerSetting */
//     FLOAT m_User1; /* Inherited from tMixerSetting */
//     FLOAT m_User2; /* Inherited from tMixerSetting */
//     FLOAT m_User3; /* Inherited from tMixerSetting */
//     FLOAT m_User4; /* Inherited from tMixerSetting */
//     FLOAT m_User5; /* Inherited from tMixerSetting */
//     FLOAT m_User6; /* Inherited from tMixerSetting */
//     FLOAT m_User7; /* Inherited from tMixerSetting */
//     FLOAT m_User8; /* Inherited from tMixerSetting */
//     FLOAT m_User9; /* Inherited from tMixerSetting */
//     FLOAT m_User10; /* Inherited from tMixerSetting */
//     FLOAT m_User11; /* Inherited from tMixerSetting */
//     FLOAT m_User12; /* Inherited from tMixerSetting */
//     FLOAT m_Reverb; /* Inherited from tMixerSetting */
// };
// 
// typedef void *MMDPtr;
// 
// typedef enum mode_class {
//     MODE_RANDOM=0,
//     MODE_INT=1,
//     MODE_FLOAT=2,
//     MODE_PARTIAL_INT=3,
//     MODE_CC=4,
//     MODE_COMPLEX_INT=5,
//     MODE_COMPLEX_FLOAT=6,
//     MAX_MODE_CLASS=7
// } mode_class;
// 
// typedef unsigned int mode_t;
// 
// typedef struct ModEffectmaster ModEffectmaster, *PModEffectmaster;
// 
// struct ModEffectmaster {
//     struct EffectChain ec;
//     SInt32 num_effects;
//     EffectChainPtr first;
//     SInt32 num_params;
//     int params[1];
// };
// 
// typedef struct MoveTrackData MoveTrackData, *PMoveTrackData;
// 
// struct MoveTrackData {
//     float m_fContextTimer[8];
//     short int m_iContextCount[8];
//     short int m_iContext[8];
//     float m_fMoveTimer[12];
//     short int m_iMoveCount[12];
//     struct tMove__1_6354 *m_pMove[12];
// };
// 
// typedef undefined1 *MovieCallback;
// 
// typedef enum MPEGBufferSizes {
//     kNumMPEGReadBuffers=16,
//     kREADCHUNKSIZE=16384,
//     kNTSCHeapSize=3286040,
//     kMPEGHeapSize=3454032,
//     kPALHeapSize=3454032,
//     kSlotHeapSize=4194304
// } MPEGBufferSizes;
// 
// typedef struct MPEGReadBuffer MPEGReadBuffer, *PMPEGReadBuffer;
// 
// typedef struct sysFile sysFile, *PsysFile;
// 
// typedef enum MPEGReadBuffer__fState {
//     kOpening=0,
//     kReading=1,
//     kWaiting=2,
//     kEOF=3
// } MPEGReadBuffer__fState;
// 
// typedef struct sysFile__vtable sysFile__vtable, *PsysFile__vtable;
// 
// struct sysFile {
//     int fHandle;
//     unsigned int fFlags;
//     int fLength;
//     int fPosition;
//     struct sysFile__vtable *__vtable;
// };
// 
// struct MPEGReadBuffer {
//     struct sysFile fFile;
//     char *fBuffer;
//     int fReadBlock;
//     int fFreeBlocks;
//     int fWriteBlock;
//     int fFreshBlocks;
//     enum MPEGReadBuffer__fState fState;
// };
// 
// struct sysFile__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type sysFile;
//     struct __vtbl_ptr_type Close;
//     struct __vtbl_ptr_type Read;
//     struct __vtbl_ptr_type IsReadDone;
// };
// 
// typedef enum MPEGState {
//     kMPEGWait=0,
//     kMPEGOpening=1,
//     kMPEGOpen=2,
//     kMPEGBuffering=3,
//     kMPEGBuffered=4,
//     kMPEGPrePrep1=5,
//     kMPEGPrep1=6,
//     kMPEGPrePrep2=7,
//     kMPEGPrep2=8,
//     kMPEGAlmostReady=9,
//     kMPEGReady=10,
//     kMPEGPlaying=11
// } MPEGState;
// 
// typedef struct MsgFile MsgFile, *PMsgFile;
// 
// typedef struct MsgInfo MsgInfo, *PMsgInfo;
// 
// struct MsgFile {
//     char *buf;
//     struct MsgInfo *msgInfo;
//     char **msgLineArray;
//     int nMsgs;
//     int totalMsgLines;
// };
// 
// struct MsgInfo {
//     UINT16 id;
//     UINT16 line;
// };
// 
// typedef struct MsgListItem MsgListItem, *PMsgListItem;
// 
// struct MsgListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT16 eventID;
//     undefined field3_0xa;
//     undefined field4_0xb;
//     UINT32 field0;
//     UINT32 field1;
//     UINT32 field2;
//     struct goHandle handle;
// };
// 
// typedef struct MultiMIDIBlockHeader MultiMIDIBlockHeader, *PMultiMIDIBlockHeader;
// 
// struct MultiMIDIBlockHeader {
//     UInt32 DataID;
//     SInt16 Version;
//     SInt8 Flags;
//     SInt8 NumMIDIBlocks;
//     UInt32 ID;
//     void *NextMIDIBlock;
//     SInt8 *BlockPtr[1];
// };
// 
// typedef struct MultiMIDIBlockHeader *MultiMIDIBlockHeaderPtr;
// 
// typedef undefined1 *new_handler;
// 
// typedef struct Newton Newton, *PNewton;
// 
// struct Newton {
//     undefined field0_0x0;
// };
// 
// typedef short unsigned int nlink_t;
// 
// typedef struct NodeStackEntry NodeStackEntry, *PNodeStackEntry;
// 
// struct NodeStackEntry {
//     FLOAT tmin;
//     FLOAT tmax;
//     UINT16 node;
//     undefined field3_0xa;
//     undefined field4_0xb;
// };
// 
// typedef struct NOINTERPOLATION<int,int> NOINTERPOLATION<int,int>, *PNOINTERPOLATION<int,int>;
// 
// struct NOINTERPOLATION<int,int> {
//     undefined field0_0x0;
// };
// 
// typedef struct NOINTERPOLATION<int,short int> NOINTERPOLATION<int,short int>, *PNOINTERPOLATION<int,short int>;
// 
// struct NOINTERPOLATION<int,short int> {
//     undefined field0_0x0;
// };
// 
// typedef struct object object, *Pobject;
// 
// struct object {
//     void *pc_begin;
//     void *pc_end;
//     struct dwarf_fde *fde_begin;
//     struct dwarf_fde **fde_array;
//     size_t count;
//     struct object *next;
// };
// 
// typedef struct Object_SaveListItem Object_SaveListItem, *PObject_SaveListItem;
// 
// typedef struct Object_SaveListItem__vtable Object_SaveListItem__vtable, *PObject_SaveListItem__vtable;
// 
// struct Object_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Object_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     UINT32 goNameChkSum;
//     UINT32 tweakNameHash;
//     UINT16 creatorID;
//     UINT16 markerID;
//     FLOAT x;
//     FLOAT y;
//     FLOAT z;
//     INT8 qx;
//     INT8 qy;
//     INT8 qz;
//     INT8 qw;
//     UINT16 scale;
//     INT16 animIndex;
//     FLOAT animTime;
//     FLOAT animScale;
//     UINT32 animFlags;
//     INT16 instance;
//     UINT8 destroyAfterAnim;
//     UINT8 savePoint;
//     INT8 tweakType;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
// };
// 
// struct Object_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Object_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// typedef struct Object_SaveListItem_Callback Object_SaveListItem_Callback, *PObject_SaveListItem_Callback;
// 
// typedef struct Object_SaveListItem_Callback__vtable Object_SaveListItem_Callback__vtable, *PObject_SaveListItem_Callback__vtable;
// 
// struct Object_SaveListItem_Callback__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Callback;
// };
// 
// struct Object_SaveListItem_Callback {
//     struct Object_SaveListItem_Callback__vtable *__vtable; /* Inherited from anmPlayerEndCallback */
// };
// 
// typedef enum ObjectTypes {
//     kOT_Sheet=-2147483648,
//     kOT_GoodGuy=1,
//     kOT_BadGuy=2,
//     kOT_ShadowCaster=4,
//     kOT_Rope=16,
//     kOT_Pole=32,
//     kOT_ZipLine=64,
//     kOT_BiPinnedRope=128,
//     kOT_RopeLocators=240,
//     kOT_WeaponLeft=256,
//     kOT_WeaponRight=512,
//     kOT_Weapon=768,
//     kOT_Special=1024,
//     kOT_Pushable=2048,
//     kOT_Crank=4096,
//     kOT_Lever=65536,
//     kOT_UWLever=131072,
//     kOT_SavePoint=262144,
//     kOT_Soldier=524288,
//     kOT_Breakable=1048576,
//     kOT_TandF_IO=2097152,
//     kOT_CSM_IO=4194304,
//     kOT_IOLocators=6494208,
//     kOT_Locators=6496240,
//     kOT_Passive=8388608,
//     kOT_MedusaBeamTarget=8912896,
//     kOT_PegasusAI=16777216,
//     kOT_NonInteractive=32186359
// } ObjectTypes;
// 
// typedef struct occlusion occlusion, *Pocclusion;
// 
// struct occlusion {
//     undefined field0_0x0;
// };
// 
// typedef struct odbArrow odbArrow, *PodbArrow;
// 
// typedef struct odbArrow__vtable odbArrow__vtable, *PodbArrow__vtable;
// 
// typedef struct tArrow tArrow, *PtArrow;
// 
// typedef struct tCameraFilter tCameraFilter, *PtCameraFilter;
// 
// struct tCameraFilter {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColor__1_5567 m_Top;
//     struct tColor__1_5567 m_Middle;
//     struct tColor__1_5567 m_Bottom;
//     FLOAT m_TopPoint;
//     FLOAT m_MiddlePoint;
//     FLOAT m_BottomPoint;
//     UINT32 m_BlendMode;
// };
// 
// struct odbArrow {
//     UINT32 m_uFlags; /* Inherited from odbObject */
//     struct goHandle m_hHandle; /* Inherited from odbObject */
//     struct odbArrow__vtable *__vtable; /* Inherited from odbObject */
//     undefined field3_0xc;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     struct VUVec4 m_vVel;
//     struct VUVec4 m_vTargetOffset;
//     struct tArrow *m_pTweakers;
//     struct goGameObject *m_pGameObject;
//     struct goHandle m_hEffect;
//     struct goHandle m_CreatorHandle;
//     struct goHandle m_TargetHandle;
//     UINT32 m_uCreatorGOType;
//     UINT32 m_dwBaseTrackedHits;
//     struct goHandle m_hTrackedHits[4];
//     FLOAT m_fTimePassed;
//     FLOAT m_fGravity;
//     undefined field19_0x64;
//     undefined field20_0x65;
//     undefined field21_0x66;
//     undefined field22_0x67;
//     undefined field23_0x68;
//     undefined field24_0x69;
//     undefined field25_0x6a;
//     undefined field26_0x6b;
//     undefined field27_0x6c;
//     undefined field28_0x6d;
//     undefined field29_0x6e;
//     undefined field30_0x6f;
// };
// 
// struct tArrow {
//     FLOAT m_LifeSpan;
//     FLOAT m_StuckTime;
//     FLOAT m_Velocity;
//     FLOAT m_TargetingLatency;
//     FLOAT m_HomingAmount;
//     FLOAT m_Gravity;
//     char *m_ArrowGOName;
//     char *m_TrailGOName;
//     char *m_UWTrailGOName;
//     char *m_HitEffectGOName;
//     char *m_HitSheetEffectGOName;
//     char *m_BlockSound;
//     char **m_HitSoundList;
//     struct tCameraFilter *m_BrightCameraFilter;
//     struct tCameraFilter *m_DarkCameraFilter;
//     INT16 m_FogTemplate;
//     INT8 m_FlashFreq;
//     undefined field17_0x3f;
//     FLOAT m_FogAndFlashDuration;
//     struct tConcussionBase *m_Concussion;
//     FLOAT m_Damage;
//     FLOAT m_FreezeAmount;
//     INT8 m_Context;
//     undefined field23_0x51;
//     undefined field24_0x52;
//     undefined field25_0x53;
//     UINT32 m_HitFlags;
//     struct tMaterialFX *m_MFXTemplate;
//     struct tImpulse m_GroundImpulse;
//     struct tImpulse m_AirImpulse;
//     struct tImpulse m_BlockImpulse;
//     UINT16 m_Flags;
// };
// 
// struct odbArrow__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type odbArrow;
//     struct __vtbl_ptr_type GetType;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
// };
// 
// typedef struct odbContext odbContext, *PodbContext;
// 
// typedef struct stdCList<odbObject *,stdAllocator<stdCListNodeBase> > stdCList<odbObject *,stdAllocator<stdCListNodeBase> >, *PstdCList<odbObject *,stdAllocator<stdCListNodeBase> >;
// 
// struct odbContext {
//     struct stdCList<odbObject *,stdAllocator<stdCListNodeBase> > *m_aObjectListOfLists[3];
//     struct wadContext *wc;
// };
// 
// struct stdCList<odbObject *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct odbEffect odbEffect, *PodbEffect;
// 
// typedef struct odbEffect__vtable odbEffect__vtable, *PodbEffect__vtable;
// 
// struct odbEffect {
//     UINT32 m_uFlags; /* Inherited from odbObject */
//     struct goHandle m_hHandle; /* Inherited from odbObject */
//     struct odbEffect__vtable *__vtable; /* Inherited from odbObject */
//     undefined field3_0xc;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     struct goGameObject *m_pGameObject;
//     undefined1 *m_pCB;
//     UINT16 m_iNumPlayers;
//     undefined field10_0x1a;
//     undefined field11_0x1b;
// };
// 
// struct odbEffect__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Callback;
//     struct __vtbl_ptr_type GetType;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
// };
// 
// typedef struct odbObject odbObject, *PodbObject;
// 
// typedef struct odbObject__vtable odbObject__vtable, *PodbObject__vtable;
// 
// struct odbObject__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type odbObject;
//     struct __vtbl_ptr_type GetType;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
// };
// 
// struct odbObject {
//     UINT32 m_uFlags;
//     struct goHandle m_hHandle;
//     struct odbObject__vtable *__vtable;
// };
// 
// typedef struct odbObjectDB odbObjectDB, *PodbObjectDB;
// 
// struct odbObjectDB {
//     undefined field0_0x0;
// };
// 
// typedef struct odbOrb odbOrb, *PodbOrb;
// 
// typedef struct odbOrb__vtable odbOrb__vtable, *PodbOrb__vtable;
// 
// struct odbOrb {
//     UINT32 m_uFlags; /* Inherited from odbObject */
//     struct goHandle m_hHandle; /* Inherited from odbObject */
//     struct odbOrb__vtable *__vtable; /* Inherited from odbObject */
//     undefined field3_0xc;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     struct VUVec4 m_vCurrentPos;
//     struct VUVec4 m_vPreviousPos;
//     struct VUVec4 m_vDestPos;
//     struct VUVec4 m_vOriginalPos;
//     struct goHandle m_hAttractCreature;
//     INT32 m_iAttractJointIdx;
//     FLOAT m_fAttractYOffset;
//     FLOAT m_fAttractZOffset;
//     FLOAT m_fOscillateAngle;
//     FLOAT m_fTweenTime;
//     FLOAT m_fTweenTimePassed;
//     FLOAT m_fTimeTotal;
//     FLOAT m_fTimePassed;
//     struct goGameObject *m_pGameObject;
//     FLOAT m_fRateModulate;
//     float m_fParticlesToEmit[3];
//     struct tOrb *m_pTweakers;
//     undefined field24_0x8c;
//     undefined field25_0x8d;
//     undefined field26_0x8e;
//     undefined field27_0x8f;
// };
// 
// struct odbOrb__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type odbOrb;
//     struct __vtbl_ptr_type GetType;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
// };
// 
// typedef long int off_t;
// 
// typedef struct old_exception_table old_exception_table, *Pold_exception_table;
// 
// struct old_exception_table {
//     void *start_region;
//     void *end_region;
//     void *exception_handler;
// };
// 
// typedef struct Olympus Olympus, *POlympus;
// 
// struct Olympus {
//     undefined field0_0x0;
// };
// 
// typedef struct OlympusCallbackData OlympusCallbackData, *POlympusCallbackData;
// 
// typedef struct tStage__1_6953 tStage__1_6953, *PtStage__1_6953;
// 
// typedef struct tArrowEmitter tArrowEmitter, *PtArrowEmitter;
// 
// typedef struct tEmit tEmit, *PtEmit;
// 
// struct tStage__1_6953 {
//     FLOAT m_DamageMult;
//     struct tArrowEmitter **m_BoltEmitterList;
//     FLOAT m_SphereRadius;
//     UINT32 m_SphereJoint;
//     INT8 m_SphereHitContext;
//     undefined field5_0x11;
//     struct tImpulse m_SphereImpulse;
//     INT8 m_SphereHitFreq;
//     undefined field8_0x19;
//     undefined field9_0x1a;
//     undefined field10_0x1b;
//     struct tOrbEmitter *m_OrbEmitter0;
//     struct tOrbEmitter *m_OrbEmitter1;
//     struct tOrbEmitter *m_OrbEmitter2;
// };
// 
// struct tArrowEmitter {
//     UINT8 m_Flags;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_AccuracyRadius;
//     FLOAT m_SpreadAngle;
//     FLOAT m_MuzzleRadius;
//     char *m_AimJoint;
//     struct tVector3__1_5581 m_AimJointDir;
//     UINT8 m_Heap;
//     undefined field10_0x1b;
//     struct tEmit *m_EmitList;
// };
// 
// struct tEmit {
//     struct tArrow *m_Arrow;
//     FLOAT m_ConstraintAngle;
//     FLOAT m_Angle;
//     FLOAT m_Scale;
//     char *m_EmitJoint;
//     struct tVector3__1_5581 m_EmitOffset;
//     undefined field6_0x1a;
//     undefined field7_0x1b;
// };
// 
// struct OlympusCallbackData {
//     struct VUVec4 m_vConeVertex;
//     struct VUVec4 m_vConeAxis;
//     FLOAT m_fConeCosAngle;
//     struct tStage__1_6953 *m_pTweaks;
//     undefined field4_0x28;
//     undefined field5_0x29;
//     undefined field6_0x2a;
//     undefined field7_0x2b;
//     undefined field8_0x2c;
//     undefined field9_0x2d;
//     undefined field10_0x2e;
//     undefined field11_0x2f;
// };
// 
// typedef struct OmniDrag OmniDrag, *POmniDrag;
// 
// struct OmniDrag {
//     undefined field0_0x0;
// };
// 
// typedef enum OpenOptions {
//     kServer=-2147483648,
//     kSourceMask=-513,
//     kAsync=0,
//     kWAD=16,
//     kMPEG=32,
//     kSynch=512,
//     kCDDVD=1073741824
// } OpenOptions;
// 
// typedef enum Operation {
//     kMaximum=0,
//     kModulate=1,
//     kAccumulate=2,
//     kNumOperations=3
// } Operation;
// 
// typedef union ownerdata_tag ownerdata_tag, *Pownerdata_tag;
// 
// union ownerdata_tag {
//     struct basic_data BasicData;
//     struct midi_data MIDIData;
//     struct block_data BlockData;
// };
// 
// typedef undefined1 *OwnerProcPtr;
// 
// typedef struct PackInfo PackInfo, *PPackInfo;
// 
// struct PackInfo {
//     char *start;
//     char *cur;
//     UINT32 nBytes;
// };
// 
// typedef struct Pair Pair, *PPair;
// 
// struct Pair {
//     struct dmaContext *pContext;
//     INT32 countdown;
// };
// 
// typedef struct pair<renGfxClut> pair<renGfxClut>, *Ppair<renGfxClut>;
// 
// struct pair<renGfxClut> {
//     struct renGfxClut *_pSrc;
//     struct renGfxClut *_pDest;
// };
// 
// typedef struct pair<renTexture> pair<renTexture>, *Ppair<renTexture>;
// 
// struct pair<renTexture> {
//     struct renTexture *_pSrc;
//     struct renTexture *_pDest;
// };
// 
// typedef struct PairContact PairContact, *PPairContact;
// 
// struct PairContact {
//     FLOAT fT; /* Inherited from Contact */
//     UINT16 x1VIndex;
//     UINT16 x2VIndex;
//     UINT16 x1BIndex;
//     UINT16 x2BIndex;
//     UINT16 x1FirstBIndex;
//     UINT16 x2FirstBIndex;
// };
// 
// typedef struct Param__1_16478 Param__1_16478, *PParam__1_16478;
// 
// struct Param__1_16478 {
//     FLOAT fMass;
//     FLOAT fSpring;
//     FLOAT fHardLimit;
// };
// 
// typedef struct Param__1_20681 Param__1_20681, *PParam__1_20681;
// 
// struct Param__1_20681 {
//     INT32 TweakName;
//     INT16 SiteIndex;
//     INT16 AnimBank;
//     INT32 InitialMoveName;
//     INT16 StartState;
//     INT16 StateData;
//     INT32 Targets;
//     INT16 HitPoints;
//     INT8 RiderMountType;
//     INT8 RiderMountID;
//     INT8 SaveData;
//     undefined field11_0x19;
//     undefined field12_0x1a;
//     undefined field13_0x1b;
// };
// 
// typedef struct Param__1_20745 Param__1_20745, *PParam__1_20745;
// 
// struct Param__1_20745 {
//     INT32 TweakName;
//     INT16 SiteIndex;
//     INT16 AnimBank;
//     INT32 InitialMoveName;
//     INT16 StartState;
//     INT16 StateData;
//     INT32 Targets;
//     INT16 HitPoints;
//     INT8 SaveData;
//     undefined field9_0x17;
// };
// 
// typedef struct Param__1_21273 Param__1_21273, *PParam__1_21273;
// 
// struct Param__1_21273 {
//     INT32 TweakName;
//     INT32 Instance;
// };
// 
// typedef struct Param__1_21452 Param__1_21452, *PParam__1_21452;
// 
// struct Param__1_21452 {
//     INT32 TweakName;
// };
// 
// typedef struct Param__1_21543 Param__1_21543, *PParam__1_21543;
// 
// struct Param__1_21543 {
//     INT32 SavePointID;
// };
// 
// typedef struct ParticleAllocation ParticleAllocation, *PParticleAllocation;
// 
// struct ParticleAllocation {
//     float fTime;
//     struct VUVec4 *fBuffers[3];
//     struct renParticleChunk *fChunk;
// };
// 
// typedef enum PAUSE_TYPE {
//     PT_FALSE=0,
//     PT_TRUE=1,
//     PT_TRUE_MUSIC=2,
//     PT_LOADING=3
// } PAUSE_TYPE;
// 
// typedef struct PauseData PauseData, *PPauseData;
// 
// typedef enum PauseData__fState {
//     kPlaying=0,
//     kPausing=1,
//     kPaused=2,
//     kUnPausing=3
// } PauseData__fState;
// 
// struct PauseData {
//     enum PauseData__fState fState;
//     float fTimer;
//     float fAlarm;
// };
// 
// typedef enum PauseMasks {
//     kEverythingButMPEGAmbientAndMusic=27893,
//     kEverythingButMPEGAndAmbient=28407,
//     kEverythingButMPEGAndMusic=31997,
//     kEverythingButMusic=32253,
//     kEverythingButMPEG=32511,
//     kEverythingButTheMenuBeeps=32703,
//     kEverything=32767
// } PauseMasks;
// 
// typedef struct PegasusCurve PegasusCurve, *PPegasusCurve;
// 
// struct PegasusCurve {
//     struct VUVec4 m_vDirection0;
//     struct VUVec4 m_vDirection1;
//     struct VUVec4 m_vPos0;
//     struct VUVec4 m_vPos1;
//     struct VUVec4 m_vA;
//     struct VUVec4 m_vB;
//     FLOAT m_fSpeed0;
//     FLOAT m_fSpeed1;
//     FLOAT m_fCurvature0;
//     FLOAT m_fCurvature1;
//     FLOAT m_fLength;
//     undefined field11_0x74;
//     undefined field12_0x75;
//     undefined field13_0x76;
//     undefined field14_0x77;
//     undefined field15_0x78;
//     undefined field16_0x79;
//     undefined field17_0x7a;
//     undefined field18_0x7b;
//     undefined field19_0x7c;
//     undefined field20_0x7d;
//     undefined field21_0x7e;
//     undefined field22_0x7f;
// };
// 
// typedef struct PegasusLocalUpdateData PegasusLocalUpdateData, *PPegasusLocalUpdateData;
// 
// typedef struct tPegasus tPegasus, *PtPegasus;
// 
// typedef struct tPegasusCameraShake tPegasusCameraShake, *PtPegasusCameraShake;
// 
// struct PegasusLocalUpdateData {
//     struct VUVec4 vTrans;
//     struct VUVec4 Offset;
//     struct VUVec4 vMomentumOffset;
//     struct VUVec4 vLinkJointPos;
//     struct tPegasus *pTwk;
//     struct goPegasusAI *pLockedOnAI;
//     FLOAT fXStick;
//     FLOAT fYStick;
//     FLOAT fSafeZone;
//     undefined field9_0x54;
//     undefined field10_0x55;
//     undefined field11_0x56;
//     undefined field12_0x57;
//     undefined field13_0x58;
//     undefined field14_0x59;
//     undefined field15_0x5a;
//     undefined field16_0x5b;
//     undefined field17_0x5c;
//     undefined field18_0x5d;
//     undefined field19_0x5e;
//     undefined field20_0x5f;
// };
// 
// struct tPegasusCameraShake {
//     INT32 m_ID; /* Inherited from tGameEffect */
//     INT32 m_Type; /* Inherited from tGameEffect */
//     FLOAT m_Duration; /* Inherited from tGameEffect */
//     FLOAT m_PitchAmplitude; /* Inherited from tCameraShake */
//     FLOAT m_PitchFrequency; /* Inherited from tCameraShake */
//     FLOAT m_YawAmplitude; /* Inherited from tCameraShake */
//     FLOAT m_YawFrequency; /* Inherited from tCameraShake */
//     FLOAT m_PosAmplitude; /* Inherited from tCameraShake */
//     FLOAT m_PosFrequency; /* Inherited from tCameraShake */
//     FLOAT m_MaxSpeedPitchAmplitude;
//     FLOAT m_MaxSpeedPitchFrequency;
//     FLOAT m_MaxSpeedYawAmplitude;
//     FLOAT m_MaxSpeedYawFrequency;
//     FLOAT m_MinSpeedPitchAmplitude;
//     FLOAT m_MinSpeedPitchFrequency;
//     FLOAT m_MinSpeedYawAmplitude;
//     FLOAT m_MinSpeedYawFrequency;
// };
// 
// struct tPegasus {
//     FLOAT m_DriftFactor;
//     FLOAT m_SpeedMultiplier;
//     FLOAT m_SafeZoneBuffer;
//     FLOAT m_LOContDampMult;
//     FLOAT m_LOInContRadMult;
//     FLOAT m_LOOutContRadMult;
//     FLOAT m_MeleeSuckBackSpeed;
//     FLOAT m_SafeZoneRatio;
//     FLOAT m_MatchPegMotionFarDist;
//     FLOAT m_MatchPegMotionNearDist;
//     FLOAT m_LocalMaxSpeedX;
//     FLOAT m_LocalMaxSpeedY;
//     FLOAT m_LocalMaxAngleX;
//     FLOAT m_LocalMaxAngleY;
//     FLOAT m_ReticleDamp;
//     FLOAT m_ReticleSpeed;
//     FLOAT m_ReticleEdge;
//     FLOAT m_ReticleInitialPosX;
//     FLOAT m_ReticleInitialPosY;
//     FLOAT m_ReticleSize;
//     FLOAT m_ReticleDepth;
//     FLOAT m_BoostRegain;
//     FLOAT m_MinimumBoost;
//     FLOAT m_FOVPrevailingAngle;
//     FLOAT m_FOVPrevailingSpeed;
//     FLOAT m_FOVMaxSpeedAngle;
//     FLOAT m_FOVMaxSpeed;
//     FLOAT m_FOVMinSpeedAngle;
//     FLOAT m_FOVMinSpeed;
//     FLOAT m_SwarmDampMaxFactor;
//     INT8 m_SwarmDampMaxCreatures;
//     undefined field31_0x79;
//     undefined field32_0x7a;
//     undefined field33_0x7b;
//     struct tPegasusCameraShake m_PegasusCamShake;
//     struct tPegasusCameraShake m_CSCamShake;
//     struct tPegasusCameraShake m_ProjCamShake;
//     FLOAT m_MaxSpeedWingFlutterMult;
//     FLOAT m_MinSpeedWingFlutterMult;
//     FLOAT m_EffectFrameScale;
// };
// 
// typedef struct PegasusPath PegasusPath, *PPegasusPath;
// 
// struct PegasusPath {
//     struct PegasusCurve m_PositionPegasusCurve;
//     struct PegasusCurve m_LastPegasusCurve;
//     struct PegasusCurve m_UpPegasusCurve;
//     struct VUVec4 m_vUp;
//     struct VUVec4 m_vForward;
//     struct VUVec4 m_vPosition;
//     struct VUVec4 m_vCamPos;
//     struct VUVec4 m_vCamVel;
//     struct VUVec4 m_vLastCamPos;
//     struct VUVec4 m_vNextCamPos;
//     FLOAT m_fCurrentPercentage;
//     FLOAT m_fCurveDistance;
//     FLOAT m_fRadius;
//     FLOAT m_fCamRadius;
//     FLOAT m_fSpeed;
//     FLOAT m_fLastRadius;
//     FLOAT m_fNextRadius;
//     FLOAT m_fLastCamRadius;
//     FLOAT m_fNextCamRadius;
//     struct wypClient *m_pPegaPath;
//     INT32 m_iQueuedPegaIdx;
//     INT32 m_iLastQueuedPegaIdx;
//     INT32 m_iNextPt;
//     INT32 m_iRadiusOffset;
//     INT32 m_iCamOffsetXOffset;
//     INT32 m_iCamOffsetYOffset;
//     INT32 m_iCamOffsetZOffset;
//     INT32 m_iUpXOffset;
//     INT32 m_iUpYOffset;
//     INT32 m_iUpZOffset;
//     INT32 m_iForwardXOffset;
//     INT32 m_iForwardYOffset;
//     INT32 m_iForwardZOffset;
//     INT32 m_iWarpOffset;
//     INT32 m_iPopToNextOffset;
//     INT32 m_iCamRadiusOffset;
//     INT32 m_iSpeedOffset;
//     INT32 m_iCurvatureOffset;
//     char m_cNameBase[32];
// };
// 
// typedef struct PegTravelerArgs PegTravelerArgs, *PPegTravelerArgs;
// 
// struct PegTravelerArgs {
//     BOOL m_bExactTrackRot;
//     BOOL m_bExactTrackPos;
// };
// 
typedef struct Pending Pending, *PPending;
// 
struct Pending {
    int msgID;
    int menuID;
    int pickupID;
    int special;
    int healthMeterValue;
    int magicMeterValue;
    FLOAT seconds;
};
// 
// typedef struct Perf Perf, *PPerf;
// 
// struct Perf {
//     long int _curCPU;
//     int _curPc0;
//     int _curPc1;
//     int _control;
//     int _called;
//     int _curOutput;
//     int _output;
//     UINT64 _startCPU;
//     int _minPc0;
//     int _minPc1;
//     int _maxPc0;
//     int _maxPc1;
//     long int _sumPc0;
//     long int _sumPc1;
//     long int _minCPU;
//     long int _maxCPU;
//     long int _sumCPU;
//     char *_label;
//     undefined field18_0x64;
//     undefined field19_0x65;
//     undefined field20_0x66;
//     undefined field21_0x67;
// };
// 
// typedef struct PerfHelp PerfHelp, *PPerfHelp;
// 
// struct PerfHelp {
//     struct Perf *_p;
// };
// 
// typedef struct PersistentWadInfo PersistentWadInfo, *PPersistentWadInfo;
// 
// struct PersistentWadInfo {
//     UINT32 hash;
//     int group;
//     struct PackInfo packInfo;
// };
// 
// typedef struct PersistentWadSlot PersistentWadSlot, *PPersistentWadSlot;
// 
// struct PersistentWadSlot {
//     char name[20];
//     struct wadContext *wc;
//     UINT32 data;
//     UINT32 flags;
// };
// 
// typedef int pid_t;
// 
// typedef struct PlayerFollowData PlayerFollowData, *PPlayerFollowData;
// 
// struct PlayerFollowData {
//     struct VUVec4 m_vHitPos;
//     struct goScript *m_pScript;
//     FLOAT m_fTime;
//     undefined field3_0x18;
//     undefined field4_0x19;
//     undefined field5_0x1a;
//     undefined field6_0x1b;
//     undefined field7_0x1c;
//     undefined field8_0x1d;
//     undefined field9_0x1e;
//     undefined field10_0x1f;
// };
// 
// typedef struct PlaySoundArgs PlaySoundArgs, *PPlaySoundArgs;
// 
// typedef struct SoundState SoundState, *PSoundState;
// 
// struct SoundState {
//     unsigned int fHandle;
//     char fRegisters[4];
//     short int fVolume[2];
//     short int fPan[2];
//     short int fDoppler;
//     short int fPitchBend;
//     unsigned int fUpdate;
// };
// 
// struct PlaySoundArgs {
//     struct SoundState fState;
//     struct SoundTag fSound;
//     unsigned int fFlags;
// };
// 
// typedef enum PlaySoundFlags {
//     kSinglePlay=1,
//     kStartPaused=2
// } PlaySoundFlags;
// 
// typedef enum PluginFunctions {
//     kPlayStreamFromGrain=0,
//     kInitialisePlugin=1,
//     kFrameTick=2,
//     kLoadVAGBank=3,
//     kUnloadVAGBank=4,
//     kStreamOpen=5,
//     kStreamRead=6,
//     kStreamClose=7,
//     kStreamBuffered=8,
//     kCloseAllStreams=9,
//     kPlaySound=10,
//     kUpdateSound=11,
//     kStopSound=12,
//     kBankLoad=13,
//     kBankUnload=14,
//     kResourceOpen=15,
//     kPauseGroups=16,
//     kPrint=17,
//     kPrintFlush=18,
//     kGetSoundFlags=19,
//     kTOCFind=20,
//     kGetTOCEntry=21,
//     kGameEffectFromGrain=22,
//     kBankLoadComplete=23,
//     kPauseSound=24,
//     kReloadBanks=25,
//     kSanityCheck=26,
//     kPreBuffer=27,
//     kSetStreamerMode=28,
//     kSetLanguage=29,
//     kCreateHeap=30,
//     kSetHeap=31,
//     kGameEffectFromGrain2=32,
//     kOpenMPEG=33,
//     kCloseMPEG=34,
//     kNumPluginFunctions=35
// } PluginFunctions;
// 
// typedef struct Pool__1_2178 Pool__1_2178, *PPool__1_2178;
// 
// typedef struct stdCList<goGameObject *,stdAllocator<stdCListNodeBase> > stdCList<goGameObject *,stdAllocator<stdCListNodeBase> >, *PstdCList<goGameObject *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<goGameObject *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct Pool__1_2178 {
//     INT32 m_iNumCreated;
//     INT32 m_iNumAvailable;
//     INT32 m_iCap;
//     struct stdCList<goGameObject *,stdAllocator<stdCListNodeBase> > m_GOList;
// };
// 
// typedef enum PreBufferState {
//     kNotPrebuffering=-4,
//     kWaitingForCallback=-3,
//     kOutOfBuffers=-2,
//     kFileNotFound=-1
// } PreBufferState;
// 
// typedef enum PresetCameras {
//     kNoForced=-1,
//     kFollowCamera=0,
//     kNumPresetCameras=1
// } PresetCameras;
// 
// typedef struct Prim__1_11800 Prim__1_11800, *PPrim__1_11800;
// 
// struct Prim__1_11800 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm; /* Inherited from renFXScriptPrim */
//     int fPrimPriority; /* Inherited from renFXScriptPrim */
//     float fWeight; /* Inherited from renFXScriptPrim */
// };
// 
// typedef struct Prim__1_11854 Prim__1_11854, *PPrim__1_11854;
// 
// struct Prim__1_11854 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm; /* Inherited from renFXScriptPrim */
//     int fPrimPriority; /* Inherited from renFXScriptPrim */
//     float fWeight; /* Inherited from renFXScriptPrim */
// };
// 
// typedef struct Prim__1_12113 Prim__1_12113, *PPrim__1_12113;
// 
// struct Prim__1_12113 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm; /* Inherited from renFXScriptPrim */
//     int fPrimPriority; /* Inherited from renFXScriptPrim */
//     float fWeight; /* Inherited from renFXScriptPrim */
// };
// 
// typedef struct Prim__1_17671 Prim__1_17671, *PPrim__1_17671;
// 
// struct Prim__1_17671 {
//     struct Prim__1_17671 *fNext;
//     struct Prim__1_17671 *fPrev;
//     unsigned int fBlendGroup;
//     float fFieldStrength;
//     bool fUpdateFieldStrength;
//     undefined field5_0x11;
//     undefined field6_0x12;
//     undefined field7_0x13;
//     struct State__1_17650 *fState;
//     float fBlendWeight;
//     float fMaxTweenTime;
//     float fTweenTime;
//     float fEaseIn;
//     float fEaseOut;
// };
// 
// typedef struct Prim__1_18107 Prim__1_18107, *PPrim__1_18107;
// 
// struct Prim__1_18107 {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm; /* Inherited from renFXScriptPrim */
//     int fPrimPriority; /* Inherited from renFXScriptPrim */
//     float fWeight; /* Inherited from renFXScriptPrim */
// };
// 
// typedef struct Prim__1_9395 Prim__1_9395, *PPrim__1_9395;
// 
// typedef union Prim__unnamed_4__1_9395 Prim__unnamed_4__1_9395, *PPrim__unnamed_4__1_9395;
// 
// typedef struct Prim__unnamed__Quad__1_9395 Prim__unnamed__Quad__1_9395, *PPrim__unnamed__Quad__1_9395;
// 
// typedef struct Prim__unnamed__Triangle__1_9395 Prim__unnamed__Triangle__1_9395, *PPrim__unnamed__Triangle__1_9395;
// 
// struct Prim__unnamed__Quad__1_9395 {
//     FLOAT x0;
//     FLOAT y0;
//     FLOAT z0;
//     FLOAT x1;
//     FLOAT y1;
//     FLOAT z1;
//     FLOAT x2;
//     FLOAT y2;
//     FLOAT z2;
//     FLOAT x3;
//     FLOAT y3;
//     FLOAT z3;
// };
// 
// struct Prim__unnamed__Triangle__1_9395 {
//     FLOAT x0;
//     FLOAT y0;
//     FLOAT z0;
//     FLOAT x1;
//     FLOAT y1;
//     FLOAT z1;
//     FLOAT x2;
//     FLOAT y2;
//     FLOAT z2;
// };
// 
// union Prim__unnamed_4__1_9395 {
//     struct Prim__unnamed__Quad__1_9395 Quad;
//     struct Prim__unnamed__Triangle__1_9395 Triangle;
// };
// 
// struct Prim__1_9395 {
//     UINT32 PrimType;
//     union Prim__unnamed_4__1_9395 field1_0x4;
//     UINT32 PropMatIndex;
// };
// 
// typedef enum Prim_SortOrder {
//     RenOrder_TriServer=0,
//     RenOrder_ParticleServer=1,
//     RenOrder_ScriptServer=2,
//     RenOrder_FlashServer=3
// } Prim_SortOrder;
// 
// typedef enum processor_type {
//     PROCESSOR_DEFAULT=0,
//     PROCESSOR_R3000=1,
//     PROCESSOR_R3900=2,
//     PROCESSOR_R6000=3,
//     PROCESSOR_R4000=4,
//     PROCESSOR_R4100=5,
//     PROCESSOR_R4300=6,
//     PROCESSOR_R4600=7,
//     PROCESSOR_R4650=8,
//     PROCESSOR_R5000=9,
//     PROCESSOR_R5400=10,
//     PROCESSOR_R5900=11,
//     PROCESSOR_R8000=12
// } processor_type;
// 
// typedef struct ProcessServer__17bhvrMasterContext__anonymouslocal___Pm ProcessServer__17bhvrMasterContext__anonymouslocal___Pm, *PProcessServer__17bhvrMasterContext__anonymouslocal___Pm;
// 
// struct ProcessServer__17bhvrMasterContext__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__21goScriptMasterContext__anonymouslocal___Pm ProcessServer__21goScriptMasterContext__anonymouslocal___Pm, *PProcessServer__21goScriptMasterContext__anonymouslocal___Pm;
// 
// struct ProcessServer__21goScriptMasterContext__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__22collisionMasterContext__anonymouslocal___Pm ProcessServer__22collisionMasterContext__anonymouslocal___Pm, *PProcessServer__22collisionMasterContext__anonymouslocal___Pm;
// 
// struct ProcessServer__22collisionMasterContext__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z16svrListContainer__anonymouslocal___Pm ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z16svrListContainer__anonymouslocal___Pm, *PProcessServer__t16svrMasterContext1Zt11svrTemplate1Z16svrListContainer__anonymouslocal___Pm;
// 
// struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z16svrListContainer__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17fxClientContainer__anonymouslocal___Pm ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17fxClientContainer__anonymouslocal___Pm, *PProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17fxClientContainer__anonymouslocal___Pm;
// 
// struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17fxClientContainer__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17svrEmptyContainer__anonymouslocal___Pm ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17svrEmptyContainer__anonymouslocal___Pm, *PProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17svrEmptyContainer__anonymouslocal___Pm;
// 
// struct ProcessServer__t16svrMasterContext1Zt11svrTemplate1Z17svrEmptyContainer__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct ProcessServer__t16svrMasterContext1Zt7svrTree2Z17svrCListContainerZ20goAttachmentLWClient__anonymouslocal___Pm ProcessServer__t16svrMasterContext1Zt7svrTree2Z17svrCListContainerZ20goAttachmentLWClient__anonymouslocal___Pm, *PProcessServer__t16svrMasterContext1Zt7svrTree2Z17svrCListContainerZ20goAttachmentLWClient__anonymouslocal___Pm;
// 
// struct ProcessServer__t16svrMasterContext1Zt7svrTree2Z17svrCListContainerZ20goAttachmentLWClient__anonymouslocal___Pm {
//     short int __delta;
//     short int __index;
//     union unnamed____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef int ptr_type;
// 
// typedef int ptrdiff_t;
// 
// typedef struct PVSBN_struct PVSBN_struct, *PPVSBN_struct;
// 
// struct PVSBN_struct {
//     char name1[64];
//     char name2[64];
//     u_int offset1;
//     u_int offset2;
//     int vol;
//     int pan;
//     int vol_group;
//     u_int queue;
//     int sub_group;
//     u_int flags;
// };
// 
// typedef struct PVSBN_struct *PVSBN_structPtr;
// 
// typedef struct Radial Radial, *PRadial;
// 
// struct Radial {
//     undefined field0_0x0;
// };
// 
// typedef struct randomGen randomGen, *PrandomGen;
// 
// struct randomGen {
//     int i97;
//     int j97;
//     float c;
//     float cd;
//     float cm;
//     float u[98];
// };
// 
// typedef struct RandomXY RandomXY, *PRandomXY;
// 
// struct RandomXY {
//     FLOAT m_AmplX; /* Inherited from tFS_RandomXY */
//     FLOAT m_AmplY; /* Inherited from tFS_RandomXY */
// };
// 
// typedef struct RayData RayData, *PRayData;
// 
// struct RayData {
//     struct VUVec4 m_vVel;
//     struct VUVec4 m_vPos;
//     struct VUVec4 m_vEmitPos;
//     FLOAT m_fSec;
//     UINT8 m_iUpdate;
//     undefined field5_0x35;
//     undefined field6_0x36;
//     undefined field7_0x37;
//     undefined field8_0x38;
//     undefined field9_0x39;
//     undefined field10_0x3a;
//     undefined field11_0x3b;
//     undefined field12_0x3c;
//     undefined field13_0x3d;
//     undefined field14_0x3e;
//     undefined field15_0x3f;
// };
// 
// typedef struct Reactive_SaveListItem Reactive_SaveListItem, *PReactive_SaveListItem;
// 
// typedef struct Reactive_SaveListItem__vtable Reactive_SaveListItem__vtable, *PReactive_SaveListItem__vtable;
// 
// struct Reactive_SaveListItem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Reactive_SaveListItem;
//     struct __vtbl_ptr_type CodeByte;
//     struct __vtbl_ptr_type PayloadOffset;
//     struct __vtbl_ptr_type PayloadSize;
//     struct __vtbl_ptr_type FindCreator;
//     struct __vtbl_ptr_type Restore;
//     struct __vtbl_ptr_type SaveData;
//     struct __vtbl_ptr_type LoadData;
// };
// 
// struct Reactive_SaveListItem {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct Reactive_SaveListItem__vtable *__vtable; /* Inherited from SaveListItem */
//     struct goReactiveController *pObj;
//     BOOL dataValid;
//     UINT16 id;
//     unsigned char data[20];
//     undefined field7_0x2a;
//     undefined field8_0x2b;
// };
// 
// typedef enum ReadState {
//     kMustRead=0,
//     kCanRead=1,
//     kMPEGPlaying=2,
//     kAudioStarting=3,
//     kAudioPaused=4,
//     kBuffering=5,
//     kDataRead=6,
//     kMPEGBuffering=7,
//     kReading=8,
//     kCantRead=9,
//     kEndOfFile=10,
//     kReset=11,
//     kWaiting=12,
//     kShared=13,
//     kNumReadStates=14
// } ReadState;
// 
// typedef enum reg_class {
//     NO_REGS=0,
//     M16_NA_REGS=1,
//     M16_REGS=2,
//     T_REG=3,
//     M16_T_REGS=4,
//     GR_REGS=5,
//     FP_REGS=6,
//     HI_REG=7,
//     LO_REG=8,
//     HILO_REG=9,
//     MD_REGS=10,
//     HI_AND_GR_REGS=11,
//     LO_AND_GR_REGS=12,
//     HILO_AND_GR_REGS=13,
//     HI1_REG=14,
//     LO1_REG=15,
//     HILO1_REG=16,
//     MD1_REGS=17,
//     HI1_AND_GR_REGS=18,
//     LO1_AND_GR_REGS=19,
//     HILO1_AND_GR_REGS=20,
//     HI01_REG=21,
//     LO01_REG=22,
//     HILO01_REG=23,
//     MD01_REGS=24,
//     HI01_AND_GR_REGS=25,
//     LO01_AND_GR_REGS=26,
//     HILO01_AND_GR_REGS=27,
//     ST_REGS=28,
//     ALL_REGS=29,
//     LIM_REG_CLASSES=30
// } reg_class;
// 
// typedef struct renDMABlock renDMABlock, *PrenDMABlock;
// 
// struct renDMABlock {
//     struct dmaContext *m_pContext;
//     UINT32 m_uBlockID;
//     undefined1 *m_pCallBack;
//     UINT32 m_uFlags;
// };
// 
// typedef struct renDMAException renDMAException, *PrenDMAException;
// 
// struct renDMAException {
//     undefined field0_0x0;
// };
// 
// typedef struct renDMAExceptionBase renDMAExceptionBase, *PrenDMAExceptionBase;
// 
// struct renDMAExceptionBase {
//     UINT16 _uExceptionType;
//     UINT16 _uByteSize;
// };
// 
// typedef struct renDMAPrimException renDMAPrimException, *PrenDMAPrimException;
// 
// struct renDMAPrimException {
//     UINT16 _uExceptionType; /* Inherited from renDMAExceptionBase */
//     UINT16 _uByteSize; /* Inherited from renDMAExceptionBase */
//     struct renGROB *_pGROBJ;
//     struct renChunkTags *_pChunk;
//     UINT16 _uChunkSetID;
//     UINT16 _uInstanceID;
//     UINT16 _uMaterialID;
//     UINT16 _uVU1ContextAddress;
//     UINT16 _uRenderFlags;
//     UINT16 _uMicroCodeAddress;
//     struct renGROB *_pLastGROBJ;
//     struct renChunkTags *_pLastChunk;
// };
// 
// typedef struct renEEPrimContext renEEPrimContext, *PrenEEPrimContext;
// 
// typedef struct renEEPrimContext__vtable renEEPrimContext__vtable, *PrenEEPrimContext__vtable;
// 
// struct renEEPrimContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renEEPrimContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renEEPrimContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renEEPrimContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 _uViewID; /* Inherited from renGROBServerContext */
//     UINT _uLayerID; /* Inherited from renGROBServerContext */
// };
// 
// typedef struct renEEPrimMasterServer renEEPrimMasterServer, *PrenEEPrimMasterServer;
// 
// typedef struct renEEPrimMasterServer__vtable renEEPrimMasterServer__vtable, *PrenEEPrimMasterServer__vtable;
// 
// struct renEEPrimMasterServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renEEPrimMasterServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renEEPrimMasterServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renEEPrimMasterServer__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renEEPrimServer renEEPrimServer, *PrenEEPrimServer;
// 
// typedef struct renEEPrimServer__vtable renEEPrimServer__vtable, *PrenEEPrimServer__vtable;
// 
// struct renEEPrimServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renEEPrimServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renEEPrimServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renEEPrimServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renFlashContext renFlashContext, *PrenFlashContext;
// 
// typedef struct renFlashContext__vtable renFlashContext__vtable, *PrenFlashContext__vtable;
// 
// struct renFlashContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFlashContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renFlashContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renFlashContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 _uViewID; /* Inherited from renGROBServerContext */
//     UINT _uLayerID; /* Inherited from renGROBServerContext */
//     struct renFlashClient *curClient;
// };
// 
// typedef struct F_VarCmdHandler renFlashHandler;
// 
// typedef struct renFlashMasterContext renFlashMasterContext, *PrenFlashMasterContext;
// 
// typedef struct renFlashMasterContext__vtable renFlashMasterContext__vtable, *PrenFlashMasterContext__vtable;
// 
// struct renFlashMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFlashMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renFlashMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renFlashMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renFlashPrimClient renFlashPrimClient, *PrenFlashPrimClient;
// 
// struct renFlashPrimClient {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     UINT32 flags;
// };
// 
// typedef struct renFlashPrimCxformClient renFlashPrimCxformClient, *PrenFlashPrimCxformClient;
// 
// struct renFlashPrimCxformClient {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     UINT32 flags; /* Inherited from renFlashPrimClient */
//     struct F_Cxform cxform;
// };
// 
// typedef struct renFlashPrimList renFlashPrimList, *PrenFlashPrimList;
// 
// struct renFlashPrimList {
//     struct stdSLListNode _header; /* Inherited from stdSLList */
//     struct renFlashPrimClient *end;
// };
// 
// typedef struct renFlashPrimServer renFlashPrimServer, *PrenFlashPrimServer;
// 
// struct renFlashPrimServer {
//     struct renFlashPrimList m_clients[2][2];
//     unsigned int m_uNumConnected[2][2];
//     UINT32 m_uNumFlashPrims;
// };
// 
// typedef struct renFlashPrimShapeClient renFlashPrimShapeClient, *PrenFlashPrimShapeClient;
// 
// struct renFlashPrimShapeClient {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     UINT32 flags; /* Inherited from renFlashPrimClient */
//     struct F_MovieInstance *movieInstance;
//     struct VUMat4 *matrix;
//     struct F_Shape *shape;
// };
// 
// typedef struct renFlashServer renFlashServer, *PrenFlashServer;
// 
// typedef struct renFlashServer__vtable renFlashServer__vtable, *PrenFlashServer__vtable;
// 
// struct renFlashServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFlashServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renFlashServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renFlashServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renFXScript renFXScript, *PrenFXScript;
// 
// typedef struct renFXScript__vtable renFXScript__vtable, *PrenFXScript__vtable;
// 
// struct renFXScript__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScript;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct renFXScript {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID;
//     UINT32 m_uFlags;
//     INT32 m_iSortKey;
//     struct renFXScript__vtable *__vtable;
// };
// 
// typedef struct renFXScriptBase renFXScriptBase, *PrenFXScriptBase;
// 
// typedef struct renFXScriptBase__vtable renFXScriptBase__vtable, *PrenFXScriptBase__vtable;
// 
// struct renFXScriptBase {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBase__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName;
//     struct stdEDLList<renFXScriptPrim> fPrims;
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims;
//     bool fRenderedLastFrame;
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame;
// };
// 
// struct renFXScriptBase__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBase;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct renFXScriptBlended<fxBloom::State> renFXScriptBlended<fxBloom::State>, *PrenFXScriptBlended<fxBloom::State>;
// 
// typedef struct renFXScriptBlended<fxBloom::State>__vtable renFXScriptBlended<fxBloom::State>__vtable, *PrenFXScriptBlended<fxBloom::State>__vtable;
// 
// struct renFXScriptBlended<fxBloom::State>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBlended;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct renFXScriptBlended<fxBloom::State> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBlended<fxBloom::State>__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct State__1_11818 fAccumulator;
// };
// 
// typedef struct renFXScriptBlended<fxCameraFilterBlender> renFXScriptBlended<fxCameraFilterBlender>, *PrenFXScriptBlended<fxCameraFilterBlender>;
// 
// typedef struct renFXScriptBlended<fxCameraFilterBlender>__vtable renFXScriptBlended<fxCameraFilterBlender>__vtable, *PrenFXScriptBlended<fxCameraFilterBlender>__vtable;
// 
// struct renFXScriptBlended<fxCameraFilterBlender>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBlended;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct renFXScriptBlended<fxCameraFilterBlender> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBlended<fxCameraFilterBlender>__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct fxCameraFilterBlender fAccumulator;
// };
// 
// typedef struct renFXScriptBlended<fxFogBlender> renFXScriptBlended<fxFogBlender>, *PrenFXScriptBlended<fxFogBlender>;
// 
// typedef struct renFXScriptBlended<fxFogBlender>__vtable renFXScriptBlended<fxFogBlender>__vtable, *PrenFXScriptBlended<fxFogBlender>__vtable;
// 
// struct renFXScriptBlended<fxFogBlender>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBlended;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct renFXScriptBlended<fxFogBlender> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBlended<fxFogBlender>__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct fxFogBlender fAccumulator;
// };
// 
// typedef struct renFXScriptBlended<fxFSWarp::State> renFXScriptBlended<fxFSWarp::State>, *PrenFXScriptBlended<fxFSWarp::State>;
// 
// typedef struct renFXScriptBlended<fxFSWarp::State>__vtable renFXScriptBlended<fxFSWarp::State>__vtable, *PrenFXScriptBlended<fxFSWarp::State>__vtable;
// 
// struct renFXScriptBlended<fxFSWarp::State> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBlended<fxFSWarp::State>__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     struct State__1_11974 fAccumulator;
// };
// 
// struct renFXScriptBlended<fxFSWarp::State>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBlended;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// typedef struct renFXScriptBlended<goCameraSwayPrim> renFXScriptBlended<goCameraSwayPrim>, *PrenFXScriptBlended<goCameraSwayPrim>;
// 
// typedef struct renFXScriptBlended<goCameraSwayPrim>__vtable renFXScriptBlended<goCameraSwayPrim>__vtable, *PrenFXScriptBlended<goCameraSwayPrim>__vtable;
// 
// struct renFXScriptBlended<goCameraSwayPrim>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renFXScriptBlended;
//     struct __vtbl_ptr_type Run;
//     struct __vtbl_ptr_type TestForUpdate;
// };
// 
// struct renFXScriptBlended<goCameraSwayPrim> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 m_uViewID; /* Inherited from renFXScript */
//     UINT32 m_uFlags; /* Inherited from renFXScript */
//     INT32 m_iSortKey; /* Inherited from renFXScript */
//     struct renFXScriptBlended<goCameraSwayPrim>__vtable *__vtable; /* Inherited from renFXScript */
//     char *fName; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptPrim> fPrims; /* Inherited from renFXScriptBase */
//     struct stdEDLList<renFXScriptBase::ManagedPrim> fManagedPrims; /* Inherited from renFXScriptBase */
//     bool fRenderedLastFrame; /* Inherited from renFXScriptBase */
//     undefined field10_0x2d;
//     undefined field11_0x2e;
//     undefined field12_0x2f;
//     UINT fCurrentFrame; /* Inherited from renFXScriptBase */
//     undefined field14_0x34;
//     undefined field15_0x35;
//     undefined field16_0x36;
//     undefined field17_0x37;
//     undefined field18_0x38;
//     undefined field19_0x39;
//     undefined field20_0x3a;
//     undefined field21_0x3b;
//     undefined field22_0x3c;
//     undefined field23_0x3d;
//     undefined field24_0x3e;
//     undefined field25_0x3f;
//     struct goCameraSwayPrim fAccumulator;
// };
// 
// typedef struct renFXScriptParm renFXScriptParm, *PrenFXScriptParm;
// 
// struct renFXScriptParm {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
// };
// 
// typedef struct renFXScriptPrim renFXScriptPrim, *PrenFXScriptPrim;
// 
// struct renFXScriptPrim {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct tEffectParm *fParm;
//     int fPrimPriority;
//     float fWeight;
// };
// 
// typedef svrList renGfxClutContainer;
// 
// typedef struct renGfxClutContext renGfxClutContext, *PrenGfxClutContext;
// 
// typedef struct renGfxClutContext__vtable renGfxClutContext__vtable, *PrenGfxClutContext__vtable;
// 
// typedef struct renGfxClutParm renGfxClutParm, *PrenGfxClutParm;
// 
// struct renGfxClutParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     struct renGfxClut *_pClient;
// };
// 
// struct renGfxClutContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renGfxClutContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renGfxClutContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renGfxClutContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *m_pGfxClutPool;
//     struct renGfxClutParm m_workparm;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > renGfxClutContextBase;
// 
// typedef struct renGfxClutLoadParm renGfxClutLoadParm, *PrenGfxClutLoadParm;
// 
// struct renGfxClutLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 _Width;
//     INT32 _Height;
//     UINT32 _Flags;
//     INT32 _BitDepth;
//     UINT32 _uNumImages;
//     unsigned char _Image[4];
// };
// 
// typedef struct renGfxClutServer renGfxClutServer, *PrenGfxClutServer;
// 
// typedef struct renGfxClutServer__vtable renGfxClutServer__vtable, *PrenGfxClutServer__vtable;
// 
// struct renGfxClutServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renGfxClutServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct renGfxClutServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renGfxClutServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > renGfxClutServerBase;
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > renGROBContextBase;
// 
// typedef struct renGROBMasterContext renGROBMasterContext, *PrenGROBMasterContext;
// 
// typedef struct renGROBMasterContext__vtable renGROBMasterContext__vtable, *PrenGROBMasterContext__vtable;
// 
// struct renGROBMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renGROBMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renGROBMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renGROBMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > renGROBMasterContextBase;
// 
// typedef struct renGROBServer renGROBServer, *PrenGROBServer;
// 
// typedef struct renGROBServer__vtable renGROBServer__vtable, *PrenGROBServer__vtable;
// 
// struct renGROBServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renGROBServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct renGROBServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renGROBServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > renGROBServerBase;
// 
// typedef svrList renGROBServerContainer;
// 
// typedef struct renGROBServerContext renGROBServerContext, *PrenGROBServerContext;
// 
// typedef struct renGROBServerContext__vtable renGROBServerContext__vtable, *PrenGROBServerContext__vtable;
// 
// struct renGROBServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renGROBServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 _uViewID;
//     UINT _uLayerID;
// };
// 
// struct renGROBServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renGROBServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// typedef struct renGS renGS, *PrenGS;
// 
// struct renGS {
//     undefined field0_0x0;
// };
// 
// typedef svrList renLightContainer;
// 
// typedef struct renLightContext renLightContext, *PrenLightContext;
// 
// struct renLightContext {
//     struct VUVec4 _vLightVectors[6];
//     UINT32 _uRenderFlags;
//     undefined field2_0x64;
//     undefined field3_0x65;
//     undefined field4_0x66;
//     undefined field5_0x67;
//     undefined field6_0x68;
//     undefined field7_0x69;
//     undefined field8_0x6a;
//     undefined field9_0x6b;
//     undefined field10_0x6c;
//     undefined field11_0x6d;
//     undefined field12_0x6e;
//     undefined field13_0x6f;
// };
// 
// typedef struct renLightLoadParm renLightLoadParm, *PrenLightLoadParm;
// 
// struct renLightLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     enum ELightType _Type;
//     tVector _Pos;
//     tVector _Dir;
//     tVector _NormalisedColor;
//     FLOAT m_fMidRange;
//     FLOAT m_fMidIntensity;
//     FLOAT m_fRange;
//     FLOAT m_fInnerConeAngle;
//     FLOAT m_fOuterConeAngle;
//     FLOAT m_fLuminanceBias;
// };
// 
// typedef struct renLightServer renLightServer, *PrenLightServer;
// 
// typedef struct renLightServer__vtable renLightServer__vtable, *PrenLightServer__vtable;
// 
// struct renLightServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renLightServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct renLightServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renLightServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > renLightServerBase;
// 
// typedef struct renLightServerContext renLightServerContext, *PrenLightServerContext;
// 
// typedef struct renLightServerContext__vtable renLightServerContext__vtable, *PrenLightServerContext__vtable;
// 
// struct renLightServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renLightServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renLightServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renLightServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *m_pLightPool;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > renLightServerContextBase;
// 
// typedef struct renLineServer renLineServer, *PrenLineServer;
// 
// typedef struct renLineServer__vtable renLineServer__vtable, *PrenLineServer__vtable;
// 
// struct renLineServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renLineServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renLineServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renLineServer__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
// };
// 
// typedef struct renMasterGfxClutContext renMasterGfxClutContext, *PrenMasterGfxClutContext;
// 
// typedef struct renMasterGfxClutContext__vtable renMasterGfxClutContext__vtable, *PrenMasterGfxClutContext__vtable;
// 
// struct renMasterGfxClutContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMasterGfxClutContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renMasterGfxClutContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMasterGfxClutContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > renMasterGfxClutContextBase;
// 
// typedef struct renMasterLightContext renMasterLightContext, *PrenMasterLightContext;
// 
// typedef struct renMasterLightContext__vtable renMasterLightContext__vtable, *PrenMasterLightContext__vtable;
// 
// struct renMasterLightContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMasterLightContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     struct SphereGrid *m_pSphereGrid;
//     BOOL m_bMustUpdateLightGrid;
//     struct renLight *m_AnimatedLights[12];
//     UINT m_uNumAnimatedLights;
// };
// 
// struct renMasterLightContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMasterLightContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > renMasterLightContextBase;
// 
// typedef struct renMasterMaterialContext renMasterMaterialContext, *PrenMasterMaterialContext;
// 
// typedef struct renMasterMaterialContext__vtable renMasterMaterialContext__vtable, *PrenMasterMaterialContext__vtable;
// 
// struct renMasterMaterialContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMasterMaterialContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// struct renMasterMaterialContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMasterMaterialContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > renMasterMaterialContextBase;
// 
// typedef struct renMasterServer renMasterServer, *PrenMasterServer;
// 
// typedef struct renMasterServer__vtable renMasterServer__vtable, *PrenMasterServer__vtable;
// 
// typedef struct renModelServer renModelServer, *PrenModelServer;
// 
// typedef struct renParticleServer renParticleServer, *PrenParticleServer;
// 
// typedef struct renShadowServer renShadowServer, *PrenShadowServer;
// 
// typedef struct renModelServer__vtable renModelServer__vtable, *PrenModelServer__vtable;
// 
// typedef struct renParticleServer__vtable renParticleServer__vtable, *PrenParticleServer__vtable;
// 
// typedef struct renShadowServer__vtable renShadowServer__vtable, *PrenShadowServer__vtable;
// 
// struct renShadowServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renShadowServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renShadowServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renShadowServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct renParticleServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renParticleServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct renParticleServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renParticleServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renMasterServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMasterServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renModelServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renModelServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct renModelServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renModelServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renMasterServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMasterServer__vtable *__vtable; /* Inherited from svr */
//     struct svrSortedListContainer m_clients; /* Inherited from svrTemplate<svrSortedListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrSortedListContainer> */
//     struct renModelServer *m_pModel;
//     struct renEEPrimServer *m_pEEPrim;
//     struct renParticleServer *m_pParticle;
//     struct renFlashServer *m_pFlash;
//     struct renLineServer *m_pLine;
//     struct renShadowServer *m_pShadow;
// };
// 
// typedef struct renMasterServerParms renMasterServerParms, *PrenMasterServerParms;
// 
// struct renMasterServerParms {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT32 m_uMaxContextVectors;
//     UINT32 m_uMaxRenderArgBytes;
// };
// 
// typedef struct renMasterTextureContext renMasterTextureContext, *PrenMasterTextureContext;
// 
// typedef struct renMasterTextureContext__vtable renMasterTextureContext__vtable, *PrenMasterTextureContext__vtable;
// 
// struct renMasterTextureContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMasterTextureContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renMasterTextureContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMasterTextureContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > renMasterTextureContextBase;
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > renMaterialClientContextBase;
// 
// typedef svrList renMaterialContainer;
// 
// typedef struct renMaterialDMAParm renMaterialDMAParm, *PrenMaterialDMAParm;
// 
// struct renMaterialDMAParm {
//     unsigned int m_uDMAData[1];
// };
// 
// typedef struct renMaterialDupContext renMaterialDupContext, *PrenMaterialDupContext;
// 
// struct renMaterialDupContext {
//     UINT _uDupFlags;
//     UINT _uNumCluts;
//     UINT _uNumTextures;
//     struct pair<renGfxClut> _dupCluts[64];
//     struct pair<renTexture> _dupTextures[64];
// };
// 
// typedef struct renMaterialLoadParm renMaterialLoadParm, *PrenMaterialLoadParm;
// 
// typedef struct renMaterialStageLoadParm renMaterialStageLoadParm, *PrenMaterialStageLoadParm;
// 
// struct renMaterialStageLoadParm {
//     struct renMaterialFlags _MaterialFlags;
//     struct stdDynaString _TextureName;
//     tVector _NormalisedColorOffset;
//     FLOAT _Alpha;
//     UINT32 _uFlags;
// };
// 
// struct renMaterialLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     tVector _AmbientDiffuseSpecCoeff;
//     tColor _EmissiveColor;
//     FLOAT _Alpha;
//     FLOAT _SpecularFocusCoeff;
//     UINT32 _Flags;
//     INT32 _NumberOfStages;
//     struct renMaterialStageLoadParm _Stages[1];
// };
// 
// typedef struct renMaterialServer renMaterialServer, *PrenMaterialServer;
// 
// typedef struct renMaterialServer__vtable renMaterialServer__vtable, *PrenMaterialServer__vtable;
// 
// struct renMaterialServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMaterialServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct renMaterialServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMaterialServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > renMaterialServerBase;
// 
// typedef struct renMaterialServerContext renMaterialServerContext, *PrenMaterialServerContext;
// 
// typedef struct renMaterialServerContext__vtable renMaterialServerContext__vtable, *PrenMaterialServerContext__vtable;
// 
// typedef struct stdCList<renMaterial *,stdAllocator<stdCListNodeBase> > stdCList<renMaterial *,stdAllocator<stdCListNodeBase> >, *PstdCList<renMaterial *,stdAllocator<stdCListNodeBase> >;
// 
// typedef struct renMaterialSetPoolManager renMaterialSetPoolManager, *PrenMaterialSetPoolManager;
// 
// typedef struct stdSkipList<unsigned int,renMaterialSetPool *,stdSkipListNodeAllocator<unsigned int> > stdSkipList<unsigned int,renMaterialSetPool *,stdSkipListNodeAllocator<unsigned int> >, *PstdSkipList<unsigned int,renMaterialSetPool *,stdSkipListNodeAllocator<unsigned int> >;
// 
// struct stdSkipList<unsigned int,renMaterialSetPool *,stdSkipListNodeAllocator<unsigned int> > {
//     UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<unsigned int> */
//     UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<unsigned int> */
//     BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pHeader; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pUpdate; /* Inherited from stdSkipListTemplate<unsigned int> */
// };
// 
// struct renMaterialSetPoolManager {
//     struct stdSkipList<unsigned int,renMaterialSetPool *,stdSkipListNodeAllocator<unsigned int> > _listMaterialSetPool;
// };
// 
// struct renMaterialServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renMaterialServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct stdCList<renMaterial *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct renMaterialServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renMaterialServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *_MaterialStagePool;
//     UINT16 _SortKey;
//     undefined field29_0x4e;
//     undefined field30_0x4f;
//     struct stdCList<renMaterial *,stdAllocator<stdCListNodeBase> > _mipmapped;
//     FLOAT _fLastLODFOVScale;
//     struct renMaterialSetPoolManager _poolManager;
// };
// 
// typedef struct renMaterialSetPool renMaterialSetPool, *PrenMaterialSetPool;
// 
// typedef struct stdDynamicStack<int> stdDynamicStack<int>, *PstdDynamicStack<int>;
// 
// struct stdDynamicStack<int> {
//     INT *_pStack; /* Inherited from stdPlacementStack<int> */
//     UINT _uStackIdx; /* Inherited from stdPlacementStack<int> */
//     UINT _uStackDepth; /* Inherited from stdPlacementStack<int> */
// };
// 
// struct renMaterialSetPool {
//     UINT _uNumSets;
//     UINT _uSetSize;
//     struct renMaterialServerContext *_pMS;
//     struct stdDynamicStack<int> _materialSets;
//     struct renMaterial *_pMaterialBuffer[1];
// };
// 
// typedef struct renModelClientParm renModelClientParm, *PrenModelClientParm;
// 
typedef struct Vector4 tVector4;
// 
// typedef struct stdArrayW<const goScriptParm *> stdArrayW<const goScriptParm *>, *PstdArrayW<const goScriptParm *>;
// 
// typedef struct renModelUVAnimHandler renModelUVAnimHandler, *PrenModelUVAnimHandler;
// 
// typedef struct stdArrayW<const goScriptParm *>__vtable stdArrayW<const goScriptParm *>__vtable, *PstdArrayW<const goScriptParm *>__vtable;
// 
// typedef struct _UVPair UVPair;
// 
// struct renModelUVAnimHandler {
//     UINT _uAnimFrame;
//     UINT _uNumUVCoordAnimBuffers;
//     UVPair **_pDestUVCoords[2];
//     UVPair **_pSrcUVCoords;
//     UINT *_uNumUVCoords;
//     struct _LayerUVAnimMap _UVAnimBuffMap[4];
// };
// 
// struct stdArrayW<const goScriptParm *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct goScriptParm **_pBuffer; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct stdArrayW<const goScriptParm *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     UINT _uMaxSize;
//     UINT _uGrowBySize;
// };
// 
// struct renModelClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     tVector4 _vQuantOffset;
//     struct stdArrayW<const renMaterial *> _materials;
//     struct stdArrayW<const renModelGroup *> _groups;
//     struct stdArrayW<const goScriptParm *> _scripts;
//     UINT _uModelFlags;
//     undefined field7_0x64;
//     undefined field8_0x65;
//     undefined field9_0x66;
//     undefined field10_0x67;
//     struct renGROBJFlags _GROBJFlags;
//     UINT _uLayerID;
//     FLOAT _fSkinLODZDist;
//     FLOAT _fFadeOffNearDist;
//     FLOAT _fFadeOffFarDist;
//     UINT _uNumUVCoordAnimBuffers;
//     struct renModelUVAnimHandler *_pUVAnimHandler;
//     FLOAT _fQuantScale;
//     struct stdDynaString _cName;
//     undefined field20_0xac;
//     undefined field21_0xad;
//     undefined field22_0xae;
//     undefined field23_0xaf;
// };
// 
// struct stdArrayW<const goScriptParm *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayW;
//     struct __vtbl_ptr_type Resize;
// };
// 
// typedef struct renModelLoadParm renModelLoadParm, *PrenModelLoadParm;
// 
// struct renModelLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     FLOAT _fSkinLODZDist;
//     FLOAT _fFadeOffNearDist;
//     FLOAT _fFadeOffFarDist;
//     UINT _uNumMaterials;
//     UINT _uNumChunks;
//     UINT _uNumJoints;
//     UINT _uModelFlags;
//     UINT _uLayerID;
//     struct renGROBJFlags _GROBJFlags;
//     tVector4 _vQuantOffset;
//     FLOAT _fQuantScale;
//     FLOAT _fPAD;
//     UINT _uNumScripts;
//     UINT _uNumUVCoordAnimBuffers;
// };
// 
// typedef struct renModelMasterContext renModelMasterContext, *PrenModelMasterContext;
// 
// typedef struct renModelMasterContext__vtable renModelMasterContext__vtable, *PrenModelMasterContext__vtable;
// 
// struct renModelMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renModelMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renModelMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renModelMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renModelPart renModelPart, *PrenModelPart;
// 
// struct renModelPart {
//     UINT16 _uNumParents;
//     UINT16 _uNumDetailLevels;
//     unsigned int _uDetailSetOffsets[1];
// };
// 
// typedef struct renModelServerContext renModelServerContext, *PrenModelServerContext;
// 
// typedef struct renModelServerContext__vtable renModelServerContext__vtable, *PrenModelServerContext__vtable;
// 
// struct renModelServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renModelServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 _uViewID; /* Inherited from renGROBServerContext */
//     UINT _uLayerID; /* Inherited from renGROBServerContext */
//     struct renModel **m_pStaticModels;
//     INT32 m_iMaxNumStaticModels;
//     INT32 m_iNumStaticModels;
//     struct CullSphere *m_pSphereTree;
//     BOOL m_bSphereTreeValid;
//     UINT32 m_uSphereTreeDirtyFrame;
//     struct Pool__1_336 *_pInstancedMaterialPool;
// };
// 
// struct renModelServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renModelServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// typedef struct renPartDetailSet renPartDetailSet, *PrenPartDetailSet;
// 
// struct renPartDetailSet {
//     FLOAT _fMaxZ;
//     UINT16 _uNumPrims;
//     UINT16 _uFlags;
//     unsigned int _uPrimOffset[1];
// };
// 
// typedef struct renParticleClientData renParticleClientData, *PrenParticleClientData;
// 
// struct renParticleClientData {
//     struct VUVec4 fRandomNumberSeed;
//     INT32 fParticlesBegin;
//     INT32 fParticlesEnd;
//     FLOAT fDeltaT;
//     FLOAT fTime;
// };
// 
// typedef struct renParticleDescriptor renParticleDescriptor, *PrenParticleDescriptor;
// 
// struct renParticleDescriptor {
//     short int fElements[8];
// };
// 
// typedef enum renParticleFunctions {
//     kPFConstant=0,
//     kPFConstantBlur=1,
//     kPFLinear=2,
//     kPFLinearColour=3,
//     kPFQuadratic=4,
//     kPFQuadraticColour=5,
//     kPFTableLookupDiscreteX=6,
//     kPFTableLookupInterpolatedX=7,
//     kPFDrag=8,
//     xxx_kPFLinearBounce=9,
//     xxx_kPFQuadraticBounce=10,
//     kPFLinearBlur=11,
//     kPFQuadraticBlur=12,
//     xxx_kPFLinearWithBounceAndBlur=13,
//     xxx_kPFQuadraticWithBounceAndBlur=14,
//     kPFFlipBookGetUVs=15,
//     kPFConstantMod=16,
//     kPFLinearMod=17,
//     kPFQuadraticMod=18,
//     kPFSparkEnds=19,
//     kNumPFunctions=20
// } renParticleFunctions;
// 
// typedef struct renParticleMasterContext renParticleMasterContext, *PrenParticleMasterContext;
// 
// typedef struct renParticleMasterContext__vtable renParticleMasterContext__vtable, *PrenParticleMasterContext__vtable;
// 
// struct renParticleMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renParticleMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renParticleMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renParticleMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renParticleParmDataPacket renParticleParmDataPacket, *PrenParticleParmDataPacket;
// 
// struct renParticleParmDataPacket {
//     UINT32 fPad;
//     UINT32 fRenderer;
//     UINT32 fRendererData;
//     UINT32 fImplicitParticleSize;
//     struct renParticleDescriptor fInputCopyDescriptor_QWords;
//     struct renParticleDescriptor fInputCopyDescriptor_WComponents;
//     struct renParticleDescriptor fRandomDescriptor_QWords;
//     struct renParticleDescriptor fRandomDescriptor_WComponents;
//     struct renParticleDescriptor fOutputCopyDescriptor_QWords;
//     struct renParticleDescriptor fOutputCopyDescriptor_WComponents;
//     struct renParticleDescriptor fFunctionDescriptor_Subroutines;
//     struct renParticleDescriptor fFunctionDescriptor_ArgumentOffsets;
// };
// 
// typedef struct renParticlePrimBase renParticlePrimBase, *PrenParticlePrimBase;
// 
// struct renParticlePrimBase {
//     struct renParticleSystem *fSystem;
//     struct renViewportContext *fViewportContext;
//     struct renView *fViewport;
// };
// 
// typedef struct renParticlePrimClient renParticlePrimClient, *PrenParticlePrimClient;
// 
// struct renParticlePrimClient {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     undefined field11_0x10;
//     undefined field12_0x11;
//     undefined field13_0x12;
//     undefined field14_0x13;
//     undefined field15_0x14;
//     undefined field16_0x15;
//     undefined field17_0x16;
//     undefined field18_0x17;
//     undefined field19_0x18;
//     undefined field20_0x19;
//     undefined field21_0x1a;
//     undefined field22_0x1b;
// };
// 
// typedef struct renParticlePrimParm renParticlePrimParm, *PrenParticlePrimParm;
// 
// struct renParticlePrimParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     undefined field5_0x8;
//     undefined field6_0x9;
//     undefined field7_0xa;
//     undefined field8_0xb;
//     undefined field9_0xc;
//     undefined field10_0xd;
//     undefined field11_0xe;
//     undefined field12_0xf;
// };
// 
// typedef struct renParticlePrimServer renParticlePrimServer, *PrenParticlePrimServer;
// 
// struct renParticlePrimServer {
//     unsigned int _uNumConnected[2][5][7];
//     struct svrListContainer _clients[2][5][7];
// };
// 
// typedef struct renParticleProxy renParticleProxy, *PrenParticleProxy;
// 
// struct renParticleProxy {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     undefined field12_0x14;
//     undefined field13_0x15;
//     undefined field14_0x16;
//     undefined field15_0x17;
//     struct goGameObject *m_pGameObject; /* Inherited from goClient */
//     struct svrClientParm *m_pParm; /* Inherited from goClient */
//     struct renParticleSystem *fRealSystem;
// };
// 
// typedef struct renParticleRendererData renParticleRendererData, *PrenParticleRendererData;
// 
// struct renParticleRendererData {
//     unsigned int *fRendererData;
//     int fRendererDataSize;
// };
// 
// typedef enum renParticleRenderers {
//     kPRPoint=0,
//     kPRSprite2D=1,
//     kPRSprite3D=2,
//     kPRSprite3DR=3,
//     kPRGlowBall=4,
//     kPRBlurBall=5,
//     kPRMiniModel=6,
//     kPRSpark=7,
//     kPRBillboard=8,
//     kPRDecal=9,
//     kPRDischarge=10,
//     kPRTristrip1=11,
//     kPRTristrip2=12,
//     kPRTristrip3=13,
//     kNumPRenderers=14
// } renParticleRenderers;
// 
// typedef struct renParticleSystemClientParm renParticleSystemClientParm, *PrenParticleSystemClientParm;
// 
// struct renParticleSystemClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     INT16 fTransformID; /* Inherited from goAttachmentClientParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentClientParm */
//     unsigned int fTransform; /* Inherited from goAttachmentClientParm */
//     renGROBMatList fMaterials;
//     struct stdDynaString fIdentifier;
//     int fMaxParticles;
//     float fParticleLife;
//     float fCullRadius;
//     float fLODNear;
//     float fLODFar;
//     unsigned int fFlags;
//     int fRandsPerParticle;
//     struct renParticleFormat fParticleFormat;
//     int fDataPacketSize;
//     struct renParticleParmDataPacket *fParmData;
//     struct wadContext *fWadContext;
//     struct renParticleSystem *fSharedSystem;
// };
// 
// typedef struct renParticleSystemLoadParm renParticleSystemLoadParm, *PrenParticleSystemLoadParm;
// 
// struct renParticleSystemLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     INT32 fGroupID; /* Inherited from goAttachmentLoadParm */
//     INT16 fTransformID; /* Inherited from goAttachmentLoadParm */
//     INT16 fAnimationSetID; /* Inherited from goAttachmentLoadParm */
//     INT32 fAttachmentFlags; /* Inherited from goAttachmentLoadParm */
//     float fLocalMatrix[16]; /* Inherited from goAttachmentLoadParm */
//     INT32 fParmSize;
//     struct stdDynaString fIdentifier;
//     INT32 fMaxParticles;
//     float fParticleLife;
//     float fCullRadius;
//     float fLODNear;
//     float fLODFar;
//     unsigned int fFlags;
//     INT32 fRendererDataSize;
//     INT32 fNumImplicitParticles;
//     struct renParticleFormat fParticleFormat;
//     struct renParticleParmDataPacket fParmData;
// };
// 
// typedef struct renPrimClient renPrimClient, *PrenPrimClient;
// 
// typedef struct renPrimParm renPrimParm, *PrenPrimParm;
// 
// typedef struct renPrimRenderArgs renPrimRenderArgs, *PrenPrimRenderArgs;
// 
// struct renPrimRenderArgs {
//     struct renViewportContext **_pViewportContext;
//     struct renLightContext *_pLightContext;
//     struct VUMat4 *_pLVMatrixBuffer;
//     struct VUMat4 *_pSkinMatrixBuffer;
//     struct renGROB *_pGROBJ;
// };
// 
// struct renPrimParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT32 _uNumDMAChunks;
//     UINT16 _uMaterialID;
//     UINT16 _uNumTransforms;
//     UINT32 _uNumInstances;
// };
// 
// struct renPrimClient {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     struct renPrimParm *m_pStaticModelData;
//     struct renPrimRenderArgs *m_pRenderArgs;
//     struct renMaterialStage *m_pMaterialStage;
//     FLOAT m_fLODAlpha;
//     UINT8 m_uInstanceID;
//     UINT8 m_uChunkSetID;
//     UINT8 m_bClipping;
//     undefined field8_0x17;
// };
// 
// typedef struct renPrimClientFactory renPrimClientFactory, *PrenPrimClientFactory;
// 
// struct renPrimClientFactory {
//     undefined field0_0x0;
// };
// 
// typedef struct renPrimClientPS2 renPrimClientPS2, *PrenPrimClientPS2;
// 
// struct renPrimClientPS2 {
//     struct stdSLListNode *_pNextItem; /* Inherited from stdSLListNode */
//     struct renPrimParm *m_pStaticModelData; /* Inherited from renPrimClient */
//     struct renPrimRenderArgs *m_pRenderArgs; /* Inherited from renPrimClient */
//     struct renMaterialStage *m_pMaterialStage; /* Inherited from renPrimClient */
//     FLOAT m_fLODAlpha; /* Inherited from renPrimClient */
//     UINT8 m_uInstanceID; /* Inherited from renPrimClient */
//     UINT8 m_uChunkSetID; /* Inherited from renPrimClient */
//     UINT8 m_bClipping; /* Inherited from renPrimClient */
//     undefined field8_0x17;
// };
// 
// typedef struct renPrimMaster renPrimMaster, *PrenPrimMaster;
// 
// typedef struct renPrimMaster__vtable renPrimMaster__vtable, *PrenPrimMaster__vtable;
// 
// struct renPrimMaster__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renPrimMaster;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renPrimMaster {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renPrimMaster__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field21_0x2c;
//     undefined field22_0x2d;
//     undefined field23_0x2e;
//     undefined field24_0x2f;
//     undefined field25_0x30;
//     undefined field26_0x31;
//     undefined field27_0x32;
//     undefined field28_0x33;
//     undefined field29_0x34;
//     undefined field30_0x35;
//     undefined field31_0x36;
//     undefined field32_0x37;
//     undefined field33_0x38;
//     undefined field34_0x39;
//     undefined field35_0x3a;
//     undefined field36_0x3b;
//     undefined field37_0x3c;
//     undefined field38_0x3d;
//     undefined field39_0x3e;
//     undefined field40_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field43_0x48;
//     undefined field44_0x49;
//     undefined field45_0x4a;
//     undefined field46_0x4b;
//     undefined field47_0x4c;
//     undefined field48_0x4d;
//     undefined field49_0x4e;
//     undefined field50_0x4f;
//     undefined field51_0x50;
//     undefined field52_0x51;
//     undefined field53_0x52;
//     undefined field54_0x53;
//     undefined field55_0x54;
//     undefined field56_0x55;
//     undefined field57_0x56;
//     undefined field58_0x57;
//     undefined field59_0x58;
//     undefined field60_0x59;
//     undefined field61_0x5a;
//     undefined field62_0x5b;
//     undefined field63_0x5c;
//     undefined field64_0x5d;
//     undefined field65_0x5e;
//     undefined field66_0x5f;
//     undefined field67_0x60;
//     undefined field68_0x61;
//     undefined field69_0x62;
//     undefined field70_0x63;
//     undefined field71_0x64;
//     undefined field72_0x65;
//     undefined field73_0x66;
//     undefined field74_0x67;
//     undefined field75_0x68;
//     undefined field76_0x69;
//     undefined field77_0x6a;
//     undefined field78_0x6b;
//     undefined field79_0x6c;
//     undefined field80_0x6d;
//     undefined field81_0x6e;
//     undefined field82_0x6f;
//     undefined field83_0x70;
//     undefined field84_0x71;
//     undefined field85_0x72;
//     undefined field86_0x73;
//     undefined field87_0x74;
//     undefined field88_0x75;
//     undefined field89_0x76;
//     undefined field90_0x77;
//     undefined field91_0x78;
//     undefined field92_0x79;
//     undefined field93_0x7a;
//     undefined field94_0x7b;
//     undefined field95_0x7c;
//     undefined field96_0x7d;
//     undefined field97_0x7e;
//     undefined field98_0x7f;
//     undefined field99_0x80;
//     undefined field100_0x81;
//     undefined field101_0x82;
//     undefined field102_0x83;
//     undefined field103_0x84;
//     undefined field104_0x85;
//     undefined field105_0x86;
//     undefined field106_0x87;
//     undefined field107_0x88;
//     undefined field108_0x89;
//     undefined field109_0x8a;
//     undefined field110_0x8b;
//     undefined field111_0x8c;
//     undefined field112_0x8d;
//     undefined field113_0x8e;
//     undefined field114_0x8f;
//     undefined field115_0x90;
//     undefined field116_0x91;
//     undefined field117_0x92;
//     undefined field118_0x93;
//     undefined field119_0x94;
//     undefined field120_0x95;
//     undefined field121_0x96;
//     undefined field122_0x97;
//     undefined field123_0x98;
//     undefined field124_0x99;
//     undefined field125_0x9a;
//     undefined field126_0x9b;
//     undefined field127_0x9c;
//     undefined field128_0x9d;
//     undefined field129_0x9e;
//     undefined field130_0x9f;
//     undefined field131_0xa0;
//     undefined field132_0xa1;
//     undefined field133_0xa2;
//     undefined field134_0xa3;
//     undefined field135_0xa4;
//     undefined field136_0xa5;
//     undefined field137_0xa6;
//     undefined field138_0xa7;
//     undefined field139_0xa8;
//     undefined field140_0xa9;
//     undefined field141_0xaa;
//     undefined field142_0xab;
//     undefined field143_0xac;
//     undefined field144_0xad;
//     undefined field145_0xae;
//     undefined field146_0xaf;
//     undefined field147_0xb0;
//     undefined field148_0xb1;
//     undefined field149_0xb2;
//     undefined field150_0xb3;
//     undefined field151_0xb4;
//     undefined field152_0xb5;
//     undefined field153_0xb6;
//     undefined field154_0xb7;
//     undefined field155_0xb8;
//     undefined field156_0xb9;
//     undefined field157_0xba;
//     undefined field158_0xbb;
//     undefined field159_0xbc;
//     undefined field160_0xbd;
//     undefined field161_0xbe;
//     undefined field162_0xbf;
//     undefined field163_0xc0;
//     undefined field164_0xc1;
//     undefined field165_0xc2;
//     undefined field166_0xc3;
//     undefined field167_0xc4;
//     undefined field168_0xc5;
//     undefined field169_0xc6;
//     undefined field170_0xc7;
//     undefined field171_0xc8;
//     undefined field172_0xc9;
//     undefined field173_0xca;
//     undefined field174_0xcb;
//     undefined field175_0xcc;
//     undefined field176_0xcd;
//     undefined field177_0xce;
//     undefined field178_0xcf;
//     undefined field179_0xd0;
//     undefined field180_0xd1;
//     undefined field181_0xd2;
//     undefined field182_0xd3;
//     undefined field183_0xd4;
//     undefined field184_0xd5;
//     undefined field185_0xd6;
//     undefined field186_0xd7;
//     undefined field187_0xd8;
//     undefined field188_0xd9;
//     undefined field189_0xda;
//     undefined field190_0xdb;
//     undefined field191_0xdc;
//     undefined field192_0xdd;
//     undefined field193_0xde;
//     undefined field194_0xdf;
//     undefined field195_0xe0;
//     undefined field196_0xe1;
//     undefined field197_0xe2;
//     undefined field198_0xe3;
//     undefined field199_0xe4;
//     undefined field200_0xe5;
//     undefined field201_0xe6;
//     undefined field202_0xe7;
//     undefined field203_0xe8;
//     undefined field204_0xe9;
//     undefined field205_0xea;
//     undefined field206_0xeb;
//     undefined field207_0xec;
//     undefined field208_0xed;
//     undefined field209_0xee;
//     undefined field210_0xef;
//     undefined field211_0xf0;
//     undefined field212_0xf1;
//     undefined field213_0xf2;
//     undefined field214_0xf3;
//     undefined field215_0xf4;
//     undefined field216_0xf5;
//     undefined field217_0xf6;
//     undefined field218_0xf7;
//     undefined field219_0xf8;
//     undefined field220_0xf9;
//     undefined field221_0xfa;
//     undefined field222_0xfb;
//     undefined field223_0xfc;
//     undefined field224_0xfd;
//     undefined field225_0xfe;
//     undefined field226_0xff;
//     undefined field227_0x100;
//     undefined field228_0x101;
//     undefined field229_0x102;
//     undefined field230_0x103;
//     undefined field231_0x104;
//     undefined field232_0x105;
//     undefined field233_0x106;
//     undefined field234_0x107;
//     undefined field235_0x108;
//     undefined field236_0x109;
//     undefined field237_0x10a;
//     undefined field238_0x10b;
//     undefined field239_0x10c;
//     undefined field240_0x10d;
//     undefined field241_0x10e;
//     undefined field242_0x10f;
//     undefined field243_0x110;
//     undefined field244_0x111;
//     undefined field245_0x112;
//     undefined field246_0x113;
//     undefined field247_0x114;
//     undefined field248_0x115;
//     undefined field249_0x116;
//     undefined field250_0x117;
//     undefined field251_0x118;
//     undefined field252_0x119;
//     undefined field253_0x11a;
//     undefined field254_0x11b;
//     undefined field255_0x11c;
//     undefined field256_0x11d;
//     undefined field257_0x11e;
//     undefined field258_0x11f;
//     undefined field259_0x120;
//     undefined field260_0x121;
//     undefined field261_0x122;
//     undefined field262_0x123;
//     undefined field263_0x124;
//     undefined field264_0x125;
//     undefined field265_0x126;
//     undefined field266_0x127;
//     undefined field267_0x128;
//     undefined field268_0x129;
//     undefined field269_0x12a;
//     undefined field270_0x12b;
//     undefined field271_0x12c;
//     undefined field272_0x12d;
//     undefined field273_0x12e;
//     undefined field274_0x12f;
//     undefined field275_0x130;
//     undefined field276_0x131;
//     undefined field277_0x132;
//     undefined field278_0x133;
//     undefined field279_0x134;
//     undefined field280_0x135;
//     undefined field281_0x136;
//     undefined field282_0x137;
//     undefined field283_0x138;
//     undefined field284_0x139;
//     undefined field285_0x13a;
//     undefined field286_0x13b;
//     undefined field287_0x13c;
//     undefined field288_0x13d;
//     undefined field289_0x13e;
//     undefined field290_0x13f;
//     undefined field291_0x140;
//     undefined field292_0x141;
//     undefined field293_0x142;
//     undefined field294_0x143;
//     undefined field295_0x144;
//     undefined field296_0x145;
//     undefined field297_0x146;
//     undefined field298_0x147;
//     undefined field299_0x148;
//     undefined field300_0x149;
//     undefined field301_0x14a;
//     undefined field302_0x14b;
//     undefined field303_0x14c;
//     undefined field304_0x14d;
//     undefined field305_0x14e;
//     undefined field306_0x14f;
//     undefined field307_0x150;
//     undefined field308_0x151;
//     undefined field309_0x152;
//     undefined field310_0x153;
//     undefined field311_0x154;
//     undefined field312_0x155;
//     undefined field313_0x156;
//     undefined field314_0x157;
//     undefined field315_0x158;
//     undefined field316_0x159;
//     undefined field317_0x15a;
//     undefined field318_0x15b;
//     undefined field319_0x15c;
//     undefined field320_0x15d;
//     undefined field321_0x15e;
//     undefined field322_0x15f;
//     undefined field323_0x160;
//     undefined field324_0x161;
//     undefined field325_0x162;
//     undefined field326_0x163;
//     undefined field327_0x164;
//     undefined field328_0x165;
//     undefined field329_0x166;
//     undefined field330_0x167;
//     undefined field331_0x168;
//     undefined field332_0x169;
//     undefined field333_0x16a;
//     undefined field334_0x16b;
// };
// 
// typedef struct renPrimRenderArgsFactory renPrimRenderArgsFactory, *PrenPrimRenderArgsFactory;
// 
// struct renPrimRenderArgsFactory {
//     undefined field0_0x0;
// };
// 
// typedef struct renPrimRenderArgsPS2 renPrimRenderArgsPS2, *PrenPrimRenderArgsPS2;
// 
// struct renPrimRenderArgsPS2 {
//     struct renViewportContext **_pViewportContext; /* Inherited from renPrimRenderArgs */
//     struct renLightContext *_pLightContext; /* Inherited from renPrimRenderArgs */
//     struct VUMat4 *_pLVMatrixBuffer; /* Inherited from renPrimRenderArgs */
//     struct VUMat4 *_pSkinMatrixBuffer; /* Inherited from renPrimRenderArgs */
//     struct renGROB *_pGROBJ; /* Inherited from renPrimRenderArgs */
// };
// 
// typedef struct renPrimRenderArgsPS3 renPrimRenderArgsPS3, *PrenPrimRenderArgsPS3;
// 
// struct renPrimRenderArgsPS3 {
//     struct renViewportContext **_pViewportContext; /* Inherited from renPrimRenderArgs */
//     struct renLightContext *_pLightContext; /* Inherited from renPrimRenderArgs */
//     struct VUMat4 *_pLVMatrixBuffer; /* Inherited from renPrimRenderArgs */
//     struct VUMat4 *_pSkinMatrixBuffer; /* Inherited from renPrimRenderArgs */
//     struct renGROB *_pGROBJ; /* Inherited from renPrimRenderArgs */
//     undefined field5_0x14;
//     undefined field6_0x15;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     undefined field9_0x18;
//     undefined field10_0x19;
//     undefined field11_0x1a;
//     undefined field12_0x1b;
//     undefined field13_0x1c;
//     undefined field14_0x1d;
//     undefined field15_0x1e;
//     undefined field16_0x1f;
//     struct VUMat4 worldToViewMat;
// };
// 
// typedef struct renPrimServer renPrimServer, *PrenPrimServer;
// 
// struct renPrimServer {
//     unsigned int m_uNumConnected[2][8];
//     struct svrHashBucketContainer m_clients[2][2];
// };
// 
// typedef struct renShadowClientLoadParm renShadowClientLoadParm, *PrenShadowClientLoadParm;
// 
// struct renShadowClientLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     char magic[8];
//     INT32 m_nTotalParmSize;
//     INT32 m_nNumShadows;
//     INT32 m_nOffsetShadowHdrOffsets;
// };
// 
// typedef struct renShadowServerContext renShadowServerContext, *PrenShadowServerContext;
// 
// typedef struct renShadowServerContext__vtable renShadowServerContext__vtable, *PrenShadowServerContext__vtable;
// 
// struct renShadowServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renShadowServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
//     struct __vtbl_ptr_type Prep;
//     struct __vtbl_ptr_type CleanUp;
// };
// 
// struct renShadowServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renShadowServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 _uViewID; /* Inherited from renGROBServerContext */
//     UINT _uLayerID; /* Inherited from renGROBServerContext */
// };
// 
// typedef struct renShadowServerMasterContext renShadowServerMasterContext, *PrenShadowServerMasterContext;
// 
// typedef struct renShadowServerMasterContext__vtable renShadowServerMasterContext__vtable, *PrenShadowServerMasterContext__vtable;
// 
// struct renShadowServerMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renShadowServerMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renShadowServerMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renShadowServerMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct renSTriParm renSTriParm, *PrenSTriParm;
// 
// struct renSTriParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT32 _uNumDMAChunks; /* Inherited from renPrimParm */
//     UINT16 _uMaterialID; /* Inherited from renPrimParm */
//     UINT16 _uNumTransforms; /* Inherited from renPrimParm */
//     UINT32 _uNumInstances; /* Inherited from renPrimParm */
//     struct renTriPrimFlags _TriPrimFlags; /* Inherited from renTriParm */
//     UINT8 _uNumChunkSets; /* Inherited from renTriParm */
//     UINT8 _uChunksPerVU1Buff; /* Inherited from renTriParm */
//     UINT16 _uPAD; /* Inherited from renTriParm */
//     UINT16 _uNumStrips; /* Inherited from renTriParm */
//     UINT16 _uNumVertices; /* Inherited from renTriParm */
//     struct renChunkTags _ChunkTags[1]; /* Inherited from renTriParm */
// };
// 
// typedef struct renSTriServer renSTriServer, *PrenSTriServer;
// 
// typedef struct renSTriServer__vtable renSTriServer__vtable, *PrenSTriServer__vtable;
// 
// struct renSTriServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type PreRender;
//     struct __vtbl_ptr_type RenderLayer;
//     struct __vtbl_ptr_type EmptyLayer;
//     struct __vtbl_ptr_type PostRender;
//     struct __vtbl_ptr_type DoStencilPass;
// };
// 
// struct renSTriServer {
//     unsigned int m_uNumConnected[2][8]; /* Inherited from renPrimServer */
//     struct svrHashBucketContainer m_clients[2][2]; /* Inherited from renPrimServer */
//     struct renSTriServer__vtable *__vtable; /* Inherited from renTriServer */
// };
// 
// typedef svrList renTextureContainer;
// 
// typedef struct renTextureContext renTextureContext, *PrenTextureContext;
// 
// typedef struct renTextureContext__vtable renTextureContext__vtable, *PrenTextureContext__vtable;
// 
// struct renTextureContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renTextureContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct renTextureContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renTextureContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct Pool__1_336 *_TexturePool;
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > renTextureContextBase;
// 
// typedef struct renTextureLoadParm renTextureLoadParm, *PrenTextureLoadParm;
// 
// struct renTextureLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct stdDynaString _GfxName;
//     struct stdDynaString _ClutName;
//     struct stdDynaString _MipMapName;
//     INT32 _sMipMapK;
//     FLOAT _fMipMapDist;
//     UINT32 _Flags;
// };
// 
// typedef struct renTextureServer renTextureServer, *PrenTextureServer;
// 
// typedef struct renTextureServer__vtable renTextureServer__vtable, *PrenTextureServer__vtable;
// 
// struct renTextureServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type renTextureServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct renTextureServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct renTextureServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > renTextureServerBase;
// 
// typedef struct renTriServer renTriServer, *PrenTriServer;
// 
// typedef struct renTriServer__vtable renTriServer__vtable, *PrenTriServer__vtable;
// 
// struct renTriServer {
//     unsigned int m_uNumConnected[2][8]; /* Inherited from renPrimServer */
//     struct svrHashBucketContainer m_clients[2][2]; /* Inherited from renPrimServer */
//     struct renTriServer__vtable *__vtable;
// };
// 
// struct renTriServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type PreRender;
//     struct __vtbl_ptr_type RenderLayer;
//     struct __vtbl_ptr_type EmptyLayer;
//     struct __vtbl_ptr_type PostRender;
//     struct __vtbl_ptr_type DoStencilPass;
// };
// 
// typedef struct renViewportContextFactory renViewportContextFactory, *PrenViewportContextFactory;
// 
// struct renViewportContextFactory {
//     undefined field0_0x0;
// };
// 
// typedef struct renViewportContextPS2 renViewportContextPS2, *PrenViewportContextPS2;
// 
// struct renViewportContextPS2 {
//     struct VUVec4 m_vViewportVectors[5]; /* Inherited from renViewportContext */
//     long unsigned int m_VC[2]; /* Inherited from renViewportContext */
//     unsigned int m_DMAStandAloneBuff[32]; /* Inherited from renViewportContext */
//     UINT32 *m_pDMAStandAlone[2]; /* Inherited from renViewportContext */
//     undefined field4_0xe8;
//     undefined field5_0xe9;
//     undefined field6_0xea;
//     undefined field7_0xeb;
//     undefined field8_0xec;
//     undefined field9_0xed;
//     undefined field10_0xee;
//     undefined field11_0xef;
// };
// 
// typedef struct renViewportContextPS3 renViewportContextPS3, *PrenViewportContextPS3;
// 
// struct renViewportContextPS3 {
//     struct VUVec4 m_vViewportVectors[5]; /* Inherited from renViewportContext */
//     long unsigned int m_VC[2]; /* Inherited from renViewportContext */
//     unsigned int m_DMAStandAloneBuff[32]; /* Inherited from renViewportContext */
//     UINT32 *m_pDMAStandAlone[2]; /* Inherited from renViewportContext */
//     undefined field4_0xe8;
//     undefined field5_0xe9;
//     undefined field6_0xea;
//     undefined field7_0xeb;
//     undefined field8_0xec;
//     undefined field9_0xed;
//     undefined field10_0xee;
//     undefined field11_0xef;
//     struct VUMat4 projMat;
//     struct renView *pView;
//     undefined field14_0x134;
//     undefined field15_0x135;
//     undefined field16_0x136;
//     undefined field17_0x137;
//     undefined field18_0x138;
//     undefined field19_0x139;
//     undefined field20_0x13a;
//     undefined field21_0x13b;
//     undefined field22_0x13c;
//     undefined field23_0x13d;
//     undefined field24_0x13e;
//     undefined field25_0x13f;
// };
// 
// typedef struct renVU1 renVU1, *PrenVU1;
// 
// struct renVU1 {
//     undefined field0_0x0;
// };
// 
// typedef struct renVU1CodeLoader renVU1CodeLoader, *PrenVU1CodeLoader;
// 
// struct renVU1CodeLoader {
//     UINT _uNumPages;
//     UINT _uPageSize;
//     UINT _uVU1BaseAddress;
//     UINT _uPageIdx;
//     unsigned int _uRenderFlagsMap[128];
//     int _sPageSegIdxMap[64];
//     struct _renVU1CodeSeg _codeseg[64];
//     UINT _uNumFlagMappedCodeSegments;
//     UINT _uNumCodeSegments;
//     INT8 *_pCodeBuffer;
// };
// 
// typedef struct _renVU1CodeSeg renVU1CodeSeg;
// 
// typedef struct ringBuffer ringBuffer, *PringBuffer;
// 
// struct ringBuffer {
//     Ptr _pBase;
//     INT32 _inIndex;
//     INT32 _outIndex;
//     INT32 _numTotalBytes;
//     INT32 _numUsedBytes;
// };
// 
// typedef struct Ripple Ripple, *PRipple;
// 
// struct Ripple {
//     INT16 m_Freq; /* Inherited from tFS_Ripple */
//     INT16 m_Speed; /* Inherited from tFS_Ripple */
//     FLOAT m_AmplU_0; /* Inherited from tFS_Ripple */
//     FLOAT m_AmplV_0; /* Inherited from tFS_Ripple */
//     FLOAT m_AmplU_1; /* Inherited from tFS_Ripple */
//     FLOAT m_AmplV_1; /* Inherited from tFS_Ripple */
//     FLOAT m_XScale; /* Inherited from tFS_Ripple */
// };
// 
// typedef struct RsrcWadSlot RsrcWadSlot, *PRsrcWadSlot;
// 
// struct RsrcWadSlot {
//     char name[20];
//     struct wadContext *wc;
//     UINT32 flags;
// };
// 
// typedef struct RumbleAndShake RumbleAndShake, *PRumbleAndShake;
// 
// struct RumbleAndShake {
//     undefined field0_0x0;
// };
// 
// typedef int saddr;
// 
// typedef undefined1 *SAMPLE_OUTPUT_FUNC;
// 
// typedef enum SaveDataEnum {
//     kAttachmentOn=1,
//     kDefaultSaveData=1,
//     kCircleOn=2,
//     kSDOnCeiling=4
// } SaveDataEnum;
// 
// typedef struct SaveGame SaveGame, *PSaveGame;
// 
// struct SaveGame {
//     undefined field0_0x0;
// };
// 
// typedef struct SavePoint_ParamData SavePoint_ParamData, *PSavePoint_ParamData;
// 
// struct SavePoint_ParamData {
//     INT32 savePointID;
// };
// 
// typedef struct SaveState__1_17693 SaveState__1_17693, *PSaveState__1_17693;
// 
// typedef struct SaveStateR SaveStateR, *PSaveStateR;
// 
// struct SaveStateR {
//     struct stdDynaString fCameraName;
//     struct stdDynaString fContextName;
//     struct TweenValues fTweenValues;
//     float fRailTime;
//     float fFieldStrength;
//     float dummy[2];
// };
// 
// struct SaveState__1_17693 {
//     int fZonesEnabled;
//     int fNumRunning;
//     int dummy[2];
//     struct SaveStateR fStates[8];
// };
// 
// typedef struct SaveState__1_19690 SaveState__1_19690, *PSaveState__1_19690;
// 
// struct SaveState__1_19690 {
//     struct stdDynaString fParmName;
//     struct Control__1_19678 fVolumes[4];
//     enum Modes fMode;
//     enum State__1_19689 fState;
//     bool fMissing;
//     undefined field5_0x51;
//     undefined field6_0x52;
//     undefined field7_0x53;
// };
// 
// typedef struct SaveState__1_19721 SaveState__1_19721, *PSaveState__1_19721;
// 
// struct SaveState__1_19721 {
//     struct SaveState__1_19690 fChannels[2];
//     int fMainChannel;
//     int fState;
//     int fReturnState;
//     float fFadeTime;
//     float fSustainTime;
//     struct stdDynaString fTriggeredMusicName;
//     float fTimeIn;
//     float fTimeOut;
//     int fFightMode;
//     int fMixID;
// };
// 
// typedef undefined1 *SBCallback;
// 
// typedef struct SC_Break SC_Break, *PSC_Break;
// 
// struct SC_Break {
//     undefined field0_0x0;
// };
// 
// typedef struct SC_Modulate SC_Modulate, *PSC_Modulate;
// 
// typedef struct tActionModulate tActionModulate, *PtActionModulate;
// 
// struct tActionModulate {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_ModulateTarget;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_TargetValue;
//     FLOAT m_ModulateVelocity;
// };
// 
// struct SC_Modulate {
//     struct tActionModulate *m_pModulate;
// };
// 
// typedef struct SC_Pendulum SC_Pendulum, *PSC_Pendulum;
// 
// typedef struct SPendulumArgs SPendulumArgs, *PSPendulumArgs;
// 
// struct SPendulumArgs {
//     enum EAxis eAxis;
//     INT32 iBeats;
//     FLOAT fPeriod;
//     FLOAT fApexAngle;
//     FLOAT fStartAngle;
//     FLOAT fDrag;
//     UINT32 hBeatSound;
// };
// 
// struct SC_Pendulum {
//     struct VUMat4 m_mInitialPosition;
//     struct SPendulumArgs *m_pArgs;
//     struct goGameObject *m_pGO;
//     FLOAT m_fThetaVelocity;
//     FLOAT m_fTheta;
//     FLOAT m_fPvTheta;
//     INT32 m_iCurrentBeat;
//     undefined field7_0x58;
//     undefined field8_0x59;
//     undefined field9_0x5a;
//     undefined field10_0x5b;
//     undefined field11_0x5c;
//     undefined field12_0x5d;
//     undefined field13_0x5e;
//     undefined field14_0x5f;
// };
// 
// typedef struct SC_VirtualWind SC_VirtualWind, *PSC_VirtualWind;
// 
// struct SC_VirtualWind {
//     struct VUVec4 m_vDirection;
//     UINT32 m_dwFlags;
//     UINT32 m_dwVirtualWindZoneID;
//     INT32 m_iJointID;
//     FLOAT m_fRadius;
//     FLOAT m_fMagnitude;
//     undefined field6_0x24;
//     undefined field7_0x25;
//     undefined field8_0x26;
//     undefined field9_0x27;
//     undefined field10_0x28;
//     undefined field11_0x29;
//     undefined field12_0x2a;
//     undefined field13_0x2b;
//     undefined field14_0x2c;
//     undefined field15_0x2d;
//     undefined field16_0x2e;
//     undefined field17_0x2f;
// };
// 
// typedef struct ScalerInterpolator<float> ScalerInterpolator<float>, *PScalerInterpolator<float>;
// 
// struct ScalerInterpolator<float> {
//     undefined field0_0x0;
// };
// 
// typedef struct ScalerInterpolator<int> ScalerInterpolator<int>, *PScalerInterpolator<int>;
// 
// struct ScalerInterpolator<int> {
//     undefined field0_0x0;
// };
// 
// typedef struct ScalerInterpolator<short int> ScalerInterpolator<short int>, *PScalerInterpolator<short int>;
// 
// struct ScalerInterpolator<short int> {
//     undefined field0_0x0;
// };
// 
// typedef struct SCB SCB, *PSCB;
// 
// struct SCB {
//     char *mp;
//     char *mp0;
//     BOOL in;
// };
// 
// typedef struct sce_dirent sce_dirent, *Psce_dirent;
// 
// typedef struct sce_stat sce_stat, *Psce_stat;
// 
// struct sce_stat {
//     unsigned int st_mode;
//     unsigned int st_attr;
//     unsigned int st_size;
//     unsigned char st_ctime[8];
//     unsigned char st_atime[8];
//     unsigned char st_mtime[8];
//     unsigned int st_hisize;
//     unsigned int st_private[6];
// };
// 
// struct sce_dirent {
//     struct sce_stat d_stat;
//     char d_name[256];
//     void *d_private;
// };
// 
// typedef struct sceCdCLOCK sceCdCLOCK, *PsceCdCLOCK;
// 
// struct sceCdCLOCK {
//     u_char stat;
//     u_char second;
//     u_char minute;
//     u_char hour;
//     u_char pad;
//     u_char day;
//     u_char month;
//     u_char year;
// };
// 
// typedef struct sceCdlFILE sceCdlFILE, *PsceCdlFILE;
// 
// struct sceCdlFILE {
//     u_int lsn;
//     u_int size;
//     char name[16];
//     u_char date[8];
//     u_int flag;
// };
// 
// typedef struct sceCdlLOCCD sceCdlLOCCD, *PsceCdlLOCCD;
// 
// struct sceCdlLOCCD {
//     u_char minute;
//     u_char second;
//     u_char sector;
//     u_char track;
// };
// 
// typedef struct sceCdRMode sceCdRMode, *PsceCdRMode;
// 
// struct sceCdRMode {
//     u_char trycount;
//     u_char spindlctrl;
//     u_char datapattern;
//     u_char pad;
// };
// 
// typedef struct sceCdStmInit sceCdStmInit, *PsceCdStmInit;
// 
// struct sceCdStmInit {
//     u_int bufmax;
//     u_int bankmax;
//     u_int iop_bufaddr;
// };
// 
// typedef struct sceDevGifCnd sceDevGifCnd, *PsceDevGifCnd;
// 
// struct sceDevGifCnd {
//     uint16 tag;
//     u_int stat;
//     u_int count;
//     u_int p3count;
//     u_int p3tag;
//     u_int pad;
//     undefined field6_0x24;
//     undefined field7_0x25;
//     undefined field8_0x26;
//     undefined field9_0x27;
//     undefined field10_0x28;
//     undefined field11_0x29;
//     undefined field12_0x2a;
//     undefined field13_0x2b;
//     undefined field14_0x2c;
//     undefined field15_0x2d;
//     undefined field16_0x2e;
//     undefined field17_0x2f;
// };
// 
// typedef struct sceDevVif0Cnd sceDevVif0Cnd, *PsceDevVif0Cnd;
// 
// struct sceDevVif0Cnd {
//     u_int row[4];
//     u_int col[4];
//     u_int mask;
//     u_int code;
//     u_int stat;
//     u_short itop;
//     u_short itops;
//     u_short mark;
//     u_short num;
//     u_char error;
//     u_char cl;
//     u_char wl;
//     u_char cmod;
//     u_char pad;
//     undefined field14_0x39;
//     undefined field15_0x3a;
//     undefined field16_0x3b;
// };
// 
// typedef struct sceDevVif1Cnd sceDevVif1Cnd, *PsceDevVif1Cnd;
// 
// struct sceDevVif1Cnd {
//     u_int row[4];
//     u_int col[4];
//     u_int mask;
//     u_int code;
//     u_int stat;
//     u_short itop;
//     u_short itops;
//     u_short base;
//     u_short offset;
//     u_short top;
//     u_short tops;
//     u_short mark;
//     u_short num;
//     u_char error;
//     u_char cl;
//     u_char wl;
//     u_char cmod;
//     u_char pad;
//     undefined field18_0x41;
//     undefined field19_0x42;
//     undefined field20_0x43;
// };
// 
// typedef struct sceDevVu0Cnd sceDevVu0Cnd, *PsceDevVu0Cnd;
// 
// struct sceDevVu0Cnd {
//     uint16 vf[32];
//     u_int status;
//     u_int mac;
//     u_int clipping;
//     u_int r;
//     u_int i;
//     u_int q;
//     u_short vi[16];
//     undefined field8_0x238;
//     undefined field9_0x239;
//     undefined field10_0x23a;
//     undefined field11_0x23b;
//     undefined field12_0x23c;
//     undefined field13_0x23d;
//     undefined field14_0x23e;
//     undefined field15_0x23f;
// };
// 
// typedef struct sceDevVu1Cnd sceDevVu1Cnd, *PsceDevVu1Cnd;
// 
// struct sceDevVu1Cnd {
//     uint16 vf[32];
//     u_int status;
//     u_int mac;
//     u_int clipping;
//     u_int r;
//     u_int i;
//     u_int q;
//     u_int p;
//     u_short vi[16];
//     undefined field9_0x23c;
//     undefined field10_0x23d;
//     undefined field11_0x23e;
//     undefined field12_0x23f;
// };
// 
// typedef struct sceDmaChan sceDmaChan, *PsceDmaChan;
// 
// typedef struct tD_CHCR tD_CHCR, *PtD_CHCR;
// 
// typedef struct _sceDmaTag sceDmaTag;
// 
// struct tD_CHCR {
//     unsigned int DIR:1;
//     unsigned int p0:1;
//     unsigned int MOD:2;
//     unsigned int ASP:2;
//     unsigned int TTE:1;
//     unsigned int TIE:1;
//     unsigned int STR:1;
//     unsigned int p1:7;
//     unsigned int TAG:16;
// };
// 
// struct sceDmaChan {
//     struct tD_CHCR chcr;
//     u_int p0[3];
//     void *madr;
//     u_int p1[3];
//     u_int qwc;
//     u_int p2[3];
//     sceDmaTag *tadr;
//     u_int p3[3];
//     void *as0;
//     u_int p4[3];
//     void *as1;
//     u_int p5[3];
//     u_int p6[4];
//     u_int p7[4];
//     void *sadr;
//     u_int p8[3];
// };
// 
// typedef struct sceDmaEnv sceDmaEnv, *PsceDmaEnv;
// 
// struct sceDmaEnv {
//     u_char sts;
//     u_char std;
//     u_char mfd;
//     u_char rcycle;
//     u_short express;
//     u_short notify;
//     u_short sqwc;
//     u_short tqwc;
//     void *rbadr;
//     u_int rbmsk;
// };
// 
// typedef struct sceExcepIOPExceptionData sceExcepIOPExceptionData, *PsceExcepIOPExceptionData;
// 
// struct sceExcepIOPExceptionData {
//     int reg[45];
//     int version;
//     int offset;
//     char module[32];
// };
// 
// typedef struct sceExecData sceExecData, *PsceExecData;
// 
// struct sceExecData {
//     unsigned int epc;
//     unsigned int gp;
//     unsigned int sp;
//     unsigned int dummy;
// };
// 
// typedef struct sceFsDevctlBlkIO sceFsDevctlBlkIO, *PsceFsDevctlBlkIO;
// 
// typedef enum sceFsRWTYPE {
//     sceFsREADING=0,
//     sceFsWRITING=1
// } sceFsRWTYPE;
// 
// struct sceFsDevctlBlkIO {
//     unsigned int lbn;
//     unsigned int nblk;
//     void *addr;
//     unsigned int blksiz;
//     enum sceFsRWTYPE type;
//     unsigned int mode;
// };
// 
// typedef struct _sceGifPackAd sceGifPackAd;
// 
// typedef struct sceGifPacket sceGifPacket, *PsceGifPacket;
// 
// struct sceGifPacket {
//     u_int *pCurrent;
//     uint16 *pBase;
//     uint16 *pDmaTag;
//     u_long *pGifTag;
// };
// 
// typedef struct _sceGifPackFog sceGifPackFog;
// 
// typedef struct _sceGifPackNop sceGifPackNop;
// 
// typedef struct _sceGifPackRgbaq sceGifPackRgbaq;
// 
// typedef struct _sceGifPackSt sceGifPackSt;
// 
// typedef struct _sceGifPackUv sceGifPackUv;
// 
// typedef struct _sceGifPackXyz sceGifPackXyz;
// 
// typedef struct _sceGifPackXyzf sceGifPackXyzf;
// 
// typedef struct sceGsAlpha sceGsAlpha, *PsceGsAlpha;
// 
// struct sceGsAlpha {
//     long unsigned int A:2;
//     long unsigned int B:2;
//     long unsigned int C:2;
//     long unsigned int D:2;
//     long unsigned int pad8:24;
//     long unsigned int FIX:8;
//     long unsigned int pad40:24;
// };
// 
// typedef struct sceGsAlphaEnv sceGsAlphaEnv, *PsceGsAlphaEnv;
// 
// typedef struct sceGsPabe sceGsPabe, *PsceGsPabe;
// 
// typedef struct sceGsTexa sceGsTexa, *PsceGsTexa;
// 
// typedef struct sceGsFba sceGsFba, *PsceGsFba;
// 
// struct sceGsFba {
//     long unsigned int FBA:1;
//     long unsigned int pad01:63;
// };
// 
// struct sceGsPabe {
//     long unsigned int PABE:1;
//     long unsigned int pad01:63;
// };
// 
// struct sceGsTexa {
//     long unsigned int TA0:8;
//     long unsigned int pad08:7;
//     long unsigned int AEM:1;
//     long unsigned int pad16:16;
//     long unsigned int TA1:8;
//     long unsigned int pad40:24;
// };
// 
// struct sceGsAlphaEnv {
//     struct sceGsAlpha alpha1;
//     long int alpha1addr;
//     struct sceGsPabe pabe;
//     long int pabeaddr;
//     struct sceGsTexa texa;
//     long int texaaddr;
//     struct sceGsFba fba1;
//     long int fba1addr;
// };
// 
// typedef struct sceGsAlphaEnv2 sceGsAlphaEnv2, *PsceGsAlphaEnv2;
// 
// struct sceGsAlphaEnv2 {
//     struct sceGsAlpha alpha2;
//     long int alpha2addr;
//     struct sceGsPabe pabe;
//     long int pabeaddr;
//     struct sceGsTexa texa;
//     long int texaaddr;
//     struct sceGsFba fba2;
//     long int fba2addr;
// };
// 
// typedef struct sceGsBitbltbuf sceGsBitbltbuf, *PsceGsBitbltbuf;
// 
// struct sceGsBitbltbuf {
//     long unsigned int SBP:14;
//     long unsigned int pad14:2;
//     long unsigned int SBW:6;
//     long unsigned int pad22:2;
//     long unsigned int SPSM:6;
//     long unsigned int pad30:2;
//     long unsigned int DBP:14;
//     long unsigned int pad46:2;
//     long unsigned int DBW:6;
//     long unsigned int pad54:2;
//     long unsigned int DPSM:6;
//     long unsigned int pad62:2;
// };
// 
// typedef struct sceGsClamp sceGsClamp, *PsceGsClamp;
// 
// struct sceGsClamp {
//     long unsigned int WMS:2;
//     long unsigned int WMT:2;
//     long unsigned int MINU:10;
//     long unsigned int MAXU:10;
//     long unsigned int MINV:10;
//     long unsigned int MAXV:10;
//     long unsigned int pad44:20;
// };
// 
// typedef struct sceGsClear sceGsClear, *PsceGsClear;
// 
// typedef struct sceGsPrim sceGsPrim, *PsceGsPrim;
// 
// typedef struct sceGsRgbaq sceGsRgbaq, *PsceGsRgbaq;
// 
// typedef struct sceGsXyz sceGsXyz, *PsceGsXyz;
// 
// struct sceGsRgbaq {
//     u_int R:8;
//     u_int G:8;
//     u_int B:8;
//     u_int A:8;
//     float Q;
// };
// 
// struct sceGsXyz {
//     long unsigned int X:16;
//     long unsigned int Y:16;
//     long unsigned int Z:32;
// };
// 
// struct sceGsPrim {
//     long unsigned int PRIM:3;
//     long unsigned int IIP:1;
//     long unsigned int TME:1;
//     long unsigned int FGE:1;
//     long unsigned int ABE:1;
//     long unsigned int AA1:1;
//     long unsigned int FST:1;
//     long unsigned int CTXT:1;
//     long unsigned int FIX:1;
//     long unsigned int pad11:53;
// };
// 
// struct sceGsClear {
//     struct sceGsTest testa;
//     long int testaaddr;
//     struct sceGsPrim prim;
//     long int primaddr;
//     struct sceGsRgbaq rgbaq;
//     long int rgbaqaddr;
//     struct sceGsXyz xyz2a;
//     long int xyz2aaddr;
//     struct sceGsXyz xyz2b;
//     long int xyz2baddr;
//     struct sceGsTest testb;
//     long int testbaddr;
// };
// 
// typedef struct sceGsDBuff sceGsDBuff, *PsceGsDBuff;
// 
// typedef struct sceGsDispEnv sceGsDispEnv, *PsceGsDispEnv;
// 
// typedef struct sceGsDrawEnv1 sceGsDrawEnv1, *PsceGsDrawEnv1;
// 
// typedef struct tGS_DISPFB2 tGS_DISPFB2, *PtGS_DISPFB2;
// 
// typedef struct tGS_DISPLAY2 tGS_DISPLAY2, *PtGS_DISPLAY2;
// 
// typedef struct tGS_BGCOLOR tGS_BGCOLOR, *PtGS_BGCOLOR;
// 
// struct tGS_DISPLAY2 {
//     unsigned int DX:12;
//     unsigned int DY:11;
//     unsigned int MAGH:4;
//     unsigned int MAGV:2;
//     unsigned int p0:3;
//     unsigned int DW:12;
//     unsigned int DH:11;
//     unsigned int p1:9;
// };
// 
// struct tGS_DISPFB2 {
//     unsigned int FBP:9;
//     unsigned int FBW:6;
//     unsigned int PSM:5;
//     unsigned int p0:12;
//     unsigned int DBX:11;
//     unsigned int DBY:11;
//     unsigned int p1:10;
// };
// 
// struct sceGsDrawEnv1 {
//     struct sceGsFrame frame1;
//     u_long frame1addr;
//     struct sceGsZbuf zbuf1;
//     long int zbuf1addr;
//     struct sceGsXyoffset xyoffset1;
//     long int xyoffset1addr;
//     struct sceGsScissor scissor1;
//     long int scissor1addr;
//     struct sceGsPrmodecont prmodecont;
//     long int prmodecontaddr;
//     struct sceGsColclamp colclamp;
//     long int colclampaddr;
//     struct sceGsDthe dthe;
//     long int dtheaddr;
//     struct sceGsTest test1;
//     long int test1addr;
// };
// 
// struct tGS_BGCOLOR {
//     unsigned int R:8;
//     unsigned int G:8;
//     unsigned int B:8;
//     unsigned int p0:8;
//     unsigned int p1;
// };
// 
// struct sceGsDispEnv {
//     struct tGS_PMODE pmode;
//     struct tGS_SMODE2 smode2;
//     struct tGS_DISPFB2 dispfb;
//     struct tGS_DISPLAY2 display;
//     struct tGS_BGCOLOR bgcolor;
// };
// 
// struct sceGsDBuff {
//     struct sceGsDispEnv disp[2];
//     struct sceGifTag giftag0;
//     struct sceGsDrawEnv1 draw0;
//     struct sceGsClear clear0;
//     struct sceGifTag giftag1;
//     struct sceGsDrawEnv1 draw1;
//     struct sceGsClear clear1;
// };
// 
// typedef struct sceGsDBuffDc sceGsDBuffDc, *PsceGsDBuffDc;
// 
// typedef struct sceGsDrawEnv2 sceGsDrawEnv2, *PsceGsDrawEnv2;
// 
// struct sceGsDrawEnv2 {
//     struct sceGsFrame frame2;
//     u_long frame2addr;
//     struct sceGsZbuf zbuf2;
//     long int zbuf2addr;
//     struct sceGsXyoffset xyoffset2;
//     long int xyoffset2addr;
//     struct sceGsScissor scissor2;
//     long int scissor2addr;
//     struct sceGsPrmodecont prmodecont;
//     long int prmodecontaddr;
//     struct sceGsColclamp colclamp;
//     long int colclampaddr;
//     struct sceGsDthe dthe;
//     long int dtheaddr;
//     struct sceGsTest test2;
//     long int test2addr;
// };
// 
// struct sceGsDBuffDc {
//     struct sceGsDispEnv disp[2];
//     struct sceGifTag giftag0;
//     struct sceGsDrawEnv1 draw01;
//     struct sceGsDrawEnv2 draw02;
//     struct sceGsClear clear0;
//     struct sceGifTag giftag1;
//     struct sceGsDrawEnv1 draw11;
//     struct sceGsDrawEnv2 draw12;
//     struct sceGsClear clear1;
// };
// 
// typedef struct sceGsFinish sceGsFinish, *PsceGsFinish;
// 
// struct sceGsFinish {
//     long unsigned int pad00;
// };
// 
// typedef struct sceGsFog sceGsFog, *PsceGsFog;
// 
// struct sceGsFog {
//     long unsigned int pad00:56;
//     long unsigned int F:8;
// };
// 
// typedef struct sceGsFogcol sceGsFogcol, *PsceGsFogcol;
// 
// struct sceGsFogcol {
//     long unsigned int FCR:8;
//     long unsigned int FCG:8;
//     long unsigned int FCB:8;
//     long unsigned int pad24:40;
// };
// 
// typedef struct sceGsGParam sceGsGParam, *PsceGsGParam;
// 
// struct sceGsGParam {
//     short int sceGsInterMode;
//     short int sceGsOutMode;
//     short int sceGsFFMode;
//     short int sceGsVersion;
//     undefined1 *sceGsVSCfunc;
//     int sceGsVSCid;
// };
// 
// typedef struct sceGsHwreg sceGsHwreg, *PsceGsHwreg;
// 
// struct sceGsHwreg {
//     long unsigned int WDATA;
// };
// 
// typedef struct sceGsLabel sceGsLabel, *PsceGsLabel;
// 
// struct sceGsLabel {
//     u_int ID;
//     u_int IDMSK;
// };
// 
// typedef struct sceGsLoadImage sceGsLoadImage, *PsceGsLoadImage;
// 
// typedef struct sceGsTrxpos sceGsTrxpos, *PsceGsTrxpos;
// 
// typedef struct sceGsTrxreg sceGsTrxreg, *PsceGsTrxreg;
// 
// typedef struct sceGsTrxdir sceGsTrxdir, *PsceGsTrxdir;
// 
// struct sceGsTrxreg {
//     long unsigned int RRW:12;
//     long unsigned int pad12:20;
//     long unsigned int RRH:12;
//     long unsigned int pad44:20;
// };
// 
// struct sceGsTrxdir {
//     long unsigned int XDR:2;
//     long unsigned int pad02:62;
// };
// 
// struct sceGsTrxpos {
//     long unsigned int SSAX:11;
//     long unsigned int pad11:5;
//     long unsigned int SSAY:11;
//     long unsigned int pad27:5;
//     long unsigned int DSAX:11;
//     long unsigned int pad43:5;
//     long unsigned int DSAY:11;
//     long unsigned int DIR:2;
//     long unsigned int pad61:3;
// };
// 
// struct sceGsLoadImage {
//     struct sceGifTag giftag0;
//     struct sceGsBitbltbuf bitbltbuf;
//     long int bitbltbufaddr;
//     struct sceGsTrxpos trxpos;
//     long int trxposaddr;
//     struct sceGsTrxreg trxreg;
//     long int trxregaddr;
//     struct sceGsTrxdir trxdir;
//     long int trxdiraddr;
//     struct sceGifTag giftag1;
// };
// 
// typedef struct sceGsMiptbp1 sceGsMiptbp1, *PsceGsMiptbp1;
// 
// struct sceGsMiptbp1 {
//     long unsigned int TBP1:14;
//     long unsigned int TBW1:6;
//     long unsigned int TBP2:14;
//     long unsigned int TBW2:6;
//     long unsigned int TBP3:14;
//     long unsigned int TBW3:6;
//     long unsigned int pad60:4;
// };
// 
// typedef struct sceGsMiptbp2 sceGsMiptbp2, *PsceGsMiptbp2;
// 
// struct sceGsMiptbp2 {
//     long unsigned int TBP4:14;
//     long unsigned int TBW4:6;
//     long unsigned int TBP5:14;
//     long unsigned int TBW5:6;
//     long unsigned int TBP6:14;
//     long unsigned int TBW6:6;
//     long unsigned int pad60:4;
// };
// 
// typedef struct sceGsPrmode sceGsPrmode, *PsceGsPrmode;
// 
// struct sceGsPrmode {
//     long unsigned int pad00:3;
//     long unsigned int IIP:1;
//     long unsigned int TME:1;
//     long unsigned int FGE:1;
//     long unsigned int ABE:1;
//     long unsigned int AA1:1;
//     long unsigned int FST:1;
//     long unsigned int CTXT:1;
//     long unsigned int FIX:1;
//     long unsigned int pad11:53;
// };
// 
// typedef struct sceGsScanmsk sceGsScanmsk, *PsceGsScanmsk;
// 
// struct sceGsScanmsk {
//     long unsigned int MSK:2;
//     long unsigned int pad02:62;
// };
// 
// typedef struct sceGsSignal sceGsSignal, *PsceGsSignal;
// 
// struct sceGsSignal {
//     u_int ID;
//     u_int IDMSK;
// };
// 
// typedef struct sceGsSt sceGsSt, *PsceGsSt;
// 
// struct sceGsSt {
//     float S;
//     float T;
// };
// 
// typedef struct sceGsStoreImage sceGsStoreImage, *PsceGsStoreImage;
// 
// struct sceGsStoreImage {
//     u_int vifcode[4];
//     struct sceGifTag giftag;
//     struct sceGsBitbltbuf bitbltbuf;
//     long int bitbltbufaddr;
//     struct sceGsTrxpos trxpos;
//     long int trxposaddr;
//     struct sceGsTrxreg trxreg;
//     long int trxregaddr;
//     struct sceGsFinish finish;
//     long int finishaddr;
//     struct sceGsTrxdir trxdir;
//     long int trxdiraddr;
// };
// 
// typedef struct sceGsTex0 sceGsTex0, *PsceGsTex0;
// 
// struct sceGsTex0 {
//     long unsigned int TBP0:14;
//     long unsigned int TBW:6;
//     long unsigned int PSM:6;
//     long unsigned int TW:4;
//     long unsigned int TH:4;
//     long unsigned int TCC:1;
//     long unsigned int TFX:2;
//     long unsigned int CBP:14;
//     long unsigned int CPSM:4;
//     long unsigned int CSM:1;
//     long unsigned int CSA:5;
//     long unsigned int CLD:3;
// };
// 
// typedef struct sceGsTex1 sceGsTex1, *PsceGsTex1;
// 
// struct sceGsTex1 {
//     long unsigned int LCM:1;
//     long unsigned int pad01:1;
//     long unsigned int MXL:3;
//     long unsigned int MMAG:1;
//     long unsigned int MMIN:3;
//     long unsigned int MTBA:1;
//     long unsigned int pad10:9;
//     long unsigned int L:2;
//     long unsigned int pad21:11;
//     long unsigned int K:12;
//     long unsigned int pad44:20;
// };
// 
// typedef struct sceGsTex2 sceGsTex2, *PsceGsTex2;
// 
// struct sceGsTex2 {
//     long unsigned int pad00:20;
//     long unsigned int PSM:6;
//     long unsigned int pad26:11;
//     long unsigned int CBP:14;
//     long unsigned int CPSM:4;
//     long unsigned int CSM:1;
//     long unsigned int CSA:5;
//     long unsigned int CLD:3;
// };
// 
// typedef struct sceGsTexclut sceGsTexclut, *PsceGsTexclut;
// 
// struct sceGsTexclut {
//     long unsigned int CBW:6;
//     long unsigned int COU:6;
//     long unsigned int COV:10;
//     long unsigned int pad22:42;
// };
// 
// typedef struct sceGsTexEnv sceGsTexEnv, *PsceGsTexEnv;
// 
// typedef struct sceGsTexflush sceGsTexflush, *PsceGsTexflush;
// 
// struct sceGsTexflush {
//     long unsigned int pad00;
// };
// 
// struct sceGsTexEnv {
//     struct sceGsTexflush texflush;
//     long int texflushaddr;
//     struct sceGsTex1 tex11;
//     long int tex11addr;
//     struct sceGsTex0 tex01;
//     long int tex01addr;
//     struct sceGsClamp clamp1;
//     long int clamp1addr;
// };
// 
// typedef struct sceGsTexEnv2 sceGsTexEnv2, *PsceGsTexEnv2;
// 
// struct sceGsTexEnv2 {
//     struct sceGsTexflush texflush;
//     long int texflushaddr;
//     struct sceGsTex1 tex12;
//     long int tex12addr;
//     struct sceGsTex0 tex02;
//     long int tex02addr;
//     struct sceGsClamp clamp2;
//     long int clamp2addr;
// };
// 
// typedef struct sceGsUv sceGsUv, *PsceGsUv;
// 
// struct sceGsUv {
//     long unsigned int U:14;
//     long unsigned int pad14:2;
//     long unsigned int V:14;
//     long unsigned int pad30:34;
// };
// 
// typedef struct sceGsXyzf sceGsXyzf, *PsceGsXyzf;
// 
// struct sceGsXyzf {
//     long unsigned int X:16;
//     long unsigned int Y:16;
//     long unsigned int Z:24;
//     long unsigned int F:8;
// };
// 
// typedef struct sceIpuDmaEnv sceIpuDmaEnv, *PsceIpuDmaEnv;
// 
// struct sceIpuDmaEnv {
//     u_int d4madr;
//     u_int d4tadr;
//     u_int d4qwc;
//     u_int d4chcr;
//     u_int d3madr;
//     u_int d3qwc;
//     u_int d3chcr;
//     u_int ipubp;
//     u_int ipuctrl;
// };
// 
// typedef struct sceIpuINDX4 sceIpuINDX4, *PsceIpuINDX4;
// 
// struct sceIpuINDX4 {
//     unsigned int pix[32];
// };
// 
// typedef struct sceIpuRAW16 sceIpuRAW16, *PsceIpuRAW16;
// 
// struct sceIpuRAW16 {
//     short int y[256];
//     short int cb[64];
//     short int cr[64];
// };
// 
// typedef struct sceIpuRAW8 sceIpuRAW8, *PsceIpuRAW8;
// 
// struct sceIpuRAW8 {
//     unsigned char y[256];
//     unsigned char cb[64];
//     unsigned char cr[64];
// };
// 
// typedef struct sceIpuRGB16 sceIpuRGB16, *PsceIpuRGB16;
// 
// struct sceIpuRGB16 {
//     short unsigned int pix[256];
// };
// 
// typedef struct sceIpuRGB32 sceIpuRGB32, *PsceIpuRGB32;
// 
// struct sceIpuRGB32 {
//     unsigned int pix[256];
// };
// 
// typedef struct SCEIVAGHeader SCEIVAGHeader, *PSCEIVAGHeader;
// 
// struct SCEIVAGHeader {
//     UInt32 ID;
//     UInt32 Version;
//     UInt32 Reserved1;
//     UInt32 DataSize;
//     UInt32 SampleRate;
//     UInt32 Reserved2;
//     UInt32 Reserved3;
//     UInt32 Reserved4;
//     char Name[16];
// };
// 
// typedef struct SceMc2DateParam SceMc2DateParam, *PSceMc2DateParam;
// 
// struct SceMc2DateParam {
//     unsigned char reserved;
//     unsigned char sec;
//     unsigned char min;
//     unsigned char hour;
//     unsigned char day;
//     unsigned char month;
//     short unsigned int year;
// };
// 
// typedef struct SceMc2DirParam SceMc2DirParam, *PSceMc2DirParam;
// 
// struct SceMc2DirParam {
//     struct SceMc2DateParam creation;
//     struct SceMc2DateParam modification;
//     unsigned int size;
//     short unsigned int attribute;
//     short unsigned int resv1;
//     char name[32];
// };
// 
// typedef struct SceMc2InfoParam SceMc2InfoParam, *PSceMc2InfoParam;
// 
// struct SceMc2InfoParam {
//     int type;
//     int isFormat;
//     int freeClust;
// };
// 
// typedef struct SceMc2SocketParam SceMc2SocketParam, *PSceMc2SocketParam;
// 
// struct SceMc2SocketParam {
//     unsigned int option;
//     int port;
//     int slot;
//     int number;
//     char name[16];
// };
// 
// typedef struct sceMcIconSys sceMcIconSys, *PsceMcIconSys;
// 
// struct sceMcIconSys {
//     unsigned char Head[4];
//     short unsigned int Reserv1;
//     short unsigned int OffsLF;
//     unsigned int Reserv2;
//     unsigned int TransRate;
//     int BgColor[4][4];
//     float LightDir[3][4];
//     float LightColor[3][4];
//     _iconVu0FVECTOR Ambient;
//     unsigned char TitleName[68];
//     unsigned char FnameView[64];
//     unsigned char FnameCopy[64];
//     unsigned char FnameDel[64];
//     unsigned char Reserve3[512];
// };
// 
// typedef struct sceMpeg sceMpeg, *PsceMpeg;
// 
// struct sceMpeg {
//     int width;
//     int height;
//     int frameCount;
//     undefined field3_0xc;
//     undefined field4_0xd;
//     undefined field5_0xe;
//     undefined field6_0xf;
//     long int pts;
//     long int dts;
//     u_long flags;
//     long int pts2nd;
//     long int dts2nd;
//     u_long flags2nd;
//     void *sys;
//     undefined field14_0x44;
//     undefined field15_0x45;
//     undefined field16_0x46;
//     undefined field17_0x47;
// };
// 
// typedef undefined1 *sceMpegCallback;
// 
// typedef union sceMpegCbData sceMpegCbData, *PsceMpegCbData;
// 
// typedef enum sceMpegCbType {
//     sceMpegCbError=0,
//     sceMpegCbNodata=1,
//     sceMpegCbStopDMA=2,
//     sceMpegCbRestartDMA=3,
//     sceMpegCbBackground=4,
//     sceMpegCbTimeStamp=5,
//     sceMpegCbStr=6
// } sceMpegCbType;
// 
// typedef struct sceMpegCbDataError sceMpegCbDataError, *PsceMpegCbDataError;
// 
// typedef struct sceMpegCbDataTimeStamp sceMpegCbDataTimeStamp, *PsceMpegCbDataTimeStamp;
// 
// typedef struct sceMpegCbDataStr sceMpegCbDataStr, *PsceMpegCbDataStr;
// 
// struct sceMpegCbDataTimeStamp {
//     enum sceMpegCbType type;
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     long int pts;
//     long int dts;
// };
// 
// struct sceMpegCbDataError {
//     enum sceMpegCbType type;
//     char *errMessage;
// };
// 
// struct sceMpegCbDataStr {
//     enum sceMpegCbType type;
//     u_char *header;
//     u_char *data;
//     u_int len;
//     long int pts;
//     long int dts;
// };
// 
// union sceMpegCbData {
//     enum sceMpegCbType type;
//     struct sceMpegCbDataError error;
//     struct sceMpegCbDataTimeStamp ts;
//     struct sceMpegCbDataStr str;
// };
// 
// typedef enum sceMpegStrType {
//     sceMpegStrM2V=0,
//     sceMpegStrIPU=1,
//     sceMpegStrPCM=2,
//     sceMpegStrADPCM=3,
//     sceMpegStrDATA=4
// } sceMpegStrType;
// 
// typedef struct scePad2SocketParam scePad2SocketParam, *PscePad2SocketParam;
// 
// struct scePad2SocketParam {
//     unsigned int option;
//     int port;
//     int slot;
//     int number;
//     unsigned char name[16];
// };
// 
// typedef undefined1 *scePadDmaCB;
// 
// typedef struct sceScfT10kConfig sceScfT10kConfig, *PsceScfT10kConfig;
// 
// struct sceScfT10kConfig {
//     short int TimeZone;
//     u_char Aspect;
//     u_char DateNotation;
//     u_char Language;
//     u_char Spdif;
//     u_char SummerTime;
//     u_char TimeNotation;
// };
// 
// typedef struct sceSdBatch sceSdBatch, *PsceSdBatch;
// 
// struct sceSdBatch {
//     short unsigned int func;
//     short unsigned int entry;
//     unsigned int value;
// };
// 
// typedef struct sceSdEffectAttr sceSdEffectAttr, *PsceSdEffectAttr;
// 
// struct sceSdEffectAttr {
//     int core;
//     int mode;
//     short int depth_L;
//     short int depth_R;
//     int delay;
//     int feedback;
// };
// 
// typedef undefined1 *sceSdrUserCommandFunction;
// 
// typedef undefined1 *sceSdSpu2IntrHandler;
// 
// typedef undefined1 *sceSdTransIntrHandler;
// 
// typedef struct sceSifCmdCSData sceSifCmdCSData, *PsceSifCmdCSData;
// 
// typedef struct sceSifCmdHdr sceSifCmdHdr, *PsceSifCmdHdr;
// 
// struct sceSifCmdHdr {
//     unsigned int psize:8;
//     unsigned int dsize:24;
//     unsigned int daddr;
//     unsigned int fcode;
//     unsigned int opt;
// };
// 
// struct sceSifCmdCSData {
//     struct sceSifCmdHdr chdr;
//     void *newaddr;
// };
// 
// typedef struct sceSifCmdData sceSifCmdData, *PsceSifCmdData;
// 
// typedef undefined1 *sceSifCmdHandler;
// 
// struct sceSifCmdData {
//     sceSifCmdHandler func;
//     void *data;
//     void *gp;
// };
// 
// typedef struct sceSifCmdResetData sceSifCmdResetData, *PsceSifCmdResetData;
// 
// struct sceSifCmdResetData {
//     struct sceSifCmdHdr chdr;
//     int size;
//     int flag;
//     char arg[80];
// };
// 
// typedef struct sceSifCmdSRData sceSifCmdSRData, *PsceSifCmdSRData;
// 
// struct sceSifCmdSRData {
//     struct sceSifCmdHdr chdr;
//     int rno;
//     unsigned int value;
// };
// 
// typedef struct sceSifDmaData sceSifDmaData, *PsceSifDmaData;
// 
// struct sceSifDmaData {
//     unsigned int data;
//     unsigned int addr;
//     unsigned int size;
//     unsigned int mode;
// };
// 
// typedef struct _sif_queue_data sceSifQueueData;
// 
// typedef struct sceSifRebootNotifyData sceSifRebootNotifyData, *PsceSifRebootNotifyData;
// 
// typedef undefined1 *sceSifRebootNotifyHandler;
// 
// struct sceSifRebootNotifyData {
//     sceSifRebootNotifyHandler func;
//     void *data;
//     void *gp;
//     void *reserve;
// };
// 
// typedef struct _sif_receive_data sceSifReceiveData;
// 
// typedef struct _sif_rpc_data sceSifRpcData;
// 
// typedef struct _sif_serve_data sceSifServeData;
// 
// typedef enum SceStdioFunc__1_15120 {
//     SCE_STDIO_FUNC_ANYTHING=0
// } SceStdioFunc__1_15120;
// 
// typedef enum SceStdioFunc__2_578 {
//     SCE_STDIO_FUNC_ANYTHING=0
// } SceStdioFunc__2_578;
// 
// typedef struct Script__1_14095 Script__1_14095, *PScript__1_14095;
// 
// struct Script__1_14095 {
//     struct State__1_11818 *fParm;
// };
// 
// typedef struct Script__1_14123 Script__1_14123, *PScript__1_14123;
// 
// struct Script__1_14123 {
//     struct fxCameraFilterBlender *fParm;
// };
// 
// typedef struct Script__1_14137 Script__1_14137, *PScript__1_14137;
// 
// struct Script__1_14137 {
//     struct fxFogBlender *fParm;
// };
// 
// typedef struct Script__1_17726 Script__1_17726, *PScript__1_17726;
// 
// typedef struct stdTList<camera::State> stdTList<camera::State>, *PstdTList<camera::State>;
// 
// typedef struct Shaker Shaker, *PShaker;
// 
// struct stdTList<camera::State> {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// struct Shaker {
//     struct tCameraShake *fTweak;
//     float fTime;
// };
// 
// struct Script__1_17726 {
//     bool fJustReset;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     INT16 fCameraMode;
//     INT16 fLookMode;
//     struct Client__1_9324 *fCamera;
//     struct renView *fViewPort;
//     struct TweenValues fAccumulator;
//     struct VUMat4 fCameraMatrix;
//     struct Pool__1_336 *fStatePool;
//     struct Pool__1_336 *fPrimPool;
//     struct stdTList<camera::State> fStates;
//     struct Prim__1_17671 *fRunningPrims;
//     struct Prim__1_17671 *fActivePrims;
//     struct Prim__1_17671 *fLastPrim;
//     struct TweenValues *fOverride;
//     float fOverrideWeight;
//     undefined field18_0xb4;
//     undefined field19_0xb5;
//     undefined field20_0xb6;
//     undefined field21_0xb7;
//     undefined field22_0xb8;
//     undefined field23_0xb9;
//     undefined field24_0xba;
//     undefined field25_0xbb;
//     undefined field26_0xbc;
//     undefined field27_0xbd;
//     undefined field28_0xbe;
//     undefined field29_0xbf;
//     struct VUQuat fTilt;
//     struct VUVec4 fZoneTarget;
//     struct VUVec4 fPreviousZoneTarget;
//     bool fTargetWarped;
//     undefined field34_0xf1;
//     undefined field35_0xf2;
//     undefined field36_0xf3;
//     undefined field37_0xf4;
//     undefined field38_0xf5;
//     undefined field39_0xf6;
//     undefined field40_0xf7;
//     undefined field41_0xf8;
//     undefined field42_0xf9;
//     undefined field43_0xfa;
//     undefined field44_0xfb;
//     undefined field45_0xfc;
//     undefined field46_0xfd;
//     undefined field47_0xfe;
//     undefined field48_0xff;
//     struct VUMat4 fWarpTransform;
//     float fUnderWaterTween;
//     struct stdDynaString fParmName;
//     struct stdDynaString fPrevParmName;
//     struct State__1_17650 *fPrimaryState;
//     struct Listener *fListener;
//     BOOL m_bBackupCameraMatrix;
//     struct VUMat4 m_mBackupCameraMatrix;
//     struct VUMat4 fShakeMatrix;
//     bool fShake;
//     undefined field59_0x201;
//     undefined field60_0x202;
//     undefined field61_0x203;
//     struct Shaker fShaker;
//     undefined field63_0x20c;
//     undefined field64_0x20d;
//     undefined field65_0x20e;
//     undefined field66_0x20f;
// };
// 
// typedef struct SeekAIData SeekAIData, *PSeekAIData;
// 
// struct SeekAIData {
//     struct VUVec4 vPos;
//     struct goCreature *pTarget;
//     INT32 ID;
//     FLOAT fMinDist;
//     undefined field4_0x1c;
//     undefined field5_0x1d;
//     undefined field6_0x1e;
//     undefined field7_0x1f;
// };
// 
// typedef struct SemaParam SemaParam, *PSemaParam;
// 
// struct SemaParam {
//     int currentCount;
//     int maxCount;
//     int initCount;
//     int numWaitThreads;
//     u_int attr;
//     u_int option;
// };
// 
// typedef struct Server__1_14331 Server__1_14331, *PServer__1_14331;
// 
// typedef struct Server__1_14331__vtable Server__1_14331__vtable, *PServer__1_14331__vtable;
// 
// struct Server__1_14331__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Server;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct Server__1_14331 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct Server__1_14331__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct Server__1_896 Server__1_896, *PServer__1_896;
// 
// typedef struct Server__1_896__vtable Server__1_896__vtable, *PServer__1_896__vtable;
// 
// struct Server__1_896 {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct Server__1_896__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// struct Server__1_896__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Server;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// typedef enum Server_Filter {
//     RENDER_TRISERVER=1,
//     RENDER_PARTICLESERVER=2,
//     RENDER_SCRIPTSERVER=4,
//     RENDER_FLASHSERVER=8,
//     RENDER_ALLSERVERS=15
// } Server_Filter;
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > ServerBase;
// 
// typedef svrList ServerContainer;
// 
// typedef struct SetupFunc SetupFunc, *PSetupFunc;
// 
// typedef union SetupFunc____pfn_or_delta2 SetupFunc____pfn_or_delta2, *PSetupFunc____pfn_or_delta2;
// 
// union SetupFunc____pfn_or_delta2 {
//     undefined1 *__pfn;
//     short int __delta2;
// };
// 
// struct SetupFunc {
//     short int __delta;
//     short int __index;
//     union SetupFunc____pfn_or_delta2 __pfn_or_delta2;
// };
// 
// typedef struct SFindParam SFindParam, *PSFindParam;
// 
// typedef struct SIn SIn, *PSIn;
// 
// typedef struct SOut SOut, *PSOut;
// 
// struct SOut {
//     struct VUVec4 vEndPos;
//     struct VUVec4 vCOffset;
//     struct VUVec4 vCForward;
//     struct goGameObject *pFound;
//     FLOAT fDist;
//     undefined field5_0x38;
//     undefined field6_0x39;
//     undefined field7_0x3a;
//     undefined field8_0x3b;
//     undefined field9_0x3c;
//     undefined field10_0x3d;
//     undefined field11_0x3e;
//     undefined field12_0x3f;
// };
// 
// struct SIn {
//     struct VUVec4 vOrigin;
//     struct VUVec4 vForward;
//     FLOAT fRange;
//     INT32 iHandleIndex;
//     UINT32 dwObjType;
//     UINT32 dwParamFlags1;
//     UINT32 dwParamNotFlags1;
//     UINT32 dwParamFlags2;
//     UINT32 dwParamNotFlags2;
//     undefined field9_0x3c;
//     undefined field10_0x3d;
//     undefined field11_0x3e;
//     undefined field12_0x3f;
// };
// 
// struct SFindParam {
//     struct SIn in;
//     struct SOut out;
// };
// 
// typedef struct SFX SFX, *PSFX;
// 
// typedef struct SFXGrain SFXGrain, *PSFXGrain;
// 
// typedef struct SFXGrain *SFXGrainPtr;
// 
// struct SFXGrain {
//     UInt32 Type;
//     SInt32 Delay;
//     union GrainParams Params;
// };
// 
// struct SFX {
//     SInt8 Vol;
//     SInt8 VolGroup;
//     SInt16 Pan;
//     SInt8 NumGrains;
//     SInt8 InstanceLimit;
//     UInt16 Flags;
//     SFXGrainPtr FirstGrain;
// };
// 
// typedef struct SFXBlock SFXBlock, *PSFXBlock;
// 
// typedef struct SFX *SFXPtr;
// 
// struct SFXBlock {
//     UInt32 DataID;
//     UInt32 Version;
//     UInt32 Flags;
//     UInt32 BlockID;
//     SInt8 BlockNum;
//     SInt8 pad1;
//     SInt16 pad2;
//     SInt16 pad3;
//     SInt16 NumSounds;
//     SInt16 NumGrains;
//     SInt16 NumVAGs;
//     SFXPtr FirstSound;
//     SFXGrainPtr FirstGrain;
//     void *VagsInSR;
//     UInt32 VagDataSize;
//     UInt32 SRAMAllocSize;
//     struct SFXBlock *NextBlock;
//     struct SFXBlockNames *BlockNames;
//     struct SFXUserData *SFXUD;
// };
// 
// typedef struct SFXBlockNames *SFXBlockNamesPtr;
// 
// typedef struct SFXBlock *SFXBlockPtr;
// 
// typedef struct SFXName SFXName, *PSFXName;
// 
// struct SFXName {
//     unsigned int Name[4];
//     SInt16 Index;
//     SInt16 reserved;
// };
// 
// typedef struct SFXName *SFXNamePtr;
// 
// typedef struct SFXUserData *SFXUserDatPtr;
// 
// typedef struct shadowHdr shadowHdr, *PshadowHdr;
// 
// struct shadowHdr {
//     struct VUVec4 m_BoundingSphere;
//     UINT8 m_nModelID;
//     UINT8 m_nJointID;
//     UINT16 m_nNumVertices;
//     UINT16 m_nNumPolyNormals;
//     UINT16 m_nNumEdges;
//     UINT16 m_nNumVertexRefs;
//     UINT16 m_nNumEdgeRefs;
//     UINT16 m_nNumPolys;
//     UINT16 m_nOffsetVertices;
//     UINT16 m_nOffsetPolyNormals;
//     UINT16 m_nOffsetEdges;
//     UINT16 m_nOffsetVertexRefs;
//     UINT16 m_nOffsetEdgeRefs;
//     UINT16 m_nOffsetPolys;
//     undefined field15_0x2a;
//     undefined field16_0x2b;
//     undefined field17_0x2c;
//     undefined field18_0x2d;
//     undefined field19_0x2e;
//     undefined field20_0x2f;
// };
// 
// typedef struct _ShellDblBuff ShellDblBuff;
// 
// typedef struct ShellMpegADSBody ShellMpegADSBody, *PShellMpegADSBody;
// 
// struct ShellMpegADSBody {
//     char id[4];
//     int size;
// };
// 
// typedef struct ShellMpegADSHeader ShellMpegADSHeader, *PShellMpegADSHeader;
// 
// struct ShellMpegADSHeader {
//     char id[4];
//     int size;
//     int type;
//     int rate;
//     int ch;
//     int interSize;
//     int loopStart;
//     int loopEnd;
// };
// 
// typedef struct ShellMpegStream ShellMpegStream, *PShellMpegStream;
// 
// typedef union ShellMpegStream__unnamed_-1 ShellMpegStream__unnamed_-1, *PShellMpegStream__unnamed_-1;
// 
// typedef struct ShellMpegStream__unnamed__path1 ShellMpegStream__unnamed__path1, *PShellMpegStream__unnamed__path1;
// 
// struct ShellMpegStream__unnamed__path1 {
//     u_int *prog[2];
//     u_int *inter[2];
//     u_int *top[2];
//     u_int *bot[2];
// };
// 
// union ShellMpegStream__unnamed_-1 {
//     ShellDmaTag *path3;
//     struct ShellMpegStream__unnamed__path1 path1;
// };
// 
// struct ShellMpegStream {
//     struct sceMpeg mp;
//     u_char *pssBuff;
//     int pssBuffFullness;
//     int ipuNumFrames;
//     int framesDecoded;
//     u_int width;
//     u_int height;
//     undefined1 *fileLoadFn;
//     undefined1 *fileInitFn;
//     int fileFnParam;
//     u_int dbw;
//     struct sceIpuDmaEnv dmaEnv;
//     struct sceIpuRGB32 *rgb[2];
//     struct sceIpuRAW8 *raw8[2];
//     u_char *workArea;
//     union ShellMpegStream__unnamed_-1 tags[2];
//     u_char *ipuBuff;
//     u_int ipuBuffSize;
//     u_char *ipuBuffPast;
//     u_char *ipuBuffPresent;
//     u_char *ipuBuffFuture;
//     u_char *audioBuff;
//     u_int audioBuffSize;
//     int audioBuffPos;
//     int audioBuffFullness;
//     struct ShellMpegADSHeader sshd;
//     struct ShellMpegADSBody ssbd;
//     int audioFull;
//     int audioHeaderCount;
//     enum EShellMpegMultiplexType mplex;
//     enum EShellMpegVideoType video;
//     enum EShellMpegAudioType audio;
//     int audioChannel;
//     int output;
//     int doubleBuffer;
//     int abort;
// };
// 
// typedef struct ShotData ShotData, *PShotData;
// 
// struct ShotData {
//     struct VUVec4 m_EmitDir;
//     struct VUVec4 m_EmitPos;
//     struct goHandle m_hGO;
//     FLOAT m_fSec;
//     INT16 m_iJoint;
//     UINT8 m_iUpdate;
//     UINT8 m_iEmitDirWorldSpace;
//     undefined field7_0x2c;
//     undefined field8_0x2d;
//     undefined field9_0x2e;
//     undefined field10_0x2f;
// };
// 
// typedef struct ShrinkablePoolChunk ShrinkablePoolChunk, *PShrinkablePoolChunk;
// 
// struct ShrinkablePoolChunk {
//     UINT32 numUsedBlocks;
//     UINT32 *pFreeList;
//     UINT32 *pChunkList;
// };
// 
// typedef struct SingleContact SingleContact, *PSingleContact;
// 
// struct SingleContact {
//     FLOAT fT; /* Inherited from Contact */
//     UINT16 vIndex;
//     UINT16 bIndex;
//     UINT16 firstBIndex;
//     undefined field4_0xa;
//     undefined field5_0xb;
// };
// 
// typedef long int SInt64;
// 
// typedef enum SLI_Type {
//     SLI_FLOAT_TYPE=0,
//     SLI_INT_TYPE=1,
//     SLI_BOOL_TYPE=2,
//     SLI_STRING_TYPE=3,
//     SLI_UNKNOWN_TYPE=4
// } SLI_Type;
// 
// typedef struct sliModule sliModule, *PsliModule;
// 
// typedef struct sliModule__vtable sliModule__vtable, *PsliModule__vtable;
// 
// struct sliModule {
//     struct sliModule__vtable *__vtable;
// };
// 
// struct sliModule__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type Name;
//     struct __vtbl_ptr_type GetVariable;
//     struct __vtbl_ptr_type SetVariable;
//     struct __vtbl_ptr_type CallFunction;
// };
// 
// typedef struct sliStack sliStack, *PsliStack;
// 
// struct sliStack {
//     unsigned int vStk[64];
//     unsigned char tStk[64];
//     UINT32 top;
// };
// 
// typedef struct SModifier SModifier, *PSModifier;
// 
// typedef union SModifier__unnamed_40 SModifier__unnamed_40, *PSModifier__unnamed_40;
// 
// union SModifier__unnamed_40 {
//     UINT16 wTexture;
// };
// 
// struct SModifier {
//     struct VUVec4 vCenter;
//     struct SModifier *pNext;
//     FLOAT fRadius;
//     FLOAT fLifetime;
//     FLOAT fEffectLength;
//     UINT32 dwObjectTypeFilter;
//     UINT16 wEffectFlags;
//     UINT16 wEvaluateFrameID;
//     union SModifier__unnamed_40 field8_0x28;
//     undefined field9_0x2a;
//     undefined field10_0x2b;
//     undefined field11_0x2c;
//     undefined field12_0x2d;
//     undefined field13_0x2e;
//     undefined field14_0x2f;
// };
// 
// typedef union snd_tag snd_tag, *Psnd_tag;
// 
// union snd_tag {
//     uint16 name_long128;
//     char name[16];
//     short int index;
// };
// 
// typedef struct SndCommandBuffer SndCommandBuffer, *PSndCommandBuffer;
// 
// struct SndCommandBuffer {
//     int num_commands;
//     char buffer[4092];
// };
// 
// typedef struct SndCommandBuffer *SndCommandBufferPtr;
// 
// typedef struct SndCommandEntry SndCommandEntry, *PSndCommandEntry;
// 
// struct SndCommandEntry {
//     short int command;
//     short int size;
// };
// 
// typedef struct SndCommandEntry *SndCommandEntryPtr;
// 
// typedef struct SndCommandReturnDef SndCommandReturnDef, *PSndCommandReturnDef;
// 
// typedef undefined1 *SndCompleteProc;
// 
// struct SndCommandReturnDef {
//     SndCompleteProc done;
//     undefined field1_0x4;
//     undefined field2_0x5;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     u_long u_data;
// };
// 
// typedef struct SndCommandReturnDef *SndCommandReturnDefPtr;
// 
// typedef struct SndMessageData SndMessageData, *PSndMessageData;
// 
// struct SndMessageData {
//     int data[7];
//     int command;
// };
// 
// typedef struct SndMessageData *SndMessageDataPtr;
// 
// typedef struct SNDModel SNDModel, *PSNDModel;
// 
// typedef struct SNDModelController SNDModelController, *PSNDModelController;
// 
// typedef struct SNDModelEvent SNDModelEvent, *PSNDModelEvent;
// 
// typedef struct SNDModelNodeHeader_t SNDModelNodeHeader_t, *PSNDModelNodeHeader_t;
// 
// typedef struct SNDModelNodeHeader_t SNDModelNodeHeader;
// 
// typedef struct SNDModelSoundElement SNDModelSoundElement, *PSNDModelSoundElement;
// 
// typedef struct SNDModelParamOut SNDModelParamOut, *PSNDModelParamOut;
// 
// struct SNDModelNodeHeader_t {
//     UInt8 Type;
//     UInt8 pad;
//     UInt16 Flags;
//     UInt32 OutputRef;
//     UInt32 InputRef;
//     SInt32 WorkVal;
//     struct SNDModelNodeHeader_t *Next;
// };
// 
// struct SNDModelEvent {
//     SNDModelNodeHeader Header;
//     UInt32 NameHash;
//     UInt32 Duration;
//     SInt32 InstanceRecordOffset;
// };
// 
// struct SNDModelParamOut {
//     SNDModelNodeHeader Header;
//     UInt16 Target;
//     UInt16 TargetExtra;
// };
// 
// struct SNDModelController {
//     SNDModelNodeHeader Header;
//     UInt32 NameHash;
//     SInt32 MyOut;
//     SInt32 InitialValue;
//     SInt32 InstanceRecordOffset;
// };
// 
// struct SNDModelSoundElement {
//     SNDModelNodeHeader Header;
//     struct SFXName SoundID;
//     UInt32 Flags;
//     struct SNDModelParamOut *Params;
// };
// 
// struct SNDModel {
//     UInt32 Flags;
//     struct SNDModelController *Controller;
//     struct SNDModelEvent *Event;
//     SNDModelNodeHeader *SNDModelTickNodes;
//     SNDModelNodeHeader *MiddleNodes;
//     struct SNDModelSoundElement *Element;
//     SInt32 InstanceRecordSize;
//     SInt32 *InstanceTableHead;
// };
// 
// typedef struct SNDModelCurve SNDModelCurve, *PSNDModelCurve;
// 
// typedef struct SNDModelCurvePoint SNDModelCurvePoint, *PSNDModelCurvePoint;
// 
// struct SNDModelCurve {
//     SNDModelNodeHeader Header;
//     UInt32 Flags;
//     struct SNDModelCurvePoint *Point;
// };
// 
// struct SNDModelCurvePoint {
//     SInt32 Out;
//     SInt32 In;
// };
// 
// typedef struct SNDModelMixer SNDModelMixer, *PSNDModelMixer;
// 
// struct SNDModelMixer {
//     SNDModelNodeHeader Header;
//     UInt8 MixType;
//     undefined field2_0x15;
//     undefined field3_0x16;
//     undefined field4_0x17;
//     SNDModelNodeHeader **Inputs;
// };
// 
// typedef struct SndPlayParams SndPlayParams, *PSndPlayParams;
// 
// struct SndPlayParams {
//     union bank_tag bank_spec;
//     int vol;
//     int pan;
//     union snd_tag snd_spec;
//     short int pitch_mod;
//     short int pitch_bend;
//     char reg[4];
//     u_int mask;
//     u_int reserved;
// };
// 
// typedef struct SndPlayParams *SndPlayParamsPtr;
// 
// typedef struct SndSystemStatus SndSystemStatus, *PSndSystemStatus;
// 
// struct SndSystemStatus {
//     int cd_busy;
//     int pad_0;
//     int pad_1;
//     int pad_2;
//     int cd_error;
//     int pad_3;
//     int pad_4;
//     int pad_5;
//     char pad_big[32];
// };
// 
// typedef struct SonicScreamData SonicScreamData, *PSonicScreamData;
// 
// typedef struct tActionSonicScream tActionSonicScream, *PtActionSonicScream;
// 
// struct tActionSonicScream {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_Distance;
//     FLOAT m_ConeBaseRadius;
//     FLOAT m_ConeTopRadius;
//     FLOAT m_MouthForce;
//     FLOAT m_DistanceForce;
//     UINT8 m_SonicScreamFlags;
//     undefined field15_0x29;
//     undefined field16_0x2a;
//     undefined field17_0x2b;
//     UINT32 m_JointName;
// };
// 
// struct SonicScreamData {
//     struct VUVec4 vHeadPos;
//     struct VUVec4 vConeVertex;
//     struct VUVec4 vConeAxis;
//     struct tActionSonicScream *pTweaks;
//     FLOAT fCosAngle;
//     undefined field5_0x38;
//     undefined field6_0x39;
//     undefined field7_0x3a;
//     undefined field8_0x3b;
//     undefined field9_0x3c;
//     undefined field10_0x3d;
//     undefined field11_0x3e;
//     undefined field12_0x3f;
// };
// 
// typedef struct SoundBank_tag SoundBank;
// 
// typedef struct SoundHandler SoundHandler, *PSoundHandler;
// 
// struct SoundHandler {
//     GSoundHandler SH;
//     SInt8 Current_Note;
//     SInt8 Current_Fine;
//     SInt16 Current_PB;
//     UInt32 StartTick;
//     UInt32 Duration;
// };
// 
// typedef struct SPart SPart, *PSPart;
// 
// struct SPart {
//     struct VUVec4 m_vLastPos;
//     struct VUVec4 m_vLastVel;
//     struct VUMat4 *m_pJointMat;
//     UINT32 m_dwJointIdx;
//     FLOAT m_fGravity;
//     UINT32 m_dwFlags;
// };
// 
// typedef struct SPartArray SPartArray, *PSPartArray;
// 
// struct SPartArray {
//     struct SPart m_Parts[64];
//     UINT32 m_dwNbParts;
//     undefined field2_0xc04;
//     undefined field3_0xc05;
//     undefined field4_0xc06;
//     undefined field5_0xc07;
//     undefined field6_0xc08;
//     undefined field7_0xc09;
//     undefined field8_0xc0a;
//     undefined field9_0xc0b;
//     undefined field10_0xc0c;
//     undefined field11_0xc0d;
//     undefined field12_0xc0e;
//     undefined field13_0xc0f;
// };
// 
// typedef struct SplineInterpolator SplineInterpolator, *PSplineInterpolator;
// 
// struct SplineInterpolator {
//     undefined field0_0x0;
// };
// 
// typedef struct SpuVolume SpuVolume, *PSpuVolume;
// 
// struct SpuVolume {
//     SInt16 left;
//     SInt16 right;
// };
// 
// typedef long int ssize_t;
// 
// typedef struct StackElem__1_14019 StackElem__1_14019, *PStackElem__1_14019;
// 
// struct StackElem__1_14019 {
//     INT32 iSphereIndex;
//     UINT32 cullFlags;
// };
// 
// typedef struct StackElem__1_14027 StackElem__1_14027, *PStackElem__1_14027;
// 
// struct StackElem__1_14027 {
//     INT32 iSphereIndex;
// };
// 
// typedef struct StackPairType__1_16904 StackPairType__1_16904, *PStackPairType__1_16904;
// 
// struct StackPairType__1_16904 {
//     struct AStarNode *m_Value;
//     float m_Priority;
// };
// 
// typedef struct StackPairType__1_17251 StackPairType__1_17251, *PStackPairType__1_17251;
// 
// typedef struct tDiskAStarNode tDiskAStarNode, *PtDiskAStarNode;
// 
// struct StackPairType__1_17251 {
//     struct tDiskAStarNode *m_Value;
//     float m_Priority;
// };
// 
// struct tDiskAStarNode {
//     struct tDiskAStarNode *m_pParent;
//     FLOAT m_fGoal;
//     FLOAT m_fHeuristic;
//     INT32 m_iHole;
// };
// 
// typedef struct StartClass StartClass, *PStartClass;
// 
// struct StartClass {
//     undefined field0_0x0;
// };
// 
// typedef struct StatDesc StatDesc, *PStatDesc;
// 
// struct StatDesc {
//     char *name;
//     BOOL save;
// };
// 
// typedef enum State__1_9268 {
//     kStopped=0,
//     kStart=1,
//     kUpdate=2,
//     kStop=3,
//     kStopping=4
// } State__1_9268;
// 
// typedef struct StateData__1_15538 StateData__1_15538, *PStateData__1_15538;
// 
// struct StateData__1_15538 {
//     UINT32 playTime;
//     UINT8 worldIdle;
//     UINT8 difficulty;
//     UINT8 invulnerableMode;
//     UINT8 infiniteMagic;
//     UINT8 infiniteGodMode;
//     UINT8 allowMedusaBlades;
//     UINT8 allowLightning;
//     UINT8 allowWeaponOrbMult;
//     UINT8 allowHitCounterResetTimeMult;
//     UINT8 secondPlayThru;
//     UINT8 loadSavedState;
//     undefined field12_0xf;
// };
// 
// typedef struct StateData__1_15586 StateData__1_15586, *PStateData__1_15586;
// 
// typedef struct stdQue<GameState::Pending> stdQue<GameState::Pending>, *PstdQue<GameState::Pending>;
// 
// struct stdQue<GameState::Pending> {
//     struct Pending *m_pQue;
//     UINT8 m_uSize;
//     UINT8 m_uReadIdx;
//     UINT8 m_uWriteIdx;
//     UINT8 m_bMemAllocated;
// };
// 
// struct StateData__1_15586 {
//     struct Pending queData[4];
//     struct stdQue<GameState::Pending> pendingQueue;
//     unsigned int promptButton[8];
// };
// 
// typedef struct StateData__1_15616 StateData__1_15616, *PStateData__1_15616;
// 
// struct StateData__1_15616 {
//     int countTable[7][6];
// };
// 
// typedef struct StateData__1_15906 StateData__1_15906, *PStateData__1_15906;
// 
// struct StateData__1_15906 {
//     UINT8 musicVolume;
//     UINT8 soundVolume;
//     UINT8 vibration;
//     UINT8 wideScreen;
//     UINT8 showMsgTips;
//     UINT8 soundMode;
//     UINT8 powerUpFirstTime;
//     UINT8 costumeChoice;
//     UINT8 specialLevel;
//     UINT8 invertPegasus;
//     undefined field10_0xa;
//     undefined field11_0xb;
//     INT32 curMsgID;
//     FLOAT msgSeconds;
//     INT32 mSpecial;
//     INT32 curMenuID;
//     INT32 curPickUpInfo;
//     INT32 healthMeterValue;
//     INT32 magicMeterValue;
//     INT32 hermesMeterValue;
//     unsigned int msMoveSeen[4];
// };
// 
// typedef struct StateData__1_16079 StateData__1_16079, *PStateData__1_16079;
// 
// struct StateData__1_16079 {
//     float timerTime[4];
//     float timerTotal[4];
//     unsigned char timerState[4];
//     UINT8 mpegPlay;
//     UINT8 mpegAudioPause;
//     char mpegName[20];
//     UINT16 seenMPEGs;
//     unsigned int seenMPEGTable[100];
// };
// 
// typedef enum StateID {
//     PRE_CREATION=0,
//     CREATION=1,
//     ENTRY=2,
//     INSIDE=3,
//     EXIT=4,
//     EVENT=5,
//     DESTRUCTION=6,
//     SAVING=7,
//     RESTORE=8
// } StateID;
// 
// typedef enum StateType {
//     NO_MODE=0,
//     WANDER_MODE=2,
//     STAND_MODE=4,
//     REAQUIRE_MODE=8,
//     TARGET_MODE=16,
//     PATROL_MODE=32,
//     RETURN_TO_START_SITE=64,
//     SEARCH_MODE=128,
//     SEEK_TARGET_MODE=256,
//     DEAD_MODE=512,
//     FORCE_MOVE_MODE=1024,
//     ATTACK_PLAYER=2048,
//     GET_IN_DISK=4096,
//     POSITION_WITHIN_DISK=8192,
//     ALL_ATTACK_BITS=14360,
//     LOCKEDON_MODE=16384,
//     SEEK_SITE_MODE=32768,
//     SEEK_USE_NAV=65536
// } StateType;
// 
// typedef struct StaticStatusBlock StaticStatusBlock, *PStaticStatusBlock;
// 
// struct StaticStatusBlock {
//     char fDiscTitle[32];
//     char fPad[32];
// };
// 
// typedef struct Stats Stats, *PStats;
// 
// struct Stats {
//     undefined field0_0x0;
// };
// 
// typedef struct stdAllocator<stdCListNodeBase> stdAllocator<stdCListNodeBase>, *PstdAllocator<stdCListNodeBase>;
// 
// struct stdAllocator<stdCListNodeBase> {
//     struct Pool__1_336 *_pPool;
// };
// 
// typedef struct stdAllocatorNoPool<stdCListNodeBase> stdAllocatorNoPool<stdCListNodeBase>, *PstdAllocatorNoPool<stdCListNodeBase>;
// 
// struct stdAllocatorNoPool<stdCListNodeBase> {
//     struct Pool__1_336 *_pPool;
// };
// 
// typedef struct stdArray<AStarNode *> stdArray<AStarNode *>, *PstdArray<AStarNode *>;
// 
// typedef struct stdArray<AStarNode *>__vtable stdArray<AStarNode *>__vtable, *PstdArray<AStarNode *>__vtable;
// 
// struct stdArray<AStarNode *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct AStarNode **_pBuffer; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct stdArray<AStarNode *>__vtable *__vtable; /* Inherited from stdArrayPlacement<AStarNode *> */
// };
// 
// struct stdArray<AStarNode *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArray;
// };
// 
// typedef struct stdArray<const goScriptParm *> stdArray<const goScriptParm *>, *PstdArray<const goScriptParm *>;
// 
// typedef struct stdArray<const goScriptParm *>__vtable stdArray<const goScriptParm *>__vtable, *PstdArray<const goScriptParm *>__vtable;
// 
// struct stdArray<const goScriptParm *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArray;
// };
// 
// struct stdArray<const goScriptParm *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct goScriptParm **_pBuffer; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const goScriptParm *> */
//     struct stdArray<const goScriptParm *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const goScriptParm *> */
// };
// 
// typedef struct stdArray<const renMaterial *> stdArray<const renMaterial *>, *PstdArray<const renMaterial *>;
// 
// typedef struct stdArray<const renMaterial *>__vtable stdArray<const renMaterial *>__vtable, *PstdArray<const renMaterial *>__vtable;
// 
// struct stdArray<const renMaterial *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArray;
// };
// 
// struct stdArray<const renMaterial *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct renMaterial **_pBuffer; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const renMaterial *> */
//     struct stdArray<const renMaterial *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const renMaterial *> */
// };
// 
// typedef struct stdArray<const renModelGroup *> stdArray<const renModelGroup *>, *PstdArray<const renModelGroup *>;
// 
// typedef struct stdArray<const renModelGroup *>__vtable stdArray<const renModelGroup *>__vtable, *PstdArray<const renModelGroup *>__vtable;
// 
// struct stdArray<const renModelGroup *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct renModelGroup **_pBuffer; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<const renModelGroup *> */
//     struct stdArray<const renModelGroup *>__vtable *__vtable; /* Inherited from stdArrayPlacement<const renModelGroup *> */
// };
// 
// struct stdArray<const renModelGroup *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArray;
// };
// 
// typedef struct stdArray<short unsigned int> stdArray<short unsigned int>, *PstdArray<short unsigned int>;
// 
// typedef struct stdArray<short unsigned int>__vtable stdArray<short unsigned int>__vtable, *PstdArray<short unsigned int>__vtable;
// 
// struct stdArray<short unsigned int> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<short unsigned int> */
//     UINT16 *_pBuffer; /* Inherited from stdArrayPlacement<short unsigned int> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<short unsigned int> */
//     struct stdArray<short unsigned int>__vtable *__vtable; /* Inherited from stdArrayPlacement<short unsigned int> */
// };
// 
// struct stdArray<short unsigned int>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArray;
// };
// 
// typedef struct stdArrayPlacement<anmJoint> stdArrayPlacement<anmJoint>, *PstdArrayPlacement<anmJoint>;
// 
// typedef struct stdArrayPlacement<anmJoint>__vtable stdArrayPlacement<anmJoint>__vtable, *PstdArrayPlacement<anmJoint>__vtable;
// 
// struct stdArrayPlacement<anmJoint>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// struct stdArrayPlacement<anmJoint> {
//     UINT _uSize;
//     struct anmJoint *_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<anmJoint>__vtable *__vtable;
// };
// 
// typedef struct stdArrayPlacement<AStarNode *> stdArrayPlacement<AStarNode *>, *PstdArrayPlacement<AStarNode *>;
// 
// typedef struct stdArrayPlacement<AStarNode *>__vtable stdArrayPlacement<AStarNode *>__vtable, *PstdArrayPlacement<AStarNode *>__vtable;
// 
// struct stdArrayPlacement<AStarNode *> {
//     UINT _uSize;
//     struct AStarNode **_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<AStarNode *>__vtable *__vtable;
// };
// 
// struct stdArrayPlacement<AStarNode *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// typedef struct stdArrayPlacement<const goScriptParm *> stdArrayPlacement<const goScriptParm *>, *PstdArrayPlacement<const goScriptParm *>;
// 
// typedef struct stdArrayPlacement<const goScriptParm *>__vtable stdArrayPlacement<const goScriptParm *>__vtable, *PstdArrayPlacement<const goScriptParm *>__vtable;
// 
// struct stdArrayPlacement<const goScriptParm *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// struct stdArrayPlacement<const goScriptParm *> {
//     UINT _uSize;
//     struct goScriptParm **_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<const goScriptParm *>__vtable *__vtable;
// };
// 
// typedef struct stdArrayPlacement<const renMaterial *> stdArrayPlacement<const renMaterial *>, *PstdArrayPlacement<const renMaterial *>;
// 
// typedef struct stdArrayPlacement<const renMaterial *>__vtable stdArrayPlacement<const renMaterial *>__vtable, *PstdArrayPlacement<const renMaterial *>__vtable;
// 
// struct stdArrayPlacement<const renMaterial *> {
//     UINT _uSize;
//     struct renMaterial **_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<const renMaterial *>__vtable *__vtable;
// };
// 
// struct stdArrayPlacement<const renMaterial *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// typedef struct stdArrayPlacement<const renModelGroup *> stdArrayPlacement<const renModelGroup *>, *PstdArrayPlacement<const renModelGroup *>;
// 
// typedef struct stdArrayPlacement<const renModelGroup *>__vtable stdArrayPlacement<const renModelGroup *>__vtable, *PstdArrayPlacement<const renModelGroup *>__vtable;
// 
// struct stdArrayPlacement<const renModelGroup *> {
//     UINT _uSize;
//     struct renModelGroup **_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<const renModelGroup *>__vtable *__vtable;
// };
// 
// struct stdArrayPlacement<const renModelGroup *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// typedef struct stdArrayPlacement<short unsigned int> stdArrayPlacement<short unsigned int>, *PstdArrayPlacement<short unsigned int>;
// 
// typedef struct stdArrayPlacement<short unsigned int>__vtable stdArrayPlacement<short unsigned int>__vtable, *PstdArrayPlacement<short unsigned int>__vtable;
// 
// struct stdArrayPlacement<short unsigned int> {
//     UINT _uSize;
//     UINT16 *_pBuffer;
//     struct HeapZone *hz;
//     struct stdArrayPlacement<short unsigned int>__vtable *__vtable;
// };
// 
// struct stdArrayPlacement<short unsigned int>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayPlacement;
// };
// 
// typedef struct stdArrayW<AStarNode *> stdArrayW<AStarNode *>, *PstdArrayW<AStarNode *>;
// 
// typedef struct stdArrayW<AStarNode *>__vtable stdArrayW<AStarNode *>__vtable, *PstdArrayW<AStarNode *>__vtable;
// 
// struct stdArrayW<AStarNode *> {
//     UINT _uSize; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct AStarNode **_pBuffer; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct HeapZone *hz; /* Inherited from stdArrayPlacement<AStarNode *> */
//     struct stdArrayW<AStarNode *>__vtable *__vtable; /* Inherited from stdArrayPlacement<AStarNode *> */
//     UINT _uMaxSize;
//     UINT _uGrowBySize;
// };
// 
// struct stdArrayW<AStarNode *>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type stdArrayW;
//     struct __vtbl_ptr_type Resize;
// };
// 
// typedef struct stdArrayW<short unsigned int> stdArrayW<short unsigned int>, *PstdArrayW<short unsigned int>;
// 
// typedef struct stdArrayW<short unsigned int>__vtable stdArrayW<short unsigned int>__vtable, *PstdArrayW<short unsigned int>__vtable;
// 

// 
// typedef struct stdCList<goAIBase *,stdAllocator<stdCListNodeBase> > stdCList<goAIBase *,stdAllocator<stdCListNodeBase> >, *PstdCList<goAIBase *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<goAIBase *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<goGrapplePoint *,stdAllocator<stdCListNodeBase> > stdCList<goGrapplePoint *,stdAllocator<stdCListNodeBase> >, *PstdCList<goGrapplePoint *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<goGrapplePoint *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<goReactiveController *,stdAllocator<stdCListNodeBase> > stdCList<goReactiveController *,stdAllocator<stdCListNodeBase> >, *PstdCList<goReactiveController *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<goReactiveController *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<HermesBeam *,stdAllocator<stdCListNodeBase> > stdCList<HermesBeam *,stdAllocator<stdCListNodeBase> >, *PstdCList<HermesBeam *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<HermesBeam *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<renDMABlock *,stdAllocator<stdCListNodeBase> > stdCList<renDMABlock *,stdAllocator<stdCListNodeBase> >, *PstdCList<renDMABlock *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<renDMABlock *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<renView *,stdAllocator<stdCListNodeBase> > stdCList<renView *,stdAllocator<stdCListNodeBase> >, *PstdCList<renView *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<renView *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<SC_Shield *,stdAllocator<stdCListNodeBase> > stdCList<SC_Shield *,stdAllocator<stdCListNodeBase> >, *PstdCList<SC_Shield *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<SC_Shield *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<svrClient *,stdAllocator<stdCListNodeBase> > stdCList<svrClient *,stdAllocator<stdCListNodeBase> >, *PstdCList<svrClient *,stdAllocator<stdCListNodeBase> >;
// 
// struct stdCList<svrClient *,stdAllocator<stdCListNodeBase> > {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCList<svrClientParm *,stdCListMultiWadContextAllocator> stdCList<svrClientParm *,stdCListMultiWadContextAllocator>, *PstdCList<svrClientParm *,stdCListMultiWadContextAllocator>;
// 
// struct stdCList<svrClientParm *,stdCListMultiWadContextAllocator> {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef struct stdCListMultiWadContextAllocator stdCListMultiWadContextAllocator, *PstdCListMultiWadContextAllocator;
// 
// struct stdCListMultiWadContextAllocator {
//     undefined field0_0x0;
// };
// 
// typedef struct stdCListNodeAllocator<stdAllocator<stdCListNodeBase> > stdCListNodeAllocator<stdAllocator<stdCListNodeBase> >, *PstdCListNodeAllocator<stdAllocator<stdCListNodeBase> >;
// 
// struct stdCListNodeAllocator<stdAllocator<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct stdCListNodeAllocator<stdAllocatorNoPool<stdCListNodeBase> > stdCListNodeAllocator<stdAllocatorNoPool<stdCListNodeBase> >, *PstdCListNodeAllocator<stdAllocatorNoPool<stdCListNodeBase> >;
// 
// struct stdCListNodeAllocator<stdAllocatorNoPool<stdCListNodeBase> > {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct stdCListNodeAllocator<stdCListMultiWadContextAllocator> stdCListNodeAllocator<stdCListMultiWadContextAllocator>, *PstdCListNodeAllocator<stdCListMultiWadContextAllocator>;
// 
// struct stdCListNodeAllocator<stdCListMultiWadContextAllocator> {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value; /* Inherited from stdCListNodeBase */
// };
// 
// typedef struct stdCListNodeBase stdCListNodeBase, *PstdCListNodeBase;
// 
// struct stdCListNodeBase {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     UINT32 _value;
// };
// 
// typedef struct stdDebugString stdDebugString, *PstdDebugString;
// 
// struct stdDebugString {
//     undefined field0_0x0;
// };
// 
// typedef struct stdDLList stdDLList, *PstdDLList;
// 
// struct stdDLList {
//     struct stdListNode *fHead;
//     struct stdListNode *fTail;
// };
// 
// typedef struct stdDynaStringNode stdDynaStringNode, *PstdDynaStringNode;
// 
// struct stdDynaStringNode {
//     UINT32 _uChecksum;
//     UINT32 _uValue;
// };
// 
// typedef struct stdEDLList<camera::Target> stdEDLList<camera::Target>, *PstdEDLList<camera::Target>;
// 
// struct stdEDLList<camera::Target> {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
// };
// 
// typedef struct stdMultiPool stdMultiPool, *PstdMultiPool;
// 
// struct stdMultiPool {
//     UINT32 m_iHash;
//     UINT32 m_iSize;
//     UINT32 m_iAlignment;
//     struct stdRBTree m_PoolRBTree;
//     struct stdRBTree m_CountRBTree;
// };
// 
// typedef struct stdPlacementPtrStack<HeapZone *> stdPlacementPtrStack<HeapZone *>, *PstdPlacementPtrStack<HeapZone *>;
// 
// struct stdPlacementPtrStack<HeapZone *> {
//     struct HeapZone **_pStack; /* Inherited from stdPlacementStack<HeapZone *> */
//     UINT _uStackIdx; /* Inherited from stdPlacementStack<HeapZone *> */
//     UINT _uStackDepth; /* Inherited from stdPlacementStack<HeapZone *> */
// };
// 
// typedef struct stdPlacementPtrStack<stdDynaStringDB *> stdPlacementPtrStack<stdDynaStringDB *>, *PstdPlacementPtrStack<stdDynaStringDB *>;
// 
// struct stdPlacementPtrStack<stdDynaStringDB *> {
//     struct stdDynaStringDB **_pStack; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
//     UINT _uStackIdx; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
//     UINT _uStackDepth; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
// };
// 
// typedef struct stdPlacementStack<HeapZone *> stdPlacementStack<HeapZone *>, *PstdPlacementStack<HeapZone *>;
// 
// struct stdPlacementStack<HeapZone *> {
//     struct HeapZone **_pStack;
//     UINT _uStackIdx;
//     UINT _uStackDepth;
// };
// 
// typedef struct stdPlacementStack<int> stdPlacementStack<int>, *PstdPlacementStack<int>;
// 
// struct stdPlacementStack<int> {
//     INT *_pStack;
//     UINT _uStackIdx;
//     UINT _uStackDepth;
// };
// 
// typedef struct stdPlacementStack<stdDynaStringDB *> stdPlacementStack<stdDynaStringDB *>, *PstdPlacementStack<stdDynaStringDB *>;
// 
// struct stdPlacementStack<stdDynaStringDB *> {
//     struct stdDynaStringDB **_pStack;
//     UINT _uStackIdx;
//     UINT _uStackDepth;
// };
// 
// typedef struct stdPlacementStack<unsigned int> stdPlacementStack<unsigned int>, *PstdPlacementStack<unsigned int>;
// 
// struct stdPlacementStack<unsigned int> {
//     UINT *_pStack;
//     UINT _uStackIdx;
//     UINT _uStackDepth;
// };
// 
// typedef struct stdPriorityStack<AStarNode *,float> stdPriorityStack<AStarNode *,float>, *PstdPriorityStack<AStarNode *,float>;
// 
// struct stdPriorityStack<AStarNode *,float> {
//     struct StackPairType__1_16904 *m_pStack;
//     UINT m_uStackIdx;
//     UINT m_uStackDepth;
// };
// 
// typedef struct stdPriorityStack<tValidityDisk::tDiskAStarNode *,float> stdPriorityStack<tValidityDisk::tDiskAStarNode *,float>, *PstdPriorityStack<tValidityDisk::tDiskAStarNode *,float>;
// 
// struct stdPriorityStack<tValidityDisk::tDiskAStarNode *,float> {
//     struct StackPairType__1_17251 *m_pStack;
//     UINT m_uStackIdx;
//     UINT m_uStackDepth;
// };
// 
// typedef struct stdPtrStack<stdDynaStringDB *> stdPtrStack<stdDynaStringDB *>, *PstdPtrStack<stdDynaStringDB *>;
// 
// struct stdPtrStack<stdDynaStringDB *> {
//     struct stdDynaStringDB **_pStack; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
//     UINT _uStackIdx; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
//     UINT _uStackDepth; /* Inherited from stdPlacementStack<stdDynaStringDB *> */
// };
// 
// typedef struct stdQue<ERR> stdQue<ERR>, *PstdQue<ERR>;
// 
// struct stdQue<ERR> {
//     struct ERR *m_pQue;
//     UINT8 m_uSize;
//     UINT8 m_uReadIdx;
//     UINT8 m_uWriteIdx;
//     UINT8 m_bMemAllocated;
// };
// 
// typedef struct stdSkipList<float,VUMat4 *,stdSkipListNodeAllocator<float> > stdSkipList<float,VUMat4 *,stdSkipListNodeAllocator<float> >, *PstdSkipList<float,VUMat4 *,stdSkipListNodeAllocator<float> >;
// 
// struct stdSkipList<float,VUMat4 *,stdSkipListNodeAllocator<float> > {
//     UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<float> */
//     UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<float> */
//     BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<float> */
//     struct stdSkipListNode<float> *_pHeader; /* Inherited from stdSkipListTemplate<float> */
//     struct stdSkipListNode<float> *_pUpdate; /* Inherited from stdSkipListTemplate<float> */
// };
// 
// typedef struct stdSkipList<unsigned int,odbContext *,stdSkipListNodeAllocator<unsigned int> > stdSkipList<unsigned int,odbContext *,stdSkipListNodeAllocator<unsigned int> >, *PstdSkipList<unsigned int,odbContext *,stdSkipListNodeAllocator<unsigned int> >;
// 
// struct stdSkipList<unsigned int,odbContext *,stdSkipListNodeAllocator<unsigned int> > {
//     UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<unsigned int> */
//     UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<unsigned int> */
//     BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pHeader; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pUpdate; /* Inherited from stdSkipListTemplate<unsigned int> */
// };
// 
// typedef struct stdSkipListBase<float,stdSkipListNodeAllocator<float> > stdSkipListBase<float,stdSkipListNodeAllocator<float> >, *PstdSkipListBase<float,stdSkipListNodeAllocator<float> >;
// 
// struct stdSkipListBase<float,stdSkipListNodeAllocator<float> > {
//     UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<float> */
//     UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<float> */
//     BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<float> */
//     struct stdSkipListNode<float> *_pHeader; /* Inherited from stdSkipListTemplate<float> */
//     struct stdSkipListNode<float> *_pUpdate; /* Inherited from stdSkipListTemplate<float> */
// };
// 
// typedef struct stdSkipListBase<unsigned int,stdSkipListNodeAllocator<unsigned int> > stdSkipListBase<unsigned int,stdSkipListNodeAllocator<unsigned int> >, *PstdSkipListBase<unsigned int,stdSkipListNodeAllocator<unsigned int> >;
// 
// struct stdSkipListBase<unsigned int,stdSkipListNodeAllocator<unsigned int> > {
//     UINT _uCurrLevel; /* Inherited from stdSkipListTemplate<unsigned int> */
//     UINT _uMaxLevels; /* Inherited from stdSkipListTemplate<unsigned int> */
//     BOOL _bUseFinger; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pHeader; /* Inherited from stdSkipListTemplate<unsigned int> */
//     struct stdSkipListNode<unsigned int> *_pUpdate; /* Inherited from stdSkipListTemplate<unsigned int> */
// };
// 
// typedef struct stdSkipListNodeAllocator<float> stdSkipListNodeAllocator<float>, *PstdSkipListNodeAllocator<float>;
// 
// struct stdSkipListNodeAllocator<float> {
//     UINT32 _uMaxLevels;
//     UINT32 _uMaxNodes;
//     struct Pool__1_336 **_pPool;
// };
// 
// typedef struct stdSkipListNodeAllocator<unsigned int> stdSkipListNodeAllocator<unsigned int>, *PstdSkipListNodeAllocator<unsigned int>;
// 
// struct stdSkipListNodeAllocator<unsigned int> {
//     UINT32 _uMaxLevels;
//     UINT32 _uMaxNodes;
//     struct Pool__1_336 **_pPool;
// };
// 
// typedef struct stdSkipListTemplate<float> stdSkipListTemplate<float>, *PstdSkipListTemplate<float>;
// 
// struct stdSkipListTemplate<float> {
//     UINT _uCurrLevel;
//     UINT _uMaxLevels;
//     BOOL _bUseFinger;
//     struct stdSkipListNode<float> *_pHeader;
//     struct stdSkipListNode<float> *_pUpdate;
// };
// 
// typedef struct stdSkipListTemplate<unsigned int> stdSkipListTemplate<unsigned int>, *PstdSkipListTemplate<unsigned int>;
// 
// struct stdSkipListTemplate<unsigned int> {
//     UINT _uCurrLevel;
//     UINT _uMaxLevels;
//     BOOL _bUseFinger;
//     struct stdSkipListNode<unsigned int> *_pHeader;
//     struct stdSkipListNode<unsigned int> *_pUpdate;
// };
// 
// typedef struct stdStack<_HeapInfo *,16> stdStack<_HeapInfo *,16>, *PstdStack<_HeapInfo *,16>;
// 
// struct stdStack<_HeapInfo *,16> {
//     HeapInfo *fStack[16];
//     INT8 fIndex;
//     undefined field2_0x41;
//     undefined field3_0x42;
//     undefined field4_0x43;
// };
// 
// typedef struct stdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32> stdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32>, *PstdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32>;
// 
// typedef struct svrContext<svrTemplate<svrEmptyContainer> > svrContext<svrTemplate<svrEmptyContainer> >, *PsvrContext<svrTemplate<svrEmptyContainer> >;
// 
// typedef struct svrContext<svrTemplate<svrEmptyContainer> >__vtable svrContext<svrTemplate<svrEmptyContainer> >__vtable, *PsvrContext<svrTemplate<svrEmptyContainer> >__vtable;
// 
// struct svrContext<svrTemplate<svrEmptyContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrContext<svrTemplate<svrEmptyContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
//     UINT32 m_uRefCount;
//     UINT32 m_uConnectionRefCount;
//     struct svrContextParm *m_pParm;
//     struct stdCList<svr *,stdAllocator<stdCListNodeBase> > m_listDependents;
//     struct wadContext *m_pMyWadContext;
// };
// 
// struct svrContext<svrTemplate<svrEmptyContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct stdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32> {
//     struct svrContext<svrTemplate<svrEmptyContainer> > *fStack[32];
//     INT8 fIndex;
//     undefined field2_0x81;
//     undefined field3_0x82;
//     undefined field4_0x83;
// };
// 
// typedef struct stdStack<renContext *,4> stdStack<renContext *,4>, *PstdStack<renContext *,4>;
// 
// struct stdStack<renContext *,4> {
//     struct renContext *fStack[4];
//     INT8 fIndex;
//     undefined field2_0x11;
//     undefined field3_0x12;
//     undefined field4_0x13;
// };
// 
// typedef struct stdStack<svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *,16> stdStack<svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *,16>, *PstdStack<svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *,16>;
// 
// struct stdStack<svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *,16> {
//     struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *fStack[16];
//     INT8 fIndex;
//     undefined field2_0x41;
//     undefined field3_0x42;
//     undefined field4_0x43;
// };
// 
// typedef struct stdStack<svrClientTreeNode<svrSortedListContainer,goClient> *,16> stdStack<svrClientTreeNode<svrSortedListContainer,goClient> *,16>, *PstdStack<svrClientTreeNode<svrSortedListContainer,goClient> *,16>;
// 
// struct stdStack<svrClientTreeNode<svrSortedListContainer,goClient> *,16> {
//     struct svrClientTreeNode<svrSortedListContainer,goClient> *fStack[16];
//     INT8 fIndex;
//     undefined field2_0x41;
//     undefined field3_0x42;
//     undefined field4_0x43;
// };
// 
// typedef struct stdTList<sound::BankParm> stdTList<sound::BankParm>, *PstdTList<sound::BankParm>;
// 
// struct stdTList<sound::BankParm> {
//     struct stdListNode _header; /* Inherited from stdList */
// };
// 
// typedef enum StreamBufferMode {
//     kUseFileServer=-2147483648,
//     kSourceMask=-1073741824,
//     kEEFile=0,
//     kMonoSound=1,
//     kStereoSound=2,
//     k4ChannelSound=3,
//     kTypeMask=15,
//     kWAD=16,
//     kMPEG=32,
//     kM2V=64,
//     kWideScreen=128,
//     kResourceMask=240,
//     kLoop=256,
//     kSynch=512,
//     kDone=1024,
//     kReverb=2048,
//     kPaused=4096,
//     kWrite=8192,
//     kPending=16384,
//     kUseSCE=32768,
//     kPreBuffering=67108864,
//     kEnabled=134217728,
//     kDontThrottle=268435456,
//     kDebug=536870912,
//     kUseCDDVD=1073741824
// } StreamBufferMode;
// 
// typedef struct StreamData StreamData, *PStreamData;
// 
// struct StreamData {
//     char fFileName[24];
//     unsigned int fFlags;
//     int fPriority;
//     int fBarDataOffset;
// };
// 
// typedef struct StreamOpenArgs StreamOpenArgs, *PStreamOpenArgs;
// 
// struct StreamOpenArgs {
//     char fName[24];
//     int fMode;
//     int fPriority;
//     int fSynch;
// };
// 
// typedef struct Stub Stub, *PStub;
// 
// struct Stub {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct Tag fSound; /* Inherited from ClientParm */
//     unsigned int fName;
//     struct ClientParm__1_9257 *fParm;
// };
// 
// typedef struct SubTrackData SubTrackData, *PSubTrackData;
// 
// typedef struct tActionSubTrack tActionSubTrack, *PtActionSubTrack;
// 
// struct SubTrackData {
//     struct VUVec4 m_vVel;
//     struct tActionSubTrack *m_pTweaks;
//     struct goHandle m_hIcon;
//     FLOAT m_fTimer;
//     FLOAT m_fUnderTimer;
// };
// 
// struct tActionSubTrack {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_Speed;
//     FLOAT m_TurnFactor;
//     FLOAT m_TrackTime;
//     FLOAT m_PreRiseTime;
//     FLOAT m_UnderRadius;
//     UINT8 m_SubTrackFlags;
//     undefined field15_0x29;
//     undefined field16_0x2a;
//     undefined field17_0x2b;
//     UINT32 m_IconGOName;
// };
// 
// typedef struct SVirtualZone SVirtualZone, *PSVirtualZone;
// 
// struct SVirtualZone {
//     struct VUVec4 vParams[2];
//     UINT32 dwType;
//     UINT32 dwID;
//     UINT32 dwStartFrame;
//     UINT32 dwEndFrame;
// };
// 
// typedef struct svrTemplate<svrArrayContainer> svrTemplate<svrArrayContainer>, *PsvrTemplate<svrArrayContainer>;
// 
// typedef struct svrTemplate<svrArrayContainer> svrArray;
// 
// struct svrTemplate<svrArrayContainer> { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef struct svrClientKey svrClientKey, *PsvrClientKey;
// 
// struct svrClientKey {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey;
// };
// 
// typedef struct svrClientList svrClientList, *PsvrClientList;
// 
// struct svrClientList {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
// };
// 
// typedef struct svrClientParmNode svrClientParmNode, *PsvrClientParmNode;
// 
// struct svrClientParmNode {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     struct svrClientParmNode *_pParent;
// };
// 
// typedef struct svrClientSLList svrClientSLList, *PsvrClientSLList;
// 
// struct svrClientSLList {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
// };
// 
// typedef struct svrClientType svrClientType, *PsvrClientType;
// 
// struct svrClientType {
//     UINT32 m_uID;
// };
// 
// typedef struct svrTemplate<svrCListContainer> svrTemplate<svrCListContainer>, *PsvrTemplate<svrCListContainer>;
// 
// typedef struct svrTemplate<svrCListContainer> svrCList;
// 
// struct svrTemplate<svrCListContainer> { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef struct svrContextLoadParm svrContextLoadParm, *PsvrContextLoadParm;
// 
// struct svrContextLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT32 m_bAllowDups;
//     struct stdDynaString m_cParentName;
// };
// 
// typedef struct svrEpilogue svrEpilogue, *PsvrEpilogue;
// 
// typedef struct svrEpilogue__vtable svrEpilogue__vtable, *PsvrEpilogue__vtable;
// 
// struct svrEpilogue__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrEpilogue;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrEpilogue {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrEpilogue__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
// };
// 
// typedef struct svrTemplate<svrHashBucketContainer> svrTemplate<svrHashBucketContainer>, *PsvrTemplate<svrHashBucketContainer>;
// 
// typedef struct svrTemplate<svrHashBucketContainer> svrHashBuckets;
// 
// struct svrTemplate<svrHashBucketContainer> { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef struct svrLoadParm svrLoadParm, *PsvrLoadParm;
// 
// struct svrLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
// };
// 
// typedef struct svrMaster svrMaster, *PsvrMaster;
// 
// typedef struct svrMaster__vtable svrMaster__vtable, *PsvrMaster__vtable;
// 
// struct svrMaster {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMaster__vtable *__vtable; /* Inherited from svr */
//     struct svrSortedListContainer m_clients; /* Inherited from svrTemplate<svrSortedListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrSortedListContainer> */
// };
// 
// struct svrMaster__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMaster;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrEmptyContainer> > svrMasterContext<svrTemplate<svrEmptyContainer> >, *PsvrMasterContext<svrTemplate<svrEmptyContainer> >;
// 
// typedef struct svrMasterContext<svrTemplate<svrEmptyContainer> >__vtable svrMasterContext<svrTemplate<svrEmptyContainer> >__vtable, *PsvrMasterContext<svrTemplate<svrEmptyContainer> >__vtable;
// 
// struct svrMasterContext<svrTemplate<svrEmptyContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMasterContext<svrTemplate<svrEmptyContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter;
//     UINT32 m_uMaxConnectionsPerContext;
//     UINT32 m_uMaxClientsPerContext;
// };
// 
// struct svrMasterContext<svrTemplate<svrEmptyContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef svrList svrMasterContextBase;
// 
// typedef struct svrMultiClientParm svrMultiClientParm, *PsvrMultiClientParm;
// 
// struct svrMultiClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList;
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrEmptyContainer> > svrMultiServer<svrTemplate<svrEmptyContainer> >, *PsvrMultiServer<svrTemplate<svrEmptyContainer> >;
// 
// typedef struct svrMultiServer<svrTemplate<svrEmptyContainer> >__vtable svrMultiServer<svrTemplate<svrEmptyContainer> >__vtable, *PsvrMultiServer<svrTemplate<svrEmptyContainer> >__vtable;
// 
// struct svrMultiServer<svrTemplate<svrEmptyContainer> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrMultiServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct svrMultiServer<svrTemplate<svrEmptyContainer> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrMultiServer<svrTemplate<svrEmptyContainer> >__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32> m_contextstack;
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectedClientsPerServer;
//     UINT32 m_uMasterContextServerID;
// };
// 
// typedef struct svrMultiServerParm svrMultiServerParm, *PsvrMultiServerParm;
// 
// struct svrMultiServerParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT32 m_uMaxClientsPerServer;
//     UINT32 m_uMaxConnectionsPerServer;
// };
// 
// typedef struct svrParm svrParm, *PsvrParm;
// 
// struct svrParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients;
//     UINT32 m_uMaxConnections;
//     UINT32 m_uPriority;
// };
// 
// typedef struct svrTemplate<svrEmptyContainer> svrTemplate<svrEmptyContainer>, *PsvrTemplate<svrEmptyContainer>;
// 
// typedef struct svrTemplate<svrEmptyContainer> svrProcess;
// 
// typedef struct svrTemplate<svrEmptyContainer>__vtable svrTemplate<svrEmptyContainer>__vtable, *PsvrTemplate<svrEmptyContainer>__vtable;
// 
// struct svrTemplate<svrEmptyContainer>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTemplate<svrEmptyContainer> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<svrEmptyContainer>__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected;
// };
// 
// typedef struct svrPrologue svrPrologue, *PsvrPrologue;
// 
// typedef struct svrPrologue__vtable svrPrologue__vtable, *PsvrPrologue__vtable;
// 
// struct svrPrologue {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrPrologue__vtable *__vtable; /* Inherited from svr */
//     struct svrEmptyContainer m_clients; /* Inherited from svrTemplate<svrEmptyContainer> */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrEmptyContainer> */
//     struct dmaContext *m_pSetupDMAContext;
// };
// 
// struct svrPrologue__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrPrologue;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// typedef struct svrRoot svrRoot, *PsvrRoot;
// 
// typedef struct svrRoot__vtable svrRoot__vtable, *PsvrRoot__vtable;
// 
// struct svrRoot__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrRoot;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrRoot {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrRoot__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     BOOL m_bQuePause;
//     BOOL m_bQueUnPause;
// };
// 
// typedef struct svrTemplate<svrSkipListContainer<unsigned int,stdSkipListNodeAllocator<unsigned int> > > svrTemplate<svrSkipListContainer<unsigned int,stdSkipListNodeAllocator<unsigned int> > >, *PsvrTemplate<svrSkipListContainer<unsigned int,stdSkipListNodeAllocator<unsigned int> > >;
// 
// typedef struct svrTemplate<svrSkipListContainer<unsigned int,stdSkipListNodeAllocator<unsigned int> > > svrSkipList;
// 
// struct svrTemplate<svrSkipListContainer<unsigned int,stdSkipListNodeAllocator<unsigned int> > > { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef struct svrTemplate<svrSortedListContainer> svrTemplate<svrSortedListContainer>, *PsvrTemplate<svrSortedListContainer>;
// 
// typedef struct svrTemplate<svrSortedListContainer> svrSortedList;
// 
// typedef struct svrTemplate<svrSortedListContainer>__vtable svrTemplate<svrSortedListContainer>__vtable, *PsvrTemplate<svrSortedListContainer>__vtable;
// 
// struct svrTemplate<svrSortedListContainer>__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTemplate<svrSortedListContainer> {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<svrSortedListContainer>__vtable *__vtable; /* Inherited from svr */
//     struct svrSortedListContainer m_clients;
//     UINT32 m_uNumConnected;
// };
// 
// typedef struct svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >, *PsvrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >;
// 
// typedef struct svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >__vtable svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >__vtable, *PsvrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >__vtable;
// 
// struct svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> >__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected;
// };
// 
// typedef struct svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >, *PsvrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >;
// 
// typedef struct svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >__vtable svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >__vtable, *PsvrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >__vtable;
// 
// struct svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type svrTemplate;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> >__vtable *__vtable; /* Inherited from svr */
//     undefined field16_0x24;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     undefined field20_0x28;
//     undefined field21_0x29;
//     undefined field22_0x2a;
//     undefined field23_0x2b;
//     undefined field24_0x2c;
//     undefined field25_0x2d;
//     undefined field26_0x2e;
//     undefined field27_0x2f;
//     undefined field28_0x30;
//     undefined field29_0x31;
//     undefined field30_0x32;
//     undefined field31_0x33;
//     undefined field32_0x34;
//     undefined field33_0x35;
//     undefined field34_0x36;
//     undefined field35_0x37;
//     undefined field36_0x38;
//     undefined field37_0x39;
//     undefined field38_0x3a;
//     undefined field39_0x3b;
//     undefined field40_0x3c;
//     undefined field41_0x3d;
//     undefined field42_0x3e;
//     undefined field43_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     undefined field46_0x48;
//     undefined field47_0x49;
//     undefined field48_0x4a;
//     undefined field49_0x4b;
//     undefined field50_0x4c;
//     undefined field51_0x4d;
//     undefined field52_0x4e;
//     undefined field53_0x4f;
//     undefined field54_0x50;
//     undefined field55_0x51;
//     undefined field56_0x52;
//     undefined field57_0x53;
//     undefined field58_0x54;
//     undefined field59_0x55;
//     undefined field60_0x56;
//     undefined field61_0x57;
//     undefined field62_0x58;
//     undefined field63_0x59;
//     undefined field64_0x5a;
//     undefined field65_0x5b;
//     undefined field66_0x5c;
//     undefined field67_0x5d;
//     undefined field68_0x5e;
//     undefined field69_0x5f;
//     undefined field70_0x60;
//     undefined field71_0x61;
//     undefined field72_0x62;
//     undefined field73_0x63;
//     undefined field74_0x64;
//     undefined field75_0x65;
//     undefined field76_0x66;
//     undefined field77_0x67;
//     undefined field78_0x68;
//     undefined field79_0x69;
//     undefined field80_0x6a;
//     undefined field81_0x6b;
//     undefined field82_0x6c;
//     undefined field83_0x6d;
//     undefined field84_0x6e;
//     undefined field85_0x6f;
//     UINT32 m_uNumConnected;
// };
// 
// typedef struct svrTreeContainer<svrCListContainer,goAttachmentLWClient> svrTreeContainer<svrCListContainer,goAttachmentLWClient>, *PsvrTreeContainer<svrCListContainer,goAttachmentLWClient>;
// 
// struct svrTreeContainer<svrCListContainer,goAttachmentLWClient> {
//     struct svrClientParm *m_pDefaultParm;
//     struct svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *m_pRootNode;
//     struct stdStack<svrClientTreeNode<svrCListContainer,goAttachmentLWClient> *,16> m_pParentStack;
// };
// 
// typedef struct svrTreeContainer<svrSortedListContainer,goClient> svrTreeContainer<svrSortedListContainer,goClient>, *PsvrTreeContainer<svrSortedListContainer,goClient>;
// 
// struct svrTreeContainer<svrSortedListContainer,goClient> {
//     struct svrClientParm *m_pDefaultParm;
//     struct svrClientTreeNode<svrSortedListContainer,goClient> *m_pRootNode;
//     struct stdStack<svrClientTreeNode<svrSortedListContainer,goClient> *,16> m_pParentStack;
// };
// 
// typedef struct sys sys, *Psys;
// 
// struct sys {
//     undefined field0_0x0;
// };
// 
// typedef struct sysCDDVD sysCDDVD, *PsysCDDVD;
// 
// struct sysCDDVD {
//     undefined field0_0x0;
// };
// 
// typedef struct sysControlSystem sysControlSystem, *PsysControlSystem;
// 
// typedef struct sysControlSystem__vtable sysControlSystem__vtable, *PsysControlSystem__vtable;
// 
// struct sysControlSystem {
//     struct sysPad *fPad;
//     struct sysControlSystemParm *fParm;
//     FLOAT *fCurrentControlValues;
//     FLOAT *fPreviousControlValues;
//     UINT64 fCurrentDigitalState;
//     UINT64 fPreviousDigitalState;
//     struct sysControlSystem__vtable *__vtable;
//     undefined field7_0x24;
//     undefined field8_0x25;
//     undefined field9_0x26;
//     undefined field10_0x27;
// };
// 
// struct sysControlSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type sysControlSystem;
//     struct __vtbl_ptr_type Process;
// };
// 
// typedef struct sysDebugArgs sysDebugArgs, *PsysDebugArgs;
// 
// struct sysDebugArgs {
//     int argc;
//     char *argv;
// };
// 
// typedef enum sysDeviceTypes {
//     kDefault=-1,
//     kCDDVD=0,
//     kTool=1
// } sysDeviceTypes;
// 
// typedef struct sysDir sysDir, *PsysDir;
// 
// typedef struct sysDir_Private sysDir_Private, *PsysDir_Private;
// 
// struct sysDir_Private {
//     struct DirInfo cddvdData;
//     struct sce_dirent sceData;
//     int sceHandle;
// };
// 
// struct sysDir {
//     struct sysDir_Private *p;
// };
// 
// typedef struct sysFileMem sysFileMem, *PsysFileMem;
// 
// typedef struct sysFileMem__vtable sysFileMem__vtable, *PsysFileMem__vtable;
// 
// struct sysFileMem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type sysFileMem;
//     struct __vtbl_ptr_type Close;
//     struct __vtbl_ptr_type Read;
//     struct __vtbl_ptr_type IsReadDone;
//     struct __vtbl_ptr_type Write;
// };
// 
// struct sysFileMem {
//     int fHandle; /* Inherited from sysFile */
//     unsigned int fFlags; /* Inherited from sysFile */
//     int fLength; /* Inherited from sysFile */
//     int fPosition; /* Inherited from sysFile */
//     struct sysFileMem__vtable *__vtable; /* Inherited from sysFile */
//     UINT32 m_iDataLen;
//     CHAR *m_pBuffer;
// };
// 
// typedef struct sysForceFeedback sysForceFeedback, *PsysForceFeedback;
// 
// typedef struct tForceFeedback tForceFeedback, *PtForceFeedback;
// 
// typedef enum sysForceFeedback__fState {
//     kWaiting=0,
//     kAttack=1,
//     kDecay=2,
//     kSustain=3,
//     kRelease=4
// } sysForceFeedback__fState;
// 
// typedef struct tModifiers tModifiers, *PtModifiers;
// 
// struct tModifiers {
//     FLOAT m_Bias;
//     FLOAT m_Scale;
//     UINT8 m_ParameterMask;
//     UINT8 m_Operator;
//     INT8 m_Input;
//     undefined field5_0xb;
// };
// 
// struct tForceFeedback {
//     INT32 m_ID; /* Inherited from tGameEffect */
//     INT32 m_Type; /* Inherited from tGameEffect */
//     FLOAT m_Duration; /* Inherited from tGameEffect */
//     FLOAT m_SMFrequency;
//     FLOAT m_SMAmplitude;
//     FLOAT m_SMPhase;
//     FLOAT m_SMBias;
//     UINT8 m_SMWaveform;
//     undefined field8_0x1d;
//     undefined field9_0x1e;
//     undefined field10_0x1f;
//     FLOAT m_LMFrequency;
//     FLOAT m_LMAmplitude;
//     FLOAT m_LMPhase;
//     FLOAT m_LMBias;
//     UINT8 m_LMWaveform;
//     undefined field16_0x31;
//     undefined field17_0x32;
//     undefined field18_0x33;
//     FLOAT m_Attack;
//     FLOAT m_Decay;
//     FLOAT m_Sustain;
//     FLOAT m_Release;
//     struct tModifiers *m_ModifierList;
// };
// 
// struct sysForceFeedback {
//     struct tForceFeedback *fTweaks;
//     float fTime;
//     float fSMPP;
//     float fLMPP;
//     float fInputs[4];
//     bool fHold;
//     undefined field6_0x21;
//     undefined field7_0x22;
//     undefined field8_0x23;
//     float fMaxTime;
//     unsigned int fSmallMotor;
//     unsigned int fLargeMotor;
//     enum sysForceFeedback__fState fState;
// };
// 
// typedef struct sysTime sysTime, *PsysTime;
// 
// struct sysTime {
//     undefined field0_0x0;
// };
// 
// typedef struct SZoneModulator SZoneModulator, *PSZoneModulator;
// 
// typedef union SZoneModulator__unnamed_24 SZoneModulator__unnamed_24, *PSZoneModulator__unnamed_24;
// 
// union SZoneModulator__unnamed_24 {
//     struct fxFieldParameterBlock *pUniformField;
//     void *pVoid;
// };
// 
// struct SZoneModulator {
//     enum EMode eModulation;
//     enum EType eZoneType;
//     FLOAT fParameter;
//     FLOAT fProgress;
//     FLOAT fCModulation;
//     FLOAT fLife;
//     union SZoneModulator__unnamed_24 field6_0x18;
// };
// 
// typedef struct tActionAddPickup tActionAddPickup, *PtActionAddPickup;
// 
// struct tActionAddPickup {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Pickup;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
// };
// 
// typedef struct tActionAimDownUp tActionAimDownUp, *PtActionAimDownUp;
// 
// struct tActionAimDownUp {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_RefJoint;
//     FLOAT m_MinAngle;
//     FLOAT m_MaxAngle;
// };
// 
// typedef struct tActionAimLeftRight tActionAimLeftRight, *PtActionAimLeftRight;
// 
// struct tActionAimLeftRight {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_RefJoint;
//     FLOAT m_MinAngle;
//     FLOAT m_MaxAngle;
// };
// 
// typedef struct tActionArrowEmitter tActionArrowEmitter, *PtActionArrowEmitter;
// 
// struct tActionArrowEmitter {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tArrowEmitter *m_ArrowEmitter;
// };
// 
// typedef struct tActionBlock tActionBlock, *PtActionBlock;
// 
// struct tActionBlock {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_HitFlags;
// };
// 
// typedef struct tActionBonus tActionBonus, *PtActionBonus;
// 
// struct tActionBonus {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tBonus *m_Bonus;
// };
// 
// typedef struct tActionCameraShake tActionCameraShake, *PtActionCameraShake;
// 
// struct tActionCameraShake {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tCameraShake *m_CameraShake;
// };
// 
// typedef struct tActionCameraTarget tActionCameraTarget, *PtActionCameraTarget;
// 
// struct tActionCameraTarget {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tTween m_Tween;
//     INT8 m_Target;
//     INT8 m_Enable;
//     undefined field9_0x16;
//     undefined field10_0x17;
// };
// 
// typedef struct tActionCancelSeekAI tActionCancelSeekAI, *PtActionCancelSeekAI;
// 
// struct tActionCancelSeekAI {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionCircleIcon tActionCircleIcon, *PtActionCircleIcon;
// 
// struct tActionCircleIcon {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT8 m_Status;
//     INT8 m_CircleID;
// };
// 
// typedef struct tActionClearRadius tActionClearRadius, *PtActionClearRadius;
// 
// struct tActionClearRadius {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_ClearFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_ValAtCenter;
//     FLOAT m_ValAtEdge;
//     UINT32 *m_JointName;
// };
// 
// typedef struct tActionCliffEffect tActionCliffEffect, *PtActionCliffEffect;
// 
// struct tActionCliffEffect {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT8 m_CliffEffect;
//     undefined field7_0x9;
// };
// 
// typedef struct tActionConcussion tActionConcussion, *PtActionConcussion;
// 
// struct tActionConcussion {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionContext tActionContext, *PtActionContext;
// 
// struct tActionContext {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     INT8 m_Context;
//     undefined field7_0x9;
// };
// 
// typedef struct tActionCustomEffect tActionCustomEffect, *PtActionCustomEffect;
// 
// struct tActionCustomEffect {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT8 m_EffectFlags;
//     undefined field7_0x9;
//     undefined field8_0xa;
//     undefined field9_0xb;
//     UINT32 m_ArgString;
//     INT32 m_ArgInt;
//     INT32 *m_ArgIntList;
// };
// 
// typedef struct tActionDampingAdjust tActionDampingAdjust, *PtActionDampingAdjust;
// 
// struct tActionDampingAdjust {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT8 m_DampingID;
//     UINT8 m_Level;
// };
// 
// typedef struct tActionDeathMenuPause tActionDeathMenuPause, *PtActionDeathMenuPause;
// 
// struct tActionDeathMenuPause {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
// };
// 
// typedef struct tActionDetachFromCeiling tActionDetachFromCeiling, *PtActionDetachFromCeiling;
// 
// struct tActionDetachFromCeiling {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionDetachFromGrapple tActionDetachFromGrapple, *PtActionDetachFromGrapple;
// 
// struct tActionDetachFromGrapple {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionDetachFromRope tActionDetachFromRope, *PtActionDetachFromRope;
// 
// struct tActionDetachFromRope {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionDetachFromWall tActionDetachFromWall, *PtActionDetachFromWall;
// 
// struct tActionDetachFromWall {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionDetachRider tActionDetachRider, *PtActionDetachRider;
// 
// struct tActionDetachRider {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_BranchName;
// };
// 
// typedef struct tActionDTree tActionDTree, *PtActionDTree;
// 
// struct tActionDTree {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tDTree *m_DTree;
// };
// 
// typedef struct tActionFade tActionFade, *PtActionFade;
// 
// struct tActionFade {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_FadeTime;
//     UINT8 m_FadeFlags;
//     undefined field11_0x19;
//     undefined field12_0x1a;
//     undefined field13_0x1b;
// };
// 
// typedef struct tActionFlashSprite tActionFlashSprite, *PtActionFlashSprite;
// 
// struct tActionFlashSprite {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_Name;
// };
// 
// typedef struct tActionFootEffect tActionFootEffect, *PtActionFootEffect;
// 
// struct tActionFootEffect {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_FootEffect;
//     UINT32 m_JointName;
// };
// 
// typedef struct tActionForceAttachment tActionForceAttachment, *PtActionForceAttachment;
// 
// struct tActionForceAttachment {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Attachment;
//     UINT8 m_Pos;
//     undefined field11_0x16;
//     undefined field12_0x17;
// };
// 
// typedef struct tActionForceFeedback tActionForceFeedback, *PtActionForceFeedback;
// 
// struct tActionForceFeedback {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tForceFeedback *m_ForceFeedback;
// };
// 
// typedef struct tActionFullScreenEffect tActionFullScreenEffect, *PtActionFullScreenEffect;
// 
// struct tActionFullScreenEffect {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_Effect;
//     FLOAT m_Weight;
//     struct tTween m_TweenIn;
//     struct tTween m_TweenOut;
// };
// 
// typedef struct tActionGrid tActionGrid, *PtActionGrid;
// 
// struct tActionGrid {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Action;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
// };
// 
// typedef struct tActionHammerSoul tActionHammerSoul, *PtActionHammerSoul;
// 
// struct tActionHammerSoul {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SoulFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
// };
// 
// typedef struct tActionHeadTrack tActionHeadTrack, *PtActionHeadTrack;
// 
// struct tActionHeadTrack {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Amount;
// };
// 
// typedef struct tActionHitCounterPause tActionHitCounterPause, *PtActionHitCounterPause;
// 
// struct tActionHitCounterPause {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
// };
// 
// typedef struct tActionIgnoreHitResponse tActionIgnoreHitResponse, *PtActionIgnoreHitResponse;
// 
// struct tActionIgnoreHitResponse {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionIncHitCounter tActionIncHitCounter, *PtActionIncHitCounter;
// 
// struct tActionIncHitCounter {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     INT16 m_Amount;
// };
// 
// typedef struct tActionKamikaze tActionKamikaze, *PtActionKamikaze;
// 
// struct tActionKamikaze {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_NoAimDistance;
//     FLOAT m_AttackSpeed;
//     FLOAT m_PassDistance;
// };
// 
// typedef struct tActionMeterAdjust tActionMeterAdjust, *PtActionMeterAdjust;
// 
// struct tActionMeterAdjust {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     FLOAT m_Amount;
//     UINT8 m_MeterID;
//     UINT8 m_MeterFlags;
//     undefined field9_0xe;
//     undefined field10_0xf;
// };
// 
// typedef struct tActionNoBlock tActionNoBlock, *PtActionNoBlock;
// 
// struct tActionNoBlock {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_HitFlags;
// };
// 
// typedef struct tActionOrbEmitter tActionOrbEmitter, *PtActionOrbEmitter;
// 
// struct tActionOrbEmitter {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tOrbEmitter *m_OrbEmitter;
// };
// 
// typedef struct tActionOverrideDamage tActionOverrideDamage, *PtActionOverrideDamage;
// 
// struct tActionOverrideDamage {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Amount;
// };
// 
// typedef struct tActionPegasusBoostCancel tActionPegasusBoostCancel, *PtActionPegasusBoostCancel;
// 
// struct tActionPegasusBoostCancel {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_InitialCost; /* Inherited from tActionPegasusBoost */
//     FLOAT m_Multiplier; /* Inherited from tActionPegasusBoost */
//     FLOAT m_RampTime; /* Inherited from tActionPegasusBoost */
//     FLOAT m_DecelTime; /* Inherited from tActionPegasusBoost */
//     FLOAT m_RampCoefA; /* Inherited from tActionPegasusBoost */
//     FLOAT m_RampCoefB; /* Inherited from tActionPegasusBoost */
//     FLOAT m_RampCoefC; /* Inherited from tActionPegasusBoost */
//     FLOAT m_RampCoefD; /* Inherited from tActionPegasusBoost */
//     FLOAT m_Drain; /* Inherited from tActionPegasusBoost */
//     FLOAT m_PegasusMovementMult; /* Inherited from tActionPegasusBoost */
// };
// 
// typedef struct tActionPegasusConfuseEnemy tActionPegasusConfuseEnemy, *PtActionPegasusConfuseEnemy;
// 
// struct tActionPegasusConfuseEnemy {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_ConfuseFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_ConfuseEnemyTime;
// };
// 
// typedef struct tActionPegasusFlight tActionPegasusFlight, *PtActionPegasusFlight;
// 
// struct tActionPegasusFlight {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     struct tPegasusFlightData *m_FlightData;
// };
// 
// typedef struct tActionPegasusLockOn tActionPegasusLockOn, *PtActionPegasusLockOn;
// 
// struct tActionPegasusLockOn {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     struct tPegasusLockOnData *m_LockOnData;
// };
// 
// typedef struct tActionPendulumImpulse tActionPendulumImpulse, *PtActionPendulumImpulse;
// 
// struct tActionPendulumImpulse {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionPlayerFollow tActionPlayerFollow, *PtActionPlayerFollow;
// 
// struct tActionPlayerFollow {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_IndicatorTime;
//     UINT8 m_PlayerFollowFlags;
//     undefined field11_0x19;
//     undefined field12_0x1a;
//     undefined field13_0x1b;
//     struct tConcussionBase *m_Concussion;
//     UINT32 m_IndicatorGOName;
//     UINT32 m_JointName;
//     UINT8 m_Heap;
//     undefined field18_0x29;
//     undefined field19_0x2a;
//     undefined field20_0x2b;
// };
// 
// typedef struct tActionPlayFX tActionPlayFX, *PtActionPlayFX;
// 
// struct tActionPlayFX {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionPlayReplace tActionPlayReplace, *PtActionPlayReplace;
// 
// struct tActionPlayReplace {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_AnimName;
// };
// 
// typedef struct tActionRegenHealthBar tActionRegenHealthBar, *PtActionRegenHealthBar;
// 
// struct tActionRegenHealthBar {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     FLOAT m_RegenSpeed;
//     FLOAT m_NoRegenTime;
//     FLOAT m_HealthMaxPct;
//     INT16 m_RegenEffect;
//     INT16 m_EndEffect;
//     UINT32 m_SoundName;
// };
// 
// typedef struct tActionRepeatPress tActionRepeatPress, *PtActionRepeatPress;
// 
// struct tActionRepeatPress {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionRetargetAI tActionRetargetAI, *PtActionRetargetAI;
// 
// struct tActionRetargetAI {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SeekFlags; /* Inherited from tActionSeekSite */
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_YRotation; /* Inherited from tActionSeekSite */
//     struct tBranch *m_Branch; /* Inherited from tActionSeekSite */
//     FLOAT m_Radius; /* Inherited from tActionSeekSite */
//     INT8 m_SeekID;
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     FLOAT m_SearchRadius;
// };
// 
// typedef struct tActionScript tActionScript, *PtActionScript;
// 
// struct tActionScript {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName;
//     void *m_ArgData;
//     FLOAT m_ArgVal;
// };
// 
// typedef struct tActionSeekAI tActionSeekAI, *PtActionSeekAI;
// 
// struct tActionSeekAI {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SeekFlags; /* Inherited from tActionSeekSite */
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_YRotation; /* Inherited from tActionSeekSite */
//     struct tBranch *m_Branch; /* Inherited from tActionSeekSite */
//     FLOAT m_Radius; /* Inherited from tActionSeekSite */
//     INT8 m_SeekID; /* Inherited from tActionRetargetAI */
//     undefined field17_0x25;
//     undefined field18_0x26;
//     undefined field19_0x27;
//     FLOAT m_SearchRadius; /* Inherited from tActionRetargetAI */
// };
// 
// typedef struct tActionSeekTarget tActionSeekTarget, *PtActionSeekTarget;
// 
// struct tActionSeekTarget {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SeekFlags; /* Inherited from tActionSeekSite */
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_YRotation; /* Inherited from tActionSeekSite */
//     struct tBranch *m_Branch; /* Inherited from tActionSeekSite */
//     FLOAT m_Radius; /* Inherited from tActionSeekSite */
// };
// 
// typedef struct tActionSetFlags tActionSetFlags, *PtActionSetFlags;
// 
// struct tActionSetFlags {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_SetFlags;
// };
// 
// typedef struct tActionShield tActionShield, *PtActionShield;
// 
// struct tActionShield {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Action;
//     INT8 m_ArgInt;
//     struct tVector3__1_5581 m_ArgVec;
//     UINT32 m_ActionJoint;
// };
// 
// typedef struct tActionSlowdown tActionSlowdown, *PtActionSlowdown;
// 
// struct tActionSlowdown {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Amount;
//     struct FLOAT16 m_Duration;
// };
// 
// typedef struct tActionSound tActionSound, *PtActionSound;
// 
// struct tActionSound {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_Name;
// };
// 
// typedef struct tActionSoundOnEnemy tActionSoundOnEnemy, *PtActionSoundOnEnemy;
// 
// struct tActionSoundOnEnemy {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_Name;
// };
// 
// typedef struct tActionSoundWindow tActionSoundWindow, *PtActionSoundWindow;
// 
// struct tActionSoundWindow {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_Name;
// };
// 
// typedef struct tActionSpawn tActionSpawn, *PtActionSpawn;
// 
// struct tActionSpawn {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_SpawnFlags;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     char *m_EntityName;
//     UINT32 m_JointName;
// };
// 
// typedef struct tActionSubWeaponToggle tActionSubWeaponToggle, *PtActionSubWeaponToggle;
// 
// struct tActionSubWeaponToggle {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionSwitchGrid tActionSwitchGrid, *PtActionSwitchGrid;
// 
// struct tActionSwitchGrid {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Action; /* Inherited from tActionGrid */
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
// };
// 
// typedef struct tActionTeleport tActionTeleport, *PtActionTeleport;
// 
// struct tActionTeleport {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     INT16 m_SiteIndex;
//     undefined field10_0x16;
//     undefined field11_0x17;
//     FLOAT m_YRotation;
// };
// 
// typedef struct tActionTimedPress tActionTimedPress, *PtActionTimedPress;
// 
// struct tActionTimedPress {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionTimer tActionTimer, *PtActionTimer;
// 
// struct tActionTimer {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Duration;
// };
// 
// typedef struct tActionTimeWarp tActionTimeWarp, *PtActionTimeWarp;
// 
// typedef struct tTimeWarp tTimeWarp, *PtTimeWarp;
// 
// struct tActionTimeWarp {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tTimeWarp *m_TimeWarp;
// };
// 
// struct tTimeWarp {
//     struct tColor__1_5567 m_Start;
//     struct tColor__1_5567 m_Middle1;
//     struct tColor__1_5567 m_Middle2;
//     struct tColor__1_5567 m_End;
//     FLOAT m_FadeInTime;
//     FLOAT m_HoldTime;
//     FLOAT m_FadeOutTime;
//     INT16 m_ZoomStart;
//     INT16 m_ZoomMiddle1;
//     INT16 m_ZoomMiddle2;
//     INT16 m_ZoomEnd;
//     undefined field11_0x54;
//     undefined field12_0x55;
//     undefined field13_0x56;
//     undefined field14_0x57;
//     undefined field15_0x58;
//     undefined field16_0x59;
//     undefined field17_0x5a;
//     undefined field18_0x5b;
//     undefined field19_0x5c;
//     undefined field20_0x5d;
//     undefined field21_0x5e;
//     undefined field22_0x5f;
// };
// 
// typedef struct tActionUpdateReticle tActionUpdateReticle, *PtActionUpdateReticle;
// 
// struct tActionUpdateReticle {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
// };
// 
// typedef struct tActionVelocityScale tActionVelocityScale, *PtActionVelocityScale;
// 
// struct tActionVelocityScale {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct FLOAT16 m_Amount;
//     struct FLOAT16 m_Duration;
// };
// 
// typedef struct tActionVirtualWind tActionVirtualWind, *PtActionVirtualWind;
// 
// struct tActionVirtualWind {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT8 m_Effect;
//     undefined field10_0x15;
//     undefined field11_0x16;
//     undefined field12_0x17;
//     FLOAT m_Radius;
//     FLOAT m_Magnitude;
//     UINT32 m_ArgHash;
//     struct tVector3__1_5581 m_ArgVec;
//     undefined field17_0x2a;
//     undefined field18_0x2b;
// };
// 
// typedef struct tActionWindImpulse tActionWindImpulse, *PtActionWindImpulse;
// 
// struct tActionWindImpulse {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     struct tImpulse m_Impulse;
// };
// 
// typedef struct tActionZoom tActionZoom, *PtActionZoom;
// 
// struct tActionZoom {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_Name; /* Inherited from tActionCameraObject */
//     UINT8 m_CSFlags; /* Inherited from tActionCameraObject */
//     undefined field11_0x19;
//     struct FLOAT16 m_Amount; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_Width; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_WideScreenRatio; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_MicBoomRatio; /* Inherited from tActionCameraObject */
//     undefined field16_0x22;
//     undefined field17_0x23;
//     struct tTween m_TweenIn; /* Inherited from tActionCameraObject */
//     struct tTween m_TweenOut; /* Inherited from tActionCameraObject */
// };
// 
// typedef enum TargetFlags {
//     kAllocatedHandle=-2147483648
// } TargetFlags;
// 
// typedef struct TargetList TargetList, *PTargetList;
// 
// struct TargetList {
//     struct stdListNode *fHead; /* Inherited from stdDLList */
//     struct stdListNode *fTail; /* Inherited from stdDLList */
//     int fNumTargets;
// };
// 
// typedef struct tBlock tBlock, *PtBlock;
// 
// struct tBlock {
//     FLOAT m_Width;
//     FLOAT m_Height;
//     FLOAT m_Depth;
//     FLOAT m_Direction;
//     FLOAT m_Position;
// };
// 
// typedef struct tBlockEntry tBlockEntry, *PtBlockEntry;
// 
// struct tBlockEntry {
//     UINT32 uWidth;
//     UINT32 uHeight;
//     UINT32 uDepthIndex;
//     UINT32 uTextureFormat;
//     UINT32 uByteSize;
//     UINT32 *pMask;
//     INT32 uPageSize;
// };
// 
// typedef struct tBloodSplats tBloodSplats, *PtBloodSplats;
// 
// struct tBloodSplats {
//     FLOAT m_Offset;
//     FLOAT m_Cone;
//     FLOAT m_Impulse;
//     FLOAT m_Gravity;
//     FLOAT m_NominalDistance;
//     FLOAT m_NominalParticles;
//     FLOAT m_NominalSize;
//     FLOAT m_FallTime;
//     FLOAT m_EmitTime;
//     FLOAT m_ClampSpreadSize;
//     FLOAT m_ClampParticleSize;
//     INT16 m_ClampNumParticles;
//     undefined field12_0x2e;
//     undefined field13_0x2f;
//     UINT32 m_ParticleGOName;
// };
// 
// typedef struct tBloodSplatSystem tBloodSplatSystem, *PtBloodSplatSystem;
// 
// typedef struct tBloodSplatSystem__vtable tBloodSplatSystem__vtable, *PtBloodSplatSystem__vtable;
// 
// struct tBloodSplatSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tBloodSplatSystem;
// };
// 
// struct tBloodSplatSystem {
//     struct ShotData m_Shots[16];
//     struct RayData m_Rays[16];
//     struct goGameObject *m_pGO;
//     struct renParticleSystem *m_pPS;
//     UINT8 m_iNumShots;
//     UINT8 m_iNumRays;
//     UINT8 m_iLastRay;
//     undefined field7_0x70b;
//     struct tBloodSplatSystem__vtable *__vtable;
// };
// 
// typedef struct tBloom tBloom, *PtBloom;
// 
// struct tBloom {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColorMod m_Tint;
//     struct tColorMod m_TintM;
//     struct tColorMod m_TintB;
//     FLOAT m_TopPoint;
//     FLOAT m_MiddlePoint;
//     FLOAT m_BottomPoint;
//     UINT32 m_BlendMode;
//     FLOAT m_Alpha;
//     FLOAT m_SkyboxAlpha;
//     INT32 m_Layered;
//     undefined field14_0x5c;
//     undefined field15_0x5d;
//     undefined field16_0x5e;
//     undefined field17_0x5f;
// };
// 
// typedef struct tBone tBone, *PtBone;
// 
// struct tBone {
//     struct tStage__1_6890 *m_StageList;
// };
// 
// typedef struct tBonusMilestones tBonusMilestones, *PtBonusMilestones;
// 
// struct tBonusMilestones {
//     INT16 m_Threshold;
//     undefined field1_0x2;
//     undefined field2_0x3;
//     struct tBonus **m_BonusList;
//     INT32 *m_HitList;
// };
// 
// typedef struct tBranchDecision tBranchDecision, *PtBranchDecision;
// 
// struct tBranchDecision {
//     struct tMove__1_6354 *m_Move; /* Inherited from tBranch */
//     struct tMaterialFX *m_MaterialFX; /* Inherited from tBranch */
//     UINT32 m_Flags; /* Inherited from tBranch */
//     UINT32 m_IgnoreFlags; /* Inherited from tBranch */
//     struct FLOAT16 m_On; /* Inherited from tBranch */
//     struct FLOAT16 m_Off; /* Inherited from tBranch */
//     struct FLOAT16 m_StartPos; /* Inherited from tBranch */
//     INT16 m_TargetHealthMin; /* Inherited from tBranch */
//     INT16 m_TargetHealthMax; /* Inherited from tBranch */
//     INT16 m_HealthMin; /* Inherited from tBranch */
//     INT16 m_HealthMax; /* Inherited from tBranch */
//     INT8 m_EnemyID; /* Inherited from tBranch */
//     INT8 m_EnemyContext; /* Inherited from tBranch */
//     UINT8 m_Event; /* Inherited from tBranch */
//     UINT8 m_EventMod; /* Inherited from tBranch */
//     UINT8 m_Joystick; /* Inherited from tBranch */
//     UINT8 m_Item; /* Inherited from tBranch */
//     INT8 m_WeaponLevelMin; /* Inherited from tBranch */
//     undefined field18_0x25;
//     undefined field19_0x26;
//     undefined field20_0x27;
//     struct tDecision *m_Decision;
//     struct tBranch *m_TrueBranch;
//     struct tBranch *m_FalseBranch;
// };
// 
// typedef struct tBubblesEffect tBubblesEffect, *PtBubblesEffect;
// 
// struct tBubblesEffect {
//     struct goGameObject *m_pBubbleGO;
//     struct renParticleSystem *m_pBubblePS;
//     int m_iBubbleJoints[6];
//     FLOAT m_fNewBubbles;
//     struct goCreatureCollision *m_pCreature;
//     INT32 m_iBubbleCnt;
// };
// 
// typedef struct tCanSpawnDecision tCanSpawnDecision, *PtCanSpawnDecision;
// 
// struct tCanSpawnDecision {
//     UINT8 m_Operand1; /* Inherited from tDecision */
//     UINT8 m_Operator; /* Inherited from tDecision */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Operand2; /* Inherited from tDecision */
//     UINT32 m_EntityName;
// };
// 
// typedef struct tCategory tCategory, *PtCategory;
// 
// struct tCategory {
//     FLOAT m_Weight;
//     INT32 m_Cap;
//     INT32 *m_GradeList;
// };
// 
// typedef struct tChained__1_18490 tChained__1_18490, *PtChained__1_18490;
// 
// typedef struct tChained__1_18490__vtable tChained__1_18490__vtable, *PtChained__1_18490__vtable;
// 
// struct tChained__1_18490__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tChained;
//     struct __vtbl_ptr_type Update;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type Warp;
//     struct __vtbl_ptr_type PrepareForUnloading;
//     struct __vtbl_ptr_type Show;
//     struct __vtbl_ptr_type Hide;
// };
// 
// struct tChained__1_18490 {
//     tITwk *m_pTwk; /* Inherited from tHand */
//     struct tSys *m_pSys; /* Inherited from tHand */
//     struct goGameObject *m_pGO; /* Inherited from tHand */
//     short int m_iBladeJointIdx[3]; /* Inherited from tHand */
//     INT16 m_iBladeStatus; /* Inherited from tHand */
//     INT16 m_iAttachmentID; /* Inherited from tHand */
//     undefined field6_0x16;
//     undefined field7_0x17;
//     UINT32 m_uFlags; /* Inherited from tHand */
//     struct stdCList<fxClient *,stdAllocator<stdCListNodeBase> > *m_aBFXLists[5]; /* Inherited from tHand */
//     struct goHandle m_hSliceEffect; /* Inherited from tHand */
//     struct ClientParm__1_9257 *m_pSliceSound; /* Inherited from tHand */
//     UINT32 m_uLastSliceMFX; /* Inherited from tHand */
//     UINT32 m_uLastSliceFrame; /* Inherited from tHand */
//     struct tChained__1_18490__vtable *__vtable; /* Inherited from tHand */
//     undefined field15_0x44;
//     undefined field16_0x45;
//     undefined field17_0x46;
//     undefined field18_0x47;
//     undefined field19_0x48;
//     undefined field20_0x49;
//     undefined field21_0x4a;
//     undefined field22_0x4b;
//     undefined field23_0x4c;
//     undefined field24_0x4d;
//     undefined field25_0x4e;
//     undefined field26_0x4f;
//     struct VUMat4 m_mBladeCurr;
//     struct VUMat4 m_mBladeTarget;
//     struct VUVec4 m_vChainTangentAtBlade;
//     struct VUVec4 m_vCollisionMovement;
//     struct VUVec4 m_vClipPlane;
//     struct VUVec4 m_vLightPos;
//     INT16 m_iHandChainJointIdx;
//     INT16 m_iBladeChainJointIdx;
//     INT16 m_iPelvisJointIdx;
//     undefined field36_0x116;
//     undefined field37_0x117;
//     FLOAT m_fCurrentRotDamping;
//     FLOAT m_fCurrentPosDamping;
//     FLOAT m_fTimeSinceCollision;
//     struct renLight *m_pLight;
//     struct fxTrailClientParm *m_pTrailClientParm;
//     struct fxTrail *m_pTrail;
//     struct renEEPrim *m_pTrailGapFiller;
//     struct renEEPrimParm *m_pTrailGapFillerParm;
//     struct renEEPrim *m_pLinkEEPrim;
//     struct renEEPrimParm *m_pLinkEEPrimParm;
//     struct renEEPrim *m_pGlowEEPrim;
//     struct renEEPrimParm *m_pGlowEEPrimParm;
//     INT32 m_iNumChunks;
//     INT32 m_iNumVertsPerChunk;
//     struct renEEPrim *m_pShadowEEPrim;
//     struct renEEPrimParm *m_pShadowEEPrimParm;
//     INT32 m_iShadowNumChunks;
//     INT32 m_iShadowNumVertsPerChunk;
// };
// 
// typedef struct tChained__1_7668 tChained__1_7668, *PtChained__1_7668;
// 
// struct tChained__1_7668 {
//     char *m_GOName; /* Inherited from tHand */
//     char *m_InHandJoint; /* Inherited from tHand */
//     char *m_OutHandJoint; /* Inherited from tHand */
//     char *m_OnBackJoint; /* Inherited from tHand */
//     FLOAT m_SnapDistance; /* Inherited from tHand */
//     UINT8 m_Heap; /* Inherited from tHand */
//     UINT8 m_SlicePart; /* Inherited from tHand */
//     undefined field7_0x16;
//     undefined field8_0x17;
//     FLOAT m_SliceForwardDist; /* Inherited from tHand */
//     FLOAT m_SliceBackwardDist; /* Inherited from tHand */
//     UINT8 m_Type; /* Inherited from tHand */
//     UINT8 m_Flags; /* Inherited from tHand */
//     undefined field13_0x22;
//     undefined field14_0x23;
//     char *m_HandChainJoint;
//     char *m_BladeChainJoint;
// };
// 
// typedef struct tChallengeMode tChallengeMode, *PtChallengeMode;
// 
// typedef struct tStage__1_7157 tStage__1_7157, *PtStage__1_7157;
// 
// struct tChallengeMode {
//     struct tStage__1_7157 *m_StageList;
//     INT32 *m_GradeList;
// };
// 
// struct tStage__1_7157 {
//     struct tCategory *m_CategoryList;
// };
// 
// typedef struct tCategory tCHCat;
// 
// typedef struct tChallengeMode tCHMode;
// 
// typedef struct tStage__1_7157 tCHStage;
// 
// typedef struct Color<float> tColorF;
// 
// typedef struct Color<unsigned char> tColorI;
// 
// typedef struct tComboBlast tComboBlast, *PtComboBlast;
// 
// struct tComboBlast {
//     INT16 m_Threshold;
//     undefined field1_0x2;
//     undefined field2_0x3;
//     FLOAT m_Damage;
//     INT8 m_DamageFreq;
//     INT8 m_Context;
//     undefined field6_0xa;
//     undefined field7_0xb;
//     FLOAT m_Duration;
//     FLOAT m_Reach;
//     UINT32 m_JointName;
//     struct tImpulse m_GroundImpulse;
//     struct tImpulse m_AirImpulse;
// };
// 
// typedef struct tConcussion tConcussion, *PtConcussion;
// 
// struct tConcussion {
//     UINT8 m_Type; /* Inherited from tConcussionBase */
//     UINT8 m_Flags; /* Inherited from tConcussionBase */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_GOName; /* Inherited from tConcussionBase */
//     UINT32 m_JointName; /* Inherited from tConcussionBase */
//     struct tCollision *m_Collision; /* Inherited from tConcussionBase */
//     FLOAT m_FreezeAmount; /* Inherited from tConcussionBase */
//     INT8 m_Context; /* Inherited from tConcussionBase */
//     undefined field9_0x15;
//     undefined field10_0x16;
//     undefined field11_0x17;
//     UINT32 m_HitFlags; /* Inherited from tConcussionBase */
//     FLOAT *m_DurationList; /* Inherited from tConcussionBase */
//     UINT8 m_Heap; /* Inherited from tConcussionBase */
//     undefined field15_0x21;
//     undefined field16_0x22;
//     undefined field17_0x23;
//     FLOAT m_PieAngle;
//     FLOAT *m_RadiusList;
// };
// 
// typedef struct tConcussionBlock tConcussionBlock, *PtConcussionBlock;
// 
// struct tConcussionBlock {
//     UINT8 m_Type; /* Inherited from tConcussionBase */
//     UINT8 m_Flags; /* Inherited from tConcussionBase */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_GOName; /* Inherited from tConcussionBase */
//     UINT32 m_JointName; /* Inherited from tConcussionBase */
//     struct tCollision *m_Collision; /* Inherited from tConcussionBase */
//     FLOAT m_FreezeAmount; /* Inherited from tConcussionBase */
//     INT8 m_Context; /* Inherited from tConcussionBase */
//     undefined field9_0x15;
//     undefined field10_0x16;
//     undefined field11_0x17;
//     UINT32 m_HitFlags; /* Inherited from tConcussionBase */
//     FLOAT *m_DurationList; /* Inherited from tConcussionBase */
//     UINT8 m_Heap; /* Inherited from tConcussionBase */
//     undefined field15_0x21;
//     undefined field16_0x22;
//     undefined field17_0x23;
//     struct tBlock *m_BlockList;
// };
// 
// typedef struct tConcussionPlane tConcussionPlane, *PtConcussionPlane;
// 
// typedef struct tPlane tPlane, *PtPlane;
// 
// struct tConcussionPlane {
//     UINT8 m_Type; /* Inherited from tConcussionBase */
//     UINT8 m_Flags; /* Inherited from tConcussionBase */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_GOName; /* Inherited from tConcussionBase */
//     UINT32 m_JointName; /* Inherited from tConcussionBase */
//     struct tCollision *m_Collision; /* Inherited from tConcussionBase */
//     FLOAT m_FreezeAmount; /* Inherited from tConcussionBase */
//     INT8 m_Context; /* Inherited from tConcussionBase */
//     undefined field9_0x15;
//     undefined field10_0x16;
//     undefined field11_0x17;
//     UINT32 m_HitFlags; /* Inherited from tConcussionBase */
//     FLOAT *m_DurationList; /* Inherited from tConcussionBase */
//     UINT8 m_Heap; /* Inherited from tConcussionBase */
//     undefined field15_0x21;
//     undefined field16_0x22;
//     undefined field17_0x23;
//     struct tPlane *m_PlaneList;
// };
// 
// struct tPlane {
//     FLOAT m_Width;
//     FLOAT m_Height;
//     FLOAT m_Direction;
//     FLOAT m_Position;
// };
// 
// typedef struct tCostume tCostume, *PtCostume;
// 
// typedef struct tStage__1_6826 tStage__1_6826, *PtStage__1_6826;
// 
// struct tStage__1_6826 {
//     FLOAT m_DamageMult;
//     FLOAT m_AIDamageMult;
//     FLOAT m_HealthOrbMult;
//     FLOAT m_MagicOrbMult;
//     FLOAT m_GodModeOrbMult;
//     FLOAT m_WeaponOrbMult;
//     FLOAT m_WeaponLength;
//     FLOAT m_GodModeWeaponLength;
//     UINT8 m_Flags;
//     undefined field9_0x21;
//     undefined field10_0x22;
//     undefined field11_0x23;
// };
// 
// struct tCostume {
//     struct tStage__1_6826 *m_StageList;
// };
// 
// typedef struct tD_ASR0 tD_ASR0, *PtD_ASR0;
// 
// struct tD_ASR0 {
//     unsigned int ADDR:31;
//     unsigned int SPR:1;
// };
// 
// typedef struct tD_ASR1 tD_ASR1, *PtD_ASR1;
// 
// struct tD_ASR1 {
//     unsigned int ADDR:31;
//     unsigned int SPR:1;
// };
// 
// typedef struct tD_CTRL tD_CTRL, *PtD_CTRL;
// 
// struct tD_CTRL {
//     unsigned int DMAE:1;
//     unsigned int RELE:1;
//     unsigned int MFD:2;
//     unsigned int STS:2;
//     unsigned int STD:2;
//     unsigned int RCYC:3;
//     unsigned int p0:21;
// };
// 
// typedef struct tD_ENABLER tD_ENABLER, *PtD_ENABLER;
// 
// struct tD_ENABLER {
//     unsigned int p0:16;
//     unsigned int CPND:1;
//     unsigned int p1:15;
// };
// 
// typedef struct tD_ENABLEW tD_ENABLEW, *PtD_ENABLEW;
// 
// struct tD_ENABLEW {
//     unsigned int p0:16;
//     unsigned int CPND:1;
//     unsigned int p1:15;
// };
// 
// typedef struct tD_MADR tD_MADR, *PtD_MADR;
// 
// struct tD_MADR {
//     unsigned int ADDR:31;
//     unsigned int SPR:1;
// };
// 
// typedef struct tD_PCR tD_PCR, *PtD_PCR;
// 
// struct tD_PCR {
//     unsigned int CPC0:1;
//     unsigned int CPC1:1;
//     unsigned int CPC2:1;
//     unsigned int CPC3:1;
//     unsigned int CPC4:1;
//     unsigned int CPC5:1;
//     unsigned int CPC6:1;
//     unsigned int CPC7:1;
//     unsigned int CPC8:1;
//     unsigned int CPC9:1;
//     unsigned int p0:6;
//     unsigned int CDE0:1;
//     unsigned int CDE1:1;
//     unsigned int CDE2:1;
//     unsigned int CDE3:1;
//     unsigned int CDE4:1;
//     unsigned int CDE5:1;
//     unsigned int CDE6:1;
//     unsigned int CDE7:1;
//     unsigned int CDE8:1;
//     unsigned int CDE9:1;
//     unsigned int p1:5;
//     unsigned int PCE:1;
// };
// 
// typedef struct tD_QWC tD_QWC, *PtD_QWC;
// 
// struct tD_QWC {
//     unsigned int QWC:16;
//     unsigned int p0:16;
// };
// 
// typedef struct tD_RBOR tD_RBOR, *PtD_RBOR;
// 
// struct tD_RBOR {
//     unsigned int ADDR:31;
//     unsigned int p0:1;
// };
// 
// typedef struct tD_RBSR tD_RBSR, *PtD_RBSR;
// 
// struct tD_RBSR {
//     unsigned int RMSK:31;
//     unsigned int p0:1;
// };
// 
// typedef struct tD_SADR tD_SADR, *PtD_SADR;
// 
// struct tD_SADR {
//     unsigned int ADDR:14;
//     unsigned int p0:18;
// };
// 
// typedef struct tD_SQWC tD_SQWC, *PtD_SQWC;
// 
// struct tD_SQWC {
//     unsigned int SQWC:8;
//     unsigned int p0:8;
//     unsigned int TQWC:8;
//     unsigned int p1:8;
// };
// 
// typedef struct tD_STADR tD_STADR, *PtD_STADR;
// 
// struct tD_STADR {
//     unsigned int ADDR:31;
//     unsigned int p0:1;
// };
// 
// typedef struct tD_STAT tD_STAT, *PtD_STAT;
// 
// struct tD_STAT {
//     unsigned int CIS0:1;
//     unsigned int CIS1:1;
//     unsigned int CIS2:1;
//     unsigned int CIS3:1;
//     unsigned int CIS4:1;
//     unsigned int CIS5:1;
//     unsigned int CIS6:1;
//     unsigned int CIS7:1;
//     unsigned int CIS8:1;
//     unsigned int CIS9:1;
//     unsigned int p0:3;
//     unsigned int SIS:1;
//     unsigned int MEIS:1;
//     unsigned int BEIS:1;
//     unsigned int CIM0:1;
//     unsigned int CIM1:1;
//     unsigned int CIM2:1;
//     unsigned int CIM3:1;
//     unsigned int CIM4:1;
//     unsigned int CIM5:1;
//     unsigned int CIM6:1;
//     unsigned int CIM7:1;
//     unsigned int CIM8:1;
//     unsigned int CIM9:1;
//     unsigned int p1:3;
//     unsigned int SIM:1;
//     unsigned int MEIM:1;
//     unsigned int p2:1;
// };
// 
// typedef struct tD_TADR tD_TADR, *PtD_TADR;
// 
// struct tD_TADR {
//     unsigned int ADDR:31;
//     unsigned int SPR:1;
// };
// 
// typedef struct tDifficulty tDifficulty, *PtDifficulty;
// 
// typedef struct tStage__1_6845 tStage__1_6845, *PtStage__1_6845;
// 
// struct tDifficulty {
//     struct tStage__1_6845 *m_StageList;
// };
// 
// struct tStage__1_6845 {
//     FLOAT m_DamageMult;
//     FLOAT m_AIDamageMult;
//     FLOAT m_MagicCostMult;
//     FLOAT m_HealthOrbMult;
//     FLOAT m_MagicOrbMult;
//     FLOAT m_GodModeOrbMult;
//     FLOAT m_WeaponOrbMult;
//     FLOAT m_GodModeMeterDrainMult;
//     FLOAT m_WiggleMeterDrainMult;
//     FLOAT m_ProximityWeightLimitMult;
//     FLOAT m_FightWeightLimitMult;
//     FLOAT m_ProjectileWeightLimitMult;
//     FLOAT m_RecoveryTimeMult;
//     FLOAT m_ForceActionTimeMult;
// };
// 
// typedef struct tDMADest tDMADest, *PtDMADest;
// 
// struct tDMADest { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef struct tDTreeNode tDTreeNode, *PtDTreeNode;
// 
// struct tDTreeNode {
//     UINT8 m_Type; /* Inherited from tDTreeBaseNode */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tDecision *m_Decision;
//     struct tDTreeBaseNode *m_TrueNode;
//     struct tDTreeBaseNode *m_FalseNode;
// };
// 
// typedef struct tEarth tEarth, *PtEarth;
// 
// typedef struct tStage__1_6979 tStage__1_6979, *PtStage__1_6979;
// 
// struct tStage__1_6979 {
//     FLOAT m_MagicAmount;
//     struct tConcussionBase *m_EnterCnc;
//     struct tConcussionBase *m_EchoCnc;
//     FLOAT m_MashometerDrainRate;
//     FLOAT m_MashometerMax;
//     FLOAT m_RainMinAnimSpeed;
//     FLOAT m_RainMaxAnimSpeed;
//     FLOAT m_RainMaxTime;
//     FLOAT m_RainNoMashMaxTime;
//     INT8 m_RainMaxRocks;
//     undefined field10_0x25;
//     undefined field11_0x26;
//     undefined field12_0x27;
//     FLOAT m_RainMaxRadius;
//     FLOAT m_RainMinRadius;
//     FLOAT m_RainRockMaxSpawnTime;
//     FLOAT m_RainRockMinSpawnTime;
//     FLOAT m_RainRockMinRotVel;
//     FLOAT m_RainRockMaxRotVel;
//     FLOAT m_RainRockGravity;
//     FLOAT m_RainRockInitialScale;
//     FLOAT m_RainRockMinScale;
//     FLOAT m_RainRockMaxScale;
//     FLOAT m_RainRockScaleTime;
//     struct tConcussionBase *m_RainRockCnc;
//     struct tCameraShake *m_RainRockCsh;
//     struct tForceFeedback *m_RainRockFfb;
//     struct tConcussionBase *m_StompCnc;
//     UINT8 m_Flags;
//     undefined field29_0x65;
//     undefined field30_0x66;
//     undefined field31_0x67;
// };
// 
// struct tEarth {
//     struct tStage__1_6979 *m_StageList;
// };
// 
// typedef struct tElectric tElectric, *PtElectric;
// 
// typedef struct tStage__1_7003 tStage__1_7003, *PtStage__1_7003;
// 
// struct tStage__1_7003 {
//     INT8 m_MaxCores;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_CoreMagicAmount;
//     UINT32 m_CoreSpawnJoint;
//     FLOAT m_CoreDuration;
//     struct tConcussionBase *m_CoreExplodeCnc;
//     FLOAT m_CoreMaxDamage;
//     INT8 m_CoreMaxBolts;
//     undefined field10_0x19;
//     undefined field11_0x1a;
//     undefined field12_0x1b;
//     FLOAT m_CoreReach;
//     FLOAT m_BoltDamage;
//     FLOAT m_BoltDamageFreq;
//     INT8 m_BoltHitContext;
//     undefined field17_0x29;
//     undefined field18_0x2a;
//     undefined field19_0x2b;
//     UINT32 m_BoltHitFlags;
//     struct tImpulse m_BoltGroundImpulse;
//     struct tImpulse m_BoltAirImpulse;
//     FLOAT m_PulseDamage;
//     FLOAT m_PulseDamageFreq;
//     INT8 m_PulseHitContext;
//     undefined field26_0x45;
//     undefined field27_0x46;
//     undefined field28_0x47;
//     UINT32 m_PulseHitFlags;
//     struct tImpulse m_PulseGroundImpulse;
//     struct tImpulse m_PulseAirImpulse;
//     UINT8 m_Flags;
//     undefined field33_0x59;
//     undefined field34_0x5a;
//     undefined field35_0x5b;
// };
// 
// struct tElectric {
//     struct tStage__1_7003 *m_StageList;
// };
// 
// typedef undefined1 *terminate_handler;
// 
// typedef struct tFog tFog, *PtFog;
// 
// struct tFog {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tColor__1_5567 m_FogT;
//     struct tColor__1_5567 m_FogM;
//     struct tColor__1_5567 m_FogB;
//     FLOAT m_TopPoint;
//     FLOAT m_MiddlePoint;
//     FLOAT m_BottomPoint;
//     INT32 m_CentreZ;
//     FLOAT m_DeltaX;
//     FLOAT m_DeltaY;
//     FLOAT m_DeltaZ;
//     FLOAT m_TileScale;
//     char m_Material[24];
//     UINT32 m_BlendMode;
//     INT32 m_BackPlaneAlpha;
//     INT32 m_Layered;
//     undefined field19_0x84;
//     undefined field20_0x85;
//     undefined field21_0x86;
//     undefined field22_0x87;
//     undefined field23_0x88;
//     undefined field24_0x89;
//     undefined field25_0x8a;
//     undefined field26_0x8b;
//     undefined field27_0x8c;
//     undefined field28_0x8d;
//     undefined field29_0x8e;
//     undefined field30_0x8f;
// };
// 
// typedef enum tFrameMode {
//     FIELD=0,
//     FRAME=1
// } tFrameMode;
// 
// typedef struct tFS_State tFS_State, *PtFS_State;
// 
// struct tFS_State {
//     INT32 m_ID; /* Inherited from tEffectParm */
//     INT32 m_Type; /* Inherited from tEffectParm */
//     INT32 m_Script; /* Inherited from tEffectParm */
//     INT32 m_WadContext; /* Inherited from tEffectParm */
//     struct tFS_Control *m_Control;
//     struct tFS_DampedMesh *m_DampedMesh;
//     struct tFS_RandomXY *m_RandomXY;
//     struct tFS_Ripple *m_Ripple;
//     struct tFS_Warp *m_Warp;
//     struct tFS_Caustic *m_Caustic;
//     struct tFS_Hole *m_Hole;
//     struct tFS_CameraGel *m_CameraGel;
//     struct tFS_Zoom *m_Zoom;
//     struct tFS_UVClamp *m_UVClamp;
//     UINT8 m_Alpha;
//     undefined field15_0x39;
//     undefined field16_0x3a;
//     undefined field17_0x3b;
// };
// 
// typedef struct tGIF_CNT tGIF_CNT, *PtGIF_CNT;
// 
// struct tGIF_CNT {
//     unsigned int LOOPCNT:15;
//     unsigned int p0:1;
//     unsigned int REGCNT:4;
//     unsigned int VUADDR:10;
//     unsigned int p1:2;
// };
// 
// typedef struct tGIF_CTRL tGIF_CTRL, *PtGIF_CTRL;
// 
// struct tGIF_CTRL {
//     unsigned int RST:1;
//     unsigned int p0:2;
//     unsigned int PSE:1;
//     unsigned int p1:28;
// };
// 
// typedef struct tGIF_MODE tGIF_MODE, *PtGIF_MODE;
// 
// struct tGIF_MODE {
//     unsigned int M3R:1;
//     unsigned int p0:1;
//     unsigned int IMT:1;
//     unsigned int p1:29;
// };
// 
// typedef struct tGIF_P3CNT tGIF_P3CNT, *PtGIF_P3CNT;
// 
// struct tGIF_P3CNT {
//     unsigned int P3CNT:15;
//     unsigned int p0:17;
// };
// 
// typedef struct tGIF_P3TAG tGIF_P3TAG, *PtGIF_P3TAG;
// 
// struct tGIF_P3TAG {
//     unsigned int LOOPCNT:15;
//     unsigned int EOP:1;
//     unsigned int p0:16;
// };
// 
// typedef struct tGIF_STAT tGIF_STAT, *PtGIF_STAT;
// 
// struct tGIF_STAT {
//     unsigned int M3R:1;
//     unsigned int M3P:1;
//     unsigned int IMT:1;
//     unsigned int PSE:1;
//     unsigned int p0:1;
//     unsigned int IP3:1;
//     unsigned int P3Q:1;
//     unsigned int P2Q:1;
//     unsigned int P1Q:1;
//     unsigned int OPH:1;
//     unsigned int APATH:2;
//     unsigned int DIR:1;
//     unsigned int p1:11;
//     unsigned int FQC:5;
//     unsigned int p2:3;
// };
// 
// typedef struct tGIF_TAG0 tGIF_TAG0, *PtGIF_TAG0;
// 
// struct tGIF_TAG0 {
//     unsigned int NLOOP:15;
//     unsigned int EOP:1;
//     unsigned int tag:16;
// };
// 
// typedef struct tGIF_TAG1 tGIF_TAG1, *PtGIF_TAG1;
// 
// struct tGIF_TAG1 {
//     unsigned int tag:14;
//     unsigned int PRE:1;
//     unsigned int PRIM:11;
//     unsigned int FLG:2;
//     unsigned int NREG:4;
// };
// 
// typedef struct tGIF_TAG2 tGIF_TAG2, *PtGIF_TAG2;
// 
// struct tGIF_TAG2 {
//     unsigned int tag;
// };
// 
// typedef struct tGIF_TAG3 tGIF_TAG3, *PtGIF_TAG3;
// 
// struct tGIF_TAG3 {
//     unsigned int tag;
// };
// 
// typedef struct tGlobal tGlobal, *PtGlobal;
// 
// typedef struct tWeapon tWeapon, *PtWeapon;
// 
// typedef struct tGodMode tGodMode, *PtGodMode;
// 
// typedef struct tUrns tUrns, *PtUrns;
// 
// typedef struct tHammer tHammer, *PtHammer;
// 
// typedef struct tMedusa tMedusa, *PtMedusa;
// 
// typedef struct tOlympus tOlympus, *PtOlympus;
// 
// typedef struct tLightning tLightning, *PtLightning;
// 
// typedef struct tWind tWind, *PtWind;
// 
// typedef struct tIcarusWings tIcarusWings, *PtIcarusWings;
// 
// typedef struct tHermesShoes tHermesShoes, *PtHermesShoes;
// 
// typedef struct tPlayerGrade tPlayerGrade, *PtPlayerGrade;
// 
// typedef struct tWadSizeTable__1_7179 tWadSizeTable__1_7179, *PtWadSizeTable__1_7179;
// 
// typedef struct tMPEG tMPEG, *PtMPEG;
// 
// typedef struct tStage__1_6770 tStage__1_6770, *PtStage__1_6770;
// 
// typedef struct tStage__1_6800 tStage__1_6800, *PtStage__1_6800;
// 
// typedef struct tStage__1_6929 tStage__1_6929, *PtStage__1_6929;
// 
// typedef struct tStage__1_7054 tStage__1_7054, *PtStage__1_7054;
// 
// typedef struct tStage__1_7028 tStage__1_7028, *PtStage__1_7028;
// 
// typedef struct tStage__1_7077 tStage__1_7077, *PtStage__1_7077;
// 
// struct tWadSizeTable__1_7179 {
//     UINT32 *m_WadNameList;
//     INT32 *m_HeapSizeList;
//     INT32 *m_GroupList;
// };
// 
// struct tStage__1_7077 {
//     FLOAT m_GustMagicAmount;
//     struct tArrowEmitter *m_GustEmitter;
//     struct tArrowEmitter *m_PegasusGustEmitter;
//     FLOAT m_GustPlaybackSpeed;
//     INT8 m_ChargeGustCount;
//     undefined field5_0x11;
//     undefined field6_0x12;
//     undefined field7_0x13;
//     FLOAT m_ChargeGustMagicAmount;
//     FLOAT m_ChargeGustTime;
//     FLOAT m_ChargeGustMaxVelocity;
//     FLOAT m_ChargeGustMaxVelocityVariation;
//     FLOAT m_ChargeGustDamagePerHit;
//     FLOAT m_ChargeGustHomingAmount;
//     FLOAT m_ChargeGustFlyTime;
//     FLOAT m_ChargeGustAnmLoopPos;
//     INT8 m_ChargeGustHitContext;
//     undefined field17_0x35;
//     undefined field18_0x36;
//     undefined field19_0x37;
//     UINT32 m_ChargeGustHitFlags;
//     struct tImpulse m_ChargeGustImpulse;
//     undefined field22_0x42;
//     undefined field23_0x43;
//     UINT32 m_ChargeGustHitSound;
//     INT8 m_TornadoCount;
//     undefined field26_0x49;
//     undefined field27_0x4a;
//     undefined field28_0x4b;
//     FLOAT m_TornadoSpreadAngle;
//     FLOAT m_TornadoMagicAmount;
//     FLOAT m_TornadoMaxTime;
//     FLOAT m_TornadoRadius;
//     FLOAT m_TornadoRadiusScale;
//     FLOAT m_TornadoRadiusScaleTime;
//     FLOAT m_TornadoDamage;
//     FLOAT m_TornadoVel;
//     FLOAT m_TornadoPosDamping;
//     FLOAT m_TornadoHomingAmount;
//     FLOAT m_TornadoTurbAmount;
//     INT8 m_TornadoHitContext;
//     undefined field41_0x79;
//     undefined field42_0x7a;
//     undefined field43_0x7b;
//     UINT32 m_TornadoHitFlags;
//     struct tImpulse m_TornadoImpulse;
//     undefined field46_0x86;
//     undefined field47_0x87;
//     FLOAT m_TempestMagicAmount;
//     FLOAT m_TempestMaxTime;
//     FLOAT m_TempestRadius;
//     FLOAT m_TempestRadiusScale;
//     FLOAT m_TempestRadiusScaleTime;
//     FLOAT m_TempestDamage;
//     FLOAT m_TempestVel;
//     FLOAT m_TempestPosDamping;
//     INT8 m_TempestHitContext;
//     undefined field57_0xa9;
//     undefined field58_0xaa;
//     undefined field59_0xab;
//     UINT32 m_TempestHitFlags;
//     struct tImpulse m_TempestImpulse;
//     UINT8 m_Flags;
//     undefined field63_0xb7;
// };
// 
// struct tLightning {
//     UINT32 m_HitSound;
//     struct tImpulse m_GroundImpulse;
//     struct tImpulse m_AirImpulse;
//     struct tImpulse m_DischargeImpulse;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     struct tStage__1_7028 *m_StageList;
// };
// 
// struct tWind {
//     struct tStage__1_7077 *m_StageList;
//     struct tStage__1_7077 m_PegasusStage;
// };
// 
// struct tWeapon {
//     struct tStage__1_6770 *m_StageList;
// };
// 
// struct tHermesShoes {
//     FLOAT m_TimeScale;
//     FLOAT m_AITimeScale;
//     FLOAT m_PlayerTimeScale;
//     FLOAT m_MeterDrainRate;
//     FLOAT m_MeterRechargeRate;
//     FLOAT m_FadeInTime;
//     FLOAT m_FadeOutTime;
//     UINT32 m_StartSound;
//     UINT32 m_LoopSound;
//     UINT32 m_EndSound;
//     UINT32 m_BeamJoint;
// };
// 
// struct tUrns {
//     FLOAT m_WeaponOrbMult;
//     FLOAT m_FreezeAmount;
//     FLOAT m_HitCounterResetTimeMult;
// };
// 
// struct tIcarusWings {
//     UINT32 m_WingsGOName;
//     UINT32 m_JointName;
//     UINT32 m_WingsExitAnim;
//     FLOAT m_WingsExitAnimPlaybackSpeed;
//     FLOAT m_Scale;
//     FLOAT m_Stage1Begin;
//     FLOAT m_Stage2Begin;
//     FLOAT m_Stage3Begin;
//     FLOAT m_Stage4Begin;
//     FLOAT m_Stage5Begin;
//     FLOAT m_Stage6Begin;
//     FLOAT m_EffectBegin;
//     FLOAT m_EffectBeginModulate;
//     FLOAT m_EffectEndModulate;
//     FLOAT m_EffectStageModulate;
//     FLOAT m_EffectStageModulateTime;
//     FLOAT m_IcarusResetTime;
//     FLOAT m_NoBankAngle;
//     FLOAT m_MaxBankAngle;
//     FLOAT m_BlendSetDamping;
// };
// 
// struct tStage__1_7028 {
//     FLOAT m_DamagePerSecond;
//     FLOAT m_UrnDamagePerSecond;
//     INT8 m_DamageFreq;
//     undefined field3_0x9;
//     undefined field4_0xa;
//     undefined field5_0xb;
//     FLOAT m_MagicAmount;
//     FLOAT m_Duration;
//     FLOAT m_Reach;
//     UINT8 m_Flags;
//     undefined field10_0x19;
//     undefined field11_0x1a;
//     undefined field12_0x1b;
//     undefined field13_0x1c;
//     undefined field14_0x1d;
//     undefined field15_0x1e;
//     undefined field16_0x1f;
//     struct tColor__1_5567 m_Tint;
//     INT8 m_HitContext;
//     undefined field19_0x31;
//     undefined field20_0x32;
//     undefined field21_0x33;
//     UINT32 m_HitFlags;
//     FLOAT m_MashDamageScale;
//     FLOAT m_MashDamageFreqScale;
//     FLOAT m_MashDischargeDamageScale;
//     FLOAT m_MashReachScale;
//     FLOAT m_MashCoilVelocityScale;
//     FLOAT m_MashMaxSpin;
//     FLOAT m_MashometerDrainRate;
//     FLOAT m_MashometerMax;
//     undefined field31_0x58;
//     undefined field32_0x59;
//     undefined field33_0x5a;
//     undefined field34_0x5b;
//     undefined field35_0x5c;
//     undefined field36_0x5d;
//     undefined field37_0x5e;
//     undefined field38_0x5f;
// };
// 
// struct tMPEG {
//     UINT32 m_Name;
//     UINT8 m_USAudio;
//     UINT8 m_EUAudio;
//     UINT8 m_EUVideo;
//     UINT8 m_MissingWidescreen;
// };
// 
// struct tOlympus {
//     struct tStage__1_6953 *m_StageList;
// };
// 
// struct tHammer {
//     struct tStage__1_6929 *m_StageList;
// };
// 
// struct tMedusa {
//     struct tStage__1_7054 *m_StageList;
// };
// 
// struct tGodMode {
//     struct tStage__1_6800 *m_StageList;
// };
// 
// struct tPlayerGrade {
//     FLOAT *m_WeightList;
//     INT32 *m_CapList;
//     INT32 *m_ThresholdList;
// };
// 
// struct tGlobal {
//     INT16 *m_MaxHitPointsList;
//     INT16 *m_MaxMagicList;
//     INT16 *m_MaxHermesList;
//     FLOAT m_TargetingRange;
//     FLOAT m_ManualTargetingRange;
//     INT8 m_DeathsBeforeEasyOffer;
//     INT8 m_ShardsPerLevel;
//     undefined field7_0x16;
//     undefined field8_0x17;
//     FLOAT m_DeathMenuTime;
//     FLOAT m_HitCounterResetTime;
//     FLOAT m_MeterBarHoldTime;
//     FLOAT m_WiggleALittleThreshold;
//     FLOAT m_WiggleALotThreshold;
//     FLOAT m_WiggleAFuckLotThreshold;
//     FLOAT m_WiggleMeterDrain;
//     FLOAT m_PlayerUnfreezeSpeed;
//     FLOAT m_PlayerFreezeMinTimeScale;
//     FLOAT m_PlayerFreezeMaxTimeScale;
//     FLOAT m_AIUnfreezeSpeed;
//     FLOAT m_AIFreezeMinTimeScale;
//     FLOAT m_AIFreezeMaxTimeScale;
//     FLOAT m_FrozenInvulnerableTime;
//     FLOAT m_StatueVerticalBreakSpeed;
//     FLOAT m_LowHealthThreshold;
//     FLOAT m_LowHealthMinFreq;
//     FLOAT m_LowHealthMinVolume;
//     FLOAT m_LowHealthMaxFreq;
//     FLOAT m_LowHealthDeathFreq;
//     FLOAT m_LowHealthDeathTimer;
//     undefined field30_0x6c;
//     undefined field31_0x6d;
//     undefined field32_0x6e;
//     undefined field33_0x6f;
//     struct tColor__1_5567 m_ReticleValidTint;
//     struct tColor__1_5567 m_ReticleInvalidTint;
//     FLOAT m_BladeDamping;
//     FLOAT m_BladeCollisionTolerance;
//     FLOAT m_ChainMaxLength;
//     FLOAT m_ChainSegmentLength;
//     FLOAT m_ChainLinkDiameter;
//     FLOAT m_ChainGlowDiameter;
//     FLOAT m_ChainShadowDiameter;
//     FLOAT m_ControlTweenSafety;
//     FLOAT m_ControlTweenSpeed;
//     FLOAT m_ControlTweenThreshold;
//     struct tWeapon m_Weapon;
//     struct tGodMode m_GodMode;
//     struct tCostume m_Costume;
//     struct tDifficulty m_Difficulty;
//     struct tUrns m_Urns;
//     struct tBonusMilestones m_BonusMilestones;
//     struct tBone m_Bone;
//     struct tHammer m_Hammer;
//     struct tMedusa m_Medusa;
//     struct tOlympus m_Olympus;
//     struct tEarth m_Earth;
//     struct tElectric m_Electric;
//     struct tLightning m_Lightning;
//     struct tWind m_Wind;
//     struct tPegasus m_Pegasus;
//     struct tIcarusWings m_IcarusWings;
//     struct tHermesShoes m_HermesShoes;
//     struct tBloodSplats m_BloodSplats;
//     struct tPlayerGrade m_PlayerGrade;
//     struct tChallengeMode m_ChallengeMode;
//     struct tDecalInfo *m_DecalList;
//     struct tWadSizeTable__1_7179 m_WadSizeTable;
//     INT32 m_HeroIOP;
//     INT32 m_HeroSPU;
//     INT32 m_UpgradeIOP;
//     INT32 m_UpgradeSPU;
//     char *m_FirstLevel;
//     undefined field73_0x40c;
//     undefined field74_0x40d;
//     undefined field75_0x40e;
//     undefined field76_0x40f;
//     struct tColor__1_5567 m_FlashMsg1Color;
//     struct tColor__1_5567 m_FlashMsg2Color;
//     struct tColor__1_5567 m_FlashMsg3Color;
//     struct tColor__1_5567 m_FlashMsg4Color;
//     struct tColor__1_5567 m_FlashMsg5Color;
//     struct tColor__1_5567 m_FlashMsg6Color;
//     FLOAT m_FlashMsg1Slant;
//     FLOAT m_FlashMsg2Slant;
//     FLOAT m_FlashMsg3Slant;
//     FLOAT m_FlashMsg4Slant;
//     FLOAT m_FlashMsg5Slant;
//     FLOAT m_FlashMsg6Slant;
//     FLOAT m_FlashMsgRate;
//     struct tMPEG *m_MPEGs;
// };
// 
// struct tStage__1_6800 {
//     struct tColor__1_5567 m_TrailTint;
//     struct tColor__1_5567 m_Tint;
//     FLOAT m_MeterDrain;
//     FLOAT m_StartupThreshold;
//     FLOAT m_StartupCost;
//     FLOAT m_ReactivateDelay;
//     FLOAT m_DamageMult;
//     FLOAT m_AIDamageMult;
//     FLOAT m_ImpulseMult;
//     struct tComboBlast *m_ComboBlastList;
//     UINT32 m_LoopSnd;
//     UINT32 m_EndSnd;
//     FLOAT m_EndSndThreshold;
//     UINT8 m_Flags;
//     undefined field14_0x4d;
//     undefined field15_0x4e;
//     undefined field16_0x4f;
// };
// 
// struct tStage__1_7054 {
//     FLOAT m_BeamDistance;
//     FLOAT m_BeamConeTopRadius;
//     FLOAT m_BeamConeBaseRadius;
//     FLOAT m_BeamFreezeRate;
//     UINT32 m_BeamEffectName;
//     FLOAT m_BeamMeterDrainRate;
//     FLOAT m_FlashDistance;
//     FLOAT m_FlashConeTopRadius;
//     FLOAT m_FlashConeBaseRadius;
//     FLOAT m_FlashFreezeAmount;
//     UINT32 m_FlashEffectName;
//     FLOAT m_FlashMeterAmount;
//     struct tArrowEmitter *m_BombEmitter;
//     FLOAT m_BombMeterAmount;
//     struct tConcussionBase *m_NukeConcussion;
//     FLOAT m_NukeChargeTime;
//     FLOAT m_NukeMeterAmount;
//     FLOAT m_NukeAnmLoopPos;
//     UINT8 m_Flags;
//     undefined field19_0x49;
//     undefined field20_0x4a;
//     undefined field21_0x4b;
// };
// 
// struct tStage__1_6770 {
//     struct tColor__1_5567 m_TrailTint;
//     FLOAT m_DamageMult;
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
// };
// 
// struct tStage__1_6929 {
//     FLOAT m_DamageMult;
//     INT8 m_MaxSouls;
//     INT8 m_MaxSoulsPerSecond;
//     undefined field3_0x6;
//     undefined field4_0x7;
//     FLOAT m_SoulReach;
//     struct tSoul *m_SoulList;
//     UINT8 m_Flags;
//     undefined field8_0x11;
//     undefined field9_0x12;
//     undefined field10_0x13;
// };
// 
// typedef struct tGOPool tGOPool, *PtGOPool;
// 
// struct tGOPool {
//     UINT32 m_Name;
//     UINT16 m_Cnt;
//     undefined field2_0x6;
//     undefined field3_0x7;
// };
// 
// typedef struct tGridAI tGridAI, *PtGridAI;
// 
// struct tGridAI {
//     UINT8 m_Type; /* Inherited from tAIBase */
//     undefined field1_0x1;
//     UINT16 m_Flags; /* Inherited from tAIBase */
//     FLOAT m_SpawnClearRadius; /* Inherited from tAIBase */
//     INT32 m_DefaultGridID;
//     struct tSpacePartition **m_PartitionGrids;
// };
// 
// typedef struct tGS_BUSDIR tGS_BUSDIR, *PtGS_BUSDIR;
// 
// struct tGS_BUSDIR {
//     unsigned int DIR:1;
//     unsigned int p0:31;
//     unsigned int p1;
// };
// 
// typedef struct tGS_CSR tGS_CSR, *PtGS_CSR;
// 
// struct tGS_CSR {
//     unsigned int SIGNAL:1;
//     unsigned int FINISH:1;
//     unsigned int HSINT:1;
//     unsigned int VSINT:1;
//     unsigned int EDWINT:1;
//     unsigned int p0:3;
//     unsigned int FLUSH:1;
//     unsigned int RESET:1;
//     unsigned int p1:2;
//     unsigned int NFIELD:1;
//     unsigned int FIELD:1;
//     unsigned int FIFO:2;
//     unsigned int REV:8;
//     unsigned int ID:8;
//     unsigned int p2;
// };
// 
// typedef struct tGS_EXTBUF tGS_EXTBUF, *PtGS_EXTBUF;
// 
// struct tGS_EXTBUF {
//     unsigned int EXBP:14;
//     unsigned int EXBW:6;
//     unsigned int FBIN:2;
//     unsigned int WFFMD:1;
//     unsigned int EMODA:2;
//     unsigned int EMODC:2;
//     unsigned int p0:5;
//     unsigned int WDX:11;
//     unsigned int WDY:11;
//     unsigned int p1:10;
// };
// 
// typedef struct tGS_EXTDATA tGS_EXTDATA, *PtGS_EXTDATA;
// 
// struct tGS_EXTDATA {
//     unsigned int SX:12;
//     unsigned int SY:11;
//     unsigned int SMPH:4;
//     unsigned int SMPV:2;
//     unsigned int p0:3;
//     unsigned int WW:12;
//     unsigned int WH:11;
//     unsigned int p1:9;
// };
// 
// typedef struct tGS_EXTWRITE tGS_EXTWRITE, *PtGS_EXTWRITE;
// 
// struct tGS_EXTWRITE {
//     unsigned int WRITE:1;
//     unsigned int p0:31;
//     unsigned int p1;
// };
// 
// typedef struct tGS_IMR tGS_IMR, *PtGS_IMR;
// 
// struct tGS_IMR {
//     unsigned int p0:8;
//     unsigned int SIGMSK:1;
//     unsigned int FINISHMSK:1;
//     unsigned int HSMSK:1;
//     unsigned int VSMSK:1;
//     unsigned int EDWMSK:1;
//     unsigned int p1:19;
//     unsigned int p2;
// };
// 
// typedef struct tGS_SIGLBLID tGS_SIGLBLID, *PtGS_SIGLBLID;
// 
// struct tGS_SIGLBLID {
//     unsigned int SIGID;
//     unsigned int LBLID;
// };
// 
// typedef enum tGSStatus {
//     DMA_NOT_KICKED=0,
//     DMA_KICKED_NOT_DONE=1,
//     DMA_AND_GS_DONE=2
// } tGSStatus;
// 
// typedef struct tStage__1_6929 tHammerStage;
// 
// typedef struct ThreadParam ThreadParam, *PThreadParam;
// 
// struct ThreadParam {
//     int status;
//     undefined1 *entry;
//     void *stack;
//     int stackSize;
//     void *gpReg;
//     int initPriority;
//     int currentPriority;
//     u_int attr;
//     u_int option;
//     int waitType;
//     int waitId;
//     int wakeupCount;
// };
// 
// typedef undefined1 *tIFFChunkFunc;
// 
// typedef long int time_t;
// 
// typedef struct TimerData TimerData, *PTimerData;
// 
// struct TimerData {
//     struct goGameObject *m_Recvr;
//     FLOAT m_fTimeLeft;
// };
// 
// typedef struct tIOBase tIOBase, *PtIOBase;
// 
// struct tIOBase {
//     UINT8 m_BaseFlags;
// };
// 
// typedef struct tIPU_BP tIPU_BP, *PtIPU_BP;
// 
// struct tIPU_BP {
//     unsigned int BP:7;
//     unsigned int p0:1;
//     unsigned int IFC:4;
//     unsigned int p1:4;
//     unsigned int FP:2;
//     unsigned int p2:14;
// };
// 
// typedef struct tIPU_CMD_read tIPU_CMD_read, *PtIPU_CMD_read;
// 
// struct tIPU_CMD_read {
//     unsigned int DATA;
//     unsigned int p0:31;
//     unsigned int BUSY:1;
// };
// 
// typedef struct tIPU_CMD_write tIPU_CMD_write, *PtIPU_CMD_write;
// 
// struct tIPU_CMD_write {
//     unsigned int OPTION:28;
//     unsigned int CODE:4;
// };
// 
// typedef struct tIPU_CTRL tIPU_CTRL, *PtIPU_CTRL;
// 
// struct tIPU_CTRL {
//     unsigned int IFC:4;
//     unsigned int OFC:4;
//     unsigned int CBP:6;
//     unsigned int ECD:1;
//     unsigned int SCD:1;
//     unsigned int IDP:2;
//     unsigned int p0:2;
//     unsigned int AS:1;
//     unsigned int IVF:1;
//     unsigned int QST:1;
//     unsigned int MP1:1;
//     unsigned int PCT:3;
//     unsigned int p1:3;
//     unsigned int RST:1;
//     unsigned int BUSY:1;
// };
// 
// typedef struct tIPU_TOP tIPU_TOP, *PtIPU_TOP;
// 
// struct tIPU_TOP {
//     unsigned int BSTOP;
//     unsigned int p0:31;
//     unsigned int BUSY:1;
// };
// 
// typedef struct tKeys tKeys, *PtKeys;
// 
// struct tKeys {
//     UINT32 m_uFirstKey;
//     UINT32 m_uFirstAntiAliasKey;
//     UINT32 m_uFirstNSKey;
//     UINT32 m_uFirstNSAntiAliasKey;
//     UINT32 m_uFirstSubAlphaKey;
//     UINT32 m_uFirstAddAlphaKey;
//     UINT32 m_uFirstSub2AlphaKey;
//     UINT32 m_uMaxKey;
// };
// 
// typedef struct tKickType tKickType, *PtKickType;
// 
// struct tKickType { /* Probably forward declared, but not defined, in a translation unit with symbols. */
//     undefined field0_0x0;
// };
// 
// typedef undefined1 *tLayerCallBackFunc;
// 
// typedef struct tMatchBranch tMatchBranch, *PtMatchBranch;
// 
// struct tMatchBranch {
//     UINT8 m_Type; /* Inherited from tMatchData */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     UINT32 m_Branch;
//     FLOAT m_Refraction;
// };
// 
// typedef struct tMatchString tMatchString, *PtMatchString;
// 
// struct tMatchString {
//     UINT8 m_Type; /* Inherited from tMatchData */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     char *m_String;
// };
// 
// typedef struct tMatEntry tMatEntry, *PtMatEntry;
// 
// struct tMatEntry {
//     struct renMaterial *pMaterial;
//     struct renGfxClut *pGfx[2];
// };
// 
// typedef struct tMemoryPool tMemoryPool, *PtMemoryPool;
// 
// struct tMemoryPool {
//     UINT32 m_Name;
//     UINT16 m_ElementCount;
//     undefined field2_0x6;
//     undefined field3_0x7;
// };
// 
// typedef struct tMotionP tMotionP, *PtMotionP;
// 
// struct tMotionP {
//     FLOAT m_RunMinSpeed;
//     FLOAT m_RunMaxSpeed;
//     FLOAT m_RunAcc;
//     FLOAT m_RunDec;
//     FLOAT m_GroundTurnDamping;
//     FLOAT m_LeanTurnDamping;
//     FLOAT m_StrafeAcc;
//     FLOAT m_StrafeDec;
//     FLOAT m_StrafeRunMaxSpeed;
// };
// 
// typedef struct tNavBank tNavBank, *PtNavBank;
// 
// struct tNavBank {
//     UINT8 m_BankType; /* Inherited from tNavBankBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tMotionP *m_MotionP;
//     struct tBranch *m_Stand;
//     struct tBranch *m_Walk;
//     struct tBranch *m_Jump;
//     struct tBranch *m_VJump;
//     struct tBranch *m_Fall;
//     struct tBranch *m_FallLoop;
//     struct tBranch *m_HighFall;
//     struct tBranch *m_HighFallLoop;
//     struct tBranch *m_VFall;
//     struct tBranch *m_VFallLoop;
//     struct tBranch *m_Land;
//     struct tBranch *m_HighLand;
//     struct tBranch *m_VLand;
//     struct tBranch *m_TurnOnSpot;
//     struct tBranch *m_Strafe;
//     struct tBranch *m_StrafeIdle;
//     struct tBranch *m_Fly;
//     struct tBranch *m_FlyIdle;
//     struct tBranch *m_WallHang;
//     struct tBranch *m_WallHangCatch;
//     struct tBranch *m_WallHangR;
//     struct tBranch *m_WallHangL;
//     struct tBranch *m_WJump;
//     struct tBranch *m_DblJump;
//     struct tBranch *m_VDblJump;
//     struct tBranch *m_DblFall;
//     struct tBranch *m_VDblFall;
//     struct tBranch *m_Climb;
//     struct tBranch *m_ClimbIdle;
//     struct tBranch *m_ClimbAL;
//     struct tBranch *m_ClimbAR;
//     struct tBranch *m_ClimbALIdle;
//     struct tBranch *m_ClimbARIdle;
//     struct tBranch *m_ClimbAU;
//     struct tBranch *m_ClimbAD;
//     struct tBranch *m_ClimbAUIdle;
//     struct tBranch *m_ClimbADIdle;
//     struct tBranch *m_ClimbALJump;
//     struct tBranch *m_ClimbARJump;
//     struct tBranch *m_ClimbAUJump;
//     struct tBranch *m_ClimbADJump;
//     struct tBranch *m_Slide;
//     struct tBranch *m_Swim;
//     struct tBranch *m_SwimIdle;
//     struct tBranch *m_Tread;
//     struct tBranch *m_TreadSwim;
//     struct tBranch *m_DiveDashC;
//     struct tBranch *m_DiveDashCI;
//     struct tBranch *m_DiveDash;
//     struct tBranch *m_Dive1;
//     struct tBranch *m_Dive2;
//     struct tBranch *m_BalanceWalk;
//     struct tBranch *m_BalanceCatch;
//     struct tBranch *m_BalancePullUpL;
//     struct tBranch *m_BalancePullUpR;
//     struct tBranch *m_WallPullUp;
//     struct tBranch *m_WallFront;
//     struct tBranch *m_WallFrontR;
//     struct tBranch *m_WallFrontL;
//     struct tBranch *m_WallBack;
//     struct tBranch *m_WallBackR;
//     struct tBranch *m_WallBackL;
//     struct tBranch *m_WallBackDrop;
//     struct tBranch *m_WallFrontDrop;
//     struct tBranch *m_Rope;
//     struct tBranch *m_RopeU;
//     struct tBranch *m_RopeD;
//     struct tBranch *m_RSlide;
//     struct tBranch *m_BRope;
//     struct tBranch *m_BRopeF;
//     struct tBranch *m_ZipLine;
//     struct tBranch *m_Ladder;
//     struct tBranch *m_LadderU;
//     struct tBranch *m_LadderD;
//     struct tBranch *m_LadderJumpU;
//     struct tBranch *m_LDis1;
//     struct tBranch *m_LDis2;
//     struct tBranch *m_LSlide;
//     struct tBranch *m_PushI;
//     struct tBranch *m_PushL;
//     struct tBranch *m_PushR;
//     struct tBranch *m_PushF;
//     struct tBranch *m_PushB;
//     struct tBranch *m_StartKickBox;
//     struct tBranch *m_KickBoxIdle;
//     struct tBranch *m_KickBox;
//     struct tBranch *m_CrankIdle;
//     struct tBranch *m_CrankPush;
//     struct tBranch *m_CrankPull;
//     struct tBranch *m_CrankPushL;
//     struct tBranch *m_CrankPullL;
//     struct tBranch *m_CrankPushR;
//     struct tBranch *m_CrankPullR;
//     struct tBranch *m_Lever;
//     struct tBranch *m_UWLever;
//     struct tBranch *m_IcarusEnter;
//     struct tBranch *m_IcarusDrift;
//     struct tBranch *m_IcarusReset;
//     struct tBranch *m_IcarusPlummet;
//     struct tBranch *m_IcarusPlummetLoop;
//     struct tBranch *m_IcarusPlummetLand;
//     struct tBranch *m_IcarusLand;
//     struct tBranch *m_CeilingStand;
//     struct tBranch *m_CeilingWalk;
//     struct tBranch *m_CeilingLand;
//     struct tBranch *m_CeilingJump;
//     struct tBranch *m_PegasusIdle;
//     struct tBranch *m_BCtoWH;
//     struct tBranch *m_GrappleEnter;
//     struct tBranch *m_GrappleU;
//     struct tBranch *m_GrappleD;
//     struct tBranch *m_GrappleJumpF;
//     struct tBranch *m_GrappleJumpB;
//     struct tBranch *m_GrappleSWStart;
//     struct tBranch *m_GrappleSWIdle;
//     struct tBranch *m_GrappleSW1;
//     struct tBranch *m_GrappleSW2;
//     struct tBranch *m_GrappleSW3;
//     struct tBranch *m_GrappleSW4;
//     struct tBranch *m_GrappleCircle;
//     struct tBranch *m_CeilingToClimb;
//     struct tBranch *m_ClimbToCeiling;
//     struct tBranch *m_UnderhangToClimb;
//     struct tBranch *m_ClimbToUnderhang;
//     struct tBranch *m_DeathSink;
// };
// 
// typedef struct Tornado Tornado, *PTornado;
// 
// struct Tornado {
//     struct VUVec4 m_vPos;
//     struct VUVec4 m_vVel;
//     struct goGameObject *m_pGO;
//     FLOAT m_fTimeLeft;
//     FLOAT m_fDamage;
//     FLOAT m_fRadius;
//     FLOAT m_fRadiusScale;
//     FLOAT m_fRadiusScaleSpeed;
//     FLOAT m_fPosDamping;
//     FLOAT m_fPosY;
//     INT32 m_iHitContext;
//     UINT32 m_uHitFlags;
//     struct tImpulse *m_pImpulse;
//     struct goHandle m_hTarget;
//     FLOAT m_fHomingAmount;
//     FLOAT m_fTurbAmount;
//     INT32 m_iNumHits;
//     struct goGameObject *m_aHits[10];
//     undefined field18_0x84;
//     undefined field19_0x85;
//     undefined field20_0x86;
//     undefined field21_0x87;
//     undefined field22_0x88;
//     undefined field23_0x89;
//     undefined field24_0x8a;
//     undefined field25_0x8b;
//     undefined field26_0x8c;
//     undefined field27_0x8d;
//     undefined field28_0x8e;
//     undefined field29_0x8f;
// };
// 
// typedef struct tPair<unsigned int> tPair<unsigned int>, *PtPair<unsigned int>;
// 
// struct tPair<unsigned int> {
//     UINT _first;
//     UINT _second;
// };
// 
// typedef struct tPassiveAI tPassiveAI, *PtPassiveAI;
// 
// struct tPassiveAI {
//     UINT8 m_Type; /* Inherited from tAIBase */
//     undefined field1_0x1;
//     UINT16 m_Flags; /* Inherited from tAIBase */
//     FLOAT m_SpawnClearRadius; /* Inherited from tAIBase */
//     FLOAT m_AutoUnfreeze;
//     struct tBranch *m_StartBranch;
// };
// 
// typedef struct tPassiveNavBank tPassiveNavBank, *PtPassiveNavBank;
// 
// struct tPassiveNavBank {
//     UINT8 m_BankType; /* Inherited from tNavBankBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tBranch *m_Stand;
//     struct tBranch *m_Fall;
//     struct tBranch *m_FallLoop;
//     struct tBranch *m_HighFall;
//     struct tBranch *m_HighFallLoop;
//     struct tBranch *m_VFall;
//     struct tBranch *m_VFallLoop;
//     struct tBranch *m_Land;
//     struct tBranch *m_VLand;
//     struct tBranch *m_HighLand;
// };
// 
// typedef struct tPegasusActionCameraObject tPegasusActionCameraObject, *PtPegasusActionCameraObject;
// 
// struct tPegasusActionCameraObject {
//     UINT8 m_Type; /* Inherited from tActionBase */
//     UINT8 m_Flags; /* Inherited from tActionBase */
//     UINT8 m_Condition; /* Inherited from tActionBase */
//     INT8 m_WeaponLevelMin; /* Inherited from tActionBase */
//     struct FLOAT16 m_On; /* Inherited from tActionBase */
//     struct FLOAT16 m_Off; /* Inherited from tActionBase */
//     UINT32 m_ScriptName; /* Inherited from tActionScript */
//     void *m_ArgData; /* Inherited from tActionScript */
//     FLOAT m_ArgVal; /* Inherited from tActionScript */
//     UINT32 m_Name; /* Inherited from tActionCameraObject */
//     UINT8 m_CSFlags; /* Inherited from tActionCameraObject */
//     undefined field11_0x19;
//     struct FLOAT16 m_Amount; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_Width; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_WideScreenRatio; /* Inherited from tActionCameraObject */
//     struct FLOAT16 m_MicBoomRatio; /* Inherited from tActionCameraObject */
//     undefined field16_0x22;
//     undefined field17_0x23;
//     struct tTween m_TweenIn; /* Inherited from tActionCameraObject */
//     struct tTween m_TweenOut; /* Inherited from tActionCameraObject */
// };
// 
// typedef struct tPegasusNavBank tPegasusNavBank, *PtPegasusNavBank;
// 
// struct tPegasusNavBank {
//     UINT8 m_BankType; /* Inherited from tNavBankBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     struct tBranch *m_Stand;
//     struct tBranch *m_Flight;
//     struct tBranch *m_LockedOn;
//     struct tBranch *m_DropBack;
//     struct tBranch *m_Flap;
//     struct tBranch *m_Projectile;
// };
// 
// typedef struct tPegasusSoldier tPegasusSoldier, *PtPegasusSoldier;
// 
// struct tPegasusSoldier {
//     char *m_GOName; /* Inherited from tSoldierBase */
//     FLOAT m_PlaybackSpeedScale; /* Inherited from tSoldierBase */
//     FLOAT m_TweenTimeScale; /* Inherited from tSoldierBase */
//     UINT8 m_SoldierType; /* Inherited from tSoldierBase */
//     undefined field4_0xd;
//     UINT16 m_Flags; /* Inherited from tSoldierBase */
//     struct tAttachments **m_AttachmentList; /* Inherited from tSoldierBase */
//     struct tCameraTarget *m_Targets; /* Inherited from tSoldierBase */
//     FLOAT m_Scale; /* Inherited from tSoldierBase */
//     FLOAT m_Mass; /* Inherited from tSoldierBase */
//     FLOAT m_Friction; /* Inherited from tSoldierBase */
//     FLOAT m_Radius; /* Inherited from tSoldierBase */
//     FLOAT m_Height; /* Inherited from tSoldierBase */
//     FLOAT m_Buoyancy; /* Inherited from tSoldierBase */
//     FLOAT m_StepHeight; /* Inherited from tSoldierBase */
//     FLOAT m_StepHeightDown; /* Inherited from tSoldierBase */
//     FLOAT m_TerminalVel; /* Inherited from tSoldierBase */
//     FLOAT m_HighFallVel; /* Inherited from tSoldierBase */
//     FLOAT m_InAirAcc; /* Inherited from tSoldierBase */
//     FLOAT m_DeathFadeToBlackTime; /* Inherited from tSoldierBase */
//     FLOAT m_DeathFadeBlackToGoneTime; /* Inherited from tSoldierBase */
//     char *m_DeathEffect; /* Inherited from tSoldierBase */
//     FLOAT m_FreezeResistance; /* Inherited from tSoldierBase */
//     struct tBranch *m_FreezeMove; /* Inherited from tSoldierBase */
//     char *m_FrozenGOName; /* Inherited from tSoldierBase */
//     char *m_FrozenFXName; /* Inherited from tSoldierBase */
//     char *m_HeadTrackJoint; /* Inherited from tSoldierBase */
//     FLOAT m_HeadTrackJointOrientX; /* Inherited from tSoldierBase */
//     FLOAT m_HeadTrackMaxAngle; /* Inherited from tSoldierBase */
// };
// 
// typedef enum tPixelFormat {
//     PSMCT32=0,
//     PSMCT24=1,
//     PSMCT16=2,
//     PSMCT16S=10,
//     PSMT8=19,
//     PSMT4=20,
//     PSMT8H=27,
//     PSMT4HL=36,
//     PSMT4HH=44
// } tPixelFormat;
// 
// typedef struct tPlayerEffectSystem tPlayerEffectSystem, *PtPlayerEffectSystem;
// 
// typedef struct tPlayerEffectSystem__vtable tPlayerEffectSystem__vtable, *PtPlayerEffectSystem__vtable;
// 
// struct tPlayerEffectSystem {
//     struct tRipplesEffect *m_pRipples; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameMotionStateFlags; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameSoldierModeFlags; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameSoldierInfoFlags; /* Inherited from tEffectSystem */
//     FLOAT m_fTimer; /* Inherited from tEffectSystem */
//     UINT32 m_uFlags; /* Inherited from tEffectSystem */
//     struct tPlayerEffectSystem__vtable *__vtable; /* Inherited from tEffectSystem */
//     struct tBubblesEffect *m_pBubbles;
//     FLOAT m_fDeathFadeToBlackTime;
//     FLOAT m_fDeathFadeBlackToGoneTime;
//     struct Emitter *m_UnderWaterEmitter;
// };
// 
// struct tPlayerEffectSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tPlayerEffectSystem;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type UpdateSoldierEffects;
//     struct __vtbl_ptr_type UpdateS;
//     struct __vtbl_ptr_type InitDead;
//     struct __vtbl_ptr_type InitFadeOut;
// };
// 
// typedef struct tPlayerInfo tPlayerInfo, *PtPlayerInfo;
// 
// struct tPlayerInfo {
//     struct anmPlayer *_pPlayer;
//     FLOAT _fTotalTime;
//     FLOAT _fMS;
// };
// 
// typedef struct tPlayFX tPlayFX, *PtPlayFX;
// 
// struct tPlayFX {
//     UINT32 m_GOName;
//     UINT32 m_JointName;
//     FLOAT m_NumParticleScale;
//     FLOAT m_ScaleX;
//     FLOAT m_ScaleY;
//     FLOAT m_ScaleZ;
//     FLOAT m_OffsetX;
//     FLOAT m_OffsetY;
//     FLOAT m_OffsetZ;
//     FLOAT m_RotateX;
//     FLOAT m_RotateY;
//     FLOAT m_RotateZ;
//     UINT16 m_Flags;
//     UINT8 m_Heap;
//     undefined field14_0x33;
// };
// 
// typedef struct tPortal tPortal, *PtPortal;
// 
// typedef struct tPortal__vtable tPortal__vtable, *PtPortal__vtable;
// 
// struct tPortal__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type GetPortalMatrix;
// };
// 
// struct tPortal {
//     struct VUVec4 m_vPortalPlane;
//     struct VUVec4 m_vToPortal;
//     struct renGROB *m_pGROB;
//     BOOL m_bBlur;
//     BOOL m_bNoUserObjects;
//     struct tPortal__vtable *__vtable;
// };
// 
// typedef struct tPS3Global tPS3Global, *PtPS3Global;
// 
// typedef struct tWadSizeTable__1_7265 tWadSizeTable__1_7265, *PtWadSizeTable__1_7265;
// 
// struct tWadSizeTable__1_7265 {
//     UINT32 *m_WadNameList;
//     INT32 *m_HeapSizeList;
//     INT32 *m_VRAMSizeList;
// };
// 
// struct tPS3Global {
//     struct tWadSizeTable__1_7265 m_WadSizeTable;
// };
// 
// typedef struct TrackCurveAngleSphericalF TrackCurveAngleSphericalF, *PTrackCurveAngleSphericalF;
// 
// struct TrackCurveAngleSphericalF {
//     struct VUVec4 fTargetPoint; /* Inherited from TrackCurveBaseF */
//     struct nurbsCurve *fCurve; /* Inherited from TrackCurveBaseF */
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
//     float fLMin;
//     float fLMax;
//     float fEMin;
//     float fEMax;
//     float fRMin;
//     float fRMax;
//     int fCalcTangent;
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
// };
// 
// typedef struct TrackCurveBaseF TrackCurveBaseF, *PTrackCurveBaseF;
// 
// struct TrackCurveBaseF {
//     struct VUVec4 fTargetPoint;
//     struct nurbsCurve *fCurve;
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
// };
// 
// typedef struct TrackCurvePerpendicularF TrackCurvePerpendicularF, *PTrackCurvePerpendicularF;
// 
// struct TrackCurvePerpendicularF {
//     struct VUVec4 fTargetPoint; /* Inherited from TrackCurveBaseF */
//     struct nurbsCurve *fCurve; /* Inherited from TrackCurveBaseF */
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
//     float fLMin;
//     float fLMax;
//     float fEMin;
//     float fEMax;
//     float fRMin;
//     float fRMax;
//     int fCalcTangent;
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
// };
// 
// typedef struct TrackCurveSphericalF TrackCurveSphericalF, *PTrackCurveSphericalF;
// 
// struct TrackCurveSphericalF {
//     struct VUVec4 fTargetPoint; /* Inherited from TrackCurveBaseF */
//     struct nurbsCurve *fCurve; /* Inherited from TrackCurveBaseF */
//     undefined field2_0x14;
//     undefined field3_0x15;
//     undefined field4_0x16;
//     undefined field5_0x17;
//     undefined field6_0x18;
//     undefined field7_0x19;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
//     undefined field10_0x1c;
//     undefined field11_0x1d;
//     undefined field12_0x1e;
//     undefined field13_0x1f;
//     float fMin;
//     float fMax;
//     undefined field16_0x28;
//     undefined field17_0x29;
//     undefined field18_0x2a;
//     undefined field19_0x2b;
//     undefined field20_0x2c;
//     undefined field21_0x2d;
//     undefined field22_0x2e;
//     undefined field23_0x2f;
// };
// 
// typedef struct tRepeatPress tRepeatPress, *PtRepeatPress;
// 
// struct tRepeatPress {
//     FLOAT m_TotalTime;
//     FLOAT m_SlipToleranceTime;
//     FLOAT m_QuickPenaltyTime;
//     FLOAT m_ForwardAmount;
//     FLOAT m_PushBackAmount;
//     UINT32 m_MasterReplaceAnim;
//     UINT8 m_Button;
//     UINT8 m_RepeatPressFlags;
//     undefined field8_0x1a;
//     undefined field9_0x1b;
// };
// 
// typedef struct tRepeatPressData tRepeatPressData, *PtRepeatPressData;
// 
// struct tRepeatPressData {
//     struct tRepeatPress *m_pTweaks;
//     FLOAT m_fSlipTime;
//     FLOAT m_fTotalTime;
//     FLOAT m_fPos;
//     FLOAT m_fVisualPos;
//     UINT32 m_uFlags;
//     INT32 m_iMasterFileIdx;
//     INT32 m_iSlaveFileIdx;
//     struct goHandle m_hSynchSlave;
// };
// 
// typedef struct tRippleVars tRippleVars, *PtRippleVars;
// 
// struct tRippleVars {
//     FLOAT fAspect;
//     FLOAT fXScale;
//     FLOAT fOX;
//     FLOAT fOY;
//     FLOAT fX;
//     FLOAT fY;
//     FLOAT fDist;
//     FLOAT fMul;
//     FLOAT fRingU;
//     FLOAT fRingV;
//     FLOAT fAmplU_0;
//     FLOAT fAmplV_0;
//     FLOAT fDiffRingU;
//     FLOAT fDiffRingV;
//     undefined field14_0x38;
//     undefined field15_0x39;
//     undefined field16_0x3a;
//     undefined field17_0x3b;
//     undefined field18_0x3c;
//     undefined field19_0x3d;
//     undefined field20_0x3e;
//     undefined field21_0x3f;
//     struct VUVec4 vOff;
// };
// 
// typedef struct tScriptInfo tScriptInfo, *PtScriptInfo;
// 
// struct tScriptInfo {
//     struct goScript *m_pScript;
//     UINT32 m_uScriptName;
//     INT32 m_iScriptData;
// };
// 
// typedef enum tServerID {
//     RootServerID=0,
//     GameObjectServerID=1,
//     MasterPrimServerID=2,
//     AnimationServerID=3,
//     ScriptServerID=4,
//     MasterServerID=5,
//     LightServerID=6,
//     TextureServerID=7,
//     MaterialServerID=8,
//     CameraServerID=9,
//     PrologueServerID=10,
//     EpilogueServerID=11,
//     GfxClutServerID=12,
//     MasterRenderServerID=13,
//     TriStripServerID=14,
//     ModelServerID=15,
//     CollisionServerID=16,
//     ParticleServerID=17,
//     WaypointServerID=18,
//     EventServerID=19,
//     BhvrServerID=20,
//     SoundServerID=21,
//     WadServerID=22,
//     EEPrimServerID=23,
//     StaticTriServerID=24,
//     EffectsServerID=25,
//     ParticlePrimServerID=26,
//     FlashServerID=27,
//     FlashPrimServerID=28,
//     ShadowServerID=32,
//     PS3TriServerID=33,
//     LastServerID=34
// } tServerID;
// 
// typedef struct tShadowEdge tShadowEdge, *PtShadowEdge;
// 
// struct tShadowEdge {
//     UINT16 m_nV1Idx;
//     UINT16 m_nV2Idx;
// };
// 
// typedef struct tShadowEdgeRef tShadowEdgeRef, *PtShadowEdgeRef;
// 
// struct tShadowEdgeRef {
//     UINT16 m_nEdgeIdx;
//     UINT16 m_bEdgeInverted;
// };
// 
// typedef struct tShadowPoly tShadowPoly, *PtShadowPoly;
// 
// struct tShadowPoly {
//     UINT16 m_nNumEdges;
//     UINT16 m_nEdgeRefListStartIndex;
// };
// 
// typedef UINT16 tShadowVertexRef;
// 
// typedef struct tSlotAction tSlotAction, *PtSlotAction;
// 
// struct tSlotAction {
//     UINT8 m_Type; /* Inherited from tSlotBase */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Chance; /* Inherited from tSlotBase */
//     struct tDecision **m_PassDecisions; /* Inherited from tSlotBase */
//     struct FLOAT16 m_MinRange; /* Inherited from tSlotActionBase */
//     struct FLOAT16 m_MaxRange; /* Inherited from tSlotActionBase */
//     INT16 m_FightAggression; /* Inherited from tSlotActionBase */
//     INT16 m_ProjectileAggression; /* Inherited from tSlotActionBase */
//     struct FLOAT16 m_RecoveryTime; /* Inherited from tSlotActionBase */
//     struct FLOAT16 m_GlobalMoveRecoveryTime; /* Inherited from tSlotActionBase */
//     struct tBranch *m_Move;
// };
// 
// typedef struct tSlotBase tSlotBase, *PtSlotBase;
// 
// struct tSlotBase {
//     UINT8 m_Type;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Chance;
//     struct tDecision **m_PassDecisions;
// };
// 
// typedef struct tSoundGlobals tSoundGlobals, *PtSoundGlobals;
// 
// struct tSoundGlobals {
//     struct tReverbPreset *m_ReverbPresets;
//     struct tMixerSetting *m_MixerSettings;
//     FLOAT m_SlowMoScale;
//     FLOAT m_SlowMoMaxSlew;
//     FLOAT m_UnderwaterVolumeScale;
//     INT16 m_UnderwaterPitchOffset;
//     undefined field6_0x16;
//     undefined field7_0x17;
//     FLOAT m_UnderwaterMusicVolScale;
//     FLOAT m_UnderwaterTweenTime;
//     FLOAT m_MicMaxDistance;
//     FLOAT m_MicBoomRatio;
// };
// 
// typedef struct tSpacePartitionRange tSpacePartitionRange, *PtSpacePartitionRange;
// 
// struct tSpacePartitionRange {
//     UINT8 m_Type; /* Inherited from tSpacePartitionElement */
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     INT32 m_ID; /* Inherited from tSpacePartitionElement */
//     FLOAT m_Start;
//     FLOAT m_End;
// };
// 
// typedef struct tStandardEffectSystem tStandardEffectSystem, *PtStandardEffectSystem;
// 
// typedef struct tStandardEffectSystem__vtable tStandardEffectSystem__vtable, *PtStandardEffectSystem__vtable;
// 
// typedef union tStandardEffectSystem__unnamed_32 tStandardEffectSystem__unnamed_32, *PtStandardEffectSystem__unnamed_32;
// 
// typedef struct tStandardEffectSystem__unnamed__unnamed_32 tStandardEffectSystem__unnamed__unnamed_32, *PtStandardEffectSystem__unnamed__unnamed_32;
// 
// typedef struct tStandardEffectSystem__unnamed__unnamed_32 tStandardEffectSystem__unnamed__unnamed_32, *PtStandardEffectSystem__unnamed__unnamed_32;
// 
// struct tStandardEffectSystem__unnamed__unnamed_32 {
//     FLOAT m_fDeathFadeToBlackTime;
//     FLOAT m_fDeathFadeBlackToGoneTime;
// };
// 
// struct tStandardEffectSystem__unnamed__unnamed_32 {
//     FLOAT m_fOpaqueTime;
//     FLOAT m_fFadeTime;
// };
// 
// struct tStandardEffectSystem__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type tStandardEffectSystem;
//     struct __vtbl_ptr_type Init;
//     struct __vtbl_ptr_type Reset;
//     struct __vtbl_ptr_type UpdateSoldierEffects;
//     struct __vtbl_ptr_type UpdateS;
//     struct __vtbl_ptr_type InitDead;
//     struct __vtbl_ptr_type InitFadeOut;
// };
// 
// union tStandardEffectSystem__unnamed_32 {
//     struct tStandardEffectSystem__unnamed__unnamed_32 field0;
//     struct tStandardEffectSystem__unnamed__unnamed_32 field1;
// };
// 
// struct tStandardEffectSystem {
//     struct tRipplesEffect *m_pRipples; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameMotionStateFlags; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameSoldierModeFlags; /* Inherited from tEffectSystem */
//     UINT32 m_uLastFrameSoldierInfoFlags; /* Inherited from tEffectSystem */
//     FLOAT m_fTimer; /* Inherited from tEffectSystem */
//     UINT32 m_uFlags; /* Inherited from tEffectSystem */
//     struct tStandardEffectSystem__vtable *__vtable; /* Inherited from tEffectSystem */
//     struct goParmBase *m_pDeathEffectParm;
//     union tStandardEffectSystem__unnamed_32 field8_0x20;
// };
// 
// typedef struct tT_COMP tT_COMP, *PtT_COMP;
// 
// struct tT_COMP {
//     unsigned int COMP:16;
//     unsigned int p0:16;
// };
// 
// typedef struct tT_COUNT tT_COUNT, *PtT_COUNT;
// 
// struct tT_COUNT {
//     unsigned int COUNT:16;
//     unsigned int p0:16;
// };
// 
// typedef struct tT_HOLD tT_HOLD, *PtT_HOLD;
// 
// struct tT_HOLD {
//     unsigned int HOLD:16;
//     unsigned int p0:16;
// };
// 
// typedef struct tT_MODE tT_MODE, *PtT_MODE;
// 
// struct tT_MODE {
//     unsigned int CLKS:2;
//     unsigned int GATE:1;
//     unsigned int GATS:1;
//     unsigned int GATM:2;
//     unsigned int ZRET:1;
//     unsigned int CUE:1;
//     unsigned int CMPE:1;
//     unsigned int OVFE:1;
//     unsigned int EQUF:1;
//     unsigned int OVFF:1;
//     unsigned int p0:20;
// };
// 
// typedef struct tTargetMoveNameDecision tTargetMoveNameDecision, *PtTargetMoveNameDecision;
// 
// struct tTargetMoveNameDecision {
//     UINT8 m_Operand1; /* Inherited from tDecision */
//     UINT8 m_Operator; /* Inherited from tDecision */
//     undefined field2_0x2;
//     undefined field3_0x3;
//     FLOAT m_Operand2; /* Inherited from tDecision */
//     UINT32 m_MoveName;
// };
// 
// typedef struct tTimedPress tTimedPress, *PtTimedPress;
// 
// struct tTimedPress {
//     UINT32 m_OnSound;
//     UINT32 m_PressSound;
//     UINT8 m_Button;
//     INT8 m_MaxWrongZones;
//     undefined field4_0xa;
//     undefined field5_0xb;
// };
// 
// typedef struct tTimedPressData tTimedPressData, *PtTimedPressData;
// 
// struct tTimedPressData {
//     struct tTimedPress *m_pTweaks;
//     UINT16 m_iButton;
//     UINT16 m_iWrongButton;
//     INT8 m_iCurrentZoneIdx;
//     UINT8 m_uPrevJoystickZone;
//     INT8 m_iWrongZonesCounted;
//     INT8 m_bFailed;
// };
// 
// typedef struct TurbulenceTest TurbulenceTest, *PTurbulenceTest;
// 
// struct TurbulenceTest {
//     undefined field0_0x0;
// };
// 
// typedef struct Vector3<float> tVector3F;
// 
// typedef struct Vector3<int> Vector3<int>, *PVector3<int>;
// 
// typedef struct Vector3<int> tVector3I;
// 
// struct Vector3<int> {
//     INT32 x;
//     INT32 y;
//     INT32 z;
// };
// 
// typedef struct Vector4<float> tVector4F;
// 
// typedef struct Vector4<float> tVector4FA;
// 
// typedef struct Vector4<int> Vector4<int>, *PVector4<int>;
// 
// typedef struct Vector4<int> tVector4I;
// 
// 
// typedef enum tVideoMode {
//     VESA=0,
//     NTSC=2,
//     PAL=3,
//     DTV480P=80
// } tVideoMode;
// 
// typedef struct tVIF0_ERR tVIF0_ERR, *PtVIF0_ERR;
// 
// struct tVIF0_ERR {
//     unsigned int MII:1;
//     unsigned int ME0:1;
//     unsigned int ME1:1;
//     unsigned int p0:29;
// };
// 
// typedef struct tVIF0_FBRST tVIF0_FBRST, *PtVIF0_FBRST;
// 
// struct tVIF0_FBRST {
//     unsigned int RST:1;
//     unsigned int FBK:1;
//     unsigned int STP:1;
//     unsigned int STC:1;
//     unsigned int p0:28;
// };
// 
// typedef struct tVIF0_NUM tVIF0_NUM, *PtVIF0_NUM;
// 
// struct tVIF0_NUM {
//     unsigned int num:8;
//     unsigned int p0:24;
// };
// 
// typedef struct tVIF0_STAT tVIF0_STAT, *PtVIF0_STAT;
// 
// struct tVIF0_STAT {
//     unsigned int VPS:2;
//     unsigned int VEW:1;
//     unsigned int p0:3;
//     unsigned int MRK:1;
//     unsigned int p1:1;
//     unsigned int VSS:1;
//     unsigned int VFS:1;
//     unsigned int VIS:1;
//     unsigned int INT:1;
//     unsigned int ERO:1;
//     unsigned int ER1:1;
//     unsigned int p2:10;
//     unsigned int FQC:4;
//     unsigned int p3:4;
// };
// 
// typedef struct tVIF1_BASE tVIF1_BASE, *PtVIF1_BASE;
// 
// struct tVIF1_BASE {
//     unsigned int BASE:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF1_ERR tVIF1_ERR, *PtVIF1_ERR;
// 
// struct tVIF1_ERR {
//     unsigned int MII:1;
//     unsigned int ME0:1;
//     unsigned int ME1:1;
//     unsigned int p0:29;
// };
// 
// typedef struct tVIF1_FBRST tVIF1_FBRST, *PtVIF1_FBRST;
// 
// struct tVIF1_FBRST {
//     unsigned int RST:1;
//     unsigned int FBK:1;
//     unsigned int STP:1;
//     unsigned int STC:1;
//     unsigned int p0:28;
// };
// 
// typedef struct tVIF1_NUM tVIF1_NUM, *PtVIF1_NUM;
// 
// struct tVIF1_NUM {
//     unsigned int num:8;
//     unsigned int p0:24;
// };
// 
// typedef struct tVIF1_OFST tVIF1_OFST, *PtVIF1_OFST;
// 
// struct tVIF1_OFST {
//     unsigned int OFFSET:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF1_STAT tVIF1_STAT, *PtVIF1_STAT;
// 
// struct tVIF1_STAT {
//     unsigned int VPS:2;
//     unsigned int VEW:1;
//     unsigned int VGW:1;
//     unsigned int p0:2;
//     unsigned int MRK:1;
//     unsigned int DBF:1;
//     unsigned int VSS:1;
//     unsigned int VFS:1;
//     unsigned int VIS:1;
//     unsigned int INT:1;
//     unsigned int ERO:1;
//     unsigned int ER1:1;
//     unsigned int p1:9;
//     unsigned int FDR:1;
//     unsigned int FQC:5;
//     unsigned int p2:3;
// };
// 
// typedef struct tVIF1_TOP tVIF1_TOP, *PtVIF1_TOP;
// 
// struct tVIF1_TOP {
//     unsigned int TOP:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF1_TOPS tVIF1_TOPS, *PtVIF1_TOPS;
// 
// struct tVIF1_TOPS {
//     unsigned int TOPS:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF_C0 tVIF_C0, *PtVIF_C0;
// 
// struct tVIF_C0 {
//     unsigned int C0;
// };
// 
// typedef struct tVIF_C1 tVIF_C1, *PtVIF_C1;
// 
// struct tVIF_C1 {
//     unsigned int C1;
// };
// 
// typedef struct tVIF_C2 tVIF_C2, *PtVIF_C2;
// 
// struct tVIF_C2 {
//     unsigned int C2;
// };
// 
// typedef struct tVIF_C3 tVIF_C3, *PtVIF_C3;
// 
// struct tVIF_C3 {
//     unsigned int C3;
// };
// 
// typedef struct tVIF_CODE tVIF_CODE, *PtVIF_CODE;
// 
// struct tVIF_CODE {
//     unsigned int immediate:16;
//     unsigned int num:8;
//     unsigned int CMD:8;
// };
// 
// typedef struct tVIF_CYCLE tVIF_CYCLE, *PtVIF_CYCLE;
// 
// struct tVIF_CYCLE {
//     unsigned int CL:8;
//     unsigned int WL:8;
//     unsigned int p0:16;
// };
// 
// typedef struct tVIF_ITOP tVIF_ITOP, *PtVIF_ITOP;
// 
// struct tVIF_ITOP {
//     unsigned int ITOP:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF_ITOPS tVIF_ITOPS, *PtVIF_ITOPS;
// 
// struct tVIF_ITOPS {
//     unsigned int ITOPS:10;
//     unsigned int p0:22;
// };
// 
// typedef struct tVIF_MARK tVIF_MARK, *PtVIF_MARK;
// 
// struct tVIF_MARK {
//     unsigned int MARK:16;
//     unsigned int p0:16;
// };
// 
// typedef struct tVIF_MASK tVIF_MASK, *PtVIF_MASK;
// 
// struct tVIF_MASK {
//     unsigned int m0:2;
//     unsigned int m1:2;
//     unsigned int m2:2;
//     unsigned int m3:2;
//     unsigned int m4:2;
//     unsigned int m5:2;
//     unsigned int m6:2;
//     unsigned int m7:2;
//     unsigned int m8:2;
//     unsigned int m9:2;
//     unsigned int m10:2;
//     unsigned int m11:2;
//     unsigned int m12:2;
//     unsigned int m13:2;
//     unsigned int m14:2;
//     unsigned int m15:2;
// };
// 
// typedef struct tVIF_MODE tVIF_MODE, *PtVIF_MODE;
// 
// struct tVIF_MODE {
//     unsigned int MOD:2;
//     unsigned int p0:30;
// };
// 
// typedef struct tVIF_R0 tVIF_R0, *PtVIF_R0;
// 
// struct tVIF_R0 {
//     unsigned int R0;
// };
// 
// typedef struct tVIF_R1 tVIF_R1, *PtVIF_R1;
// 
// struct tVIF_R1 {
//     unsigned int R1;
// };
// 
// typedef struct tVIF_R2 tVIF_R2, *PtVIF_R2;
// 
// struct tVIF_R2 {
//     unsigned int R2;
// };
// 
// typedef struct tVIF_R3 tVIF_R3, *PtVIF_R3;
// 
// struct tVIF_R3 {
//     unsigned int R3;
// };
// 
// typedef struct TVInfo TVInfo, *PTVInfo;
// 
// struct TVInfo {
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct stdListNode *_pPrevItem; /* Inherited from stdListNode */
//     struct wadContext *wc;
//     struct TriggerVolumeParm *tvp;
//     BOOL connected;
//     UINT32 hiBitIndex;
//     UINT32 nTVs;
//     undefined field7_0x1c;
//     undefined field8_0x1d;
//     undefined field9_0x1e;
//     undefined field10_0x1f;
//     UINT64 ctxtBits;
//     struct goServerContext *ctxt[64];
// };
// 
// typedef struct tWadInfo tWadInfo, *PtWadInfo;
// 
// struct tWadInfo {
//     struct tGOPool *m_GOPool;
//     struct tMemoryPool *m_MemoryPools;
// };
// 
// typedef struct tWarpVars tWarpVars, *PtWarpVars;
// 
// struct tWarpVars {
//     FLOAT fAspect;
//     FLOAT fXScale;
//     FLOAT fOX;
//     FLOAT fOY;
//     FLOAT fX;
//     FLOAT fY;
//     FLOAT fDist;
//     FLOAT fMul;
//     FLOAT fRingU;
//     FLOAT fRingV;
//     FLOAT fAmplU_0;
//     FLOAT fAmplV_0;
//     FLOAT fDiffRingU;
//     FLOAT fDiffRingV;
//     undefined field14_0x38;
//     undefined field15_0x39;
//     undefined field16_0x3a;
//     undefined field17_0x3b;
//     undefined field18_0x3c;
//     undefined field19_0x3d;
//     undefined field20_0x3e;
//     undefined field21_0x3f;
//     struct VUVec4 vOff;
//     FLOAT fRandom;
//     FLOAT fSpiral_0;
//     FLOAT fSpiral;
//     FLOAT fDiffSpiral;
// };
// 
// typedef struct tWeatherDesc tWeatherDesc, *PtWeatherDesc;
// 
// struct tWeatherDesc {
//     struct SetupFunc m_pFunc;
//     undefined1 *m_pCallback;
//     char *m_pGOName;
//     FLOAT m_fBoxSize;
//     BOOL m_bCameraRelative;
// };
// 
// typedef enum Type {
//     kSurface=0,
//     kParallel=1,
//     kPerpendicular=2,
//     kNumFieldTypes=3
// } Type;
// 
// typedef enum TypeFlags {
//     kIsContextFlg=-2147483648,
//     kFlagsMask=-268435456,
//     kServerMask=65535,
//     kClientMask=268369920,
//     kIsWadContextFlg=536870912,
//     kIsClientFlg=1073741824
// } TypeFlags;
// 
// typedef enum Types__1_12240 {
//     kBirthday=0,
//     kPosition=1,
//     kVelocity=2,
//     kMass=3,
//     kOrientationX=4,
//     kXAxis=4,
//     kOrientationY=5,
//     kYAxis=5,
//     kNormal=6,
//     kOrientationZ=6,
//     kEuler=7,
//     kOrientationE=7,
//     kOrientationQ=8,
//     kQuaternion=8,
//     kNumOutputs=9
// } Types__1_12240;
// 
// typedef enum Types__1_7382 {
//     kTMove=0
// } Types__1_7382;
// 
// typedef struct TypeStandin TypeStandin, *PTypeStandin;
// 
// struct TypeStandin {
//     undefined field0_0x0;
// };
// 
// typedef enum tZFormat {
//     PSMZ32=48,
//     PSMZ24=49,
//     PSMZ16=50,
//     PSMZ16S=58
// } tZFormat;
// 
// typedef UINT16 u16;
// 
// typedef UINT32 u32;
// 
// typedef UINT64 u64;
// 
// typedef UINT8 u8;
// 
// typedef short unsigned int uid_t;
// 
// typedef long unsigned int UInt64;
// 
// typedef enum UIType {
//     UINone=0,
//     UICheckbox=1,
//     UISlider=2,
//     UIEntry=3
// } UIType;
// 
// typedef union unaligned unaligned, *Punaligned;
// 
// union unaligned {
//     void *p;
//     short unsigned int b2;
//     unsigned int b4;
//     long unsigned int b8;
// };
// 
// typedef struct unary_function<svrTemplate<fxClientContainer> *,void> unary_function<svrTemplate<fxClientContainer> *,void>, *Punary_function<svrTemplate<fxClientContainer> *,void>;
// 
// struct unary_function<svrTemplate<fxClientContainer> *,void> {
//     undefined field0_0x0;
// };
// 
// typedef struct unary_function<svrTemplate<svrEmptyContainer> *,void> unary_function<svrTemplate<svrEmptyContainer> *,void>, *Punary_function<svrTemplate<svrEmptyContainer> *,void>;
// 
// struct unary_function<svrTemplate<svrEmptyContainer> *,void> {
//     undefined field0_0x0;
// };
// 
// typedef struct unary_function<svrTemplate<svrListContainer> *,void> unary_function<svrTemplate<svrListContainer> *,void>, *Punary_function<svrTemplate<svrListContainer> *,void>;
// 
// struct unary_function<svrTemplate<svrListContainer> *,void> {
//     undefined field0_0x0;
// };
// 
// typedef struct unary_function<svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > *,void> unary_function<svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > *,void>, *Punary_function<svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > *,void>;
// 
// struct unary_function<svrTemplate<svrTreeContainer<svrCListContainer,goAttachmentLWClient> > *,void> {
//     undefined field0_0x0;
// };
// 
// typedef struct unary_function<svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > *,void> unary_function<svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > *,void>, *Punary_function<svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > *,void>;
// 
// struct unary_function<svrTemplate<svrTreeContainer<svrSortedListContainer,goClient> > *,void> {
//     undefined field0_0x0;
// };
// 
// typedef undefined1 *unexpected_handler;
// 
// typedef struct Uniform Uniform, *PUniform;
// 
// struct Uniform {
//     undefined field0_0x0;
// };
// 
// typedef enum unnamed_-1__2_22 {
//     __no_type_class=-1,
//     __void_type_class=0,
//     __integer_type_class=1,
//     __char_type_class=2,
//     __enumeral_type_class=3,
//     __boolean_type_class=4,
//     __pointer_type_class=5,
//     __reference_type_class=6,
//     __offset_type_class=7,
//     __real_type_class=8,
//     __complex_type_class=9,
//     __function_type_class=10,
//     __method_type_class=11,
//     __record_type_class=12,
//     __union_type_class=13,
//     __array_type_class=14,
//     __string_type_class=15,
//     __set_type_class=16,
//     __file_type_class=17,
//     __lang_type_class=18
// } unnamed_-1__2_22;
// 
// typedef enum unnamed_-1__2_501 {
//     SL_INIT=0,
//     SL_CLOSE=1,
//     SL_LOADBANK=2,
//     SL_LOADBANKBYLOC=3,
//     SL_LOADMMD=4,
//     SL_LOADMMDBYLOC=5,
//     SL_UNLOADBANK_A=6,
//     SL_UNLOADMIDI_A=7,
//     SL_RESOLVEBANKS=8,
//     SL_SETMASTERVOL_A=9,
//     SL_GETMASTERVOL=10,
//     SL_SETPLAYBACKMODE_A=11,
//     SL_GETPLAYBACKMODE=12,
//     SL_SETMIXERMODE_A=13,
//     SL_SETREVERBTYPE=14,
//     SL_SETREVERBDEPTH=15,
//     SL_AUTOVERB=16,
//     SL_PLAYSOUND=17,
//     SL_PLAYSOUND_A=18,
//     SL_PAUSESOUND=19,
//     SL_CONTINUESOUND=20,
//     SL_STOPSOUND=21,
//     SL_PAUSEALLSOUNDS=22,
//     SL_CONTINUEALLSOUNDS=23,
//     SL_STOPALLSOUNDS=24,
//     SL_SOUNDISSTILLPLAYING=25,
//     SL_ISSOUNDALOOPER=26,
//     SL_SETSOUNDVOLPAN_A=27,
//     SL_GETSOUNDORIGPITCH=28,
//     SL_GETSOUNDCURRPITCH=29,
//     SL_SETSOUNDPITCH_A=30,
//     SL_SETSOUNDPITCHBEND_A=31,
//     SL_SETSOUNDPITCHMOD_A=32,
//     SL_SETSOUNDPARAMS=33,
//     SL_AUTOVOL_A=34,
//     SL_AUTOPAN_A=35,
//     SL_AUTOPITCH_A=36,
//     SL_AUTOPITCHBEND_A=37,
//     SL_GETGLOBALEXCITE=38,
//     SL_SETGLOBALEXCITE_A=39,
//     SL_GETMIDIREGISTER=40,
//     SL_SETMIDIREGISTER_A=41,
//     SL_INITVAGSTREAMINGEX=42,
//     SL_PLAYVAGSTREAMBYNAME=43,
//     SL_PLAYVAGSTREAMBYLOC=44,
//     SL_PAUSEVAGSTREAM=45,
//     SL_CONTINUEVAGSTREAM=46,
//     SL_STOPVAGSTREAM=47,
//     SL_GETVAGSTREAMQUEUECOUNT=48,
//     SL_GETVAGSTREAMLOC=49,
//     SL_GETVAGSTREAMTIMEREMAINING=50,
//     SL_GETVAGSTREAMTOTALTIME=51,
//     SL_STOPALLVAGSTREAMS=52,
//     SL_CLOSEVAGSTREAMING=53,
//     SL_STREAMSAFECHECKCDIDLE=54,
//     SL_STREAMSAFECDBREAK=55,
//     SL_STREAMSAFECDREAD=56,
//     SL_ALLOCIOPRAM=57,
//     SL_FREEIOPRAM=58,
//     SL_INITMOVIESOUND=59,
//     SL_CLOSEMOVIESOUND=60,
//     SL_RESETMOVIESOUND=61,
//     SL_STARTMOVIESOUND=62,
//     SL_PAUSEMOVIESOUND=63,
//     SL_GETTRANSSTATUS=64,
//     SL_GETSTICK=65,
//     SL_GETVOICEALLOC=66,
//     SL_LOCKVALLOC=67,
//     SL_EXTERNVALLOC=68,
//     SL_EXTERNVFREE=69,
//     SL_UNLOCKVALLOC=70,
//     SL_SRAMMALLOC=71,
//     SL_SRAMMARKUSED=72,
//     SL_SRAMFREE=73,
//     SL_SRAMGETFREE=74,
//     SL_SRAMMAXFREE=75,
//     SL_EXTERNCALL=76,
//     SL_COMMAND_BATCH=77,
//     SL_SETGROUPVOICERANGE=78,
//     SL_ISVAGSTREAMBUFFERED=79,
//     SL_SETREVERBEX=80,
//     SL_PREALLOCREVERBWORKAREA=81,
//     SL_GETLASTLOADERROR=82,
//     SL_SETPANMODE=83,
//     SL_PLAYSOUNDBYNAME=84,
//     SL_PLAYSOUNDBYNAME_A=85,
//     SL_GETSOUNDUD=86,
//     SL_BANKLOADFROMEE=87,
//     SL_SETMOVIESOUNDVOLPAN=88,
//     SL_BANKLOADFROMIOP=89,
//     SL_UPDATEMOVIEADPCM=90,
//     SL_GETMOVIENAX=91,
//     SL_PLAYSOUNDEX=92,
//     SL_GETSOUNDREG=93,
//     SL_SETSOUNDREG=94,
//     SL_SETALLSOUNDREG=95,
//     SL_SETMASTERVOLUMEDUCKER=96,
//     SL_STOPALLSOUNDSINGROUP=97,
//     SL_SETVAGSTREAMCHANNELRANGE=98,
//     SL_SETVAGSTREAMSUBGROUPVOLPAN=99,
//     SL_SETREVERBMODE=100,
//     SL_CDSTATUS=101,
//     SL_GETSFXGLOBALREG=102,
//     SL_SETSFXGLOBALREG=103,
//     SL_EXTERNCALLWITHDATA=104,
//     SL_STREAMSAFECDSEARCHFILE=105,
//     SL_BANKLOADPART=106
// } unnamed_-1__2_501;
// 
// typedef struct UpgradeWadSlot UpgradeWadSlot, *PUpgradeWadSlot;
// 
// struct UpgradeWadSlot {
//     char name[20];
//     struct wadContext *wc;
//     INT32 iLevel;
//     UINT32 flags;
// };
// 
// typedef unsigned char UQItype;
// 
// typedef enum UserMixChannels {
//     kMusic=0,
//     kSFX=1,
//     kMPEG=2,
//     kNumUserMixChannels=3
// } UserMixChannels;
// 
// typedef struct UVClamp UVClamp, *PUVClamp;
// 
// struct UVClamp {
//     FLOAT m_LMinUClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_LMaxUClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_RMinUClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_RMaxUClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_TMinVClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_TMaxVClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_BMinVClamp; /* Inherited from tFS_UVClamp */
//     FLOAT m_BMaxVClamp; /* Inherited from tFS_UVClamp */
// };
// 
// typedef struct UVInterpolator4_12 UVInterpolator4_12, *PUVInterpolator4_12;
// 
// struct UVInterpolator4_12 {
//     undefined field0_0x0;
// };
// 
// typedef __gnuc_va_list va_list;
// 
// typedef struct VAGBuffer VAGBuffer, *PVAGBuffer;
// 
// typedef struct VAGStreamHeader VAGStreamHeader, *PVAGStreamHeader;
// 
// typedef struct VAGStreamHandler VAGStreamHandler, *PVAGStreamHandler;
// 
// typedef struct VAGStreamQueEntry VAGStreamQueEntry, *PVAGStreamQueEntry;
// 
// struct VAGBuffer {
//     UInt32 flags;
//     SInt8 *IOPbuff;
//     SInt8 *SPUbuff;
//     struct VAGBuffer *list;
//     struct VAGStreamHeader *owner;
//     SInt32 is_end;
//     UInt32 bytes;
//     char *shift_from;
//     char *shift_to;
//     UInt32 shift_amount;
//     SInt8 *OrigIOPbuff;
// };
// 
// struct VAGStreamHandler {
//     GSoundHandler SH;
//     SInt32 num_streams;
//     SInt32 doubling_voice;
//     char group_vols[16];
//     short int group_pans[16];
//     struct VAGStreamHeader *qued_stream;
//     struct VAGStreamQueEntry *que_list;
//     BOOL pre_buffer_queue;
// };
// 
// struct VAGStreamHeader {
//     UInt32 flags;
//     SInt8 orig_vol;
//     SInt8 group;
//     SInt16 orig_pan;
//     UInt32 pitch;
//     UInt32 buff_size;
//     struct VAGBuffer buff[2];
//     SInt32 PlayingBuffer;
//     UInt32 LastPosition;
//     SInt32 LastBufferChangeTick;
//     SInt32 ErrorAccumulator;
//     SInt32 start_error_accumulator;
//     SInt32 voice;
//     SInt32 file_handle;
//     UInt32 next_read_offset;
//     UInt32 file_start_sector;
//     UInt32 file_start_offset;
//     UInt32 stdio_file_offset;
//     UInt32 ee_streammon_loc;
//     UInt32 ee_BufferSize;
//     char *ee_EEStartAddress;
//     char *ee_NextIOPReadAddress;
//     UInt32 ee_TotalBytesConsumed;
//     UInt32 bytes_total;
//     UInt32 bytes_remaining;
//     UInt32 samples_total;
//     UInt32 bytes_played;
//     SInt32 sample_rate;
//     UInt32 last_loc;
//     UInt32 cur_pos;
//     SInt8 master_volume;
//     SInt8 sub_group;
//     SInt16 master_pan;
//     struct VAGStreamHeader *sync_list;
//     struct VAGStreamHeader *next;
//     struct VAGStreamHandler *handler;
// };
// 
// struct VAGStreamQueEntry {
//     UInt32 flags;
//     SInt32 loc;
//     SInt32 offset;
//     SInt8 vol;
//     SInt8 sub_group;
//     SInt16 pan;
//     struct VAGStreamQueEntry *next;
// };
// 
// typedef struct VAGBuffer *VAGBufferPtr;
// 
// typedef struct VAGExport VAGExport, *PVAGExport;
// 
// struct VAGExport {
//     unsigned int VAGName[4];
//     UInt32 VAGLocation;
//     UInt32 VAGSR;
// };
// 
// typedef struct VAGExport *VAGExportPtr;
// 
// typedef struct VAGImport VAGImport, *PVAGImport;
// 
// struct VAGImport {
//     unsigned int BlockName[2];
//     unsigned int VAGName[4];
//     UInt32 VAGLocation;
//     UInt32 VAGSR;
// };
// 
// typedef struct VAGImport *VAGImportPtr;
// 
// typedef struct VAGName VAGName, *PVAGName;
// 
// struct VAGName {
//     unsigned int Name[4];
//     UInt32 Offset;
//     UInt32 res1;
//     UInt32 res2;
// };
// 
// typedef struct VAGName *VAGNamePtr;
// 
// typedef struct SoundHandler VAGSoundHandler;
// 
// typedef struct SoundHandler *VAGSoundHandlerPtr;
// 
// typedef struct VAGStreamCommand VAGStreamCommand, *PVAGStreamCommand;
// 
// struct VAGStreamCommand {
//     char name[256];
//     int stereo;
//     int vol;
//     int pan;
//     int vol_group;
// };
// 
// typedef struct VAGStreamHandler *VAGStreamHandlerPtr;
// 
// typedef struct VAGStreamHeader *VAGStreamHeaderPtr;
// 
// typedef struct Vector4<short int> Vector4<short int>, *PVector4<short int>;
// 
// struct Vector4<short int> {
//     INT16 x;
//     INT16 y;
//     INT16 z;
//     INT16 w;
// };
// 
// typedef struct VersionChunk VersionChunk, *PVersionChunk;
// 
// struct VersionChunk {
//     UINT32 m_uHeaderFileHash;
// };
// 
// typedef struct vid vid, *Pvid;
// 
// struct vid {
//     undefined field0_0x0;
// };
// 
// typedef struct vidParms vidParms, *PvidParms;
// 
// struct vidParms {
//     UINT32 m_uFlags;
//     struct tPair<unsigned int> m_uFrontResolution;
//     struct tPair<unsigned int> m_uBackResolution;
//     enum tPixelFormat m_FrontFrameFormat;
//     enum tPixelFormat m_BackFrameFormat;
//     enum tZFormat m_zformat;
//     enum tVideoMode m_videomode;
//     enum tFrameMode m_framemode;
//     tColorI m_cBGColor;
//     tColorI m_cOverscanColor;
//     FLOAT m_fAspectRatio;
// };
// 
// typedef struct vif vif, *Pvif;
// 
// struct vif {
//     undefined field0_0x0;
// };
// 
// typedef struct VoiceAttributes VoiceAttributes, *PVoiceAttributes;
// 
// struct VoiceAttributes {
//     struct VoiceAttributes *playlist;
//     SInt32 voice;
//     UInt32 Status;
//     GSoundHandlerPtr Owner;
//     OwnerProcPtr OwnerProc;
//     TonePtr Tone;
//     SInt8 StartNote;
//     SInt8 StartFine;
//     UInt8 Priority;
//     SInt8 VolGroup;
//     UInt32 StartTick;
//     struct SpuVolume Volume;
//     SInt16 Current_PB;
//     SInt16 Current_PM;
//     UInt32 Flags;
//     union ownerdata_tag OwnerData;
// };
// 
// typedef struct VoiceAttributes *VoiceAttributesPtr;
// 
// typedef void void;
// 
// typedef struct VolumeModEffect VolumeModEffect, *PVolumeModEffect;
// 
// struct VolumeModEffect {
//     struct EffectChain ec;
//     SInt32 type;
//     SInt32 rate;
//     SInt32 depth;
//     SInt32 rate_slider_rate;
//     SInt32 rate_slider_connect;
//     SInt32 depth_slider_rate;
//     SInt32 depth_slider_connect;
// };
// 
// typedef struct Vortex Vortex, *PVortex;
// 
// struct Vortex {
//     undefined field0_0x0;
// };
// 
// typedef struct VPKFileHead VPKFileHead, *PVPKFileHead;
// 
// typedef struct VPKFileVolPanPair VPKFileVolPanPair, *PVPKFileVolPanPair;
// 
// struct VPKFileVolPanPair {
//     SInt8 vol;
//     SInt8 group;
//     SInt16 pan;
// };
// 
// struct VPKFileHead {
//     UInt32 type;
//     UInt32 size;
//     UInt32 data_offset;
//     UInt32 buff_size;
//     UInt32 sample_rate;
//     UInt32 num_channels;
//     struct VPKFileVolPanPair vol_pan[1];
// };
// 
// typedef struct VPKFileHead *VPKFileHeadPtr;
// 
// typedef struct vuRandom vuRandom, *PvuRandom;
// 
// struct vuRandom {
//     struct VUVec4 fSeed;
// };
// 
// typedef struct vuRandomRange vuRandomRange, *PvuRandomRange;
// 
// struct vuRandomRange {
//     struct VUVec4 fSeed; /* Inherited from vuRandom */
//     struct VUVec4 fBase;
//     struct VUVec4 fRange;
// };
// 
// typedef struct VUVecW VUVecW, *PVUVecW;
// 
// struct VUVecW {
//     int16 v;
// };
// 
// typedef struct VUVecX VUVecX, *PVUVecX;
// 
// struct VUVecX {
//     int16 v;
// };
// 
// typedef struct VUVecY VUVecY, *PVUVecY;
// 
// struct VUVecY {
//     int16 v;
// };
// 
// typedef struct VUVecZ VUVecZ, *PVUVecZ;
// 
// struct VUVecZ {
//     int16 v;
// };
// 
// typedef undefined1 *WADCLEANUP_FUNC;
// 
// typedef struct wadCleanupData wadCleanupData, *PwadCleanupData;
// 
// struct wadCleanupData {
//     WADCLEANUP_FUNC _pFunc;
//     void *_pArg;
// };
// 
// typedef struct WadCommand WadCommand, *PWadCommand;
// 
// struct WadCommand {
//     UINT16 command;
//     UINT16 slot;
//     UINT32 data;
//     char string[24];
// };
// 
// typedef struct svrContext<svrTemplate<svrEmptyContainer> > wadContextBase;
// 
// typedef svrProcess wadContextContainer;
// 
// typedef struct wadContextLoadParm wadContextLoadParm, *PwadContextLoadParm;
// 
// struct wadContextLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     UINT32 m_bAllowDups; /* Inherited from svrContextLoadParm */
//     struct stdDynaString m_cParentName; /* Inherited from svrContextLoadParm */
//     UINT _uHeapSize;
//     UINT _uVRAMHeapSize;
// };
// 
// typedef struct wadContextParm wadContextParm, *PwadContextParm;
// 
// struct wadContextParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct svrClientParmList *m_pClientParmList; /* Inherited from svrMultiClientParm */
//     UINT32 m_uMaxClients; /* Inherited from svrParm */
//     UINT32 m_uMaxConnections; /* Inherited from svrParm */
//     UINT32 m_uPriority; /* Inherited from svrParm */
//     BOOL m_bAllowDups; /* Inherited from svrContextParm */
//     struct svrClient *m_pClient; /* Inherited from svrContextParm */
//     struct stdDynaString m_cParentContext; /* Inherited from svrContextParm */
//     struct stdDynaString m_cName; /* Inherited from svrContextParm */
//     INT32 m_iVersion; /* Inherited from svrContextParm */
//     UINT _uHeapSize;
//     UINT _uVRAMHeapSize;
//     struct Context__1_2308 *_pDCContext;
//     struct stdDynaStringDB *_pDynaStringDB;
//     Ptr _pRawHeap;
//     struct HeapZone *_pHeap;
// };
// 
// typedef struct WadInfo WadInfo, *PWadInfo;
// 
// struct WadInfo {
//     unsigned int firstLoadA[2];
//     unsigned int firstLoadB[2];
//     int globalDataBase;
//     int globalDataSize;
//     int levelDataBase;
//     int levelDataSize;
//     struct stdList markerCtxtList;
//     struct stdList goStateSaveList;
//     struct stdList entitySaveList;
//     struct stdList eventSaveList;
//     struct stdList grappleSaveList;
//     struct stdList breakableSaveList;
//     struct stdList IO_SaveList;
//     struct stdList IO_CSM_SaveList;
//     struct stdList IO_TandF_SaveList;
//     struct stdList Reactive_SaveList;
//     INT16 pwiID;
//     UINT16 nEntities;
//     struct Entity **entityTable;
//     struct wadContext *wc;
// };
// 
// typedef struct wadLoader wadLoader, *PwadLoader;
// 
// struct wadLoader {
//     undefined field0_0x0;
// };
// 
// typedef enum WADLoadMode {
//     SYNC_LOAD_FROM_SERVER=-1879047664,
//     ASYNC_LOAD=16,
//     ASYNC_NO_THROTTLE=268435472,
//     SYNC_LOAD=268435984
// } WADLoadMode;
// 
// typedef struct wadMasterContext wadMasterContext, *PwadMasterContext;
// 
// typedef struct wadMasterContext__vtable wadMasterContext__vtable, *PwadMasterContext__vtable;
// 
// struct wadMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type wadMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct wadMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct wadMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrEmptyContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrEmptyContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrEmptyContainer> > */
//     struct Iterator__1_638 firstNextIt;
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrEmptyContainer> > wadMasterContextBase;
// 
// typedef struct wadServer wadServer, *PwadServer;
// 
// typedef struct wadServer__vtable wadServer__vtable, *PwadServer__vtable;
// 
// struct wadServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct wadServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrEmptyContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrEmptyContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrEmptyContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrEmptyContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrEmptyContainer> > */
//     struct Pool__1_336 *_pHeapInfoPool;
//     struct Pool__1_336 *_pCListPool;
// };
// 
// struct wadServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type wadServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrEmptyContainer> > wadServerBase;
// 
// typedef struct Warp Warp, *PWarp;
// 
// struct Warp {
//     FLOAT m_AmplU_0; /* Inherited from tFS_Warp */
//     FLOAT m_AmplV_0; /* Inherited from tFS_Warp */
//     FLOAT m_AmplU_1; /* Inherited from tFS_Warp */
//     FLOAT m_AmplV_1; /* Inherited from tFS_Warp */
//     FLOAT m_RandomFactor; /* Inherited from tFS_Warp */
//     FLOAT m_Spiral_0; /* Inherited from tFS_Warp */
//     FLOAT m_Spiral_1; /* Inherited from tFS_Warp */
//     FLOAT m_XScale; /* Inherited from tFS_Warp */
// };
// 
// typedef int wchar_t;
// 
// typedef struct Wind Wind, *PWind;
// 
// struct Wind {
//     undefined field0_0x0;
// };
// 
// typedef unsigned int wint_t;
// 
// typedef long int word_type;
// 
// typedef struct wypClientLoadParm wypClientLoadParm, *PwypClientLoadParm;
// 
// struct wypClientLoadParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     struct wypClientLoadData m_LoadData;
// };
// 
// typedef struct wypClientParm wypClientParm, *PwypClientParm;
// 
// struct wypClientParm {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     char m_Name[32];
//     struct wypClientLoadData m_LoadData;
// };
// 
// typedef struct wypServer wypServer, *PwypServer;
// 
// typedef struct wypServer__vtable wypServer__vtable, *PwypServer__vtable;
// 
// struct wypServer__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type wypServer;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type RegIDFromParm;
//     struct __vtbl_ptr_type ServerFromClient;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type CreateMasterContext;
// };
// 
// struct wypServer {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct wypServer__vtable *__vtable; /* Inherited from svr */
//     struct svrArrayContainer *m_pRegistry; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uRoutingContextStack; /* Inherited from svrRouter */
//     struct stdDynamicStack<unsigned int> m_uFreeRegIDStack; /* Inherited from svrRouter */
//     UINT32 m_uMaxRoutingContexts; /* Inherited from svrRouter */
//     UINT32 m_uRoutingContextID; /* Inherited from svrRouter */
//     struct stdStack<const svrContext<svrTemplate<svrListContainer> > *,32> m_contextstack; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectedClientsPerServer; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
//     UINT32 m_uMasterContextServerID; /* Inherited from svrMultiServer<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMultiServer<svrTemplate<svrListContainer> > wypServerBase;
// 
// typedef svrList wypServerContainer;
// 
// typedef struct wypServerContext wypServerContext, *PwypServerContext;
// 
// typedef struct wypServerContext__vtable wypServerContext__vtable, *PwypServerContext__vtable;
// 
// struct wypServerContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type wypServerContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct wypServerContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct wypServerContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uConnectionRefCount; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     struct svrContextParm *m_pParm; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
//     undefined field21_0x3c;
//     undefined field22_0x3d;
//     undefined field23_0x3e;
//     undefined field24_0x3f;
//     struct stdListNode *_pNextItem; /* Inherited from stdListNode */
//     struct wadContext *m_pMyWadContext; /* Inherited from svrContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrContext<svrTemplate<svrListContainer> > wypServerContextBase;
// 
// typedef struct wypServerMasterContext wypServerMasterContext, *PwypServerMasterContext;
// 
// typedef struct wypServerMasterContext__vtable wypServerMasterContext__vtable, *PwypServerMasterContext__vtable;
// 
// struct wypServerMasterContext__vtable {
//     undefined field0_0x0;
//     undefined field1_0x1;
//     undefined field2_0x2;
//     undefined field3_0x3;
//     undefined field4_0x4;
//     undefined field5_0x5;
//     undefined field6_0x6;
//     undefined field7_0x7;
//     struct __vtbl_ptr_type wypServerMasterContext;
//     struct __vtbl_ptr_type StartServer;
//     struct __vtbl_ptr_type ProcessServer;
//     struct __vtbl_ptr_type EndServer;
//     struct __vtbl_ptr_type CreateClient;
//     struct __vtbl_ptr_type ConnectClient;
//     struct __vtbl_ptr_type ProcessClient;
//     struct __vtbl_ptr_type DisconnectClient;
//     struct __vtbl_ptr_type DestroyClient;
//     struct __vtbl_ptr_type LoadClient;
//     struct __vtbl_ptr_type EndLoadClient;
//     struct __vtbl_ptr_type PauseAllClients;
//     struct __vtbl_ptr_type UnPauseAllClients;
//     struct __vtbl_ptr_type CreateDefaultParm;
//     struct __vtbl_ptr_type SignalWadLoadCompleted;
//     struct __vtbl_ptr_type PushClientContext;
//     struct __vtbl_ptr_type PopClientContext;
//     struct __vtbl_ptr_type ReadContextStack;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type AllocateClient;
//     struct __vtbl_ptr_type FreeClient;
//     struct __vtbl_ptr_type StartClient;
//     struct __vtbl_ptr_type EndClient;
//     struct __vtbl_ptr_type NotifyClientDisconnect;
//     struct __vtbl_ptr_type NotifyClientConnect;
//     struct __vtbl_ptr_type NotifyClientCreate;
// };
// 
// struct wypServerMasterContext {
//     UINT32 m_uID; /* Inherited from svrClientType */
//     UINT16 m_uClientFlags; /* Inherited from svrClient */
//     UINT16 m_uContextID; /* Inherited from svrClient */
//     undefined field3_0x8;
//     undefined field4_0x9;
//     undefined field5_0xa;
//     undefined field6_0xb;
//     undefined field7_0xc;
//     undefined field8_0xd;
//     undefined field9_0xe;
//     undefined field10_0xf;
//     UINT32 _uKey; /* Inherited from svrClientKey */
//     UINT32 m_uMaxConnections; /* Inherited from svr */
//     UINT32 m_uMaxClients; /* Inherited from svr */
//     UINT32 m_uChildContextID; /* Inherited from svr */
//     struct wypServerMasterContext__vtable *__vtable; /* Inherited from svr */
//     struct svrListContainer m_clients; /* Inherited from svrTemplate<svrListContainer> */
//     UINT32 m_uNumConnected; /* Inherited from svrTemplate<svrListContainer> */
//     struct svrRouter *m_pRouter; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxConnectionsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
//     UINT32 m_uMaxClientsPerContext; /* Inherited from svrMasterContext<svrTemplate<svrListContainer> > */
// };
// 
// typedef struct svrMasterContext<svrTemplate<svrListContainer> > wypServerMasterContextBase;
// 
// typedef struct Zoom Zoom, *PZoom;
// 
// struct Zoom {
//     INT16 m_U1; /* Inherited from tFS_Zoom */
//     INT16 m_U2; /* Inherited from tFS_Zoom */
//     INT16 m_V1; /* Inherited from tFS_Zoom */
//     INT16 m_V2; /* Inherited from tFS_Zoom */
// };
// 

#endif